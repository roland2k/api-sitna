var TC=TC||{};!function(n,e){"object"==typeof exports?module.exports=e():"function"==typeof define&&define.amd?define([],e):n.Geometry=e()}(TC,function(){const n=function(n,e,t,i){return 8&t?[n[0]+(e[0]-n[0])*(i[3]-n[1])/(e[1]-n[1]),i[3]]:4&t?[n[0]+(e[0]-n[0])*(i[1]-n[1])/(e[1]-n[1]),i[1]]:2&t?[i[2],n[1]+(e[1]-n[1])*(i[2]-n[0])/(e[0]-n[0])]:1&t?[i[0],n[1]+(e[1]-n[1])*(i[0]-n[0])/(e[0]-n[0])]:null},e=function(n,e){let t=0;n[0]<e[0]?t|=1:n[0]>e[2]&&(t|=2);n[1]<e[1]?t|=4:n[1]>e[3]&&(t|=8);return t},t={isPoint:function(n){return Array.isArray(n)&&n.length>=2&&"number"==typeof n[0]&&"number"==typeof n[1]},isRing:function(n){return Array.isArray(n)&&(0===n.length||t.isPoint(n[0]))},isRingCollection:function(n){return Array.isArray(n)&&(0===n.length||t.isRing(n[0]))},isMultiRingCollection:function(n){return Array.isArray(n)&&(0===n.length||t.isRingCollection(n[0]))},getNearest:function(n,e){return TC.wrap.Geometry.getNearest(n,e)},isInside:function n(e,i){var r=!1;if(t.isPoint(e))if(t.isPoint(i))r=e[0]===i[0]&&e[1]===i[1];else if(t.isRing(i))for(var o=0,u=i.length-1;o<i.length;u=o++){var l=i[o][0],s=i[o][1],c=i[u][0],f=i[u][1];s>e[1]!=f>e[1]&&e[0]<(c-l)*(e[1]-s)/(f-s)+l&&(r=!r)}else if(t.isRingCollection(i)&&i.length>0){if(n(e,i[0])){var a=!1;for(o=1;o<i.length;o++)if(n(e,i[o])){a=!0;break}a||(r=!0)}}else if(t.isMultiRingCollection(i)&&i.length>0){o=0;for(var g=i.length;o<g;o++)if(n(e,i[o])){r=!0;break}}return r},getSquaredDistance:function(n,e){const t=e[0]-n[0],i=e[1]-n[1];return t*t+i*i},getDistance:function(n,e){return Math.sqrt(t.getSquaredDistance(n,e))},getFlatCoordinates:function(n){const e=function(n,e){return n.concat(e)};switch(!0){case t.isPoint(n):return[n];case t.isRing(n):return n;case t.isRingCollection(n):return n.reduce(e);case t.isMultiRingCollection(n):return n.reduce(e).reduce(e);default:return[]}},intersects:function(n,e){const i=function(n,e){for(var i=0,r=n.length;i<r;i++)if(t.isInside(n[i],e))return!0;return!1};return!(!i(t.getFlatCoordinates(n),e)&&!i(t.getFlatCoordinates(e),n))},clipPolygon:function(n,e){return n.map(n=>t.clipRing(n,e)).filter(n=>n.length)},clipRing:function(t,i){let r,o,u,l,s;for(o=1;o<=8;o*=2){r=[];u=t[t.length-1];l=!(e(u,i)&o);t.forEach(t=>{(s=!(e(t,i)&o))!==l&&r.push(n(u,t,o,i));s&&r.push(t);u=t;l=s});if(!(t=r).length)break}return r},clipPolyline:function(t,i){let r,o,u,l,s,c=t.length,f=e(t[0],i),a=[],g=[];for(r=1;r<c;r++){o=t[r-1];u=t[r];l=s=e(u,i);for(;;){if(!(f|l)){a.push(o);if(l!==s){a.push(u);if(r<c-1){g=g.concat(a);a=[]}}else r===c-1&&a.push(u);break}if(f&l)break;if(f){o=n(o,u,f,i);f=e(o,i)}else{u=n(o,u,l,i);l=e(u,i)}}f=s}a.length&&(g=g.concat(a));return g}};return t});
//# sourceMappingURL=maps/Geometry.min.js.map