{"version":3,"sources":["Feature.js"],"names":["TC","feature","Feature","coords","options","this","wrap","parent","isNative","_wrap","id","getId","geometry","getGeometry","_folders","folders","data","getData","opts","Util","extend","getUID","_visibilityState","Consts","visibility","VISIBLE","undefined","showsPopup","layer","_selected","selected","select","prototype","STYLETYPE","geom","POLYGON","CLASSNAME","getPath","result","group","setVisibility","visible","self","popup","map","getControlsByClass","control","Popup","filter","currentFeature","length","p","isVisible","hide","NOT_VISIBLE","setFeatureVisibility","setId","getBounds","setStyle","style","toggleSelectedStyle","condition","_hasSelectedStyle","getLegend","_legend","getCoords","getCoordsArray","isPoint","elm","Array","isArray","flattenFn","val","reduce","reduceFn","acc","push","concat","getGeometryStride","firstCoord","setCoords","toNumberCoords","arr","forEach","idx","console","log","parseFloat","setGeometry","setData","unsetData","key","clearData","getInfo","locale","getMapLocale","template","getTemplate","replace","match","p1","html","hSlots","openText","getLocaleString","titleText","formatValue","value","isURL","formatNumber","recursiveFn","i","Object","getType","tttt","type","coordinates","getCoordinates","headers","unshift","join","title","clone","nativeClone","cloneFeature","constructor","getStyle","showPopup","Control","ctlPromise","popups","len","caller","Promise","resolve","addControl","then","ctl","assign","attrTable","contentDiv","querySelector","querySelectorAll","maxWidth","getBoundingClientRect","width","h","trigger","event","POPUP","fitToView","showResultsPanel","resultsPanelOptions","content","titles","main","max","controlContainer","position","POSITION","RIGHT","div","document","createElement","appendChild","ControlContainer","ResultsPanel","ctrl","close","chart","menuDiv","innerHTML","open","getInfoContainer","onViewChange","e","off","VIEWCHANGE","on","showInfo","on3DView","defaultInfoContainer","infoContainer","RESULTS_PANEL","selectedFeatures","selectionOptions","selection","Cfg","styles","unselect","indexOf","splice","isSelected","toGML","version","srsName"],"mappings":"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","sourcesContent":["TC.feature = TC.feature || {};\r\nTC.Feature = function (coords, options) {\r\n    var self = this;\r\n\r\n    self.wrap = new TC.wrap.Feature();\r\n    self.wrap.parent = self;\r\n    if (self.wrap.isNative(coords)) {\r\n        self.wrap.feature = coords;\r\n        coords._wrap = self.wrap;\r\n        self.id = self.wrap.getId();\r\n        self.geometry = self.wrap.getGeometry();\r\n        if (coords._folders) {\r\n            self.folders = coords._folders;\r\n        }\r\n        self.data = self.wrap.getData();\r\n    }\r\n\r\n    var opts = self.options = TC.Util.extend(true, {}, options);\r\n\r\n    self.id = self.id || opts.id || TC.getUID();\r\n    self.data = opts.data || self.data || null;\r\n    self._visibilityState = TC.Consts.visibility.VISIBLE;\r\n    if (opts.showsPopup === undefined) {\r\n        self.showsPopup = true;\r\n    }\r\n    else {\r\n        self.showsPopup = opts.showsPopup;\r\n    }\r\n    self.layer = opts.layer || null;\r\n    self._selected = false;\r\n\r\n    if (opts.selected) {\r\n        self.select();\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.STYLETYPE = TC.Consts.geom.POLYGON;\r\n\r\nTC.Feature.prototype.CLASSNAME = 'TC.Feature';\r\n\r\nTC.Feature.prototype.getPath = function () {\r\n    var result = [];\r\n    var self = this;\r\n    if (self.folders) {\r\n        result = self.folders;\r\n    }\r\n    else if (self.options.group) {\r\n        result = [self.options.group];\r\n    }\r\n    return result;\r\n};\r\n\r\nTC.Feature.prototype.setVisibility = function (visible) {\r\n    var self = this;\r\n\r\n    // Ocultamos el posible popup\r\n    if (!visible && self.showsPopup && self.layer) {\r\n        var popup = self.layer.map.getControlsByClass(TC.control.Popup).filter(function (popup) {\r\n            return popup.currentFeature === self\r\n        });\r\n\r\n        if (popup.length > 0) {\r\n            const p = popup[0];\r\n            if (p.isVisible()) {\r\n                p.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    if ((visible && self._visibilityState === TC.Consts.visibility.NOT_VISIBLE) || (!visible && self._visibilityState === TC.Consts.visibility.VISIBLE)) {\r\n        self._visibilityState = visible ? TC.Consts.visibility.VISIBLE : TC.Consts.visibility.NOT_VISIBLE;\r\n        self.layer.wrap.setFeatureVisibility(self, visible);\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.setId = function (id) {\r\n    var self = this;\r\n    self.id = id;\r\n    self.wrap.setId(id);\r\n};\r\n\r\nTC.Feature.prototype.getBounds = function () {\r\n    return this.wrap.getBounds();\r\n};\r\n\r\nTC.Feature.prototype.setStyle = function (style) {\r\n    this.wrap.setStyle(style);\r\n};\r\n\r\nTC.Feature.prototype.toggleSelectedStyle = function (condition) {\r\n    const self = this;\r\n    if (self._hasSelectedStyle != condition) {\r\n        self._hasSelectedStyle = condition;\r\n        self.wrap.toggleSelectedStyle(condition);\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.getLegend = function () {\r\n    var self = this;\r\n    if (!self._legend) {\r\n        self._legend = self.wrap.getLegend();\r\n    }\r\n    return self._legend;\r\n};\r\n\r\nTC.Feature.prototype.getCoords = function () {\r\n    const self = this;\r\n    self.geometry = self.wrap.getGeometry();\r\n    return self.geometry;\r\n};\r\n\r\nTC.Feature.prototype.getCoordsArray = function () {\r\n    const self = this;\r\n    const isPoint = function (elm) {\r\n        return Array.isArray(elm) && elm.length >= 2 && typeof elm[0] === 'number' && typeof elm[1] === 'number';\r\n    };\r\n    const flattenFn = function (val) {\r\n        return isPoint(val) ? [val] : val.reduce(reduceFn, []);\r\n    }\r\n    const reduceFn = function (acc, elm) {\r\n        if (isPoint(elm)) {\r\n            acc.push(elm);\r\n        }\r\n        else {\r\n            acc = acc.concat(flattenFn(elm));\r\n        }\r\n        return acc;\r\n    };\r\n    return flattenFn(self.getCoords());\r\n};\r\n\r\nTC.Feature.prototype.getGeometryStride = function () {\r\n    const self = this;\r\n    const coordsArray = self.getCoordsArray();\r\n    const firstCoord = coordsArray[0];\r\n    if (firstCoord) {\r\n        return firstCoord.length;\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\nTC.Feature.prototype.setCoords = function (coords) {\r\n    const self = this;\r\n\r\n    const toNumberCoords = function (arr) {\r\n        arr.forEach(function (elm, idx) {\r\n            if (Array.isArray(elm)) {\r\n                toNumberCoords(elm);\r\n            }\r\n            else {\r\n                if (elm === null) {\r\n                    arr[idx] = 0;\r\n                }\r\n                else if (typeof elm !== 'number') {\r\n                    console.log('Warning: coordinate does not have number type');\r\n                    arr[idx] = parseFloat(elm);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    if (Array.isArray(coords)) {\r\n        toNumberCoords(coords);\r\n    }\r\n\r\n    self.geometry = coords;\r\n    return self.wrap.setGeometry(coords);\r\n};\r\n\r\nTC.Feature.prototype.getData = function () {\r\n    var result = null;\r\n    var self = this;\r\n    if (self.data) {\r\n        result = self.data;\r\n    }\r\n    else {\r\n        result = self.wrap.getData();\r\n    }\r\n    return result;\r\n};\r\n\r\nTC.Feature.prototype.setData = function (data) {\r\n    const self = this;\r\n    self.data = TC.Util.extend(self.data, data);\r\n    self.wrap.setData(data);\r\n};\r\n\r\nTC.Feature.prototype.unsetData = function (key) {\r\n    const self = this;\r\n    delete self.data[key];\r\n    self.wrap.unsetData(key);\r\n};\r\n\r\nTC.Feature.prototype.clearData = function () {\r\n    const self = this;\r\n    self.data = {};\r\n    self.wrap.clearData();\r\n};\r\n\r\nTC.Feature.prototype.getInfo = function (options) {\r\n    var result = null;\r\n    var self = this;\r\n    options = options || {};\r\n    var locale = options.locale || (self.layer && self.layer.map && TC.Util.getMapLocale(self.layer.map));\r\n    var data = self.getData();\r\n    if (typeof data === 'object') {\r\n        var template = self.wrap.getTemplate();\r\n        if (template) {\r\n            // GLS: Contemplo en la expresión regular la opción de que el nombre del campo se componga de $[aaa/abc/loQueMeInteresa] \r\n            // (la expresión no está limitada a 2 niveles), hasta ahora se manejaba $[loQueMeInteresa]\r\n            result = template.replace(/\\$\\[?(?:\\w+\\/)*(\\w+)\\]/g, function (match, p1) {\r\n                return data[p1];\r\n            });\r\n        }\r\n        else {\r\n            var html = [];\r\n            const hSlots = [];\r\n            const openText = TC.Util.getLocaleString(locale, 'open');\r\n            const titleText = TC.Util.getLocaleString(locale, 'linkInNewWindow');\r\n            const formatValue = function (value) {\r\n                let result;\r\n                var isUrl = TC.Util.isURL(value);\r\n                if (isUrl) {\r\n                    result = `<a href=\"${value}\" target=\"_blank\" title=\"${titleText}\">${openText}</a>`;\r\n                }\r\n                else {\r\n                    result = value !== undefined ? (typeof (value) === \"number\" ? TC.Util.formatNumber(value, locale):value) : '&mdash;';\r\n                }\r\n                return result;\r\n            }\r\n            const recursiveFn = function (data) {\r\n                var html = [];\r\n                if (data instanceof Array) {\r\n                    var id = 'complexAttr_' + TC.getUID()\r\n                    html.push(`<div class=\"complexAttr\"><input type=\"checkbox\" id=\"${id}\" /><div><label for=\"${id}\" title=\"\" class=\"plus\"></label>`);\r\n                    html.push(`<label for=\"${id}\" title=\"\" class=\"title\">${data.length} ${TC.Util.getLocaleString(locale, 'featureInfo.complexData.array')}</label><br/>`);\r\n                    html.push('<table class=\"complexAttr\"><tbody>');\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        html.push('<tr><td>');\r\n                        html = html.concat(recursiveFn(data[i]));\r\n                        html.push('</td></tr>');\r\n                    }\r\n                    html.push('</tbody></table></div></div>');\r\n                } else if (data instanceof Object) {\r\n                    if (data.getType) {\r\n                        const tttt = {\r\n                            type: data.getType(),\r\n                            coordinates: data.getCoordinates()\r\n                        };\r\n                        html = html.concat(recursiveFn(tttt));\r\n                    }\r\n                    else {\r\n                        html.push('<table class=\"complexAttr\"><tbody>');\r\n                        for (var i in data) {\r\n                            html.push('<tr>');\r\n                            if (data[i] && data[i] instanceof Array) {\r\n\r\n                                html.push(`<th style=\"display:none\">${i}</th>\r\n                                           <td><label for=\"${id}\" class=\"title\">${i}</label><br/>`);\r\n                                html = html.concat(recursiveFn(data[i]));\r\n                                html.push('</div></td>');\r\n                            }\r\n                            else if (data[i] && data[i] instanceof Object) {\r\n                                //if(data[i] && Object.entries(data[i]).some((item)=>{return item[1] instanceof Object})){\t\t\t\t\t\t\r\n                                var id = 'complexAttr_' + TC.getUID()\r\n                                html.push(`<th style=\"display:none\">${i}</th>\r\n                                           <td><input type=\"checkbox\" id=\"${id}\" /><div><label for=\"${id}\" title=\"\" class=\"plus\"></label>`);\r\n                                html.push(`<label for=\"${id}\" title=\"\" class=\"title\">${i}</label><br/>`);\r\n                                html = html.concat(recursiveFn(data[i]));\r\n                                html.push('</div></td>');\r\n                            }\r\n                            else {\r\n                                html.push(`<th class=\"key\">${i}</th>\r\n                                           <td class=\"value\">`);\r\n                                html = html.concat(recursiveFn(data[i]));\r\n                                html.push('</td>');\r\n                            }\r\n                            html.push('</tr>');\r\n                        }\r\n                        html.push('</tbody></table>');\r\n                    }\r\n                } else {\r\n                    html.push(formatValue(data));\r\n                }\r\n                return html;\r\n            };\r\n            for (var key in data) {\r\n                const value = data[key];\r\n                const match = key.match(/^h(\\d)_/i);\r\n                if (match) {\r\n                    hSlots[match[1]] = value;\r\n                }\r\n                else {\r\n                    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'undefined') {\r\n                        html.push(`<tr><th>${key}</th><td>${formatValue(value)}</td></tr>`);\r\n                    }\r\n                    else {\r\n                        html.push(`<tr><th>${key}</th><td>`);\r\n                        html = html.concat(recursiveFn(value))\r\n                        html.push('</td></tr>');\r\n\r\n                    }\r\n                }\r\n            }\r\n            const headers = hSlots\r\n                .map(function (val, idx) {\r\n                    if (val) {\r\n                        return `<h${idx}>${val}</h${idx}>`;\r\n                    }\r\n                })\r\n                .filter(function (val) {\r\n                    return val;\r\n                });\r\n            if (headers.length) {\r\n                html = headers.concat(html);\r\n            }\r\n            if (html.length > 0) {\r\n                html.unshift('<table class=\"tc-attr\">');\r\n                html.push('</table>');\r\n                result = html.join('');\r\n            }\r\n        }\r\n    }\r\n    else if (typeof data === 'string') {\r\n        result = data;\r\n    }\r\n    if (!result) {\r\n        result = self.title;\r\n        if (self.group) {\r\n            result += ' ' + self.group;\r\n        }\r\n    }\r\n    if (!result) {\r\n        result = TC.Util.getLocaleString(locale, 'noData');\r\n    }\r\n    return result;\r\n};\r\n\r\nTC.Feature.prototype.clone = function () {\r\n    var self = this;\r\n    var nativeClone = self.wrap.cloneFeature();\r\n    nativeClone._wrap = self.wrap;\r\n    return new self.constructor(nativeClone, self.options);\r\n};\r\n\r\nTC.Feature.prototype.getStyle = function () {\r\n    return this.wrap.getStyle();\r\n};\r\n\r\nTC.Feature.prototype.showPopup = function (options) {\r\n    const self = this;\r\n    options = options || {};\r\n    const control = options && options instanceof TC.Control ? options : options.control;\r\n    const map = (self.layer && self.layer.map) || (control && control.map);\r\n    if (map) {\r\n        var ctlPromise;\r\n        var popup = control || self.popup;\r\n        if (!popup) {\r\n            // Buscamos un popup existente que no esté asociado a un control.\r\n            var popups = map.getControlsByClass('TC.control.Popup');\r\n            for (var i = 0, len = popups.length; i < len; i++) {\r\n                var p = popups[i];\r\n                if (!p.caller) {\r\n                    popup = p;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (popup) {\r\n            popup.currentFeature = self;\r\n            ctlPromise = Promise.resolve(popup);\r\n        }\r\n        else {\r\n            ctlPromise = map.addControl('popup');\r\n        }\r\n        ctlPromise.then(function (ctl) {\r\n            ctl.currentFeature = self;\r\n            map.getControlsByClass(TC.control.Popup)\r\n                .filter(p => p !== ctl && p.isVisible())\r\n                .forEach(p => p.hide());\r\n            self.wrap.showPopup(Object.assign({}, options, { control: ctl }));\r\n            // Ajustamos el ancho del título al de la tabla de atributos\r\n            const attrTable = ctl.contentDiv.querySelector(\"table.tc-attr\");\r\n            const headers = ctl.contentDiv.querySelectorAll(\"h1,h2,h3,h4,h5\");\r\n            if (attrTable && headers.length) {\r\n                const maxWidth = attrTable.getBoundingClientRect().width + 'px';\r\n                headers.forEach(function (h) {\r\n                    h.style.maxWidth = maxWidth;\r\n                });\r\n            }\r\n            map.trigger(TC.Consts.event.POPUP, { control: ctl });\r\n            ctl.fitToView(true);\r\n        });\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.showResultsPanel = function (options) {\r\n    const self = this;\r\n    options = options || {};\r\n    const control = options && options instanceof TC.Control ? options : options.control;\r\n    const map = (self.layer && self.layer.map) || (control && control.map);\r\n    if (map) {\r\n        var ctlPromise;\r\n\r\n        var resultsPanelOptions = {\r\n            content: \"table\",\r\n            titles: {\r\n                main: TC.Util.getLocaleString(map.options.locale, \"rsp.title\"),\r\n                max: TC.Util.getLocaleString(map.options.locale, \"rsp.title\")\r\n            }\r\n        };\r\n        var controlContainer = map.getControlsByClass('TC.control.ControlContainer')[0];\r\n        if (controlContainer) {\r\n            resultsPanelOptions.position = controlContainer.POSITION.RIGHT;\r\n            ctlPromise = controlContainer.addControl('resultsPanel', resultsPanelOptions);\r\n        } else {\r\n            resultsPanelOptions.div = document.createElement('div');\r\n            map.div.appendChild(resultsPanelOptions.div);\r\n            ctlPromise = map.addControl('resultsPanel', resultsPanelOptions);\r\n        }\r\n\r\n        ctlPromise.then(function (ctl) {\r\n            ctl.currentFeature = self;\r\n\r\n            // GLS: si contamos con el contenedor de controles no es necesario cerra el resto de paneles ya que no habrá solape excepto los paneles\r\n            if (map.getControlsByClass(TC.control.ControlContainer).length === 0) {\r\n                map.getControlsByClass(TC.control.ResultsPanel).filter(function (ctrl) { return ctrl.options.content === \"table\" }).forEach(function (p) {\r\n                    p.close();\r\n                });\r\n            }\r\n\r\n            // cerramos los paneles con feature asociada que no sean gráfico\r\n            const panels = map.getControlsByClass('TC.control.ResultsPanel');\r\n            panels.forEach(function (p) {\r\n                if (p.currentFeature && !p.chart) {\r\n                    p.close();\r\n                }\r\n            });\r\n\r\n            ctl.menuDiv.innerHTML = '';\r\n            ctl.open(self.getInfo({ locale: map.options.locale }), ctl.getInfoContainer());\r\n\r\n            var onViewChange = function (e) {\r\n                map.off(TC.Consts.event.VIEWCHANGE, onViewChange);\r\n\r\n                ctl.close();\r\n            };\r\n            map.on(TC.Consts.event.VIEWCHANGE, onViewChange);\r\n        });\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.showInfo = function (options) {\r\n    const self = this;\r\n    options = options || {};\r\n    if (options.control && TC.control) {\r\n        const control = options.control;\r\n        if (control instanceof TC.control.Popup) {\r\n            self.showPopup(options);\r\n            return;\r\n        }\r\n        if (control instanceof TC.control.ResultsPanel) {\r\n            self.showResultsPanel(options);\r\n            return;\r\n        }\r\n    }\r\n    if (self.layer.map.on3DView || self.layer.map.defaultInfoContainer === TC.Consts.infoContainer.RESULTS_PANEL) {\r\n        self.showResultsPanel(options);\r\n    }\r\n    else {\r\n        self.showPopup(options);\r\n    }\r\n};\r\n\r\n\r\nTC.Feature.prototype.select = function () {\r\n    var self = this;\r\n    self._selected = true;\r\n    if (self.layer) {\r\n        self.layer.selectedFeatures.push(self);\r\n    }\r\n    var selectionOptions = self.options.selection || {};\r\n    self.setStyle(TC.Util.extend({}, TC.Cfg.styles.selection[self.STYLETYPE], selectionOptions[self.STYLETYPE]));\r\n};\r\n\r\nTC.Feature.prototype.unselect = function () {\r\n    const self = this;\r\n    self._selected = false;\r\n    // Volvemos al estilo por defecto\r\n    self.setStyle(self.options);\r\n\r\n    if (self.layer) {\r\n        const idx = self.layer.selectedFeatures.indexOf(self);\r\n        if (idx >= 0) {\r\n            self.layer.selectedFeatures.splice(idx, 1);\r\n        }\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.isSelected = function () {\r\n    return this._selected;\r\n};\r\n\r\nTC.Feature.prototype.toGML = function (version, srsName) {\r\n    return this.wrap.toGML(version, srsName);\r\n};\r\n\r\n\r\n"]}