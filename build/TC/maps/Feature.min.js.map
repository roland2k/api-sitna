{"version":3,"sources":["Feature.js"],"names":["TC","feature","Feature","coords","options","olFeatureId","this","wrap","parent","isNative","_wrap","getId","geometry","getGeometry","_folders","folders","setData","getData","opts","Util","extend","id","getUID","setId","data","_visibilityState","Consts","visibility","VISIBLE","undefined","showsPopup","layer","_selected","selected","select","prototype","STYLETYPE","geom","POLYGON","CLASSNAME","getPath","result","group","setVisibility","visible","self","popup","map","getControlsByClass","control","Popup","filter","currentFeature","length","p","isVisible","hide","NOT_VISIBLE","setFeatureVisibility","getBounds","setStyle","style","toggleSelectedStyle","condition","_hasSelectedStyle","getLegend","_legend","getCoords","getCoordsArray","isPoint","elm","Array","isArray","flattenFn","val","reduce","reduceFn","acc","push","concat","getGeometryStride","firstCoord","setCoords","toNumberCoords","arr","forEach","idx","console","log","parseFloat","setGeometry","attributes","key","attr","name","value","unsetData","splice","indexOf","clearData","getInfo","locale","getMapLocale","template","getTemplate","replace","match","p1","html","hSlots","openText","getLocaleString","titleText","formatValue","isURL","formatNumber","recursiveFn","i","Object","getType","tttt","type","coordinates","getCoordinates","headers","unshift","join","title","clone","nativeClone","cloneFeature","constructor","getStyle","showPopup","async","Control","popups","len","caller","addControl","assign","trigger","event","POPUP","fitToView","contentDiv","querySelectorAll","img","addEventListener","showResultsPanel","panel","resultsPanelOptions","content","titles","main","max","controlContainer","position","POSITION","RIGHT","div","document","createElement","appendChild","ControlContainer","ResultsPanel","ctrl","close","chart","menuDiv","innerHTML","open","getInfoContainer","onViewChange","e","off","VIEWCHANGE","on","showInfo","loadJS","FeatureInfoCommons","apiLocation","renderFeatureAttributeTable","singleFeature","optionsControl","on3DView","defaultInfoContainer","infoContainer","RESULTS_PANEL","addSpecialAttributeEventListeners","getContainerElement","selectedFeatures","selectionOptions","selection","Cfg","styles","unselect","isSelected","toGML","version","srsName"],"mappings":"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","sourcesContent":["TC.feature = TC.feature || {};\r\nTC.Feature = function (coords, options) {\r\n    var self = this;\r\n\r\n    let olFeatureId;\r\n    self.wrap = new TC.wrap.Feature();\r\n    self.wrap.parent = self;\r\n    if (self.wrap.isNative(coords)) {\r\n        self.wrap.feature = coords;\r\n        coords._wrap = self.wrap;\r\n        olFeatureId = self.wrap.getId();\r\n        self.geometry = self.wrap.getGeometry();\r\n        if (coords._folders) {\r\n            self.folders = coords._folders;\r\n        }\r\n        self.setData(self.wrap.getData());\r\n    }\r\n\r\n    var opts = self.options = TC.Util.extend(true, {}, options);\r\n\r\n    self.id = olFeatureId || opts.id || TC.getUID();\r\n    if (self.wrap.feature && !olFeatureId) {\r\n        self.wrap.feature.setId(self.id);\r\n    }\r\n    self.data = opts.data || self.data || null;\r\n    self._visibilityState = TC.Consts.visibility.VISIBLE;\r\n    if (opts.showsPopup === undefined) {\r\n        self.showsPopup = true;\r\n    }\r\n    else {\r\n        self.showsPopup = opts.showsPopup;\r\n    }\r\n    self.layer = opts.layer || null;\r\n    self._selected = false;\r\n\r\n    if (opts.selected) {\r\n        self.select();\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.STYLETYPE = TC.Consts.geom.POLYGON;\r\n\r\nTC.Feature.prototype.CLASSNAME = 'TC.Feature';\r\n\r\nTC.Feature.prototype.getPath = function () {\r\n    var result = [];\r\n    var self = this;\r\n    if (self.folders) {\r\n        result = self.folders;\r\n    }\r\n    else if (self.options.group) {\r\n        result = [self.options.group];\r\n    }\r\n    return result;\r\n};\r\n\r\nTC.Feature.prototype.setVisibility = function (visible) {\r\n    var self = this;\r\n\r\n    // Ocultamos el posible popup\r\n    if (!visible && self.showsPopup && self.layer) {\r\n        var popup = self.layer.map.getControlsByClass(TC.control.Popup).filter(function (popup) {\r\n            return popup.currentFeature === self\r\n        });\r\n\r\n        if (popup.length > 0) {\r\n            const p = popup[0];\r\n            if (p.isVisible()) {\r\n                p.hide();\r\n            }\r\n        }\r\n    }\r\n\r\n    if ((visible && self._visibilityState === TC.Consts.visibility.NOT_VISIBLE) || (!visible && self._visibilityState === TC.Consts.visibility.VISIBLE)) {\r\n        self._visibilityState = visible ? TC.Consts.visibility.VISIBLE : TC.Consts.visibility.NOT_VISIBLE;\r\n        self.layer.wrap.setFeatureVisibility(self, visible);\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.getId = function () {\r\n    return this.wrap.getId();\r\n};\r\n\r\nTC.Feature.prototype.setId = function (id) {\r\n    var self = this;\r\n    self.id = id;\r\n    self.wrap.setId(id);\r\n};\r\n\r\nTC.Feature.prototype.getBounds = function () {\r\n    return this.wrap.getBounds();\r\n};\r\n\r\nTC.Feature.prototype.setStyle = function (style) {\r\n    this.wrap.setStyle(style);\r\n};\r\n\r\nTC.Feature.prototype.toggleSelectedStyle = function (condition) {\r\n    const self = this;\r\n    if (self._hasSelectedStyle != condition) {\r\n        self._hasSelectedStyle = condition;\r\n        self.wrap.toggleSelectedStyle(condition);\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.getLegend = function () {\r\n    var self = this;\r\n    if (!self._legend) {\r\n        self._legend = self.wrap.getLegend();\r\n    }\r\n    return self._legend;\r\n};\r\n\r\nTC.Feature.prototype.getCoords = function () {\r\n    const self = this;\r\n    self.geometry = self.wrap.getGeometry();\r\n    return self.geometry;\r\n};\r\n\r\nTC.Feature.prototype.getCoordsArray = function () {\r\n    const self = this;\r\n    const isPoint = function (elm) {\r\n        return Array.isArray(elm) && elm.length >= 2 && typeof elm[0] === 'number' && typeof elm[1] === 'number';\r\n    };\r\n    const flattenFn = function (val) {\r\n        return isPoint(val) ? [val] : val.reduce(reduceFn, []);\r\n    }\r\n    const reduceFn = function (acc, elm) {\r\n        if (isPoint(elm)) {\r\n            acc.push(elm);\r\n        }\r\n        else {\r\n            acc = acc.concat(flattenFn(elm));\r\n        }\r\n        return acc;\r\n    };\r\n    return flattenFn(self.getCoords());\r\n};\r\n\r\nTC.Feature.prototype.getGeometryStride = function () {\r\n    const self = this;\r\n    const coordsArray = self.getCoordsArray();\r\n    const firstCoord = coordsArray[0];\r\n    if (firstCoord) {\r\n        return firstCoord.length;\r\n    }\r\n    return 0;\r\n}\r\n\r\n\r\nTC.Feature.prototype.setCoords = function (coords) {\r\n    const self = this;\r\n\r\n    const toNumberCoords = function (arr) {\r\n        arr.forEach(function (elm, idx) {\r\n            if (Array.isArray(elm)) {\r\n                toNumberCoords(elm);\r\n            }\r\n            else {\r\n                if (elm === null) {\r\n                    arr[idx] = 0;\r\n                }\r\n                else if (typeof elm !== 'number') {\r\n                    console.log('Warning: coordinate does not have number type');\r\n                    arr[idx] = parseFloat(elm);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    if (Array.isArray(coords)) {\r\n        toNumberCoords(coords);\r\n    }\r\n\r\n    self.geometry = coords;\r\n    return self.wrap.setGeometry(coords);\r\n};\r\n\r\nTC.Feature.prototype.getData = function () {\r\n    var result = null;\r\n    var self = this;\r\n    if (self.data) {\r\n        result = self.data;\r\n    }\r\n    else {\r\n        result = self.wrap.getData();\r\n    }\r\n    return result;\r\n};\r\n\r\nTC.Feature.prototype.setData = function (data) {\r\n    const self = this;\r\n    if (typeof data === 'string') {\r\n        self.data = data;\r\n    }\r\n    else {\r\n        self.data = TC.Util.extend(self.data, data);\r\n        self.attributes = self.attributes || [];\r\n        for (var key in data) {\r\n            let attr = self.attributes.filter(attr => attr.name === key)[0];\r\n            if (attr) {\r\n                attr.value = data[key];\r\n            }\r\n            else {\r\n                self.attributes.push({ name: key, value: data[key] });\r\n            }\r\n        }\r\n        self.wrap.setData(data);\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.unsetData = function (key) {\r\n    const self = this;\r\n    delete self.data[key];\r\n    const attr = (self.attributes || []).filter(attr => attr.name === key)[0];\r\n    if (attr) {\r\n        self.attributes.splice(self.attributes.indexOf(attr), 1);\r\n    }\r\n    self.wrap.unsetData(key);\r\n};\r\n\r\nTC.Feature.prototype.clearData = function () {\r\n    const self = this;\r\n    self.data = {};\r\n    self.attributes = [];\r\n    self.wrap.clearData();\r\n};\r\n\r\nTC.Feature.prototype.getInfo = function (options) {\r\n    var result = null;\r\n    var self = this;\r\n    options = options || {};\r\n    var locale = options.locale || (self.layer && self.layer.map && TC.Util.getMapLocale(self.layer.map));\r\n    var data = self.getData();\r\n    if (typeof data === 'object') {\r\n        var template = self.wrap.getTemplate();\r\n        if (template) {\r\n            // GLS: Contemplo en la expresión regular la opción de que el nombre del campo se componga de $[aaa/abc/loQueMeInteresa] \r\n            // (la expresión no está limitada a 2 niveles), hasta ahora se manejaba $[loQueMeInteresa]\r\n            result = template.replace(/\\$\\[?(?:\\w+\\/)*(\\w+)\\]/g, function (match, p1) {\r\n                return data[p1];\r\n            });\r\n        }\r\n        else {\r\n            var html = [];\r\n            const hSlots = [];\r\n            const openText = TC.Util.getLocaleString(locale, 'open');\r\n            const titleText = TC.Util.getLocaleString(locale, 'linkInNewWindow');\r\n            const formatValue = function (value) {\r\n                let result;\r\n                var isUrl = TC.Util.isURL(value);\r\n                if (isUrl) {\r\n                    result = `<a href=\"${value}\" target=\"_blank\" title=\"${titleText}\">${openText}</a>`;\r\n                }\r\n                else {\r\n                    result = value !== undefined ? (typeof (value) === \"number\" ? TC.Util.formatNumber(value, locale):value) : '&mdash;';\r\n                }\r\n                return result;\r\n            }\r\n            const recursiveFn = function (data) {\r\n                var html = [];\r\n                if (data instanceof Array) {\r\n                    var id = 'complexAttr_' + TC.getUID()\r\n                    html.push(`<div class=\"complexAttr\"><input type=\"checkbox\" id=\"${id}\" /><div><label for=\"${id}\" title=\"\" class=\"plus\"></label>`);\r\n                    html.push(`<label for=\"${id}\" title=\"\" class=\"title\">${data.length} ${TC.Util.getLocaleString(locale, 'featureInfo.complexData.array')}</label><br/>`);\r\n                    html.push('<table class=\"complexAttr\"><tbody>');\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        html.push('<tr><td>');\r\n                        html = html.concat(recursiveFn(data[i]));\r\n                        html.push('</td></tr>');\r\n                    }\r\n                    html.push('</tbody></table></div></div>');\r\n                } else if (data instanceof Object) {\r\n                    if (data.getType) {\r\n                        const tttt = {\r\n                            type: data.getType(),\r\n                            coordinates: data.getCoordinates()\r\n                        };\r\n                        html = html.concat(recursiveFn(tttt));\r\n                    }\r\n                    else {\r\n                        html.push('<table class=\"complexAttr\"><tbody>');\r\n                        for (var i in data) {\r\n                            html.push('<tr>');\r\n                            if (data[i] && data[i] instanceof Array) {\r\n\r\n                                html.push(`<th style=\"display:none\">${i}</th>\r\n                                           <td><label for=\"${id}\" class=\"title\">${i}</label><br/>`);\r\n                                html = html.concat(recursiveFn(data[i]));\r\n                                html.push('</div></td>');\r\n                            }\r\n                            else if (data[i] && data[i] instanceof Object) {\r\n                                //if(data[i] && Object.entries(data[i]).some((item)=>{return item[1] instanceof Object})){\t\t\t\t\t\t\r\n                                var id = 'complexAttr_' + TC.getUID()\r\n                                html.push(`<th style=\"display:none\">${i}</th>\r\n                                           <td><input type=\"checkbox\" id=\"${id}\" /><div><label for=\"${id}\" title=\"\" class=\"plus\"></label>`);\r\n                                html.push(`<label for=\"${id}\" title=\"\" class=\"title\">${i}</label><br/>`);\r\n                                html = html.concat(recursiveFn(data[i]));\r\n                                html.push('</div></td>');\r\n                            }\r\n                            else {\r\n                                html.push(`<th class=\"key\">${i}</th>\r\n                                           <td class=\"value\">`);\r\n                                html = html.concat(recursiveFn(data[i]));\r\n                                html.push('</td>');\r\n                            }\r\n                            html.push('</tr>');\r\n                        }\r\n                        html.push('</tbody></table>');\r\n                    }\r\n                } else {\r\n                    html.push(formatValue(data));\r\n                }\r\n                return html;\r\n            };\r\n            for (var key in data) {\r\n                const value = data[key];\r\n                const match = key.match(/^h(\\d)_/i);\r\n                if (match) {\r\n                    hSlots[match[1]] = value;\r\n                }\r\n                else {\r\n                    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'undefined') {\r\n                        html.push(`<tr><th>${key}</th><td>${formatValue(value)}</td></tr>`);\r\n                    }\r\n                    else {\r\n                        html.push(`<tr><th>${key}</th><td>`);\r\n                        html = html.concat(recursiveFn(value))\r\n                        html.push('</td></tr>');\r\n\r\n                    }\r\n                }\r\n            }\r\n            const headers = hSlots\r\n                .map(function (val, idx) {\r\n                    if (val) {\r\n                        return `<h${idx}>${val}</h${idx}>`;\r\n                    }\r\n                })\r\n                .filter(function (val) {\r\n                    return val;\r\n                });\r\n            if (headers.length) {\r\n                html = headers.concat(html);\r\n            }\r\n            if (html.length > 0) {\r\n                html.unshift('<table class=\"tc-attr\">');\r\n                html.push('</table>');\r\n                result = html.join('');\r\n            }\r\n        }\r\n    }\r\n    else if (typeof data === 'string') {\r\n        result = data;\r\n    }\r\n    if (!result) {\r\n        result = self.title;\r\n        if (self.group) {\r\n            result += ' ' + self.group;\r\n        }\r\n    }\r\n    if (!result) {\r\n        result = TC.Util.getLocaleString(locale, 'noData');\r\n    }\r\n    return result;\r\n};\r\n\r\nTC.Feature.prototype.getTemplate = function () {\r\n    const self = this;\r\n    let result = self.wrap.getTemplate();\r\n    if (result) {\r\n        return result;\r\n    }\r\n    return null;\r\n};\r\n\r\nTC.Feature.prototype.clone = function () {\r\n    var self = this;\r\n    var nativeClone = self.wrap.cloneFeature();\r\n    nativeClone._wrap = self.wrap;\r\n    return new self.constructor(nativeClone, self.options);\r\n};\r\n\r\nTC.Feature.prototype.getStyle = function () {\r\n    return this.wrap.getStyle();\r\n};\r\n\r\nTC.Feature.prototype.showPopup = async function (options) {\r\n    const self = this;\r\n    options = options || {};\r\n    const control = options && options instanceof TC.Control ? options : options.control;\r\n    const map = (self.layer && self.layer.map) || (control && control.map);\r\n    if (map) {\r\n        let popup = control || self.popup;\r\n        if (!popup) {\r\n            // Buscamos un popup existente que no esté asociado a un control.\r\n            var popups = map.getControlsByClass('TC.control.Popup');\r\n            for (var i = 0, len = popups.length; i < len; i++) {\r\n                var p = popups[i];\r\n                if (!p.caller) {\r\n                    popup = p;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (!popup) {\r\n            popup = await map.addControl('popup');\r\n        }\r\n        popup.currentFeature = self;\r\n        map.getControlsByClass(TC.control.Popup)\r\n            .filter(p => p !== popup && p.isVisible())\r\n            .forEach(p => p.hide());\r\n        self.wrap.showPopup(Object.assign({}, options, { control: popup }));\r\n        map.trigger(TC.Consts.event.POPUP, { control: popup });\r\n        popup.fitToView(true);\r\n        popup.contentDiv.querySelectorAll('img').forEach(img => img.addEventListener('load', () => popup.fitToView()));\r\n        return popup;\r\n    }\r\n    return null;\r\n};\r\n\r\nTC.Feature.prototype.showResultsPanel = async function (options) {\r\n    const self = this;\r\n    options = options || {};\r\n    const control = options && options instanceof TC.Control ? options : options.control;\r\n    const map = (self.layer && self.layer.map) || (control && control.map);\r\n    if (map) {\r\n        let panel;\r\n\r\n        var resultsPanelOptions = {\r\n            content: \"table\",\r\n            titles: {\r\n                main: TC.Util.getLocaleString(map.options.locale, \"rsp.title\"),\r\n                max: TC.Util.getLocaleString(map.options.locale, \"rsp.title\")\r\n            }\r\n        };\r\n        var controlContainer = map.getControlsByClass('TC.control.ControlContainer')[0];\r\n        if (controlContainer) {\r\n            resultsPanelOptions.position = controlContainer.POSITION.RIGHT;\r\n            panel = await controlContainer.addControl('resultsPanel', resultsPanelOptions);\r\n        } else {\r\n            resultsPanelOptions.div = document.createElement('div');\r\n            map.div.appendChild(resultsPanelOptions.div);\r\n            panel = await map.addControl('resultsPanel', resultsPanelOptions);\r\n        }\r\n\r\n        panel.currentFeature = self;\r\n\r\n        // GLS: si contamos con el contenedor de controles no es necesario cerra el resto de paneles ya que no habrá solape excepto los paneles\r\n        if (map.getControlsByClass(TC.control.ControlContainer).length === 0) {\r\n            map.getControlsByClass(TC.control.ResultsPanel).filter(function (ctrl) { return ctrl.options.content === \"table\" }).forEach(function (p) {\r\n                p.close();\r\n            });\r\n        }\r\n\r\n        // cerramos los paneles con feature asociada que no sean gráfico\r\n        const panels = map.getControlsByClass('TC.control.ResultsPanel');\r\n        panels.forEach(function (p) {\r\n            if (p.currentFeature && !p.chart) {\r\n                p.close();\r\n            }\r\n        });\r\n\r\n        panel.menuDiv.innerHTML = '';\r\n        panel.open(options.html || self.getInfo({ locale: map.options.locale }), panel.getInfoContainer());\r\n\r\n        var onViewChange = function (e) {\r\n            map.off(TC.Consts.event.VIEWCHANGE, onViewChange);\r\n\r\n            panel.close();\r\n        };\r\n        map.on(TC.Consts.event.VIEWCHANGE, onViewChange);\r\n        return panel;\r\n    }\r\n    return null;\r\n};\r\n\r\nTC.Feature.prototype.showInfo = function (options) {\r\n    const self = this;\r\n    options = options || {};\r\n\r\n    TC.loadJS(\r\n        !TC.control || !TC.control.FeatureInfoCommons,\r\n        TC.apiLocation + 'TC/control/FeatureInfoCommons',\r\n        async function () {\r\n            let html;\r\n            if (self.getTemplate()) {\r\n                html = self.getInfo();\r\n            }\r\n            else {\r\n                if (typeof self.data === 'string') {\r\n                    html = self.data;\r\n                }\r\n                else {\r\n                    html = await TC.control.FeatureInfoCommons.renderFeatureAttributeTable({ attributes: self.attributes, singleFeature: true });\r\n                }\r\n            }\r\n            const opts = TC.Util.extend({}, options, { html: html });\r\n            let control;\r\n            if (options.control && TC.control) {\r\n                const optionsControl = options.control;\r\n                if (optionsControl instanceof TC.control.Popup) {\r\n                    control = await self.showPopup(opts);\r\n                }\r\n                else if (optionsControl instanceof TC.control.ResultsPanel) {\r\n                    control = await self.showResultsPanel(opts);\r\n                }\r\n            }\r\n            else {\r\n                if (self.layer.map.on3DView || self.layer.map.defaultInfoContainer === TC.Consts.infoContainer.RESULTS_PANEL) {\r\n                    control = await self.showResultsPanel(opts);\r\n                }\r\n                else {\r\n                    control = await self.showPopup(opts);\r\n                }\r\n            }\r\n\r\n            TC.control.FeatureInfoCommons.addSpecialAttributeEventListeners(control.getContainerElement());\r\n        }\r\n    );\r\n};\r\n\r\n\r\nTC.Feature.prototype.select = function () {\r\n    var self = this;\r\n    self._selected = true;\r\n    if (self.layer) {\r\n        self.layer.selectedFeatures.push(self);\r\n    }\r\n    var selectionOptions = self.options.selection || {};\r\n    self.setStyle(TC.Util.extend({}, TC.Cfg.styles.selection[self.STYLETYPE], selectionOptions[self.STYLETYPE]));\r\n};\r\n\r\nTC.Feature.prototype.unselect = function () {\r\n    const self = this;\r\n    self._selected = false;\r\n    // Volvemos al estilo por defecto\r\n    self.setStyle(self.options);\r\n\r\n    if (self.layer) {\r\n        const idx = self.layer.selectedFeatures.indexOf(self);\r\n        if (idx >= 0) {\r\n            self.layer.selectedFeatures.splice(idx, 1);\r\n        }\r\n    }\r\n};\r\n\r\nTC.Feature.prototype.isSelected = function () {\r\n    return this._selected;\r\n};\r\n\r\nTC.Feature.prototype.toGML = function (version, srsName) {\r\n    return this.wrap.toGML(version, srsName);\r\n};\r\n\r\n\r\n"]}