{"version":3,"sources":["control/OfflineMapMaker.js"],"names":["TC","control","SWCacheClient","syncLoadJS","apiLocation","Consts","classes","CONNECTION_OFFLINE","CONNECTION_WIFI","CONNECTION_MOBILE","OFFLINE","OfflineMapMaker","self","this","apply","arguments","cs","_classSelector","CLASS","_selectors","DRAW","DRAWING","PROGRESS","NEW","LIST","LISTITEM","OKBTN","NEWBTN","SAVEBTN","CANCELBTN","EDITBTN","VIEWBTN","DELETEBTN","TILECOUNT","NAMETB","TEXTBOX","EXIT","OFFPANEL","RESOLUTIONPANEL","BLLIST","BLLISTITEM","BLLISTTEXT","RNGMAXRES","SEARCH","EMPTYLIST","OFFLINEHIDDEN","storedMaps","mapDefString","Util","getParameterByName","MAP_DEFINITION_PARAM_NAME","extentString","MAP_EXTENT_PARAM_NAME","mapIsOffline","currentMapDefinition","JSON","parse","window","atob","decodeURIComponent","currentMapExtent","getExtentFromString","localStorage","key","setItem","removeItem","e","error","getLocaleString","i","len","length","indexOf","LOCAL_STORAGE_KEY_PREFIX","ROOT_CACHE_NAME","values","getItem","split","extent","shift","map","name","join","url","substr","push","sort","a","b","options","extend","_dialogDiv","getDiv","dialogDiv","$","_$dialogDiv","document","body","appendChild","querySelectorAll","forEach","elm","classList","add","HIDDEN","Control","wrap","isDownloading","baseLayers","averageTileSize","Cfg","requestSchemas","minResolution","currentMap","_loadedCount","pushState","history","state","result","_offlineMapHintDiv","querySelector","setAttribute","getOnlineMapUrl","connection","navigator","mozConnection","webkitConnection","onlineHandler","panel","remove","type","undefined","addEventListener","inherit","ctlProto","prototype","SERVICE_WORKER_FLAG","_states","READY","EDIT","DOWNLOADING","DELETING","_actions","CREATE","DELETE","offlineControls","event","MAPCACHEDOWNLOAD","MAPCACHEDELETE","MAPCACHEPROGRESS","MAPCACHEERROR","template","1","container","depth0","helpers","partials","data","3","5","stack1","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","invokePartial","indent","decorators","compiler","main","alias1","nullContext","alias2","escapeExpression","alias3","lambda","hash","loc","start","line","column","end","fn","program","inverse","noop","usePartial","useData","str","parseFloat","setNameReadyState","ctl","li","formatNumber","number","toString","replace","updateResolutions","opts","resDiv","range","resText","resLevel","resLeft","resolutions","getResolutions","rangeValue","value","currentResolution","getResolution","filter","r","parseInt","resValue","Math","floor","Number","toLocaleString","locale","disabled","toggle","style","left","innerHTML","updateThumbnails","cb","idx","checked","schema","layerId","tml","resolution","tileMatrixLimits","res","findTileMatrixLimits","tmsKey","tmKey","trKey","tcKey","qsIdx","j","lenj","l","id","layerNames","format","tagName","parentElement","backgroundSize","backgroundPosition","backgroundImage","tileMatrixSet","mId","rt","cl","formatSize","size","quantity","showEstimatedMapSize","text","tileCount","ii","jj","cr","rb","estimatedMapSize","round","getListElementByMapUrl","hashIdx","lis","div","anchor","getAttribute","saveMapToStorage","encodeURIComponent","removeMap","findStoredMap","removeMapFromStorage","getListElementByMapName","removeChild","splice","removeAttribute","render","callback","_set1stRenderPromise","Promise","resolve","reject","renderObject","listId","getUID","getRenderedHtml","html","CLICK","preventDefault","selectionStart","selectionEnd","focus","then","renderData","generateCache","passive","_updateReadyState","setEditState","setReadyState","cancelCacheRequest","list","EventTarget","listenerBySelector","startDeleteMap","target","textbox","setNameEditingState","newName","btn","showExtent","contains","ACTIVE","viewBtn","mapName","layer","clearFeatures","addPolygon","showsPopup","zoomToFeatures","features","trackSearch","searchListener","searchTerm","toLowerCase","display","mapLis","matches","removeProperty","visibility","RegExp","test","textContent","some","hidden","_filter","trim","checkbox","getLayer","updateRequestSchemas","rangeListener","location","href","isFunction","catch","err","Error","msg","returnValue","register","getServiceWorker","serviceWorker","ready","trigger","loaded","count","total","action","onLine","manifestFile","documentElement","ajax","method","responseType","response","loadJS","hex_md5","HASH","idxEnd","lines","urls","obj","hashStorageKey","cacheUrlList","one","firstLoad","confirm","reload","renderPromise","warning","createElement","header","reason","message","console","log","offlineMapHintDiv","offPanel","drawId","layerPromise","addLayer","layerType","VECTOR","stealth","owner","styles","all","addControl","mode","geom","RECTANGLE","persistent","objects","boxDraw","setLayer","on","DRAWSTART","toast","msgType","INFO","DRAWEND","points","feature","geometry","pStart","pEnd","minx","min","maxx","max","miny","maxy","setExtent","checkboxes","getCompatibleMatrixSets","crs","includes","matrixSet","getRequestSchemas","layers","visibleLi","showModal","openCallback","setTimeout","time","Date","opt","year","month","day","hour","minute","second","closeCallback","CONTROLDEACTIVATE","_state","EDITING","addRenderedListNode","blList","isLayerAdded","isValidLayer","WMTS","mustReproject","detectSafari","detectIOS","isSameOrigin","parser","DOMParser","parseFromString","firstChild","isBase","cachedResolutions","setResolutions","LAYERADD","LAYERREMOVE","PROJECTIONCHANGE","offCtls","offCtl","toUpperCase","concat","getControlsByClass","controls","disable","putLayerOnTop","mapDef","isSameLayer","mapDefLayer","protocol","urlIdx","tms","tmsIdx","missingLayers","availableBaseLayers","abl","finally","cachedLayers","baseLayer","setBaseLayer","removeLayer","animate","removeHash","serviceWorkerEnabled","DISABLED","alert","addMap","showDownloadProgress","handleError","status","detectIE","Array","isArray","cancel","activate","startRequest","closeModal","setDownloadingState","requestCache","storage","estimate","availableMB","quota","usage","mapSize","availableStorage","urlList","createCache","silent","getExtent","filterTml","arr","trimTml","intersectionExtent","POSITIVE_INFINITY","NEGATIVE_INFINITY","rs","unitsPerTile","tSize","origin","precision","pow","isGeo","DEGREE_PRECISION","METER_PRECISION","mapDefinition","bBox","ceil","layerUrl","shortFormat","formatIdx","params","getQueryStringParams","btoa","stringify","u","pathname","getParamString","urlPattern","getGetTilePattern","getFallbackLayer","thumbnail","k","lenk","c","deleteCache","deleteMap","confirmText","setDeletingState","current","percentString","pr","width","pb","resolutionMapper","allResolutions","newParams"],"mappings":"AAiEAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGC,QAAQC,eACZF,GAAGG,WAAWH,GAAGI,YAAc,6BAGnC,WAEIJ,GAAGK,OAAOC,QAAQC,mBAAqBP,GAAGK,OAAOC,QAAQC,oBAAsB,kBAC/EP,GAAGK,OAAOC,QAAQE,gBAAkBR,GAAGK,OAAOC,QAAQE,iBAAmB,eACzER,GAAGK,OAAOC,QAAQG,kBAAoBT,GAAGK,OAAOC,QAAQG,mBAAqB,iBAC7ET,GAAGK,OAAOC,QAAQI,QAAUV,GAAGK,OAAOC,QAAQI,SAAW,aA+CzDV,GAAGC,QAAQU,gBAAkB,WACzB,IAAIC,EAAOC,KAEXb,GAAGC,QAAQC,cAAcY,MAAMD,KAAME,WAErC,IAAIC,EAAKJ,EAAKK,eAAiB,IAAML,EAAKM,MAC1CN,EAAKO,WAAa,CACdC,KAAMJ,EAAK,QACXK,QAASL,EAAK,WACdM,SAAUN,EAAK,YACfO,IAAKP,EAAK,OACVQ,KAAMR,EAAK,QACXS,SAAUT,EAAK,aACfU,MAAOV,EAAK,UACZW,OAAQX,EAAK,WACbY,QAAS,eACTC,UAAW,iBACXC,QAAS,eACTC,QAAS,eACTC,UAAW,iBACXC,UAAWjB,EAAK,cAChBkB,OAAQlB,EAAK,YACbmB,QAAS,mBACTC,KAAMpB,EAAK,aACXqB,SAAUrB,EAAK,aACfsB,gBAAiBtB,EAAK,aACtBuB,OAAQvB,EAAK,WACbwB,WAAYxB,EAAK,gBACjByB,WAAYzB,EAAK,gBACjB0B,UAAW1B,EAAK,cAChB2B,OAAQ3B,EAAK,sBACb4B,UAAW5B,EAAK,uBAChB6B,cAAe,gBAGnBjC,EAAKkC,WAAa,GAElB,MAAMC,EAAe/C,GAAGgD,KAAKC,mBAAmBrC,EAAKsC,2BAC/CC,EAAenD,GAAGgD,KAAKC,mBAAmBrC,EAAKwC,uBACrDxC,EAAKyC,eAAiBN,EAClBA,IACAnC,EAAK0C,qBAAuBC,KAAKC,MAAMC,OAAOC,KAAKC,mBAAmBZ,MAEtEI,IACAvC,EAAKgD,iBAAmBC,EAAoBV,IAIhD,IACIvC,EAAKkD,aAAeL,OAAOK,aAC3B,MAAMC,EAAM,gBACZnD,EAAKkD,aAAaE,QAAQD,EAAKA,GAC/BnD,EAAKkD,aAAaG,WAAWF,GAEjC,MAAOG,GACHtD,EAAKkD,aAAe,KACpB9D,GAAGmE,MAAMvD,EAAKwD,gBAAgB,+BAIlC,GAAIxD,EAAKkD,aAAc,CACnB,IAAK,IAAIO,EAAI,EAAGC,EAAM1D,EAAKkD,aAAaS,OAAQF,EAAIC,EAAKD,IAAK,CAC1D,IAAIN,EAAMnD,EAAKkD,aAAaC,IAAIM,GAChC,GAAmD,IAA/CN,EAAIS,QAAQ5D,EAAK6D,2BAAmCV,IAAQnD,EAAK6D,yBAA2B7D,EAAK8D,gBAAkB,QAAS,CAE5H,IAAIC,EAAS/D,EAAKkD,aAAac,QAAQb,GAAKc,MAAM,KAC9CC,EAASjB,EAAoBc,EAAOI,SAEpCC,EAAM,CACNC,KAFON,EAAOO,KAAK,KAGnBJ,OAAQA,EACRK,IAAKxB,mBAAmBI,EAAIqB,OAAOxE,EAAK6D,yBAAyBF,UAErE3D,EAAKkC,WAAWuC,KAAKL,IAG7BpE,EAAKkC,WAAWwC,KAAK,SAAUC,EAAGC,GAC9B,OAAID,EAAEN,KAAOO,EAAEP,KACJ,EAEPM,EAAEN,KAAOO,EAAEP,MACH,EAEL,IAIf,IAAIQ,EAAUzF,GAAGgD,KAAK0C,OAAO,GAAIpB,EAAM,EAAIvD,UAAU,GAAKA,UAAU,IACpEH,EAAK+E,WAAa3F,GAAGgD,KAAK4C,OAAOH,EAAQI,WACrCpC,OAAOqC,IACPlF,EAAKmF,YAAcD,EAAElF,EAAK+E,aAEzBF,EAAQI,WACTG,SAASC,KAAKC,YAAYtF,EAAK+E,YAG/B/E,EAAKyC,cACL2C,SAASG,iBAAiBvF,EAAKO,WAAW0B,eAAeuD,QAAQ,SAAUC,GACvEA,EAAIC,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,UAI5CxG,GAAGyG,QAAQ3F,MAAMF,EAAMG,WACvBH,EAAK8F,KAAO,IAAI1G,GAAG0G,KAAKzG,QAAQU,gBAAgBC,GAEhDA,EAAK+F,eAAgB,EACrB/F,EAAKgG,WAAa,GAElBhG,EAAK6E,QAAQoB,gBAAkBjG,EAAK6E,QAAQoB,iBAAmB7G,GAAG8G,IAAID,gBACtEjG,EAAKmG,eAAiB,GACtBnG,EAAKoG,cAAgB,EACrBpG,EAAKqG,WAAa,KAElBrG,EAAKsG,aAAe,EAIpB,IAAIC,EAAYC,QAAQD,UACxBC,QAAQD,UAAY,SAAUE,GAC1B,IAAIC,EAIJA,EAASH,EAAUrG,MAAMsG,QAASrG,WAC9BH,EAAK2G,oBACL3G,EAAK2G,mBAAmBC,cAAc5G,EAAKO,WAAWiB,MAAMqF,aAAa,OAAQ7G,EAAK8G,mBAE1F,OAAOJ,GAIX,IAAIK,EAAaC,UAAUD,YAAcC,UAAUC,eAAiBD,UAAUE,kBAAoB,GAC9FC,EAAgB,WAChB,GAAInH,EAAK2G,mBAAoB,CACzB,MAAMS,EAAQpH,EAAK2G,mBAAmBC,cAAc5G,EAAKO,WAAWkB,UACpE2F,EAAM1B,UAAU2B,OACZjI,GAAGK,OAAOC,QAAQC,mBAClBP,GAAGK,OAAOC,QAAQG,kBAClBT,GAAGK,OAAOC,QAAQE,iBAGtB,OADWmH,EAAWO,MAElB,KAAK,EACL,KAAK,EACL,UAAKC,EACDH,EAAM1B,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQE,iBACtC,MACJ,QACIwH,EAAM1B,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQG,sBAKlDkH,EAAWS,kBACXT,EAAWS,iBAAiB,aAAcL,GAE9CtE,OAAO2E,iBAAiB,SAAUL,GAClCtE,OAAO2E,iBAAiB,UAAW,WAC/B,GAAIxH,EAAK2G,mBAAoB,CACzB,MAAMS,EAAQpH,EAAK2G,mBAAmBC,cAAc5G,EAAKO,WAAWkB,UACpE2F,EAAM1B,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQC,oBACtCyH,EAAM1B,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQG,kBAAmBT,GAAGK,OAAOC,QAAQE,qBAK1FR,GAAGqI,QAAQrI,GAAGC,QAAQU,gBAAiBX,GAAGC,QAAQC,eAElD,IAAIoI,EAAWtI,GAAGC,QAAQU,gBAAgB4H,UAE1CD,EAASpH,MAAQ,aACjBoH,EAASpF,0BAA4B,UACrCoF,EAASlF,sBAAwB,aACjCkF,EAAS7D,yBAA2B,kBACpC6D,EAAS5D,gBAAkB,OAC3B4D,EAASE,oBAAsB,KAC/BF,EAASG,QAAU,CACfC,MAAO,QACPC,KAAM,UACNC,YAAa,cACbC,SAAU,YAEdP,EAASQ,SAAW,CAChBC,OAAQ,SACRC,OAAQ,UAEZV,EAASW,gBAAkB,CACvB,cACA,kBACA,kBACA,QACA,cACA,OACA,OACA,cACA,mBACA,UACA,SACA,QACA,QACA,QACA,WACA,gBACA,QACA,cAGJjJ,GAAGK,OAAO6I,MAAMC,iBAAmBnJ,GAAGK,OAAO6I,MAAMC,kBAAoB,sBACvEnJ,GAAGK,OAAO6I,MAAME,eAAiBpJ,GAAGK,OAAO6I,MAAME,gBAAkB,oBACnEpJ,GAAGK,OAAO6I,MAAMG,iBAAmBrJ,GAAGK,OAAO6I,MAAMG,kBAAoB,sBACvErJ,GAAGK,OAAO6I,MAAMI,cAAgBtJ,GAAGK,OAAO6I,MAAMI,eAAiB,mBAEjEhB,EAASiB,SAAW,GACpBjB,EAASiB,SAASjB,EAASpH,OAAS,CAACsI,EAAI,SAASC,EAAUC,EAAOC,EAAQC,EAASC,GAAW,MAAO,aAAcC,EAAI,SAASL,EAAUC,EAAOC,EAAQC,EAASC,GAAW,MAAO,WAAYE,EAAI,SAASN,EAAUC,EAAOC,EAAQC,EAASC,GAAW,IAAIG,EAAQC,EAAiBR,EAAUQ,gBAAkB,SAASC,EAAQC,GAAuB,GAAIC,OAAO7B,UAAU8B,eAAeC,KAAKJ,EAAQC,GAA0B,OAAOD,EAAOC,IAAuD,OAA4O,OAAnOH,EAASP,EAAUc,cAAcN,EAAeL,EAAS,uBAAuBF,EAAO,CAACzE,KAAO,sBAAsB4E,KAAOA,EAAKW,OAAS,WAAWb,QAAUA,EAAQC,SAAWA,EAASa,WAAahB,EAAUgB,cAAwBT,EAAS,IAAMU,SAAW,CAAC,EAAE,YAAYC,KAAO,SAASlB,EAAUC,EAAOC,EAAQC,EAASC,GAAW,IAAIG,EAAQY,EAAiB,MAAVlB,EAAiBA,EAAUD,EAAUoB,aAAe,GAAKC,EAAOrB,EAAUsB,iBAAkBC,EAAOvB,EAAUwB,OAAQhB,EAAiBR,EAAUQ,gBAAkB,SAASC,EAAQC,GAAuB,GAAIC,OAAO7B,UAAU8B,eAAeC,KAAKJ,EAAQC,GAA0B,OAAOD,EAAOC,IAAuD,MAAO,OAAYW,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,cAAc,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,GAAGC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,sLAAoMR,EAAOE,EAAkB,MAAVtB,EAAiBO,EAAeP,EAAO,UAAYA,EAASA,IAAc,mEAA4EoB,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,iBAAiB,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,KAAKC,IAAM,CAACF,KAAO,EAAEC,OAAS,SAAc,KAAiT,OAArStB,EAASC,EAAeN,EAAQ,UAAUW,KAAKM,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,cAAgBA,EAAQ,CAACzE,KAAO,SAASiG,KAAO,GAAGM,GAAK/B,EAAUgC,QAAQ,EAAG5B,EAAM,GAAG6B,QAAUjC,EAAUkC,KAAK9B,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,KAAKC,IAAM,CAACF,KAAO,EAAEC,OAAS,SAAmBtB,EAAS,IAAS,sDAA8Dc,EAAOE,EAAkB,MAAVtB,EAAiBO,EAAeP,EAAO,UAAYA,EAASA,IAAc,oFAA0X,OAA3RM,EAASC,EAAeN,EAAQ,MAAMW,KAAKM,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,cAAgBA,EAAQ,CAACzE,KAAO,KAAKiG,KAAO,GAAGM,GAAK/B,EAAUgC,QAAQ,EAAG5B,EAAM,GAAG6B,QAAUjC,EAAUkC,KAAK9B,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAkBtB,EAAS,IAAS,UAAec,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,YAAY,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,SAAc,uEAA8ER,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,YAAY,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,oBAAyT,OAA/RtB,EAASC,EAAeN,EAAQ,QAAQW,KAAKM,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,cAAgBA,EAAQ,CAACzE,KAAO,OAAOiG,KAAO,GAAGM,GAAK/B,EAAUgC,QAAQ,EAAG5B,EAAM,GAAG6B,QAAUjC,EAAUkC,KAAK9B,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,GAAGC,IAAM,CAACF,KAAO,GAAGC,OAAS,QAAkBtB,EAAS,IAAS,wIAAkJc,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,gBAAgB,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,IAAIC,IAAM,CAACF,KAAO,GAAGC,OAAS,SAAc,KAAWR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,gBAAgB,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,KAAKC,IAAM,CAACF,KAAO,GAAGC,OAAS,SAAc,oNAAgOR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,SAAS,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,IAAIC,IAAM,CAACF,KAAO,GAAGC,OAAS,SAAc,KAAWR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,SAAS,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,KAAKC,IAAM,CAACF,KAAO,GAAGC,OAAS,SAAc,8GAAqHR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,qBAAoB,EAAK,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,IAAIC,IAAM,CAACF,KAAO,GAAGC,OAAS,QAAa,6RAA6SR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,SAAS,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,IAAIC,IAAM,CAACF,KAAO,GAAGC,OAAS,QAAa,KAAWR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,SAAS,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,KAAKC,IAAM,CAACF,KAAO,GAAGC,OAAS,SAAc,yCAA0CM,YAAa,EAAKC,SAAU,GACznLvD,EAASiB,SAASjB,EAASpH,MAAQ,aAAe,CAACwJ,SAAW,CAAC,EAAE,YAAYC,KAAO,SAASlB,EAAUC,EAAOC,EAAQC,EAASC,GAAW,IAAIe,EAAOnB,EAAUwB,OAAQH,EAAOrB,EAAUsB,iBAAkBC,EAAiB,MAAVtB,EAAiBA,EAAUD,EAAUoB,aAAe,GAAKZ,EAAiBR,EAAUQ,gBAAkB,SAASC,EAAQC,GAAuB,GAAIC,OAAO7B,UAAU8B,eAAeC,KAAKJ,EAAQC,GAA0B,OAAOD,EAAOC,IAAuD,MAAO,oBAA0BW,EAAOF,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,UAAYA,EAASA,IAAc,4BAAmCoB,EAAOF,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,OAASA,EAASA,IAAc,YAAmBoB,EAAOF,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,QAAUA,EAASA,IAAc,KAAWoB,EAAOF,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,QAAUA,EAASA,IAAc,6EAAuFoB,EAAOF,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,QAAUA,EAASA,IAAc,4DAAqEoB,EAAOb,EAAeN,EAAQ,QAAQW,KAAKU,EAAO,OAAO,CAAC/F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,qEAA8ER,EAAOb,EAAeN,EAAQ,QAAQW,KAAKU,EAAO,SAAS,CAAC/F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,yDAAkER,EAAOb,EAAeN,EAAQ,QAAQW,KAAKU,EAAO,cAAc,CAAC/F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,KAAWR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKU,EAAO,cAAc,CAAC/F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,uDAA+DR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKU,EAAO,gBAAgB,CAAC/F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,KAAWR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKU,EAAO,gBAAgB,CAAC/F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,yDAAiER,EAAOb,EAAeN,EAAQ,QAAQW,KAAKU,EAAO,YAAY,CAAC/F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,KAAWR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKU,EAAO,YAAY,CAAC/F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,0BAA2BO,SAAU,GACn3FvD,EAASiB,SAASjB,EAASpH,MAAQ,YAAc,CAACwJ,SAAW,CAAC,EAAE,YAAYC,KAAO,SAASlB,EAAUC,EAAOC,EAAQC,EAASC,GAAW,IAAIe,EAAOnB,EAAUwB,OAAQH,EAAOrB,EAAUsB,iBAAkBd,EAAiBR,EAAUQ,gBAAkB,SAASC,EAAQC,GAAuB,GAAIC,OAAO7B,UAAU8B,eAAeC,KAAKJ,EAAQC,GAA0B,OAAOD,EAAOC,IAAuD,MAAO,kDAA0DW,EAAOF,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,MAAQA,EAASA,IAAc,6EAAoFoB,EAAOF,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,4DAAuEoB,EAAOF,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,MAAQA,EAASA,IAAc,oBAA0BoB,EAAOF,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,SAAWA,EAASA,IAAc,oCAAqCmC,SAAU,GACjjCvD,EAASiB,SAASjB,EAASpH,MAAQ,WAAa,CAACwJ,SAAW,CAAC,EAAE,YAAYC,KAAO,SAASlB,EAAUC,EAAOC,EAAQC,EAASC,GAAW,IAAIe,EAAiB,MAAVlB,EAAiBA,EAAUD,EAAUoB,aAAe,GAAKC,EAAOrB,EAAUsB,iBAAkBd,EAAiBR,EAAUQ,gBAAkB,SAASC,EAAQC,GAAuB,GAAIC,OAAO7B,UAAU8B,eAAeC,KAAKJ,EAAQC,GAA0B,OAAOD,EAAOC,IAAuD,MAAO,2MAAwNW,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,gBAAgB,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,+LAA6MR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,eAAe,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,yFAAiGR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,uBAAuB,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,IAAIC,IAAM,CAACF,KAAO,GAAGC,OAAS,QAAa,+DAAsER,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,mBAAmB,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,IAAIC,IAAM,CAACF,KAAO,GAAGC,OAAS,QAAa,yKAAkLR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,SAAS,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,IAAIC,IAAM,CAACF,KAAO,GAAGC,OAAS,QAAa,8JAA4KR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,SAAS,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,IAAIC,IAAM,CAACF,KAAO,GAAGC,OAAS,SAAc,6OAAyPR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,KAAK,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,IAAIC,IAAM,CAACF,KAAO,GAAGC,OAAS,QAAa,yGAAkHR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,SAAS,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,GAAGC,OAAS,IAAIC,IAAM,CAACF,KAAO,GAAGC,OAAS,SAAc,2DAA4DO,SAAU,GACrsGvD,EAASiB,SAASjB,EAASpH,MAAQ,cAAgB,CAACwJ,SAAW,CAAC,EAAE,YAAYC,KAAO,SAASlB,EAAUC,EAAOC,EAAQC,EAASC,GAAW,IAAIe,EAAiB,MAAVlB,EAAiBA,EAAUD,EAAUoB,aAAe,GAAKC,EAAOrB,EAAUsB,iBAAkBd,EAAiBR,EAAUQ,gBAAkB,SAASC,EAAQC,GAAuB,GAAIC,OAAO7B,UAAU8B,eAAeC,KAAKJ,EAAQC,GAA0B,OAAOD,EAAOC,IAAuD,MAAO,gEAAuEW,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,aAAa,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,QAAa,oBAA0BR,EAAOrB,EAAUwB,OAAkB,MAAVvB,EAAiBO,EAAeP,EAAO,OAASA,EAASA,IAAc,yCAAkDoB,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,qBAAqB,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,IAAIC,IAAM,CAACF,KAAO,EAAEC,OAAS,SAAc,WAAiBR,EAAOb,EAAeN,EAAQ,QAAQW,KAAKM,EAAO,qBAAqB,CAAC3F,KAAO,OAAOiG,KAAO,GAAGrB,KAAOA,EAAKsB,IAAM,CAACC,MAAQ,CAACC,KAAO,EAAEC,OAAS,KAAKC,IAAM,CAACF,KAAO,EAAEC,OAAS,SAAc,yBAA0BO,SAAU,GAEzyC,MAAMhI,EAAsB,SAAUiI,GAClC,OAAOnI,mBAAmBmI,GAAKjH,MAAM,KAAKG,IAAI,SAAUqB,GACpD,OAAO0F,WAAW1F,MA6CpB2F,EAAoB,SAAUC,EAAKC,GACrCA,EAAG1E,cAAc,QAAQlB,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQkG,QAC5D0F,EAAG1E,cAAcyE,EAAI9K,WAAWgB,SAASmE,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QACzE0F,EAAG1E,cAAcyE,EAAI9K,WAAWS,SAAS0E,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QACzE0F,EAAG1E,cAAcyE,EAAI9K,WAAWU,WAAWyE,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QAC3E0F,EAAG1E,cAAcyE,EAAI9K,WAAWW,SAASwE,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQkG,QAC5E0F,EAAG1E,cAAcyE,EAAI9K,WAAWY,SAASuE,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQkG,QAC5E0F,EAAG1E,cAAcyE,EAAI9K,WAAWa,WAAWsE,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQkG,SAGlF,IAAI2F,EAAe,SAAUC,GACzB,OAAOA,EAAOC,WAAWC,QAAQ,wBAAyB,MAG1DC,EAAoB,SAAUN,EAAKxG,GACnC,IAAI+G,EAAO/G,GAAW,GACtB,MAAMgH,EAASR,EAAItG,WAAW6B,cAAcyE,EAAIhL,eAAiB,QAC3DyL,EAAQT,EAAItG,WAAW6B,cAAcyE,EAAI9K,WAAWuB,WAC1D,IACIiK,EAASC,EAAUC,EADnBC,EAAcb,EAAIc,iBAEtB,GAAID,EAAYvI,OAAQ,CACpBmI,EAAMjF,aAAa,MAAOqF,EAAYvI,OAAS,GAC/C,GAAI0H,EAAIjF,eAEJ,QAAwBmB,IAApBqE,EAAKQ,WACL,IAAK,IAAI3I,EAAI,EAAGC,EAAMwI,EAAYvI,OAAQF,EAAIC,EAAKD,IAC/C,GAAI4H,EAAIjF,eAAiB8F,EAAYzI,GAAI,CACrCqI,EAAMO,MAAQ5I,EACd,YAMZ,QAAwB8D,IAApBqE,EAAKQ,WAA0B,CAE/B,MAAME,EAAoBjB,EAAIjH,IAAImI,gBAClCT,EAAMO,MAAQH,EAAYM,OAAOC,GAAKA,EAAIH,GAAmB3I,OAGrEqI,EAAWU,SAASZ,EAAMO,OAC1B,IAAIM,EAAWC,KAAKC,MAA0C,IAApC,IAAIC,OAAOZ,EAAYF,KAAqB,IACtED,EAAUV,EAAI7H,gBAAgB,iBAAkB,CAC5C6I,MAAOM,EAASI,gBAAgB1B,EAAIjH,IAAMiH,EAAIjH,IAAIS,QAAQmI,OAAS5N,GAAG8G,IAAI8G,QAAQtB,QAAQ,IAAK,QAEnGO,EAA2B,KAAhBD,EAAW,IAAYE,EAAYvI,OAAS,GAAK,IAC5DmI,EAAMmB,UAAW,EACjB5B,EAAIjF,cAAgB8F,EAAYJ,EAAMO,WAErC,CACDL,EAAW,EACXD,EAAU,GACVD,EAAMO,MAAQ,EACdJ,EAAU,IACVZ,EAAIjF,cAAgB,EACpB0F,EAAMmB,UAAW,EAErB5B,EAAItG,WAAW6B,cAAcyE,EAAI9K,WAAWmB,iBAAiBgE,UAAUwH,OAAO9N,GAAGK,OAAOC,QAAQkG,SAAUkG,EAAMmB,UAChH5B,EAAItG,WAAW6B,cAAcyE,EAAI9K,WAAWc,WAAWqE,UAAUwH,OAAO9N,GAAGK,OAAOC,QAAQkG,SAAUkG,EAAMmB,UAE1GpB,EAAOsB,MAAMC,KAAOnB,EACpBJ,EAAOwB,UAAYtB,GAGvB,MAWMuB,EAAmB,SAAUjC,GAC/BA,EAAItG,WAAWQ,iBAAiB8F,EAAIhL,eAAiB,iCAAiCmF,QAAQ,SAAU+H,EAAIC,GACxG,GAAID,EAAGE,QAAS,CACZ,IAAIC,EAASrC,EAAIlF,eAAeqG,OAAO,SAAU/G,GAC7C,OAAOA,EAAIkI,UAAYJ,EAAGlB,QAC3B,GACH,GAAIqB,EAAQ,CACR,IAAIE,EAlBS,SAAUF,EAAQG,GAE3C,IADA,IAAInH,EAAS,KACJjD,EAAI,EAAGC,EAAMgK,EAAOI,iBAAiBnK,OAAQF,EAAIC,MACtDgD,EAASgH,EAAOI,iBAAiBrK,IACtBsK,KAAOF,GAFyCpK,KAM/D,OAAOiD,EAUesH,CAAqBN,EAAQrC,EAAIjF,eAC3C,GAAIwH,EAAK,CACL,MAAMK,EAAS,kBACTC,EAAQ,eACRC,EAAQ,YACRC,EAAQ,YACd,IAAI7J,EAAMmJ,EAAOnJ,IACjB,GAAIA,EAAIX,QAAQsK,GAAS,EAAG,CAExB,IAAIG,EAAQ9J,EAAIX,QAAQ,KACpByK,GAAS,IACT9J,EAAMA,EAAIC,OAAO,EAAG6J,IAExB,IAAK,IAAIC,EAAI,EAAGC,EAAOlD,EAAIrF,WAAWrC,OAAQ2K,EAAIC,EAAMD,IAAK,CACzD,IAAIE,EAAInD,EAAIrF,WAAWsI,GACvB,GAAIE,EAAEC,KAAOf,EAAOC,QAAS,CACzBpJ,EAAMA,EAAM,UAAYiK,EAAEE,WAAa,gCAAkCT,EACrE,sDAAwDO,EAAEG,OAC1D,eAAiBT,EAAQ,YAAcC,EAAQ,YAAcC,EACjE,QAIZ,KAAOb,GAAqB,UAAfA,EAAGqB,SACZrB,EAAKA,EAAGsB,cAEZ,GAAItB,EAAI,CACJA,EAAGJ,MAAM2B,eAAiB,OAC1BvB,EAAGJ,MAAM4B,mBAAqB,cAC9BxB,EAAGJ,MAAM6B,gBAAkB,OAASzK,EAC/BmH,QAAQuC,EAAQP,EAAOuB,eACvBvD,QAAQwC,EAAON,EAAIsB,KACnBxD,QAAQyC,EAAOP,EAAIuB,IACnBzD,QAAQ0C,EAAOR,EAAIwB,IAAM,WAQhDC,EAAa,SAAUhE,EAAKiE,GAQ9B,OANIA,EAAO,EACEjE,EAAI7H,gBAAgB,eAGpB6H,EAAI7H,gBAAgB,YAAa,CAAE+L,SAAUhE,EAAa+D,MAKrEE,EAAuB,SAAUnE,GACnC,IAAIoE,EAAO,GACXpE,EAAIqE,UAAY,EAChB,IAAK,IAAIjM,EAAI,EAAGkM,EAAKtE,EAAIlF,eAAexC,OAAQF,EAAIkM,EAAIlM,IAEpD,IADA,IAAIiK,EAASrC,EAAIlF,eAAe1C,GACvB6K,EAAI,EAAGsB,EAAKlC,EAAOI,iBAAiBnK,OAAQ2K,EAAIsB,EAAItB,IAAK,CAC9D,IAAIV,EAAMF,EAAOI,iBAAiBQ,GAClC,GAAIV,EAAIG,IAAM1C,EAAIjF,cACd,MAEJiF,EAAIqE,YAAc9B,EAAIiC,GAAKjC,EAAIwB,GAAK,IAAMxB,EAAIkC,GAAKlC,EAAIuB,GAAK,GAGpE,GAAI9D,EAAIqE,UAAW,CACfrE,EAAI0E,iBAAmBnD,KAAKoD,MAAM3E,EAAIqE,UAAYrE,EAAIxG,QAAQoB,gBAAkB,SAChFwJ,EAAOpE,EAAI7H,gBAAgB,SAAU,CAAE+L,SAAUhE,EAAaF,EAAIqE,aAAgB,KAAOL,EAAWhE,EAAKA,EAAI0E,kBAAoB,IAErI1E,EAAItG,WAAW6B,cAAcyE,EAAI9K,WAAWc,WAAWgM,UAAYoC,GAejEQ,EAAyB,SAAU5E,EAAK9G,GAC1C,IAAI2L,EAAU3L,EAAIX,QAAQ,KACtBsM,GAAW,IACX3L,EAAMA,EAAIC,OAAO,EAAG0L,IAExB,MAAMC,EAAM9E,EAAI+E,IAAI7K,iBAAiB8F,EAAI9K,WAAWM,UACpD,IAAK,IAAI4C,EAAI,EAAGC,EAAMyM,EAAIxM,OAAQF,EAAIC,EAAKD,IAAK,CAC5C,MAAM6H,EAAK6E,EAAI1M,GACT4M,EAAS/E,EAAG1E,cAAc,KAChC,GAAIyJ,GAAUA,EAAOC,aAAa,UAAY/L,EAC1C,OAAO+G,EAGf,OAAO,MAGX,IAAIiF,EAAmB,SAAUlF,EAAKjH,GAClC,IAAIsC,GAAS,EACb,GAAI2E,EAAInI,aAAc,CAClBmI,EAAInI,aAAaE,QAAQiI,EAAIxH,yBAA2B2M,mBAAmBpM,EAAIG,KAAMH,EAAIF,OAAS,IAAME,EAAIC,MAC5GqC,GAAS,EAEb,OAAOA,GAYX,MAaM+J,EAAY,SAAUpF,EAAK9G,GAC7B,MAAMH,EAAMiH,EAAIqF,cAAc,CAAEnM,IAAKA,IACrC,GAAIH,EAAK,CACL,GAzBmB,SAAUiH,EAAK9G,GACtC,IAAImC,GAAS,EACb,GAAI2E,EAAInI,aAAc,CAClBmI,EAAInI,aAAaG,WAAWgI,EAAIxH,yBAA2B2M,mBAAmBjM,IAC9EmC,GAAS,EAEb,OAAOA,EAmBCiK,CAAqBtF,EAAK9G,GAAM,CAChC,MAAM+G,EA/Dc,SAAUD,EAAKhH,GAC3C,MAAM8L,EAAM9E,EAAI+E,IAAI7K,iBAAiB8F,EAAI9K,WAAWM,UACpD,IAAK,IAAI4C,EAAI,EAAGC,EAAMyM,EAAIxM,OAAQF,EAAIC,EAAKD,IAAK,CAC5C,MAAM6H,EAAK6E,EAAI1M,GACT4M,EAAS/E,EAAG1E,cAAc,KAChC,GAAIyJ,GAAUA,EAAOhD,YAAchJ,EAC/B,OAAOiH,EAGf,OAAO,KAsDYsF,CAAwBvF,EAAKjH,EAAIC,MACxCiH,GACAA,EAAGuD,cAAcgC,YAAYvF,GAGrC,IAAIkC,EAAMnC,EAAInJ,WAAW0B,QAAQQ,GACjCiH,EAAInJ,WAAW4O,OAAOtD,EAAK,GAC3B,IAAKnC,EAAInJ,WAAWyB,OAAQ,CACxB0H,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWwB,QAAQkL,UAAW,EACxD5B,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWyB,WAAW+O,gBAAgB,UAGpE,OAAO3M,EAAIC,KAGf,OAAO,MAGXqD,EAASsJ,OAAS,SAAUC,GACxB,MAAMjR,EAAOC,KACb,OAAOD,EAAKkR,qBAAqB,IAAIC,QAAQ,SAAUC,EAASC,GAC5D,IAAIC,EAAe,CAAEpP,WAAYlC,EAAKkC,WAAYqP,OAAQvR,EAAKM,MAAQ,SAAWlB,GAAGoS,UACrFxR,EAAKyR,gBAAgBzR,EAAKM,MAAQ,UAAW,KAAM,SAAUoR,GACzD1R,EAAK+E,WAAWsI,UAAYqE,EAC5B1R,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWe,QAAQkG,iBAAiBpI,GAAGK,OAAO6I,MAAMqJ,MAAO,SAAUrO,GACpGA,EAAEsO,iBACF3R,KAAK4R,eAAiB,EACtB5R,KAAK6R,aAAe7R,KAAKoM,MAAM1I,OAC/B1D,KAAK8R,YAGVC,KAAK,WACJhS,EAAKiS,WAAWX,EAAc,WAC1BtR,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWO,OAAO0G,iBAAiBpI,GAAGK,OAAO6I,MAAMqJ,MAAO,WACzF3R,EAAKkS,iBACN,CAAEC,SAAS,IACdnS,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWe,QAAQkG,iBAAiB,QAAS,WAC5ExH,EAAKoS,sBAETpS,EAAKoQ,IAAIxJ,cAAc5G,EAAKO,WAAWQ,QAAQyG,iBAAiBpI,GAAGK,OAAO6I,MAAMqJ,MAAO,WACnF3R,EAAKqS,gBACN,CAAEF,SAAS,IACdnS,EAAKoQ,IAAIxJ,cAAc5G,EAAKK,eAAiB,oBAAoBmH,iBAAiBpI,GAAGK,OAAO6I,MAAMqJ,MAAO,WACrG3R,EAAKsS,iBACN,CAAEH,SAAS,IAEdnS,EAAKoQ,IAAIxJ,cAAc5G,EAAKK,eAAiB,kBAAkBmH,iBAAiBpI,GAAGK,OAAO6I,MAAMqJ,MAAO,WACnG3R,EAAKuS,sBACN,CAAEJ,SAAS,IAEd,MAAMK,EAAOxS,EAAKoQ,IAAIxJ,cAAc5G,EAAKO,WAAWK,MACpD4R,EAAKhL,iBAAiBpI,GAAGK,OAAO6I,MAAMqJ,MAAOvS,GAAGqT,YAAYC,mBAAmB1S,EAAKO,WAAWa,UAAW,SAAUkC,GAChHtD,EAAK2S,eAAerP,EAAEsP,OAAO/D,cAAcjI,cAAc,KAAKyG,aAC9D,CAAE8E,SAAS,IACfK,EAAKhL,iBAAiBpI,GAAGK,OAAO6I,MAAMqJ,MAAOvS,GAAGqT,YAAYC,mBAAmB1S,EAAKO,WAAWW,QAAS,SAAUoC,IA5RtG,SAAU+H,EAAKC,GACvCA,EAAG1E,cAAc,QAAQlB,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QACzD,MAAMiN,EAAUvH,EAAG1E,cAAcyE,EAAI9K,WAAWgB,SAChDsR,EAAQnN,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQkG,QAC3CiN,EAAQxG,MAAQf,EAAG1E,cAAc,UAAUyG,UAC3CwF,EAAQd,QACRzG,EAAG1E,cAAcyE,EAAI9K,WAAWS,SAAS0E,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQkG,QAC5E0F,EAAG1E,cAAcyE,EAAI9K,WAAWU,WAAWyE,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQkG,QAC9E0F,EAAG1E,cAAcyE,EAAI9K,WAAWW,SAASwE,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QACzE0F,EAAG1E,cAAcyE,EAAI9K,WAAWY,SAASuE,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QACzE0F,EAAG1E,cAAcyE,EAAI9K,WAAWa,WAAWsE,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QAmR3DkN,CAAoB9S,EAAMsD,EAAEsP,OAAO/D,iBACnC,CAAEsD,SAAS,IACfK,EAAKhL,iBAAiBpI,GAAGK,OAAO6I,MAAMqJ,MAAOvS,GAAGqT,YAAYC,mBAAmB1S,EAAKO,WAAWU,UAAW,SAAUqC,GAChH,MAAMgI,EAAKhI,EAAEsP,OAAO/D,cACpBvD,EAAG1E,cAAc5G,EAAKO,WAAWgB,SAAS8K,MAAQf,EAAG1E,cAAc,KAAKyG,UACxEjC,EAAkBpL,EAAMsL,KACxB,CAAE6G,SAAS,IACfK,EAAKhL,iBAAiBpI,GAAGK,OAAO6I,MAAMqJ,MAAOvS,GAAGqT,YAAYC,mBAAmB1S,EAAKO,WAAWS,QAAS,SAAUsC,GAC9G,MAAMgI,EAAKhI,EAAEsP,OAAO/D,cACpBzD,EAAkBpL,EAAMsL,GACxB,MAAM+E,EAAS/E,EAAG1E,cAAc,KAC1BmM,EAAUzH,EAAG1E,cAAc5G,EAAKO,WAAWgB,SAAS8K,MACpDjI,EAAMpE,EAAK0Q,cAAc,CAAEnM,IAAK8L,EAAOC,aAAa,UAC1D,GAAIlM,EAAK,CACLA,EAAIC,KAAO0O,EACX1C,EAAOhD,UAAY0F,EACnB1C,EAAOxJ,aAAa,QAASkM,GAC7BxC,EAAiBvQ,EAAMoE,MAE3B,CAAE+N,SAAS,IACfK,EAAKhL,iBAAiBpI,GAAGK,OAAO6I,MAAMqJ,MAAOvS,GAAGqT,YAAYC,mBAAmB1S,EAAKO,WAAWY,QAAS,SAAUmC,GAC9G,MAAM0P,EAAM1P,EAAEsP,OACd,IAAIK,GAAcD,EAAItN,UAAUwN,SAAS9T,GAAGK,OAAOC,QAAQyT,QAC3D,MAAMC,EAAUpT,EAAKoQ,IAAIxJ,cAAc5G,EAAKO,WAAWY,SACvDiS,EAAQ1N,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQyT,QAC3CC,EAAQvE,cAAcnJ,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQyT,QACzD,MAAME,EAAUL,EAAInE,cAAcjI,cAAc,KAAKyG,UACrD,GAAIgG,EAAS,CACT,IAAIjP,EAAMpE,EAAK0Q,cAAc,CAAErM,KAAMgP,IACrC,GAAIjP,EAAK,CACL,IAAIF,EAASjB,EAAoBmB,EAAIF,QACrClE,EAAKsT,MAAMC,gBACX,GAAIN,EAAY,CACZjT,EAAKsT,MAAME,WACP,CACI,CACI,CAACtP,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,IACnB,CAACA,EAAO,GAAIA,EAAO,MAGzB,CACEuP,YAAY,IACbzB,KAAK,WACJhS,EAAKsT,MAAMlP,IAAIsP,eAAe1T,EAAKsT,MAAMK,YAEjDX,EAAItN,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQyT,QACpCH,EAAInE,cAAcnJ,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQyT,QAClDH,EAAInM,aAAa,QAAS7G,EAAKwD,gBAAgB,yBAI3D,CAAE2O,SAAS,IAwCf,MAAMyB,EAAc5T,EAAKoQ,IAAIxJ,cAAc5G,EAAKO,WAAWwB,QACrD8R,EAAiB,YAvCT,SAAUC,GACpBA,EAAaA,EAAWC,cAExB,MAAM5D,EAAMnQ,EAAKoQ,IAAI7K,iBAAiBvF,EAAKO,WAAWM,UACtDsP,EAAI3K,QAAQ,SAAU8F,GAClBA,EAAG6B,MAAM6G,QAAU,SAEvB,MAAMC,EAAS,GACf9D,EAAI3K,QAAQ,SAAU8F,GACdA,EAAG4I,QAAQ,sBAAwB9U,GAAGK,OAAOC,QAAQyT,SACrDc,EAAOxP,KAAK6G,KAIpB,GAA0B,IAAtBwI,EAAWnQ,OAAc,CACzBsQ,EAAOzO,QAAQ,SAAU8F,GACrBA,EAAG6B,MAAMgH,eAAe,aAE5BnU,EAAKoQ,IAAIxJ,cAAc5G,EAAKK,eAAiB,oBAAoB8M,MAAMiH,WAAa,cACjF,CACHpU,EAAKoQ,IAAIxJ,cAAc5G,EAAKK,eAAiB,oBAAoB8M,MAAMiH,WAAa,SACpF,IAAI3H,EAAI,IAAI4H,OAAOP,EAAY,KAC/BG,EAAOzO,QAAQ,SAAU8F,GACrBA,EAAG6B,MAAM6G,QAAUvH,EAAE6H,KAAKhJ,EAAG1E,cAAc,KAAK2N,aAAe,GAAK,SAGnEN,EAAOO,KAAK,SAAUlJ,GACvB,OAAQA,EAAGmJ,UAEXtE,EAAI3K,QAAQ,SAAU8F,GACdA,EAAG4I,QAAQ,kCACX5I,EAAG6B,MAAMgH,eAAe,cASxCO,CAAQzU,KAAKoM,MAAM0H,cAAcY,SAErCf,EAAYpM,iBAAiB,QAASqM,GACtCD,EAAYpM,iBAAiB,SAAUqM,GAEvC7T,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWoB,QAAQ6F,iBAAiB,SAAUpI,GAAGqT,YAAYC,mBAAmB,uBAAwB,SAAUpP,GACjJ,MAAMsR,EAAWtR,EAAEsP,OACnB,GAAIgC,EAASnH,QACTzN,EAAKgG,WAAWvB,KAAKzE,EAAKoE,IAAIyQ,SAASD,EAASvI,aAGhD,IAAK,IAAI5I,EAAI,EAAGkM,EAAK3P,EAAKgG,WAAWrC,OAAQF,EAAIkM,EAAIlM,IAAK,CAEtD,GADWzD,EAAKgG,WAAWvC,GACpBgL,KAAOmG,EAASvI,MAAO,CAC1BrM,EAAKgG,WAAW8K,OAAOrN,EAAG,GAC1B,OAIZzD,EAAK8U,uBACLnJ,EAAkB3L,GAClBsN,EAAiBtN,GACjBA,EAAKoS,oBACL5C,EAAqBxP,MAGzB,MAAM8L,EAAQ9L,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWuB,WACtDiT,EAAgB,SAAUzR,GAC5BqI,EAAkB3L,EAAM,CACpBoM,WAAY9I,EAAEsP,OAAOvG,QAEzBiB,EAAiBtN,GACjBwP,EAAqBxP,IAEzB8L,EAAMtE,iBAAiB,QAASuN,GAChCjJ,EAAMtE,iBAAiB,SAAUuN,GAEjC,MAAMzJ,EAAK2E,EAAuBjQ,EAAMgV,SAASC,MAC7C3J,GACAA,EAAG5F,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQyT,QAGnC/T,GAAGgD,KAAK8S,WAAWjE,IACnBA,MAGHe,KAAK,WACFZ,MAEH+D,MAAM,SAAUC,GACb/D,EAAO+D,aAAeC,MAAQD,EAAMC,MAAMD,QAKtDvS,OAAO2E,iBAAiB,eAAgB,SAAUlE,GAC9C,GAAItD,EAAK+F,cAAe,CACpB,IAAIuP,EAAMtV,EAAKwD,gBAAgB,6BAC/BF,EAAEiS,YAAcD,EAChB,OAAOA,KAEZ,OAIX5N,EAAS8N,SAAW,SAAUpR,GAC1B,IAAIpE,EAAOC,KAEX,MAAMyG,EAAStH,GAAGC,QAAQC,cAAcqI,UAAU6N,SAAS9L,KAAK1J,EAAMoE,GAEtEpE,EAAKyV,mBAAmBzD,KACpB,WACIhL,UAAU0O,cAAcC,MAAM3D,KAAK,WAC/BhL,UAAU0O,cAAclO,iBAAiB,UAAW,SAAUc,GAC1D,OAAQA,EAAMW,KAAKX,OACf,IAAK,WACDtI,EAAK4V,QAAQxW,GAAGK,OAAO6I,MAAMG,iBAAkB,CAAElE,IAAK+D,EAAMW,KAAK5E,KAAMwR,OAAQvN,EAAMW,KAAK6M,MAAOC,MAAOzN,EAAMW,KAAK8M,QACnH,MACJ,IAAK,SACD/V,EAAK4V,QAAQxW,GAAGK,OAAO6I,MAAMC,iBAAkB,CAAEhE,IAAK+D,EAAMW,KAAK5E,OACjE,MACJ,IAAK,UACDrE,EAAK4V,QAAQxW,GAAGK,OAAO6I,MAAME,eAAgB,CAAEjE,IAAK+D,EAAMW,KAAK5E,OAC/D,MACJ,IAAK,QACGiE,EAAMW,KAAK+M,SAAWhW,EAAKkI,SAASC,QACpC/I,GAAGmE,MAAMvD,EAAKwD,gBAAgB,4BAA6B,CAAEe,IAAK+D,EAAMW,KAAK1E,YAS7FyC,UAAUiP,QAlwBf,IAAI9E,QAAQ,SAAUC,EAASC,GAClC,MAAM6E,EAAe9Q,SAAS+Q,gBAAgB7F,aAAa,aAAe,oBAC1ElR,GAAGgX,KAAK,CACJ7R,IAAK2R,EACLG,OAAQ,MACRC,aAAc,SACftE,KAAK,SAAUuE,GACd,IAAItN,EAAOsN,EAAStN,KACpB7J,GAAGoX,QACE3T,OAAO4T,QACR,CAACrX,GAAGI,YAAcJ,GAAGK,OAAO8E,IAAImS,MAChC,WACI,IAAIpM,EAAOmM,QAAQxN,GACf0N,EAAS1N,EAAKrF,QAAQ,YACtB+S,GAAU,IACV1N,EAAOA,EAAKzE,OAAO,EAAGmS,KAE1BA,EAAS1N,EAAKrF,QAAQ,eACR,IACVqF,EAAOA,EAAKzE,OAAO,EAAGmS,KAE1BA,EAAS1N,EAAKrF,QAAQ,eACR,IACVqF,EAAOA,EAAKzE,OAAO,EAAGmS,IAE1B,IAAIC,EAAQ3N,EAAKhF,MAAM,UAAUuI,OAAO,SAAU/G,GAC9C,OAAOA,EAAI9B,OAAS,GAA0B,IAArB8B,EAAI7B,QAAQ,MAAsB,WAAR6B,IAGvDmR,EAAMzS,QACNiN,EAAQ,CACJ9G,KAAMA,EACNuM,KAAMD,QAInBzB,MAAM,SAAU5R,GACf8N,EAAO9N,OA+tBeyO,KAAK,SAAU8E,GAC7B,MAAMC,EAAiB/W,EAAK6D,yBAA2B7D,EAAK8D,gBAAkB,QAC9E,IAAIwG,EACAtK,EAAKkD,eACLoH,EAAOtK,EAAKkD,aAAac,QAAQ+S,IAErC,GAAIzM,IAASwM,EAAIxM,KAAM,CACnBtK,EAAKgX,aAAaF,EAAID,MACtB7W,EAAKiX,IAAI7X,GAAGK,OAAO6I,MAAMC,iBAAkB,WACvC,MAAM2O,GAAa5M,EACftK,EAAKkD,cACLlD,EAAKkD,aAAaE,QAAQ2T,EAAgBD,EAAIxM,MAE7C4M,GACD9X,GAAG+X,QAAQnX,EAAKwD,gBAAgB,0BAA2B,WACvDwR,SAASoC,iBAQrC,SAAU7T,GACNvD,EAAKqX,gBAAgBrF,KAAK,WACtB,MAAMnJ,EAAY7I,EAAKoQ,IAAIxJ,kBAAkB5G,EAAKM,aAC5CgX,EAAUlS,SAASmS,cAAc,OACvCD,EAAQ5R,UAAUC,IAAI,WAAY,iBAClC,MAAM6R,EAASpS,SAASmS,cAAc,KAChC9H,EAAOrK,SAASmS,cAAc,UACpC9H,EAAKpC,UAAYrN,EAAKwD,gBAAgB,oBACtCgU,EAAOlS,YAAYmK,GACnB,MAAMgI,EAASrS,SAASmS,cAAc,KACtCE,EAAOpK,UAAY9J,EAAMmU,QACzBJ,EAAQhS,YAAYkS,GACpBF,EAAQhS,YAAYmS,GACpB5O,EAAUjC,cAAc5G,EAAKO,WAAWQ,QAAQ2E,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QAChFiD,EAAUvD,YAAYgS,OAGhCnC,MAAM,IAAMwC,QAAQC,IAAI,uCAE1B,GAAI5X,EAAKyC,aAAc,CACnB2B,EAAIgM,IAAI1K,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQI,SAGxCE,EAAK2G,mBAAqBvH,GAAGgD,KAAK4C,OAAOhF,EAAK6E,QAAQgT,mBACjD7X,EAAK6E,QAAQgT,mBACdzT,EAAIgM,IAAI9K,YAAYtF,EAAK2G,oBAE7B3G,EAAKyR,gBAAgBzR,EAAKM,MAAQ,aAAc,CAAEiE,IAAKvE,EAAK8G,mBAAqB,SAAU4K,GACvF1R,EAAK2G,mBAAmB0G,UAAYqE,EACpC,IAAK1K,UAAUiP,OAAQ,CACnB,MAAM6B,EAAW9X,EAAK2G,mBAAmBC,cAAc5G,EAAKO,WAAWkB,UACvEqW,EAASpS,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQC,oBACzCmY,EAASpS,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQG,kBAAmBT,GAAGK,OAAOC,QAAQE,iBAErFI,EAAK2G,mBAAmBC,cAAc5G,EAAKO,WAAWiB,MAAMgG,iBAAiBpI,GAAGK,OAAO6I,MAAMqJ,MAAO,SAAUrO,GAC1GlE,GAAG+X,QAAQnX,EAAKwD,gBAAgB,0BAC5B,KACA,WACIF,EAAEsO,uBAMtB,MAAMmG,EAAS/X,EAAKwR,SACd7D,EAAU3N,EAAKwR,SACrBxR,EAAKgY,aAAe5T,EAAI6T,SAAS,CAC7BxJ,GAAId,EACJrG,KAAMlI,GAAGK,OAAOyY,UAAUC,OAC1BC,SAAS,EACTC,MAAOrY,EACPsY,OAAQ,CACJ7N,KAAMrG,EAAIS,QAAQyT,OAAO7N,QAGjCzK,EAAKsT,MAAQ,KACbnC,QAAQoH,IAAI,CACRvY,EAAKgY,aACLhY,EAAKqX,gBACLjT,EAAIoU,WAAW,OAAQ,CACnB/J,GAAIsJ,EACJ3H,IAAKpQ,EAAKoQ,IAAIxJ,cAAc5G,EAAKO,WAAWC,MAC5CiY,KAAMrZ,GAAGK,OAAOiZ,KAAKC,UACrBC,YAAY,MAEjB5G,KAAK,SAAU6G,GACd,MAAMvF,EAAQtT,EAAKsT,MAAQuF,EAAQ,GAC7BC,EAAU9Y,EAAK8Y,QAAUD,EAAQ,GACvCC,EAAQC,SAASzF,GACjBwF,EACKE,GAAG5Z,GAAGK,OAAO6I,MAAM2Q,UAAW,SAAU3V,GACrCtD,EAAKoE,IAAI8U,MAAMlZ,EAAKwD,gBAAgB,qCAAsC,CAAE8D,KAAMlI,GAAGK,OAAO0Z,QAAQC,SAEvGJ,GAAG5Z,GAAGK,OAAO6I,MAAM+Q,QAAS,SAAU/V,GACnC,IAAIgW,EAAShW,EAAEiW,QAAQC,SAAS,GAC5BC,EAASH,EAAO,GAChBI,EAAOJ,EAAO,GACdK,EAAO/M,KAAKgN,IAAIH,EAAO,GAAIC,EAAK,IAChCG,EAAOjN,KAAKkN,IAAIL,EAAO,GAAIC,EAAK,IAChCK,EAAOnN,KAAKgN,IAAIH,EAAO,GAAIC,EAAK,IAChCM,EAAOpN,KAAKkN,IAAIL,EAAO,GAAIC,EAAK,IACpC1Z,EAAKia,UAAU,CAACN,EAAMI,EAAMF,EAAMG,IAClC,MAAME,EAAala,EAAK+E,WAAWQ,iBAAiB,wBACpD2U,EAAW1U,QAAQ,SAAUoP,GAEzB,MAAMtB,EAAQtT,EAAKoE,IAAIyQ,SAASD,EAASvI,OAEzC,IADA,IAAIf,EAAKsJ,EACFtJ,GAAqB,OAAfA,EAAGsD,SACZtD,EAAKA,EAAGuD,cAEZ,GAAIyE,EAAMxN,KAAKqU,wBAAwB/V,EAAIgW,KAAKC,SAAS/G,EAAMgH,WAAY,CACvE,MAAM1M,EAAM5N,EAAK8F,KAAKyU,kBAAkB,CACpCrW,OAAQlE,EAAKkE,OACbsW,OAAQ,CAAClH,KACV,GAAGxF,iBAENxC,EAAG5F,UAAUwH,OAAO9N,GAAGK,OAAOC,QAAQkG,QAASgI,EAAIjK,aAGnD2H,EAAG5F,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,UAG3C,MAAM6U,EAAYza,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWqB,WAAa,SAAWxC,GAAGK,OAAOC,QAAQkG,OAAS,KACnH5F,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWsB,YAAYwL,UAAYrN,EAAKwD,gBAAgBiX,EAAY,mBAAqB,6BAE5HnN,EAAiBtN,GACjBwP,EAAqBxP,GACrBZ,GAAGgD,KAAKsY,UAAU1a,EAAK+E,WAAW6B,cAAc5G,EAAKK,eAAiB,WAAY,CAC9Esa,aAAc,WACVC,WAAW,WACPV,EAAW1U,QAAQ,SAAU+H,GACzBA,EAAGN,UAAW,KAEnB,KACH,IAAI4N,EACJ,GAAIC,KAAKnT,UAAUoF,eAAgB,CAC/B,IAAIgO,EAAM,GACVA,EAAIC,KAAOD,EAAIE,MAAQF,EAAIG,IAAMH,EAAII,KAAOJ,EAAIK,OAASL,EAAIM,OAAS,UACtER,GAAO,IAAIC,MAAO/N,eAAe/M,EAAKoE,IAAIS,QAAQmI,OAAOtB,QAAQ,IAAK,KAAMqP,QAG5EF,GAAO,IAAIC,MAAOrP,WAEtBzL,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWe,QAAQ+K,MAAQwO,EAC9D7a,EAAKoS,qBAETkJ,cAAe,WACXpB,EAAW1U,QAAQ,SAAU+H,GACzBA,EAAGN,UAAW,IAElBjN,EAAK8Y,QAAQxF,MAAMC,qBAKnCnP,EAAI4U,GAAG5Z,GAAGK,OAAO6I,MAAMiT,kBAAmB,SAAUjY,GAC5CwV,IAAYxV,EAAEjE,SACVW,EAAKwb,SAAWxb,EAAK6H,QAAQ4T,SAC7Bzb,EAAKsS,oBAOrB,IAAIoJ,EAAsB,SAAUpI,GAChC,IAAI5M,GAAS,EACb,MAAMiV,EAAS3b,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWoB,QACvDia,EAAe,WACjB,QAASD,EAAO/U,cAAc,sBAAwB0M,EAAM7E,GAAK,OAErE,IAAIoN,EAAevI,EAAMhM,OAASlI,GAAGK,OAAOyY,UAAU4D,OAASxI,EAAMyI,cACjE3c,GAAGgD,KAAK4Z,gBAAkB5c,GAAGgD,KAAK6Z,cAClCJ,EAAeA,GAAgBzc,GAAGgD,KAAK8Z,aAAa5I,EAAM/O,MAE9D,GAAIsX,IAAiBD,IAAgB,CACjClV,GAAS,EACT1G,EAAKyR,gBAAgBzR,EAAKM,MAAQ,WAAYgT,EAAO,SAAU5B,GAC3D,IAAKkK,IAAgB,CACjB,MAAMO,EAAS,IAAIC,UACnBT,EAAOrW,YAAY6W,EAAOE,gBAAgB3K,EAAM,aAAarM,KAAKiX,eAI9E,OAAO5V,GAGX,MAAMuR,EAAW,SAAU3E,GACvB,GAAIA,EAAMiJ,QAAUvc,EAAKyC,aAAc,CAEnC,MAAMyJ,EAAcoH,EAAMnH,iBAC1B,GAAID,EAAa,CACb,MAAMsQ,EAAoBtQ,EAAYM,OAAOC,GAAKA,GAAKzM,EAAK0C,qBAAqBqL,KAC7EyO,EAAkB7Y,QAClB2P,EAAMmJ,eAAeD,IAKjCxc,EAAKqX,gBAAgBrF,KAAK,WACtB0J,EAAoBpI,MAI5BlP,EACK4U,GAAG5Z,GAAGK,OAAO6I,MAAMoU,SAAU,SAAUpZ,GACpC2U,EAAS3U,EAAEgQ,SAEd0F,GAAG5Z,GAAGK,OAAO6I,MAAMqU,YAAa,SAAUrZ,GAEvCtD,EAAKqX,gBAAgBrF,KAAK,WACtB,MAAMsB,EAAQhQ,EAAEgQ,MAChB,GAAIA,EAAMhM,OAASlI,GAAGK,OAAOyY,UAAU4D,KAAM,CACzC,MAAMxQ,EAAKtL,EAAK+E,WACX6B,cAAc5G,EAAKO,WAAWoB,QAC9BiF,cAAc,sBAAwB0M,EAAM7E,GAAK,MACtDnD,EAAGuD,cAAcgC,YAAYvF,QAIxC0N,GAAG5Z,GAAGK,OAAO6I,MAAMsU,iBAAkB,SAAUtZ,GAC5Cc,EAAI4B,WAAWR,QAAQgJ,GAAKyJ,EAASzJ,MAG7CpK,EAAIuR,MAAM,WACN,GAAI3V,EAAKyC,aAAc,CAEnB,IACIgB,EAAGC,EADHmZ,EAAU,GAEd,IAAKpZ,EAAI,EAAGC,EAAM1D,EAAKqI,gBAAgB1E,OAAQF,EAAIC,EAAKD,IAAK,CACzD,IAAIqZ,EAAS9c,EAAKqI,gBAAgB5E,GAClCqZ,EAASA,EAAOtY,OAAO,EAAG,GAAGuY,cAAgBD,EAAOtY,OAAO,GAC3DqY,EAAUA,EAAQG,OAAO5Y,EAAI6Y,mBAAmB,cAAgBH,IAGpE,IAAKrZ,EAAI,EAAGC,EAAMU,EAAI8Y,SAASvZ,OAAQF,EAAIC,EAAKD,IAAK,CACjD,IAAI4H,EAAMjH,EAAI8Y,SAASzZ,GACnBoZ,EAAQjZ,QAAQyH,GAAO,GACvBA,EAAI8R,UAIZ/X,SAASG,iBAAiBvF,EAAKO,WAAW0B,eAAeuD,QAAQ,SAAUC,GACvEA,EAAIC,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,aAKhDxB,EAAIyR,OAAO,WAEP7V,EAAKgY,aAAahG,KAAK,SAAUsB,GAC7BlP,EAAIgZ,cAAc9J,KAGtBtT,EAAKqX,gBAAgBrF,KAAK,WACtBhS,EAAKoQ,IAAIxJ,cAAc5G,EAAKO,WAAWQ,QAAQkM,UAAW,EAC1D7I,EAAI4B,WAAWR,QAAQkW,KAG3B,GAAI1b,EAAKyC,aAAc,CACnB,MAAM4a,EAASrd,EAAK0C,qBACd4a,EAAc,SAAUhK,EAAOiK,GAEjC,OAD6C,IAA5BjK,EAAM/O,IAAIX,QAAQ,MAAcoR,SAASwI,SAAWlK,EAAM/O,IAAM+O,EAAM/O,OAClE8Y,EAAO9Y,IAAIgZ,EAAYE,SAAWnK,EAAM5E,aAAe6O,EAAY9O,IAAM6E,EAAMgH,YAAc+C,EAAOK,IAAIH,EAAYI,SAGvIC,EAAgBxZ,EAAIS,QAAQgZ,oBAC7BrR,OAAQsR,GAAQA,EAAIxW,OAASlI,GAAGK,OAAOyY,UAAU4D,MACjDtP,OAAQsR,GACET,EAAO7C,OAAOhG,KAAMhG,GAAM8O,EAAYQ,EAAKtP,KAErDhC,OAAQsR,IACG1Z,EAAI4B,WAAWwO,KAAMhG,GAAMA,EAAEC,KAAOqP,EAAIrP,KAExD0C,QAAQoH,IAAIqF,EAAcxZ,IAAKkP,GACpBlP,EAAI6T,SAAS7Y,GAAGgD,KAAK0C,OAAO,GAAIwO,EAAO,CAAEiJ,QAAQ,OACxDwB,QAAQ,WAER,MAAMC,EAAe,GACrB,IAAK,IAAIva,EAAI,EAAGkM,EAAK0N,EAAO7C,OAAO7W,OAAQF,EAAIkM,EAAIlM,IAC/C,IAAK,IAAI6K,EAAI,EAAGsB,EAAKxL,EAAI4B,WAAWrC,OAAQ2K,EAAIsB,EAAItB,IAAK,CACrD,MAAM2P,EAAY7Z,EAAI4B,WAAWsI,GACjC,GAAI2P,GAAaA,EAAU3W,OAASlI,GAAGK,OAAOyY,UAAU4D,MAAQwB,EAAYW,EAAWZ,EAAO7C,OAAO/W,IAAK,CACtGua,EAAavZ,KAAKwZ,GAClB,OAIRD,EAAara,QACbS,EAAI8Z,aAAaF,EAAa,GAAI,WAE9B,IAAK,IAAIva,EAAIW,EAAI4B,WAAWrC,OAAS,EAAGF,GAAK,EAAGA,IAAK,CACjD,MAAMwa,EAAY7Z,EAAI4B,WAAWvC,GAC7Bwa,GAAaA,EAAU3W,OAASlI,GAAGK,OAAOyY,UAAUC,SAAW6F,EAAa3D,SAAS4D,IACrF7Z,EAAI+Z,YAAYF,GAIxB7Z,EAAI6V,UAAUja,EAAKgD,iBAAkB,CAAEob,SAAS,WAOpEpe,EACKgZ,GAAG5Z,GAAGK,OAAO6I,MAAMC,iBAAkB,SAAUjF,GAC5CtD,EAAK+F,eAAgB,EACrB,MAIMxB,EAJa,SAAUA,GACzB,MAAM2L,EAAU3L,EAAIX,QAAQ,KAC5B,OAAQsM,GAAW,EAAK3L,EAAIC,OAAO,EAAG0L,GAAW3L,EAEzC8Z,CAAW/a,EAAEiB,KACnB+G,EAAK2E,EAAuBjQ,EAAMuE,GACxC,GAAI+G,IAAOtL,EAAKse,qBAAsB,CAElChT,EAAG5F,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQ6e,UACtCnf,GAAGof,MAAMxe,EAAKwD,gBAAgB,yBAG9B,GAAIxD,EAAKqG,YAAc9B,IAAQvE,EAAKqG,WAAW9B,IAAK,EA3kBrD,SAAU8G,GACrB,MAAMjH,EAAMiH,EAAIhF,WAChB,GAAIkK,EAAiBlF,EAAKjH,GAAM,CAC5BiH,EAAIoG,gBAAgBpG,EAAI/K,MAAQ,YAAa,CAAE+D,KAAMD,EAAIC,KAAME,IAAKH,EAAIG,KAAO,SAAUmN,GACrF,MAAMyK,EAAS,IAAIC,UACnB/Q,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWK,MAAM0E,YAAY6W,EAAOE,gBAAgB3K,EAAM,aAAarM,KAAKiX,YACtGjR,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWyB,WAAW6E,aAAa,SAAU,UACvEwE,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWwB,QAAQkL,UAAW,IAE5D5B,EAAInJ,WAAWuC,KAAKL,IAmkBRqa,CAAOze,GACPoE,EAAI8U,MAAMlZ,EAAKwD,gBAAgB,gBAAiB,CAAE6P,QAASrT,EAAKqG,WAAWhC,QAGnFrE,EAAKqG,WAAa,KAClBrG,EAAKsS,kBAER0G,GAAG5Z,GAAGK,OAAO6I,MAAME,eAAgB,SAAUlF,GAC1CtD,EAAK+F,eAAgB,EACrB,IAAIsN,EAAU5C,EAAUzQ,EAAMsD,EAAEiB,MAASvE,EAAKqG,YAAcrG,EAAKqG,WAAWhC,KAC5ErE,EAAKqG,WAAa,KACdgN,GACAjP,EAAI8U,MAAMlZ,EAAKwD,gBAAgB,aAAc,CAAE6P,QAASA,KAE5DrT,EAAKsS,kBAER0G,GAAG5Z,GAAGK,OAAO6I,MAAMG,iBAAkB,SAAUnF,GAC5C,IAAIyS,EAAQzS,EAAEyS,OACTA,GAAS/V,EAAKmG,iBACf4P,EAAQ/V,EAAKmG,eAAe,GAAGuJ,WAEnC,IAAImG,EAASvS,EAAEuS,OACf,GAAIA,EACA7V,EAAKsG,aAAeuP,MAEnB,CACD7V,EAAKsG,cAAgB,EACrBuP,EAAS7V,EAAKsG,aAElBtG,EAAK0e,qBAAqB7I,EAAQE,KAErCiD,GAAG5Z,GAAGK,OAAO6I,MAAMI,cAAe,SAAUpF,GACzCtD,EAAK+F,eAAgB,EACrB/F,EAAKsS,gBACL,IAAIgD,EAAMtV,EAAKwD,gBAAgB,wBAC3Bmb,GAAc,EAClB,OAAQrb,EAAEmU,QACN,IAAK,QACDnC,GAAO,KAAOtV,EAAKwD,gBAAgB,oCACnC,MACJ,IAAK,WACD8R,GAAO,KAAOtV,EAAKwD,gBAAgB,uCACnC,MACJ,IAAK,WACe,OAAZF,EAAEsb,QACFnO,EAAUzQ,EAAMsD,EAAEiB,KAEtBoa,GAAc,EACd,MACJ,IA5nCK,iBA6nCDrJ,GAAO,KAAOtV,EAAKwD,gBAAgB,4CAK3C,GAAImb,EACA,GAAIvf,GAAGgD,KAAKyc,WAAY,CACpBzf,GAAGmE,MAAM+R,GACTlW,GAAGof,MAAMxe,EAAKwD,gBAAgB,yCAG9BpE,GAAGof,MAAMlJ,GAGjBtV,EAAKqG,WAAa,OAG1B,OAAOK,GAGXgB,EAASuS,UAAY,SAAU/V,GAE3B,GAAI4a,MAAMC,QAAQ7a,IAAWA,EAAOP,QAAU,EAAG,CADtC1D,KAEFiE,OAASA,EAFPjE,KAGF6U,yBAIbpN,EAAS0K,kBAAoB,WACZnS,KACR8E,WAAW6B,cADH3G,KACsBM,WAAWO,OAAOmM,UADxChN,KAEHiE,QACiE,IAH9DjE,KAGJ8E,WAAW6B,cAHP3G,KAG0BM,WAAWe,QAAQ+K,MAAM1I,QAHnD1D,KAIJ8E,WAAW6B,cAJP3G,KAI0BM,WAAWuB,WAAWmL,UAGjEvF,EAAS4K,cAAgB,WACrB,MAAMtS,EAAOC,KACbD,EAAKwb,OAASxb,EAAK6H,QAAQC,MAC3B9H,EAAK0e,qBAAqB,EAAG,GAC7B1e,EAAKoQ,IAAIxJ,cAAc5G,EAAKO,WAAWE,SAASiF,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QAChF5F,EAAKoQ,IAAIxJ,cAAc5G,EAAKO,WAAWG,UAAUgF,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QACjF5F,EAAKoQ,IAAIxJ,cAAc5G,EAAKO,WAAWI,KAAK+E,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQkG,QAC/E5F,EAAKoQ,IAAI7K,iBAAiBvF,EAAKO,WAAWM,UAAU2E,QAAQ,SAAU8F,GAClEA,EAAG5F,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQ6e,YAE1Cve,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWO,OAAOmM,UAAW,EAChEjN,EAAKoQ,IAAIxJ,cAAc5G,EAAKO,WAAWQ,QAAQkM,UAAW,EAC1DjN,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWc,WAAWgM,UAAY,GACrErN,EAAKkE,OAAS,KACdlE,EAAKsG,aAAe,EAChBtG,EAAK8Y,SACL9Y,EAAK8Y,QAAQkG,UAIrBtX,EAAS2K,aAAe,WACPpS,KACRub,OADQvb,KACM4H,QAAQ4T,QADdxb,KAERye,qBAAqB,EAAG,GAFhBze,KAGRmQ,IAAIxJ,cAHI3G,KAGeM,WAAWI,KAAK+E,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QAH/D3F,KAIRmQ,IAAIxJ,cAJI3G,KAIeM,WAAWG,UAAUgF,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QAJpE3F,KAKRmQ,IAAIxJ,cALI3G,KAKeM,WAAWE,SAASiF,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQkG,QALtE3F,KAMRmE,IAAI8U,MANIjZ,KAMOuD,gBAAgB,kCAAmC,CAAE8D,KAAMlI,GAAGK,OAAO0Z,QAAQC,OANpFnZ,KAOR8E,WAAW6B,cAPH3G,KAOsBM,WAAWO,OAAOmM,UAAW,EAPnDhN,KAQRmQ,IAAIxJ,cARI3G,KAQeM,WAAWQ,QAAQkM,UAAW,EAR7ChN,KASR8E,WAAW6B,cATH3G,KASsBM,WAAWe,QAAQ+K,MAAQ,GATjDpM,KAUR6Y,QAAQmG,YAGjBvX,EAASwK,cAAgB,WACrB,MAAMlS,EAAOC,KACP4E,EAAU,CACZwO,QAASrT,EAAK+E,WAAW6B,cAAc5G,EAAKO,WAAWe,QAAQ+K,OAEnE,GAAIrM,EAAK0Q,cAAc,CAAErM,KAAMQ,EAAQwO,UACnCjU,GAAGof,MAAMxe,EAAKwD,gBAAgB,gCAAiCqB,QAE9D,CACD,IAAIqa,EAAe,WACflf,EAAKoQ,IAAIxJ,cAAc5G,EAAKK,eAAiB,SAASgN,UAAYxI,EAAQwO,QAC1ErT,EAAKoE,IAAI8U,MAAMlZ,EAAKwD,gBAAgB,iBAAkB,CAAE6P,QAASxO,EAAQwO,YAh8BzD,SAAUhI,GAClCA,EAAImQ,OAASnQ,EAAIxD,QAAQG,YACzB5I,GAAGgD,KAAK+c,aACR9T,EAAIqT,qBAAqB,EAAG,GAC5BrT,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWI,KAAK+E,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QAC1EyF,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWE,SAASiF,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QAC9EyF,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWG,UAAUgF,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQkG,QAClFyF,EAAItG,WAAW6B,cAAcyE,EAAI9K,WAAWO,OAAOmM,UAAW,EAC9D5B,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWQ,QAAQkM,UAAW,EACxD5B,EAAIiI,MAAMC,gBACVlI,EAAIyN,QAAQkG,SAu7BJI,CAAoBpf,GACpBA,EAAKqf,aAAaxa,IAIlBmC,UAAUsY,SAAWtY,UAAUsY,QAAQC,SACvCvY,UAAUsY,QAAQC,WAAWvN,KAAK,SAAUuN,GACxC,MAAMC,GAAeD,EAASE,MAAQF,EAASG,OAAS,QACpD1f,EAAK+P,iBAAmByP,EACxBN,IAGA9f,GAAG+X,QAAQnX,EAAKwD,gBAAgB,oCAAqC,CACjE6P,QAASxO,EAAQwO,QACjBsM,QAAStQ,EAAWrP,EAAMA,EAAK+P,kBAC/B6P,iBAAkBvQ,EAAWrP,EAAM4M,KAAKoD,MAAMwP,MAC9CN,KAKZA,MAKZxX,EAASsP,aAAe,SAAU6I,EAAShb,GACvC,IACI+G,EAAO/G,GAAW,GADX5E,KAEN6f,YAAYlU,EAAKvH,MAFXpE,KAEyB4D,yBAFzB5D,KAEyD6D,gBAAkB,CAClF+b,QAASA,EACTE,OAAQnU,EAAKmU,UAIrBrY,EAAS2X,aAAe,SAAUxa,GAC9B,IAAI7E,EAAOC,KACP2L,EAAO/G,GAAW,GACtB,GAAI7E,EAAKoE,IAAK,CACV,IAAIF,EAAS0H,EAAK1H,QAAUlE,EAAKkE,QAAUlE,EAAKoE,IAAI4b,YACpDhgB,EAAK8U,qBAAqB,CAAE5Q,OAAQA,IAEpC,GAAIlE,EAAKmG,eAAgB,CA4BrB,IA3BA,IAAI8Z,EAAY,SAAUxa,EAAKhC,EAAGyc,GAC9B,IAAIxZ,EAASjB,EAAIsI,KAAO/N,EAAKoG,eACxBM,GAAUjD,EAAI,IACfiD,EAASwZ,EAAIzc,EAAI,GAAGsK,IAAM/N,EAAKoG,eAEnC,OAAOM,GAEPyZ,EAAU,SAAUvS,GACpB,MAAO,CACHsB,IAAKtB,EAAIsB,IACTE,GAAIxB,EAAIwB,GACRS,GAAIjC,EAAIiC,GACRV,GAAIvB,EAAIuB,GACRW,GAAIlC,EAAIkC,KAIZ3J,EAAiBnG,EAAKmG,eAAe/B,IAAI,SAAUsJ,GACnD,MAAO,CACHC,QAASD,EAAOC,QAChBsB,cAAevB,EAAOuB,cACtBnB,iBAAkBJ,EAAOI,iBAAiBtB,OAAOyT,MAKrDG,EAAqB,CAACtT,OAAOuT,kBAAmBvT,OAAOuT,kBAAmBvT,OAAOwT,kBAAmBxT,OAAOwT,mBACtG7c,EAAI,EAAGC,EAAMyC,EAAexC,OAAQF,EAAIC,EAAKD,IAAK,CACvD,IAAI8c,EAAKpa,EAAe1C,GAEpB+c,GADA5S,EAAM2S,EAAGzS,iBAAiByS,EAAGzS,iBAAiBnK,OAAS,IACpCoK,IAAMH,EAAI6S,MACjCL,EAAmB,GAAKxT,KAAKgN,IAAIwG,EAAmB,GAAIxS,EAAI8S,OAAO,GAAKF,EAAe5S,EAAIwB,IAC3FgR,EAAmB,GAAKxT,KAAKgN,IAAIwG,EAAmB,GAAIxS,EAAI8S,OAAO,GAAKF,GAAgB5S,EAAIkC,GAAK,IACjGsQ,EAAmB,GAAKxT,KAAKkN,IAAIsG,EAAmB,GAAIxS,EAAI8S,OAAO,GAAKF,GAAgB5S,EAAIiC,GAAK,IACjGuQ,EAAmB,GAAKxT,KAAKkN,IAAIsG,EAAmB,GAAIxS,EAAI8S,OAAO,GAAKF,EAAe5S,EAAIuB,IAC3FoR,EAAGzS,iBAAmByS,EAAGzS,iBAAiB1J,IAAI+b,GAKlD,IAAIQ,EAAY/T,KAAKgU,IAAI,GAAI5gB,EAAKoE,IAAI0B,KAAK+a,QAAUzhB,GAAGK,OAAOqhB,iBAAmB1hB,GAAGK,OAAOshB,iBAMxFC,EAAgB,CAChBC,KANJb,EAAqBA,EAAmBhc,IAAI,SAAUqB,EAAK+H,GAEvD,OADaA,EAAM,EAAKZ,KAAKsU,KAAOtU,KAAKC,OAC5BpH,EAAMkb,GAAaA,IAKhC5S,IAAKnB,KAAKC,MAA2B,IAArB7M,EAAKoG,eAAwB,IAC7C7B,IAAK,GACLmZ,IAAK,GACL/O,OAAQ,GACR6L,OAAQ,IAAIsE,MAAM9e,EAAKgG,WAAWrC,SAEtC,IAASF,EAAI,EAAGC,EAAM1D,EAAKgG,WAAWrC,OAAQF,EAAIC,EAAKD,IAAK,CACxD,IAAI6P,EAAQtT,EAAKgG,WAAWvC,GACxB0d,EAAuC,IAA5B7N,EAAM/O,IAAIX,QAAQ,MAAcoR,SAASwI,SAAWlK,EAAM/O,IAAM+O,EAAM/O,IACjFkZ,EAASuD,EAAczc,IAAIX,QAAQud,GACnC1D,EAAS,IACTA,EAASuD,EAAczc,IAAIE,KAAK0c,GAAY,GAEhD,IAAIxD,EAASqD,EAActD,IAAI9Z,QAAQ0P,EAAMgH,WACzCqD,EAAS,IACTA,EAASqD,EAActD,IAAIjZ,KAAK6O,EAAMgH,WAAa,GAEvD,IAAI8G,EAAc9N,EAAM3E,OAAOnK,OAAO8O,EAAM3E,OAAO/K,QAAQ,KAAO,GAC9Dyd,EAAYL,EAAcrS,OAAO/K,QAAQwd,GACzCC,EAAY,IACZA,EAAYL,EAAcrS,OAAOlK,KAAK2c,GAAe,GAEzDJ,EAAcxG,OAAO/W,GAAK,CACtBga,OAAQA,EACRhP,GAAI6E,EAAM5E,WACViP,OAAQA,EACR0D,UAAWA,GAInB,IAAIC,EAASliB,GAAGgD,KAAKmf,uBACjBje,EAAIge,EAAOthB,EAAKwC,uBAAyB4d,EAAmB3U,WAChE6V,EAAOthB,EAAKsC,2BAA6Bkf,KAAK7e,KAAK8e,UAAUT,IACzDhhB,EAAKse,uBACLgD,EAAOthB,EAAK4H,qBAAuB,GAEvC,MAAM8Z,EAAI1M,SAAS0L,OAAS1L,SAAS2M,SAAW,IAAMviB,GAAGgD,KAAKwf,eAAeN,GAC7EthB,EAAKqG,WAAa,CAAEhC,KAAMuH,EAAKyH,QAASnP,OAAQZ,EAAGiB,IAAKmd,GACxD1hB,EAAK+F,eAAgB,EAGrB,GAAI/F,EAAKse,qBAAsB,CAC3B,MAAMuB,EAAU,GAChB,IAASpc,EAAI,EAAGC,EAAMyC,EAAexC,OAAQF,EAAIC,EAAKD,IAAK,CAGvD,IAFA,IAAIiK,EAASvH,EAAe1C,GACxBoe,EAAa,KACRvT,EAAI,EAAGC,EAAOvO,EAAKgG,WAAWrC,OAAQ2K,EAAIC,EAAMD,IAAK,CAC1D,IAAIE,EAAIxO,EAAKgG,WAAWsI,GACxB,GAAIE,EAAEC,KAAOf,EAAOC,QAAS,CACzBkU,EAAa7hB,EAAK8F,KAAKgc,kBAAkBtT,GACrCA,EAAEuT,kBAEFvT,EAAEuT,mBAEFvT,EAAEwT,WACFnC,EAAQpb,KAAK+J,EAAEwT,WAEnB,OAGR,GAAIH,EACA,IAAK,IAAII,EAAI,EAAGC,EAAOxU,EAAOI,iBAAiBnK,OAAQse,EAAIC,EAAMD,IAE7D,IADA,IAAIrU,EACKnB,GADLmB,EAAMF,EAAOI,iBAAiBmU,IACjB9S,GAAI1C,GAAKmB,EAAIkC,GAAIrD,IAC9B,IAAK,IAAI0V,EAAIvU,EAAIwB,GAAI+S,GAAKvU,EAAIiC,GAAIsS,IAC9BtC,EAAQpb,KAAKod,EAAWnW,QAAQ,kBAAmBgC,EAAOuB,eAAevD,QAAQ,eAAgBkC,EAAIsB,KAAKxD,QAAQ,YAAayW,GAAGzW,QAAQ,YAAae,IAM3KoT,EAAQpb,KAAKid,GACb1hB,EAAKgX,aAAa6I,EAAS,CAAExb,KAAMqd,QAMnDha,EAAS6K,mBAAqB,WAC1B,IAAIvS,EAAOC,KACPD,EAAKqG,YACLrG,EAAKoiB,YAAYpiB,EAAKqG,WAAW9B,KAAKyN,KAAK,SAAU8E,GAC5CA,IACD9W,EAAKqG,WAAa,QAI9BrG,EAAK+F,eAAgB,EACrB/F,EAAKsS,iBAGT5K,EAAS2a,UAAY,SAAUhe,GAC3B,IAEID,EAFOnE,KAEIyQ,cAAc,CAAErM,KAAMA,IACjCD,GAHOnE,KAIFmiB,YAAYhe,EAAIG,MAI7BmD,EAASiL,eAAiB,SAAUtO,GAChC,MAAMrE,EAAOC,KACb,GAAI+G,UAAUiP,QACV,GAAI5R,EAAM,CACN,IAAIie,EAActiB,EAAKwD,gBAAgB,oBAAqB,CAAE6P,QAAShP,IAClErE,EAAKse,uBACNgE,EAAcA,EAAc,IAAMtiB,EAAKwD,gBAAgB,sCAE3D,GAAI2T,QAAQmL,GACR,GAAItb,UAAUiP,OAAQ,EA5nCb,SAAU5K,GAC/BA,EAAImQ,OAASnQ,EAAIxD,QAAQI,SACzBoD,EAAIqT,qBAAqB,EAAG,GAC5BrT,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWE,SAASiF,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QAC9EyF,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWG,UAAUgF,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QAC/EyF,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWI,KAAK+E,UAAU2B,OAAOjI,GAAGK,OAAOC,QAAQkG,QAC7EyF,EAAI+E,IAAI7K,iBAAiB8F,EAAI9K,WAAWM,UAAU2E,QAAQ,SAAU8F,GAChEA,EAAG5F,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQ6e,YAEvClT,EAAItG,WAAW6B,cAAcyE,EAAI9K,WAAWO,OAAOmM,UAAW,EAC9D5B,EAAI+E,IAAIxJ,cAAcyE,EAAI9K,WAAWQ,QAAQkM,UAAW,EACxD5B,EAAItG,WAAW6B,cAAcyE,EAAI9K,WAAWc,WAAWgM,UAAY,GACnEhC,EAAIyN,QAAQkG,SAinCIuD,CAAiBviB,GACjBA,EAAKqiB,UAAUhe,QAEfjF,GAAGof,MAAMxe,EAAKwD,gBAAgB,+BAK1CpE,GAAGof,MAAMxe,EAAKwD,gBAAgB,0BAItCkE,EAASgJ,cAAgB,SAAU7L,GAE/B,OADW5E,KACCiC,WAAWsK,OAAO,SAAU/G,GACpC,IAAIiB,GAAS,EACT7B,EAAQR,MAAQQ,EAAQR,OAASoB,EAAIpB,OACrCqC,GAAS,GAETA,GAAU7B,EAAQN,KAAOM,EAAQN,MAAQkB,EAAIlB,MAC7CmC,GAAS,GAEb,OAAOA,IACR,IAGPgB,EAASgX,qBAAuB,SAAU8D,EAASzM,GAC/C,MAAM/V,EAAOC,KACPG,EAAKJ,EAAKK,eACVyV,EAAQ9V,EAAKoQ,IAAIxJ,cAAcxG,EAAK,mBAC1C,GAAI2V,EAAO,CACP,IACI0M,EADU7V,KAAKgN,IAAIhN,KAAKoD,MAAgB,IAAVwS,EAAgBzM,GAAQ,KAC5B,IAC9B,MAAM2M,EAAK1iB,EAAKoQ,IAAIxJ,cAAcxG,EAAK,mBACnCsiB,IACAA,EAAGvV,MAAMwV,MAAQF,GAEjB3M,IACAA,EAAMzI,UAAYoV,OAGrB,CACD,MAAMG,EAAK5iB,EAAKoQ,IAAIxJ,cAAcxG,EAAK,iBACnCwiB,GACAA,EAAGld,UAAUC,IAAIvG,GAAGK,OAAOC,QAAQkG,QAEnCkQ,IACAA,EAAMzI,UAAYrN,EAAKwD,gBAAgB,SAAU,CAAE+L,SAAUiT,OAKzE9a,EAASoN,qBAAuB,SAAUjQ,GACtC,IACI+G,EAAO/G,GAAW,GACtB+G,EAAK1H,OAAS0H,EAAK1H,QAFRjE,KAEuBiE,OAClC0H,EAAK4O,OAAS5O,EAAK4O,QAHRva,KAGuB+F,WAHvB/F,KAINkG,eAJMlG,KAIgB6F,KAAKyU,kBAAkB3O,GAClD,OALW3L,KAKCkG,gBAGhBuB,EAASyE,eAAiB,WAEtB,IAAIzF,EAAS,GAEb,MAAMmc,EAAmB,SAAUjV,GAC/B,OAAOA,EAAIG,KAGT+U,EAPO7iB,KAOekG,eAAe/B,IAAI,SAAUsJ,GACrD,OAAOA,EAAOI,iBAAiB1J,IAAIye,KAQvC,OAJAnc,EAASA,EACJsW,OAAO9c,MAAMwG,EAAQoc,GACrBpe,KAAK,CAACC,EAAGC,IAAMA,EAAID,GACnB6H,OAAO,CAAC/G,EAAK+H,EAAK0S,IAAgB,IAAR1S,GAAa0S,EAAI1S,EAAM,KAAO/H,IAIjEiC,EAASZ,gBAAkB,WACvB,MACMwa,EAASliB,GAAGgD,KAAKmf,8BAChBD,EAFMrhB,KAEMqC,kCACZgf,EAHMrhB,KAGMuC,8BACZ8e,EAJMrhB,KAIM2H,qBACnB,IAAImb,EAAY3jB,GAAGgD,KAAKwf,eAAeN,GACnCyB,EAAUpf,SACVof,EAAY,IAAMA,GAEtB,OAAO/N,SAAS2M,SAAWoB,EAAY/N,SAAS1K,MA1/CxD","sourcesContent":["\r\n/**\r\n  * Opciones del creador de mapas sin conexión.\r\n  * \r\n  * Para que ese control funcione correctamente, es necesario cumplir estos dos requisitos:\r\n  *    1. Debe instalarse en el ámbito de la aplicación que contiene el visor el _[Service Worker](https://developer.mozilla.org/es/docs/Web/API/Service_Worker_API)_ creado para el funcionamiento de este control.\r\n  *    Para ello basta con copiar el archivo [tc-cb-service-worker.js](https://raw.githubusercontent.com/sitna/api-sitna/master/TC/workers/tc-cb-service-worker.js) a la carpeta raíz de dicha aplicación.\r\n  *    2. Debe incluirse en la carpeta de la aplicación un archivo de texto con el nombre `manifest.appcache`. \r\n  *    Este archivo es un documento de manifiesto de [caché de aplicaciones](https://developer.mozilla.org/es/docs/Web/HTML/Using_the_application_cache#habilitando_cach%C3%A9_de_aplicaciones)[*] \r\n  *    que contiene una lista de las URL de todos los recursos que tienen que almacenarse en la cache del navegador y así asegurar la carga de la aplicación\r\n  *    en ausencia de conexión a Internet.\r\n  *    \r\n  *    [*]: El estándar de caché de aplicaciones está obsoleto hoy en día y este control no hace realmente uso de él para ejercer su función, pero para funcionar necesita\r\n  *    una lista de todos los recursos a cargar en la cache del navegador, y un manifiesto de caché de aplicaciones es precisamente una lista de ese tipo. \r\n  *    Se usa este formato por compatibilidad hacia atrás y por ser de un estándar bien documentado.\r\n  * @typedef OfflineMapMakerOptions\r\n  * @extends ControlOptions\r\n  * @see MapControlOptions\r\n  * @property {HTMLElement|string} [div] - Elemento del DOM en el que crear el control o valor de atributo id de dicho elemento.\r\n  * @property {number} [averageTileSize=31000] - Tamaño medio estimado en bytes para cada una de las teselas del mapa. Este valor se utiliza para estimar el tamaño total que tendrá en disco el mapa sin conexión.\r\n  * @property {HTMLElement|string} [offlineMapHintDiv] - Elemento del DOM en el que crear el indicador de que se está en un mapa offline. Si no se especifica dicho indicador se mostrará superpuesto al área del mapa.\r\n  * @example <caption>[Ver en vivo](../examples/cfg.OfflineMapMakerOptions.html)</caption> {@lang html}\r\n  * <div id=\"mapa\"></div>\r\n  * <script>\r\n  *     // Establecemos un layout simplificado apto para hacer demostraciones de controles.\r\n  *     SITNA.Cfg.layout = \"layout/ctl-container\";\r\n  *     // Añadimos el control de selección de capas de fondo en el primer contenedor.\r\n  *     SITNA.Cfg.controls.basemapSelector = {\r\n  *         div: \"slot1\"\r\n  *     };\r\n  *     // Añadimos el control de creación de mapas sin conexión en el segundo contenedor.\r\n  *     SITNA.Cfg.controls.offlineMapMaker = {\r\n  *         div: \"slot2\"\r\n  *     };\r\n  *     var map = new SITNA.Map(\"mapa\");\r\n  * </script>\r\n  * @example <caption>Documento de manifiesto [manifest.appcache](../examples/manifest.appcache)</caption> {@lang plain}\r\n  * CACHE MANIFEST\r\n  * # Documento de manifiesto para el ejemplo de uso del control offlineMapMaker\r\n  *\r\n  * CACHE:\r\n  * cfg.MapControlOptions.offlineMapMaker.html\r\n  * examples.css\r\n  * examples.js\r\n  * ../\r\n  * ../TC/css/tcmap.css\r\n  * ../TC/resources/es-ES.json\r\n  * ../TC/config/browser-versions.js\r\n  * ../TC/layout/responsive/style.css\r\n  * ../TC/workers/tc-caps-web-worker.js\r\n  * ../TC/css/fonts/sitna.woff\r\n  * ../TC/css/fonts/mapskin.woff\r\n  * ../TC/layout/responsive/fonts/fontawesome-webfont.woff?v=4.5.0\r\n  * ../TC/css/img/thumb-orthophoto.jpg\r\n  * ../TC/css/img/thumb-bta.png\r\n  * ../TC/css/img/thumb-basemap.png\r\n  * ../TC/css/img/thumb-cadaster.png\r\n  * layout/ctl-container/config.json\r\n  * layout/ctl-container/style.css\r\n  * layout/ctl-container/script.js\r\n  * layout/ctl-container/markup.html\r\n  * layout/ctl-container/resources/es-ES.json\r\n  * https://idena.navarra.es/ogc/wms?SERVICE=WMS&VERSION=1.3.0&REQUEST=GetCapabilities\r\n  */\r\n\r\nTC.control = TC.control || {};\r\n\r\nif (!TC.control.SWCacheClient) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/SWCacheClient');\r\n}\r\n\r\n(function () {\r\n\r\n    TC.Consts.classes.CONNECTION_OFFLINE = TC.Consts.classes.CONNECTION_OFFLINE || 'tc-conn-offline';\r\n    TC.Consts.classes.CONNECTION_WIFI = TC.Consts.classes.CONNECTION_WIFI || 'tc-conn-wifi';\r\n    TC.Consts.classes.CONNECTION_MOBILE = TC.Consts.classes.CONNECTION_MOBILE || 'tc-conn-mobile';\r\n    TC.Consts.classes.OFFLINE = TC.Consts.classes.OFFLINE || 'tc-offline';\r\n\r\n    var ALREADY_EXISTS = 'already_exists';\r\n\r\n    var requestManifest = function () {\r\n        return new Promise(function (resolve, reject) {\r\n            const manifestFile = document.documentElement.getAttribute('manifest') || 'manifest.appcache';\r\n            TC.ajax({\r\n                url: manifestFile,\r\n                method: 'GET',\r\n                responseType: 'text'\r\n            }).then(function (response) {\r\n                var data = response.data;\r\n                TC.loadJS(\r\n                    !window.hex_md5,\r\n                    [TC.apiLocation + TC.Consts.url.HASH],\r\n                    function () {\r\n                        var hash = hex_md5(data);\r\n                        var idxEnd = data.indexOf('NETWORK:');\r\n                        if (idxEnd >= 0) {\r\n                            data = data.substr(0, idxEnd);\r\n                        }\r\n                        idxEnd = data.indexOf('FALLBACK:');\r\n                        if (idxEnd >= 0) {\r\n                            data = data.substr(0, idxEnd);\r\n                        }\r\n                        idxEnd = data.indexOf('SETTINGS:');\r\n                        if (idxEnd >= 0) {\r\n                            data = data.substr(0, idxEnd);\r\n                        }\r\n                        var lines = data.split(/[\\n\\r]/).filter(function (elm) {\r\n                            return elm.length > 0 && elm.indexOf('#') !== 0 && elm !== 'CACHE:';\r\n                        });\r\n                        // Eliminamos la primera línea porque siempre es CACHE MANIFEST\r\n                        lines.shift();\r\n                        resolve({\r\n                            hash: hash,\r\n                            urls: lines\r\n                        });\r\n                    }\r\n                );\r\n            }).catch(function (error) {\r\n                reject(error);\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.control.OfflineMapMaker = function () {\r\n        var self = this;\r\n\r\n        TC.control.SWCacheClient.apply(this, arguments);\r\n\r\n        var cs = self._classSelector = '.' + self.CLASS;\r\n        self._selectors = {\r\n            DRAW: cs + '-draw',\r\n            DRAWING: cs + '-drawing',\r\n            PROGRESS: cs + '-progress',\r\n            NEW: cs + '-new',\r\n            LIST: cs + '-list',\r\n            LISTITEM: cs + '-list > li',\r\n            OKBTN: cs + '-btn-ok',\r\n            NEWBTN: cs + '-btn-new',\r\n            SAVEBTN: '.tc-btn-save',\r\n            CANCELBTN: '.tc-btn-cancel',\r\n            EDITBTN: '.tc-btn-edit',\r\n            VIEWBTN: '.tc-btn-view',\r\n            DELETEBTN: '.tc-btn-delete',\r\n            TILECOUNT: cs + '-tile-count',\r\n            NAMETB: cs + '-txt-name',\r\n            TEXTBOX: 'input.tc-textbox',\r\n            EXIT: cs + '-link-exit',\r\n            OFFPANEL: cs + '-off-panel',\r\n            RESOLUTIONPANEL: cs + '-res-panel',\r\n            BLLIST: cs + '-bl-list',\r\n            BLLISTITEM: cs + '-bl-list > li',\r\n            BLLISTTEXT: cs + '-bl-panel-txt',\r\n            RNGMAXRES: cs + '-rng-maxres',\r\n            SEARCH: cs + '-map-available-srch',\r\n            EMPTYLIST: cs + '-map-available-empty',\r\n            OFFLINEHIDDEN: '[data-no-cb]'\r\n        };\r\n\r\n        self.storedMaps = [];\r\n\r\n        const mapDefString = TC.Util.getParameterByName(self.MAP_DEFINITION_PARAM_NAME);\r\n        const extentString = TC.Util.getParameterByName(self.MAP_EXTENT_PARAM_NAME);\r\n        self.mapIsOffline = !!mapDefString;\r\n        if (mapDefString) {\r\n            self.currentMapDefinition = JSON.parse(window.atob(decodeURIComponent(mapDefString)));\r\n        }\r\n        if (extentString) {\r\n            self.currentMapExtent = getExtentFromString(extentString);\r\n        }\r\n\r\n        // Comprobación de disponibilidad de localStorage\r\n        try {\r\n            self.localStorage = window.localStorage;\r\n            const key = \"__delete_me__\";\r\n            self.localStorage.setItem(key, key);\r\n            self.localStorage.removeItem(key);\r\n        }\r\n        catch (e) {\r\n            self.localStorage = null;\r\n            TC.error(self.getLocaleString('couldNotAccessLocalStorage'));\r\n        }\r\n\r\n        // Carga de mapas guardados\r\n        if (self.localStorage) {\r\n            for (var i = 0, len = self.localStorage.length; i < len; i++) {\r\n                var key = self.localStorage.key(i);\r\n                if (key.indexOf(self.LOCAL_STORAGE_KEY_PREFIX) === 0 && key !== self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME + '.hash') {\r\n                    // Es un nombre de mapa y no es el hash de integridad de la cache root\r\n                    var values = self.localStorage.getItem(key).split(\" \");\r\n                    var extent = getExtentFromString(values.shift());\r\n                    var name = values.join(\" \");\r\n                    var map = {\r\n                        name: name,\r\n                        extent: extent,\r\n                        url: decodeURIComponent(key.substr(self.LOCAL_STORAGE_KEY_PREFIX.length))\r\n                    }\r\n                    self.storedMaps.push(map);\r\n                }\r\n            }\r\n            self.storedMaps.sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        var options = TC.Util.extend({}, len > 1 ? arguments[1] : arguments[0]);\r\n        self._dialogDiv = TC.Util.getDiv(options.dialogDiv);\r\n        if (window.$) {\r\n            self._$dialogDiv = $(self._dialogDiv);\r\n        }\r\n        if (!options.dialogDiv) {\r\n            document.body.appendChild(self._dialogDiv);\r\n        }\r\n\r\n        if (self.mapIsOffline) {\r\n            document.querySelectorAll(self._selectors.OFFLINEHIDDEN).forEach(function (elm) {\r\n                elm.classList.add(TC.Consts.classes.HIDDEN);\r\n            })\r\n        }\r\n\r\n        TC.Control.apply(self, arguments);\r\n        self.wrap = new TC.wrap.control.OfflineMapMaker(self);\r\n\r\n        self.isDownloading = false;\r\n        self.baseLayers = [];\r\n\r\n        self.options.averageTileSize = self.options.averageTileSize || TC.Cfg.averageTileSize;\r\n        self.requestSchemas = [];\r\n        self.minResolution = 0;\r\n        self.currentMap = null;\r\n\r\n        self._loadedCount = 0;\r\n\r\n        // Actualización del enlace al modo online\r\n        // Parche para detectar cambios en el hash. Lo usamos para actualizar los enlaces a los idiomas\r\n        var pushState = history.pushState;\r\n        history.pushState = function (state) {\r\n            var result;\r\n            //if (typeof history.onpushstate == \"function\") {\r\n            //    history.onpushstate({ state: state });\r\n            //}\r\n            result = pushState.apply(history, arguments);\r\n            if (self._offlineMapHintDiv) {\r\n                self._offlineMapHintDiv.querySelector(self._selectors.EXIT).setAttribute('href', self.getOnlineMapUrl());\r\n            }\r\n            return result;\r\n        }\r\n\r\n        // Detección de estado de conexión\r\n        var connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection || {};\r\n        var onlineHandler = function () {\r\n            if (self._offlineMapHintDiv) {\r\n                const panel = self._offlineMapHintDiv.querySelector(self._selectors.OFFPANEL);\r\n                panel.classList.remove(\r\n                    TC.Consts.classes.CONNECTION_OFFLINE,\r\n                    TC.Consts.classes.CONNECTION_MOBILE,\r\n                    TC.Consts.classes.CONNECTION_WIFI);\r\n\r\n                var type = connection.type;\r\n                switch (type) {\r\n                    case 1:\r\n                    case 2:\r\n                    case undefined:\r\n                        panel.classList.add(TC.Consts.classes.CONNECTION_WIFI);\r\n                        break;\r\n                    default:\r\n                        panel.classList.add(TC.Consts.classes.CONNECTION_MOBILE);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        if (connection.addEventListener) {\r\n            connection.addEventListener('typechange', onlineHandler);\r\n        }\r\n        window.addEventListener('online', onlineHandler);\r\n        window.addEventListener('offline', function () {\r\n            if (self._offlineMapHintDiv) {\r\n                const panel = self._offlineMapHintDiv.querySelector(self._selectors.OFFPANEL);\r\n                panel.classList.add(TC.Consts.classes.CONNECTION_OFFLINE);\r\n                panel.classList.remove(TC.Consts.classes.CONNECTION_MOBILE, TC.Consts.classes.CONNECTION_WIFI);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.inherit(TC.control.OfflineMapMaker, TC.control.SWCacheClient);\r\n\r\n    var ctlProto = TC.control.OfflineMapMaker.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-omm';\r\n    ctlProto.MAP_DEFINITION_PARAM_NAME = \"map-def\";\r\n    ctlProto.MAP_EXTENT_PARAM_NAME = \"map-extent\";\r\n    ctlProto.LOCAL_STORAGE_KEY_PREFIX = \"TC.offline.map.\";\r\n    ctlProto.ROOT_CACHE_NAME = \"root\";\r\n    ctlProto.SERVICE_WORKER_FLAG = 'sw';\r\n    ctlProto._states = {\r\n        READY: 'ready',\r\n        EDIT: 'editing',\r\n        DOWNLOADING: 'downloading',\r\n        DELETING: 'deleting'\r\n    };\r\n    ctlProto._actions = {\r\n        CREATE: 'create',\r\n        DELETE: 'delete'\r\n    };\r\n    ctlProto.offlineControls = [\r\n        'attribution',\r\n        'basemapSelector',\r\n        'offlineMapMaker',\r\n        'click',\r\n        'coordinates',\r\n        'draw',\r\n        'edit',\r\n        'geolocation',\r\n        'loadingIndicator',\r\n        'measure',\r\n        'navBar',\r\n        'popup',\r\n        'print',\r\n        'scale',\r\n        'scaleBar',\r\n        'scaleSelector',\r\n        'state',\r\n        'fullScreen'\r\n    ];\r\n\r\n    TC.Consts.event.MAPCACHEDOWNLOAD = TC.Consts.event.MAPCACHEDOWNLOAD || 'mapcachedownload.tc';\r\n    TC.Consts.event.MAPCACHEDELETE = TC.Consts.event.MAPCACHEDELETE || 'mapcachedelete.tc';\r\n    TC.Consts.event.MAPCACHEPROGRESS = TC.Consts.event.MAPCACHEPROGRESS || 'mapcacheprogress.tc';\r\n    TC.Consts.event.MAPCACHEERROR = TC.Consts.event.MAPCACHEERROR || 'mapcacheerror.tc';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/tc-ctl-omm.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-map-node'] = TC.apiLocation + \"TC/templates/tc-ctl-omm-map-node.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-bl-node'] = TC.apiLocation + \"TC/templates/tc-ctl-omm-bl-node.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/tc-ctl-omm-dialog.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-off-panel'] = TC.apiLocation + \"TC/templates/tc-ctl-omm-off-panel.hbs\";\r\n\r\n    const getExtentFromString = function (str) {\r\n        return decodeURIComponent(str).split(',').map(function (elm) {\r\n            return parseFloat(elm);\r\n        });\r\n    };\r\n\r\n    const setDownloadingState = function (ctl) {\r\n        ctl._state = ctl._states.DOWNLOADING;\r\n        TC.Util.closeModal();\r\n        ctl.showDownloadProgress(0, 1);\r\n        ctl.div.querySelector(ctl._selectors.NEW).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.PROGRESS).classList.remove(TC.Consts.classes.HIDDEN);\r\n        ctl._dialogDiv.querySelector(ctl._selectors.OKBTN).disabled = true;\r\n        ctl.div.querySelector(ctl._selectors.NEWBTN).disabled = true;\r\n        ctl.layer.clearFeatures();\r\n        ctl.boxDraw.cancel();\r\n    };\r\n\r\n    const setDeletingState = function (ctl) {\r\n        ctl._state = ctl._states.DELETING;\r\n        ctl.showDownloadProgress(0, 1);\r\n        ctl.div.querySelector(ctl._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.NEW).classList.remove(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelectorAll(ctl._selectors.LISTITEM).forEach(function (li) {\r\n            li.classList.add(TC.Consts.classes.DISABLED);\r\n        });\r\n        ctl._dialogDiv.querySelector(ctl._selectors.OKBTN).disabled = true;\r\n        ctl.div.querySelector(ctl._selectors.NEWBTN).disabled = false;\r\n        ctl._dialogDiv.querySelector(ctl._selectors.TILECOUNT).innerHTML = '';\r\n        ctl.boxDraw.cancel();\r\n    };\r\n\r\n    const setNameEditingState = function (ctl, li) {\r\n        li.querySelector('span').classList.add(TC.Consts.classes.HIDDEN);\r\n        const textbox = li.querySelector(ctl._selectors.TEXTBOX);\r\n        textbox.classList.remove(TC.Consts.classes.HIDDEN);\r\n        textbox.value = li.querySelector('span a').innerHTML;\r\n        textbox.focus();\r\n        li.querySelector(ctl._selectors.SAVEBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.CANCELBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.EDITBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.VIEWBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.DELETEBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    const setNameReadyState = function (ctl, li) {\r\n        li.querySelector('span').classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.TEXTBOX).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.SAVEBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.CANCELBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.EDITBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.VIEWBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.DELETEBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    var formatNumber = function (number) {\r\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    };\r\n\r\n    var updateResolutions = function (ctl, options) {\r\n        var opts = options || {};\r\n        const resDiv = ctl._dialogDiv.querySelector(ctl._classSelector + '-res');\r\n        const range = ctl._dialogDiv.querySelector(ctl._selectors.RNGMAXRES);\r\n        var resolutions = ctl.getResolutions();\r\n        var resText, resLevel, resLeft;\r\n        if (resolutions.length) {\r\n            range.setAttribute('max', resolutions.length - 1);\r\n            if (ctl.minResolution) {\r\n                // Si ya había resolución previa y no se ha tocado el slider, se actualiza su valor\r\n                if (opts.rangeValue === undefined) {\r\n                    for (var i = 0, len = resolutions.length; i < len; i++) {\r\n                        if (ctl.minResolution >= resolutions[i]) {\r\n                            range.value = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (opts.rangeValue === undefined) {\r\n                    // Si no había resolución previa se selecciona un valor inicial igual a la resolución actual\r\n                    const currentResolution = ctl.map.getResolution();\r\n                    range.value = resolutions.filter(r => r > currentResolution).length;\r\n                }\r\n            }\r\n            resLevel = parseInt(range.value);\r\n            var resValue = Math.floor(new Number(resolutions[resLevel]) * 1000) / 1000;\r\n            resText = ctl.getLocaleString('metersPerPixel', {\r\n                value: resValue.toLocaleString((ctl.map ? ctl.map.options.locale : TC.Cfg.locale).replace('_', '-'))\r\n            });\r\n            resLeft = (resLevel + 1) * 100 / (resolutions.length + 1) + '%';\r\n            range.disabled = false;\r\n            ctl.minResolution = resolutions[range.value];\r\n        }\r\n        else {\r\n            resLevel = 0;\r\n            resText = '';\r\n            range.value = 0;\r\n            resLeft = '0';\r\n            ctl.minResolution = 0;\r\n            range.disabled = true;\r\n        }\r\n        ctl._dialogDiv.querySelector(ctl._selectors.RESOLUTIONPANEL).classList.toggle(TC.Consts.classes.HIDDEN, !!range.disabled);\r\n        ctl._dialogDiv.querySelector(ctl._selectors.TILECOUNT).classList.toggle(TC.Consts.classes.HIDDEN, !!range.disabled);\r\n\r\n        resDiv.style.left = resLeft;\r\n        resDiv.innerHTML = resText;\r\n    };\r\n\r\n    const findTileMatrixLimits = function (schema, resolution) {\r\n        var result = null;\r\n        for (var i = 0, len = schema.tileMatrixLimits.length; i < len; i++) {\r\n            result = schema.tileMatrixLimits[i];\r\n            if (result.res <= resolution) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const updateThumbnails = function (ctl) {\r\n        ctl._dialogDiv.querySelectorAll(ctl._classSelector + '-bl-node input[type=checkbox]').forEach(function (cb, idx) {\r\n            if (cb.checked) {\r\n                var schema = ctl.requestSchemas.filter(function (elm) {\r\n                    return elm.layerId === cb.value;\r\n                })[0];\r\n                if (schema) {\r\n                    var tml = findTileMatrixLimits(schema, ctl.minResolution);\r\n                    if (tml) {\r\n                        const tmsKey = '{TileMatrixSet}';\r\n                        const tmKey = '{TileMatrix}';\r\n                        const trKey = '{TileRow}';\r\n                        const tcKey = '{TileCol}';\r\n                        var url = schema.url;\r\n                        if (url.indexOf(tmKey) < 0) {\r\n                            // Caso KVP\r\n                            var qsIdx = url.indexOf('?');\r\n                            if (qsIdx >= 0) {\r\n                                url = url.substr(0, qsIdx);\r\n                            }\r\n                            for (var j = 0, lenj = ctl.baseLayers.length; j < lenj; j++) {\r\n                                var l = ctl.baseLayers[j];\r\n                                if (l.id === schema.layerId) {\r\n                                    url = url + '?layer=' + l.layerNames + '&style=default&tilematrixset=' + tmsKey +\r\n                                        '&Service=WMTS&Request=GetTile&Version=1.0.0&Format=' + l.format +\r\n                                        '&TileMatrix=' + tmKey + '&TileRow=' + trKey + '&TileCol=' + tcKey;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        while (cb && cb.tagName !== 'LABEL') {\r\n                            cb = cb.parentElement;\r\n                        }\r\n                        if (cb) {\r\n                            cb.style.backgroundSize = 'auto';\r\n                            cb.style.backgroundPosition = 'left bottom';\r\n                            cb.style.backgroundImage = 'url(' + url\r\n                                .replace(tmsKey, schema.tileMatrixSet)\r\n                                .replace(tmKey, tml.mId)\r\n                                .replace(trKey, tml.rt)\r\n                                .replace(tcKey, tml.cl) + ')';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const formatSize = function (ctl, size) {\r\n        var result;\r\n        if (size < 1) {\r\n            result = ctl.getLocaleString('lessThan1Mb');\r\n        }\r\n        else {\r\n            result = ctl.getLocaleString('approxXMb', { quantity: formatNumber(size) });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const showEstimatedMapSize = function (ctl) {\r\n        var text = '';\r\n        ctl.tileCount = 0;\r\n        for (var i = 0, ii = ctl.requestSchemas.length; i < ii; i++) {\r\n            var schema = ctl.requestSchemas[i];\r\n            for (var j = 0, jj = schema.tileMatrixLimits.length; j < jj; j++) {\r\n                var tml = schema.tileMatrixLimits[j];\r\n                if (tml.res < ctl.minResolution) {\r\n                    break;\r\n                }\r\n                ctl.tileCount += (tml.cr - tml.cl + 1) * (tml.rb - tml.rt + 1);\r\n            }\r\n        }\r\n        if (ctl.tileCount) {\r\n            ctl.estimatedMapSize = Math.round(ctl.tileCount * ctl.options.averageTileSize / 1048576);\r\n            text = ctl.getLocaleString('xTiles', { quantity: formatNumber(ctl.tileCount) }) + ' (' + formatSize(ctl, ctl.estimatedMapSize) + ')';\r\n        }\r\n        ctl._dialogDiv.querySelector(ctl._selectors.TILECOUNT).innerHTML = text;\r\n    };\r\n\r\n    const getListElementByMapName = function (ctl, name) {\r\n        const lis = ctl.div.querySelectorAll(ctl._selectors.LISTITEM);\r\n        for (var i = 0, len = lis.length; i < len; i++) {\r\n            const li = lis[i];\r\n            const anchor = li.querySelector('a');\r\n            if (anchor && anchor.innerHTML === name) {\r\n                return li;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const getListElementByMapUrl = function (ctl, url) {\r\n        var hashIdx = url.indexOf('#');\r\n        if (hashIdx >= 0) {\r\n            url = url.substr(0, hashIdx);\r\n        }\r\n        const lis = ctl.div.querySelectorAll(ctl._selectors.LISTITEM);\r\n        for (var i = 0, len = lis.length; i < len; i++) {\r\n            const li = lis[i];\r\n            const anchor = li.querySelector('a');\r\n            if (anchor && anchor.getAttribute('href') === url) {\r\n                return li;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    var saveMapToStorage = function (ctl, map) {\r\n        var result = false;\r\n        if (ctl.localStorage) {\r\n            ctl.localStorage.setItem(ctl.LOCAL_STORAGE_KEY_PREFIX + encodeURIComponent(map.url), map.extent + \" \" + map.name);\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var removeMapFromStorage = function (ctl, url) {\r\n        var result = false;\r\n        if (ctl.localStorage) {\r\n            ctl.localStorage.removeItem(ctl.LOCAL_STORAGE_KEY_PREFIX + encodeURIComponent(url));\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const addMap = function (ctl) {\r\n        const map = ctl.currentMap;\r\n        if (saveMapToStorage(ctl, map)) {\r\n            ctl.getRenderedHtml(ctl.CLASS + '-map-node', { name: map.name, url: map.url }, function (html) {\r\n                const parser = new DOMParser();\r\n                ctl.div.querySelector(ctl._selectors.LIST).appendChild(parser.parseFromString(html, 'text/html').body.firstChild);\r\n                ctl.div.querySelector(ctl._selectors.EMPTYLIST).setAttribute('hidden', 'hidden');\r\n                ctl.div.querySelector(ctl._selectors.SEARCH).disabled = false;\r\n            });\r\n            ctl.storedMaps.push(map);\r\n        }\r\n    };\r\n\r\n    const removeMap = function (ctl, url) {\r\n        const map = ctl.findStoredMap({ url: url });\r\n        if (map) {\r\n            if (removeMapFromStorage(ctl, url)) {\r\n                const li = getListElementByMapName(ctl, map.name);\r\n                if (li) {\r\n                    li.parentElement.removeChild(li);\r\n                }\r\n            }\r\n            var idx = ctl.storedMaps.indexOf(map);\r\n            ctl.storedMaps.splice(idx, 1);\r\n            if (!ctl.storedMaps.length) {\r\n                ctl.div.querySelector(ctl._selectors.SEARCH).disabled = true;\r\n                ctl.div.querySelector(ctl._selectors.EMPTYLIST).removeAttribute('hidden');\r\n            }\r\n\r\n            return map.name;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(new Promise(function (resolve, reject) {\r\n            var renderObject = { storedMaps: self.storedMaps, listId: self.CLASS + '-list-' + TC.getUID() };\r\n            self.getRenderedHtml(self.CLASS + '-dialog', null, function (html) {\r\n                self._dialogDiv.innerHTML = html;\r\n                self._dialogDiv.querySelector(self._selectors.NAMETB).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    e.preventDefault();\r\n                    this.selectionStart = 0;\r\n                    this.selectionEnd = this.value.length;\r\n                    this.focus();\r\n\r\n                });\r\n            }).then(function () {\r\n                self.renderData(renderObject, function () {\r\n                    self._dialogDiv.querySelector(self._selectors.OKBTN).addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.generateCache();\r\n                    }, { passive: true });\r\n                    self._dialogDiv.querySelector(self._selectors.NAMETB).addEventListener('input', function () {\r\n                        self._updateReadyState();\r\n                    });\r\n                    self.div.querySelector(self._selectors.NEWBTN).addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.setEditState();\r\n                    }, { passive: true });\r\n                    self.div.querySelector(self._classSelector + '-btn-cancel-draw').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.setReadyState();\r\n                    }, { passive: true });\r\n\r\n                    self.div.querySelector(self._classSelector + '-btn-cancel-dl').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.cancelCacheRequest();\r\n                    }, { passive: true });\r\n\r\n                    const list = self.div.querySelector(self._selectors.LIST);\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.DELETEBTN, function (e) {\r\n                        self.startDeleteMap(e.target.parentElement.querySelector('a').innerHTML);\r\n                    }), { passive: true });\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.EDITBTN, function (e) {\r\n                        setNameEditingState(self, e.target.parentElement);\r\n                    }), { passive: true });\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.CANCELBTN, function (e) {\r\n                        const li = e.target.parentElement;\r\n                        li.querySelector(self._selectors.TEXTBOX).value = li.querySelector('a').innerHTML;\r\n                        setNameReadyState(self, li);\r\n                    }), { passive: true });\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.SAVEBTN, function (e) {\r\n                        const li = e.target.parentElement;\r\n                        setNameReadyState(self, li);\r\n                        const anchor = li.querySelector('a');\r\n                        const newName = li.querySelector(self._selectors.TEXTBOX).value;\r\n                        const map = self.findStoredMap({ url: anchor.getAttribute('href') });\r\n                        if (map) {\r\n                            map.name = newName;\r\n                            anchor.innerHTML = newName;\r\n                            anchor.setAttribute('title', newName);\r\n                            saveMapToStorage(self, map);\r\n                        }\r\n                    }), { passive: true });\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.VIEWBTN, function (e) {\r\n                        const btn = e.target;\r\n                        var showExtent = !btn.classList.contains(TC.Consts.classes.ACTIVE);\r\n                        const viewBtn = self.div.querySelector(self._selectors.VIEWBTN);\r\n                        viewBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n                        viewBtn.parentElement.classList.remove(TC.Consts.classes.ACTIVE);\r\n                        const mapName = btn.parentElement.querySelector('a').innerHTML;\r\n                        if (mapName) {\r\n                            var map = self.findStoredMap({ name: mapName });\r\n                            if (map) {\r\n                                var extent = getExtentFromString(map.extent);\r\n                                self.layer.clearFeatures();\r\n                                if (showExtent) {\r\n                                    self.layer.addPolygon(\r\n                                        [\r\n                                            [\r\n                                                [extent[0], extent[1]],\r\n                                                [extent[0], extent[3]],\r\n                                                [extent[2], extent[3]],\r\n                                                [extent[2], extent[1]]\r\n                                            ]\r\n                                        ]\r\n                                        , {\r\n                                            showsPopup: false\r\n                                        }).then(function () {\r\n                                            self.layer.map.zoomToFeatures(self.layer.features);\r\n                                        });\r\n                                    btn.classList.add(TC.Consts.classes.ACTIVE);\r\n                                    btn.parentElement.classList.add(TC.Consts.classes.ACTIVE);\r\n                                    btn.setAttribute('title', self.getLocaleString('removeMapExtent'));\r\n                                }\r\n                            }\r\n                        }\r\n                    }), { passive: true });\r\n\r\n                    var _filter = function (searchTerm) {\r\n                        searchTerm = searchTerm.toLowerCase();\r\n                        //tc-ctl-omm-map-available-empty\r\n                        const lis = self.div.querySelectorAll(self._selectors.LISTITEM);\r\n                        lis.forEach(function (li) {\r\n                            li.style.display = 'none';\r\n                        });\r\n                        const mapLis = [];\r\n                        lis.forEach(function (li) {\r\n                            if (li.matches('li:not([class]),li.' + TC.Consts.classes.ACTIVE)) {\r\n                                mapLis.push(li);\r\n                            }\r\n                        });\r\n\r\n                        if (searchTerm.length === 0) {\r\n                            mapLis.forEach(function (li) {\r\n                                li.style.removeProperty('display');\r\n                            });\r\n                            self.div.querySelector(self._classSelector + '-map-search-icon').style.visibility = 'visible';\r\n                        } else {\r\n                            self.div.querySelector(self._classSelector + '-map-search-icon').style.visibility = 'hidden';\r\n                            var r = new RegExp(searchTerm, 'i');\r\n                            mapLis.forEach(function (li) {\r\n                                li.style.display = r.test(li.querySelector('a').textContent) ? '' : 'none';\r\n                            });\r\n\r\n                            if (!mapLis.some(function (li) {\r\n                                return !li.hidden;\r\n                            })) {\r\n                                lis.forEach(function (li) {\r\n                                    if (li.matches('[class^=\"tc-ctl-omm-map-not\"]')) {\r\n                                        li.style.removeProperty('display');\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    const trackSearch = self.div.querySelector(self._selectors.SEARCH);\r\n                    const searchListener = function () {\r\n                        _filter(this.value.toLowerCase().trim());\r\n                    };\r\n                    trackSearch.addEventListener('keyup', searchListener);\r\n                    trackSearch.addEventListener('search', searchListener);\r\n\r\n                    self._dialogDiv.querySelector(self._selectors.BLLIST).addEventListener('change', TC.EventTarget.listenerBySelector('input[type=checkbox]', function (e) {\r\n                        const checkbox = e.target;\r\n                        if (checkbox.checked) {\r\n                            self.baseLayers.push(self.map.getLayer(checkbox.value));\r\n                        }\r\n                        else {\r\n                            for (var i = 0, ii = self.baseLayers.length; i < ii; i++) {\r\n                                const bl = self.baseLayers[i];\r\n                                if (bl.id === checkbox.value) {\r\n                                    self.baseLayers.splice(i, 1);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        self.updateRequestSchemas();\r\n                        updateResolutions(self);\r\n                        updateThumbnails(self);\r\n                        self._updateReadyState();\r\n                        showEstimatedMapSize(self);\r\n                    }));\r\n\r\n                    const range = self._dialogDiv.querySelector(self._selectors.RNGMAXRES);\r\n                    const rangeListener = function (e) {\r\n                        updateResolutions(self, {\r\n                            rangeValue: e.target.value\r\n                        });\r\n                        updateThumbnails(self);\r\n                        showEstimatedMapSize(self);\r\n                    };\r\n                    range.addEventListener('input', rangeListener);\r\n                    range.addEventListener('change', rangeListener);\r\n\r\n                    const li = getListElementByMapUrl(self, location.href);\r\n                    if (li) {\r\n                        li.classList.add(TC.Consts.classes.ACTIVE);\r\n                    }\r\n\r\n                    if (TC.Util.isFunction(callback)) {\r\n                        callback();\r\n                    }\r\n                })\r\n                    .then(function () {\r\n                        resolve();\r\n                    })\r\n                    .catch(function (err) {\r\n                        reject(err instanceof Error ? err : Error(err));\r\n                    });\r\n            });\r\n\r\n            // Control para evitar que se cancele una descarga de cache al salir de la página\r\n            window.addEventListener('beforeunload', function (e) {\r\n                if (self.isDownloading) {\r\n                    var msg = self.getLocaleString('cb.mapDownloading.warning');\r\n                    e.returnValue = msg;\r\n                    return msg;\r\n                }\r\n            }, true);\r\n        }));\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        var self = this;\r\n\r\n        const result = TC.control.SWCacheClient.prototype.register.call(self, map);\r\n\r\n        self.getServiceWorker().then(\r\n            function () {\r\n                navigator.serviceWorker.ready.then(function () {\r\n                    navigator.serviceWorker.addEventListener('message', function (event) {\r\n                        switch (event.data.event) {\r\n                            case 'progress':\r\n                                self.trigger(TC.Consts.event.MAPCACHEPROGRESS, { url: event.data.name, loaded: event.data.count, total: event.data.total });\r\n                                break;\r\n                            case 'cached':\r\n                                self.trigger(TC.Consts.event.MAPCACHEDOWNLOAD, { url: event.data.name });\r\n                                break;\r\n                            case 'deleted':\r\n                                self.trigger(TC.Consts.event.MAPCACHEDELETE, { url: event.data.name });\r\n                                break;\r\n                            case 'error':\r\n                                if (event.data.action === self._actions.CREATE) {\r\n                                    TC.error(self.getLocaleString('cb.resourceDownload.error', { url: event.data.url }));\r\n                                }\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                if (navigator.onLine) {\r\n                    // Cacheamos mediante service worker las URLs del manifiesto\r\n                    requestManifest().then(function (obj) {\r\n                        const hashStorageKey = self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME + '.hash';\r\n                        var hash;\r\n                        if (self.localStorage) {\r\n                            hash = self.localStorage.getItem(hashStorageKey);\r\n                        }\r\n                        if (hash !== obj.hash) {\r\n                            self.cacheUrlList(obj.urls);\r\n                            self.one(TC.Consts.event.MAPCACHEDOWNLOAD, function () {\r\n                                const firstLoad = !hash;\r\n                                if (self.localStorage) {\r\n                                    self.localStorage.setItem(hashStorageKey, obj.hash);\r\n                                }\r\n                                if (!firstLoad) {\r\n                                    TC.confirm(self.getLocaleString('newAppVersionAvailable'), function () {\r\n                                        location.reload();\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            function (error) {\r\n                self.renderPromise().then(function () {\r\n                    const container = self.div.querySelector(`.${self.CLASS}-new`);\r\n                    const warning = document.createElement('div');\r\n                    warning.classList.add('tc-alert', 'alert-warning');\r\n                    const header = document.createElement('p');\r\n                    const text = document.createElement('strong');\r\n                    text.innerHTML = self.getLocaleString('offlineMap.error');\r\n                    header.appendChild(text);\r\n                    const reason = document.createElement('p');\r\n                    reason.innerHTML = error.message;\r\n                    warning.appendChild(header);\r\n                    warning.appendChild(reason);\r\n                    container.querySelector(self._selectors.NEWBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n                    container.appendChild(warning);\r\n                });\r\n            }\r\n        ).catch(() => console.log(\"No SW available: no events handled\"));\r\n\r\n        if (self.mapIsOffline) {\r\n            map.div.classList.add(TC.Consts.classes.OFFLINE);\r\n\r\n            // Si no está especificado, el panel de aviso offline se cuelga del div del mapa\r\n            self._offlineMapHintDiv = TC.Util.getDiv(self.options.offlineMapHintDiv);\r\n            if (!self.options.offlineMapHintDiv) {\r\n                map.div.appendChild(self._offlineMapHintDiv);\r\n            }\r\n            self.getRenderedHtml(self.CLASS + '-off-panel', { url: self.getOnlineMapUrl() }, function (html) {\r\n                self._offlineMapHintDiv.innerHTML = html;\r\n                if (!navigator.onLine) {\r\n                    const offPanel = self._offlineMapHintDiv.querySelector(self._selectors.OFFPANEL);\r\n                    offPanel.classList.add(TC.Consts.classes.CONNECTION_OFFLINE);\r\n                    offPanel.classList.remove(TC.Consts.classes.CONNECTION_MOBILE, TC.Consts.classes.CONNECTION_WIFI);\r\n                }\r\n                self._offlineMapHintDiv.querySelector(self._selectors.EXIT).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    TC.confirm(self.getLocaleString('offlineMapExit.confirm'),\r\n                        null,\r\n                        function () {\r\n                            e.preventDefault();\r\n                        });\r\n                });\r\n            });\r\n        }\r\n\r\n        const drawId = self.getUID();\r\n        const layerId = self.getUID();\r\n        self.layerPromise = map.addLayer({\r\n            id: layerId,\r\n            type: TC.Consts.layerType.VECTOR,\r\n            stealth: true,\r\n            owner: self,\r\n            styles: {\r\n                line: map.options.styles.line\r\n            }\r\n        });\r\n        self.layer = null;\r\n        Promise.all([\r\n            self.layerPromise,\r\n            self.renderPromise(),\r\n            map.addControl('draw', {\r\n                id: drawId,\r\n                div: self.div.querySelector(self._selectors.DRAW),\r\n                mode: TC.Consts.geom.RECTANGLE,\r\n                persistent: false\r\n            })\r\n        ]).then(function (objects) {\r\n            const layer = self.layer = objects[0];\r\n            const boxDraw = self.boxDraw = objects[2];\r\n            boxDraw.setLayer(layer);\r\n            boxDraw\r\n                .on(TC.Consts.event.DRAWSTART, function (e) {\r\n                    self.map.toast(self.getLocaleString('clickOnDownloadAreaOppositeCorner'), { type: TC.Consts.msgType.INFO });\r\n                })\r\n                .on(TC.Consts.event.DRAWEND, function (e) {\r\n                    var points = e.feature.geometry[0];\r\n                    var pStart = points[0];\r\n                    var pEnd = points[2];\r\n                    var minx = Math.min(pStart[0], pEnd[0]);\r\n                    var maxx = Math.max(pStart[0], pEnd[0]);\r\n                    var miny = Math.min(pStart[1], pEnd[1]);\r\n                    var maxy = Math.max(pStart[1], pEnd[1]);\r\n                    self.setExtent([minx, miny, maxx, maxy]);\r\n                    const checkboxes = self._dialogDiv.querySelectorAll('input[type=checkbox]');\r\n                    checkboxes.forEach(function (checkbox) {\r\n                        // Comprobamos que la extensión del mapa está disponible a alguna resolución\r\n                        const layer = self.map.getLayer(checkbox.value);\r\n                        var li = checkbox;\r\n                        while (li && li.tagName !== 'LI') {\r\n                            li = li.parentElement;\r\n                        }\r\n                        if (layer.wrap.getCompatibleMatrixSets(map.crs).includes(layer.matrixSet)) {\r\n                            const tml = self.wrap.getRequestSchemas({\r\n                                extent: self.extent,\r\n                                layers: [layer]\r\n                            })[0].tileMatrixLimits;\r\n\r\n                            li.classList.toggle(TC.Consts.classes.HIDDEN, !tml.length);\r\n                        }\r\n                        else {\r\n                            li.classList.add(TC.Consts.classes.HIDDEN);\r\n                        }\r\n                    });\r\n                    const visibleLi = self._dialogDiv.querySelector(self._selectors.BLLISTITEM + ':not(.' + TC.Consts.classes.HIDDEN + ')');\r\n                    self._dialogDiv.querySelector(self._selectors.BLLISTTEXT).innerHTML = self.getLocaleString(visibleLi ? 'selectAtLeastOne' : 'cb.noMapsAtSelectedExtent');\r\n\r\n                    updateThumbnails(self);\r\n                    showEstimatedMapSize(self);\r\n                    TC.Util.showModal(self._dialogDiv.querySelector(self._classSelector + '-dialog'), {\r\n                        openCallback: function () {\r\n                            setTimeout(function () { // Este timeout evita el pulsado accidental cuando sale el diálogo\r\n                                checkboxes.forEach(function (cb) {\r\n                                    cb.disabled = false;\r\n                                });\r\n                            }, 100);\r\n                            var time;\r\n                            if (Date.prototype.toLocaleString) {\r\n                                var opt = {};\r\n                                opt.year = opt.month = opt.day = opt.hour = opt.minute = opt.second = 'numeric';\r\n                                time = new Date().toLocaleString(self.map.options.locale.replace('_', '-'), opt);\r\n                            }\r\n                            else {\r\n                                time = new Date().toString();\r\n                            }\r\n                            self._dialogDiv.querySelector(self._selectors.NAMETB).value = time;\r\n                            self._updateReadyState();\r\n                        },\r\n                        closeCallback: function () {\r\n                            checkboxes.forEach(function (cb) {\r\n                                cb.disabled = true;\r\n                            });\r\n                            self.boxDraw.layer.clearFeatures();\r\n                        }\r\n                    });\r\n                });\r\n\r\n            map.on(TC.Consts.event.CONTROLDEACTIVATE, function (e) {\r\n                if (boxDraw === e.control) {\r\n                    if (self._state === self._states.EDITING) {\r\n                        self.setReadyState();\r\n                    }\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        var addRenderedListNode = function (layer) {\r\n            var result = false;\r\n            const blList = self._dialogDiv.querySelector(self._selectors.BLLIST);\r\n            const isLayerAdded = function () {\r\n                return !!blList.querySelector('li[data-layer-uid=\"' + layer.id + '\"]');\r\n            };\r\n            var isValidLayer = layer.type === TC.Consts.layerType.WMTS && !layer.mustReproject;\r\n            if (TC.Util.detectSafari() && TC.Util.detectIOS()) {\r\n                isValidLayer = isValidLayer && TC.Util.isSameOrigin(layer.url);\r\n            }\r\n            if (isValidLayer && !isLayerAdded()) {\r\n                result = true;\r\n                self.getRenderedHtml(self.CLASS + '-bl-node', layer, function (html) {\r\n                    if (!isLayerAdded()) {\r\n                        const parser = new DOMParser();\r\n                        blList.appendChild(parser.parseFromString(html, 'text/html').body.firstChild);\r\n                    }\r\n                });\r\n            }\r\n            return result;\r\n        };\r\n\r\n        const addLayer = function (layer) {\r\n            if (layer.isBase && self.mapIsOffline) {\r\n                // Capamos las resoluciones de la capa\r\n                const resolutions = layer.getResolutions();\r\n                if (resolutions) {\r\n                    const cachedResolutions = resolutions.filter(r => r >= self.currentMapDefinition.res);\r\n                    if (cachedResolutions.length) {\r\n                        layer.setResolutions(cachedResolutions);\r\n                    }\r\n                }\r\n            }\r\n            //14/03/2019 GLS: esperamos a que se haya renderizado el dialogo para obtener la lista\r\n            self.renderPromise().then(function () {\r\n                addRenderedListNode(layer);\r\n            });\r\n        };\r\n\r\n        map\r\n            .on(TC.Consts.event.LAYERADD, function (e) {\r\n                addLayer(e.layer);\r\n            })\r\n            .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                //14/03/2019 GLS: esperamos a que se haya renderizado el dialogo para obtener la lista\r\n                self.renderPromise().then(function () {\r\n                    const layer = e.layer;\r\n                    if (layer.type === TC.Consts.layerType.WMTS) {\r\n                        const li = self._dialogDiv\r\n                            .querySelector(self._selectors.BLLIST)\r\n                            .querySelector('li[data-layer-uid=\"' + layer.id + '\"]');\r\n                        li.parentElement.removeChild(li);\r\n                    }\r\n                });\r\n            })\r\n            .on(TC.Consts.event.PROJECTIONCHANGE, function (e) {\r\n                map.baseLayers.forEach(l => addLayer(l));\r\n            });\r\n\r\n        map.ready(function () {\r\n            if (self.mapIsOffline) {\r\n                // Deshabilitamos los controles que no son usables en modo offline\r\n                var offCtls = [];\r\n                var i, len;\r\n                for (i = 0, len = self.offlineControls.length; i < len; i++) {\r\n                    var offCtl = self.offlineControls[i];\r\n                    offCtl = offCtl.substr(0, 1).toUpperCase() + offCtl.substr(1);\r\n                    offCtls = offCtls.concat(map.getControlsByClass('TC.control.' + offCtl));\r\n                }\r\n\r\n                for (i = 0, len = map.controls.length; i < len; i++) {\r\n                    var ctl = map.controls[i];\r\n                    if (offCtls.indexOf(ctl) < 0) {\r\n                        ctl.disable();\r\n                    }\r\n                }\r\n\r\n                document.querySelectorAll(self._selectors.OFFLINEHIDDEN).forEach(function (elm) {\r\n                    elm.classList.add(TC.Consts.classes.HIDDEN);\r\n                });\r\n            }\r\n        });\r\n\r\n        map.loaded(function () {\r\n\r\n            self.layerPromise.then(function (layer) {\r\n                map.putLayerOnTop(layer);\r\n            });\r\n\r\n            self.renderPromise().then(function () {\r\n                self.div.querySelector(self._selectors.NEWBTN).disabled = false;\r\n                map.baseLayers.forEach(addRenderedListNode);\r\n            });\r\n\r\n            if (self.mapIsOffline) {\r\n                const mapDef = self.currentMapDefinition;\r\n                const isSameLayer = function (layer, mapDefLayer) {\r\n                    const layerUrl = layer.url.indexOf('//') === 0 ? location.protocol + layer.url : layer.url;\r\n                    return (layerUrl === mapDef.url[mapDefLayer.urlIdx] && layer.layerNames === mapDefLayer.id && layer.matrixSet === mapDef.tms[mapDefLayer.tmsIdx]);\r\n                };\r\n                // Añadimos al mapa las capas guardadas que no están por defecto\r\n                const missingLayers = map.options.availableBaseLayers\r\n                    .filter((abl) => abl.type === TC.Consts.layerType.WMTS) // Capas cacheables\r\n                    .filter((abl) => { // Que estén en el mapa sin conexión\r\n                        return mapDef.layers.some((l) => isSameLayer(abl, l));\r\n                    })\r\n                    .filter((abl) => { // Que no estén en las capas por defecto\r\n                        return !map.baseLayers.some((l) => l.id === abl.id);\r\n                    });\r\n                Promise.all(missingLayers.map((layer) => {\r\n                    return map.addLayer(TC.Util.extend({}, layer, { isBase: true }));\r\n                })).finally(function () {\r\n                    // Obtenemos las capas cacheadas\r\n                    const cachedLayers = [];\r\n                    for (var i = 0, ii = mapDef.layers.length; i < ii; i++) {\r\n                        for (var j = 0, jj = map.baseLayers.length; j < jj; j++) {\r\n                            const baseLayer = map.baseLayers[j];\r\n                            if (baseLayer && baseLayer.type === TC.Consts.layerType.WMTS && isSameLayer(baseLayer, mapDef.layers[i])) {\r\n                                cachedLayers.push(baseLayer);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (cachedLayers.length) {\r\n                        map.setBaseLayer(cachedLayers[0], function () {\r\n                            // Quitamos las capas no disponibles (la capa en blanco la mantenemos)\r\n                            for (var i = map.baseLayers.length - 1; i >= 0; i--) {\r\n                                const baseLayer = map.baseLayers[i];\r\n                                if (baseLayer && baseLayer.type !== TC.Consts.layerType.VECTOR && !cachedLayers.includes(baseLayer)) {\r\n                                    map.removeLayer(baseLayer);\r\n                                }\r\n                            }\r\n\r\n                            map.setExtent(self.currentMapExtent, { animate: false });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        self\r\n            .on(TC.Consts.event.MAPCACHEDOWNLOAD, function (e) {\r\n                self.isDownloading = false;\r\n                const removeHash = function (url) {\r\n                    const hashIdx = url.indexOf('#');\r\n                    return (hashIdx >= 0) ? url.substr(0, hashIdx) : url;\r\n                }\r\n                const url = removeHash(e.url);\r\n                const li = getListElementByMapUrl(self, url);\r\n                if (li && !self.serviceWorkerEnabled) {\r\n                    // Se ha descargado un mapa cuando se quería borrar. Pasa cuando la cache ya estaba borrada pero la entrada en localStorage no.\r\n                    li.classList.remove(TC.Consts.classes.DISABLED);\r\n                    TC.alert(self.getLocaleString('cb.delete.error'));\r\n                }\r\n                else {\r\n                    if (self.currentMap && url === self.currentMap.url) {\r\n                        addMap(self);\r\n                        map.toast(self.getLocaleString('mapDownloaded', { mapName: self.currentMap.name }));\r\n                    }\r\n                }\r\n                self.currentMap = null;\r\n                self.setReadyState();\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEDELETE, function (e) {\r\n                self.isDownloading = false;\r\n                var mapName = removeMap(self, e.url) || (self.currentMap && self.currentMap.name);\r\n                self.currentMap = null;\r\n                if (mapName) {\r\n                    map.toast(self.getLocaleString('mapDeleted', { mapName: mapName }));\r\n                }\r\n                self.setReadyState();\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEPROGRESS, function (e) {\r\n                var total = e.total;\r\n                if (!total && self.requestSchemas) {\r\n                    total = self.requestSchemas[0].tileCount;\r\n                }\r\n                var loaded = e.loaded;\r\n                if (loaded) {\r\n                    self._loadedCount = loaded;\r\n                }\r\n                else {\r\n                    self._loadedCount += 1;\r\n                    loaded = self._loadedCount;\r\n                }\r\n                self.showDownloadProgress(loaded, total);\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEERROR, function (e) {\r\n                self.isDownloading = false;\r\n                self.setReadyState();\r\n                var msg = self.getLocaleString('cb.mapCreation.error');\r\n                var handleError = true;\r\n                switch (e.reason) {\r\n                    case 'quota':\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonQuota');\r\n                        break;\r\n                    case 'resource':\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonResource');\r\n                        break;\r\n                    case 'manifest':\r\n                        if (e.status == '410') {\r\n                            removeMap(self, e.url);\r\n                        }\r\n                        handleError = false;\r\n                        break;\r\n                    case ALREADY_EXISTS:\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonAlreadyExists');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                if (handleError) {\r\n                    if (TC.Util.detectIE()) {\r\n                        TC.error(msg);\r\n                        TC.alert(self.getLocaleString('cb.mapCreation.error.reasonEdge'));\r\n                    }\r\n                    else {\r\n                        TC.alert(msg);\r\n                    }\r\n                }\r\n                self.currentMap = null;\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.setExtent = function (extent) {\r\n        var self = this;\r\n        if (Array.isArray(extent) && extent.length >= 4) {\r\n            self.extent = extent;\r\n            self.updateRequestSchemas();\r\n        }\r\n    };\r\n\r\n    ctlProto._updateReadyState = function () {\r\n        const self = this;\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled =\r\n            !self.extent ||\r\n            self._dialogDiv.querySelector(self._selectors.NAMETB).value.length === 0 ||\r\n            self._dialogDiv.querySelector(self._selectors.RNGMAXRES).disabled;\r\n    };\r\n\r\n    ctlProto.setReadyState = function () {\r\n        const self = this;\r\n        self._state = self._states.READY;\r\n        self.showDownloadProgress(0, 1);\r\n        self.div.querySelector(self._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.NEW).classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelectorAll(self._selectors.LISTITEM).forEach(function (li) {\r\n            li.classList.remove(TC.Consts.classes.DISABLED);\r\n        });\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled = true;\r\n        self.div.querySelector(self._selectors.NEWBTN).disabled = false;\r\n        self._dialogDiv.querySelector(self._selectors.TILECOUNT).innerHTML = '';\r\n        self.extent = null;\r\n        self._loadedCount = 0;\r\n        if (self.boxDraw) {\r\n            self.boxDraw.cancel();\r\n        }\r\n    };\r\n\r\n    ctlProto.setEditState = function () {\r\n        const self = this;\r\n        self._state = self._states.EDITING;\r\n        self.showDownloadProgress(0, 1);\r\n        self.div.querySelector(self._selectors.NEW).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.DRAWING).classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.map.toast(self.getLocaleString('clickOnDownloadAreaFirstCorner'), { type: TC.Consts.msgType.INFO });\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled = true;\r\n        self.div.querySelector(self._selectors.NEWBTN).disabled = true;\r\n        self._dialogDiv.querySelector(self._selectors.NAMETB).value = '';\r\n        self.boxDraw.activate();\r\n    };\r\n\r\n    ctlProto.generateCache = function () {\r\n        const self = this;\r\n        const options = {\r\n            mapName: self._dialogDiv.querySelector(self._selectors.NAMETB).value\r\n        };\r\n        if (self.findStoredMap({ name: options.mapName })) {\r\n            TC.alert(self.getLocaleString('cb.mapNameAlreadyExists.error', options));\r\n        }\r\n        else {\r\n            var startRequest = function () {\r\n                self.div.querySelector(self._classSelector + '-name').innerHTML = options.mapName;\r\n                self.map.toast(self.getLocaleString('downloadingMap', { mapName: options.mapName }));\r\n                setDownloadingState(self);\r\n                self.requestCache(options);\r\n            };\r\n\r\n            // Usamos Storage API si existe\r\n            if (navigator.storage && navigator.storage.estimate) {\r\n                navigator.storage.estimate().then(function (estimate) {\r\n                    const availableMB = (estimate.quota - estimate.usage) / 1048576;\r\n                    if (self.estimatedMapSize < availableMB) {\r\n                        startRequest();\r\n                    }\r\n                    else {\r\n                        TC.confirm(self.getLocaleString('cb.mapCreation.warning.reasonSize', {\r\n                            mapName: options.mapName,\r\n                            mapSize: formatSize(self, self.estimatedMapSize),\r\n                            availableStorage: formatSize(self, Math.round(availableMB))\r\n                        }), startRequest);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                startRequest();\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.cacheUrlList = function (urlList, options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        self.createCache(opts.name || (self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME), {\r\n            urlList: urlList,\r\n            silent: opts.silent\r\n        });\r\n    };\r\n\r\n    ctlProto.requestCache = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        if (self.map) {\r\n            var extent = opts.extent || self.extent || self.map.getExtent();\r\n            self.updateRequestSchemas({ extent: extent });\r\n\r\n            if (self.requestSchemas) {\r\n                var filterTml = function (elm, i, arr) {\r\n                    var result = elm.res >= self.minResolution;\r\n                    if (!result && i > 0) {\r\n                        result = arr[i - 1].res > self.minResolution;\r\n                    }\r\n                    return result;\r\n                };\r\n                var trimTml = function (tml) {\r\n                    return {\r\n                        mId: tml.mId,\r\n                        cl: tml.cl,\r\n                        cr: tml.cr,\r\n                        rt: tml.rt,\r\n                        rb: tml.rb\r\n                    };\r\n                };\r\n                // Solo mantenemos los esquemas hasta el nivel de resolución mínima o el inmediatamente inferior a ella si no lo tiene\r\n                var requestSchemas = self.requestSchemas.map(function (schema) {\r\n                    return {\r\n                        layerId: schema.layerId,\r\n                        tileMatrixSet: schema.tileMatrixSet,\r\n                        tileMatrixLimits: schema.tileMatrixLimits.filter(filterTml)\r\n                    };\r\n                });\r\n                // Actualizamos el extent para que coincida con las teselas del último nivel de los esquemas\r\n                // También eliminamos del esquema todo lo irrelevante para la petición\r\n                var intersectionExtent = [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY];\r\n                for (var i = 0, len = requestSchemas.length; i < len; i++) {\r\n                    var rs = requestSchemas[i];\r\n                    var tml = rs.tileMatrixLimits[rs.tileMatrixLimits.length - 1];\r\n                    var unitsPerTile = tml.res * tml.tSize;\r\n                    intersectionExtent[0] = Math.min(intersectionExtent[0], tml.origin[0] + unitsPerTile * tml.cl);\r\n                    intersectionExtent[1] = Math.min(intersectionExtent[1], tml.origin[1] - unitsPerTile * (tml.rb + 1));\r\n                    intersectionExtent[2] = Math.max(intersectionExtent[2], tml.origin[0] + unitsPerTile * (tml.cr + 1));\r\n                    intersectionExtent[3] = Math.max(intersectionExtent[3], tml.origin[1] - unitsPerTile * tml.rt);\r\n                    rs.tileMatrixLimits = rs.tileMatrixLimits.map(trimTml);\r\n                }\r\n\r\n\r\n                // Redondeamos previamente para que por errores de redondeo no haya confusión al identificar un mapa\r\n                var precision = Math.pow(10, self.map.wrap.isGeo() ? TC.Consts.DEGREE_PRECISION : TC.Consts.METER_PRECISION);\r\n                intersectionExtent = intersectionExtent.map(function (elm, idx) {\r\n                    var round = (idx < 3) ? Math.ceil : Math.floor;\r\n                    return round(elm * precision) / precision;\r\n                });\r\n\r\n                var mapDefinition = {\r\n                    bBox: intersectionExtent,\r\n                    res: Math.floor(self.minResolution * 1000) / 1000, // Redondeamos previamente para que por errores de redondeo no haya confusión al identificar un mapa\r\n                    url: [],\r\n                    tms: [],\r\n                    format: [],\r\n                    layers: new Array(self.baseLayers.length)\r\n                };\r\n                for (var i = 0, len = self.baseLayers.length; i < len; i++) {\r\n                    var layer = self.baseLayers[i];\r\n                    var layerUrl = layer.url.indexOf('//') === 0 ? location.protocol + layer.url : layer.url;\r\n                    var urlIdx = mapDefinition.url.indexOf(layerUrl);\r\n                    if (urlIdx < 0) {\r\n                        urlIdx = mapDefinition.url.push(layerUrl) - 1;\r\n                    }\r\n                    var tmsIdx = mapDefinition.tms.indexOf(layer.matrixSet);\r\n                    if (tmsIdx < 0) {\r\n                        tmsIdx = mapDefinition.tms.push(layer.matrixSet) - 1;\r\n                    }\r\n                    var shortFormat = layer.format.substr(layer.format.indexOf('/') + 1);\r\n                    var formatIdx = mapDefinition.format.indexOf(shortFormat);\r\n                    if (formatIdx < 0) {\r\n                        formatIdx = mapDefinition.format.push(shortFormat) - 1;\r\n                    }\r\n                    mapDefinition.layers[i] = {\r\n                        urlIdx: urlIdx,\r\n                        id: layer.layerNames,\r\n                        tmsIdx: tmsIdx,\r\n                        formatIdx: formatIdx\r\n                    };\r\n                }\r\n\r\n                var params = TC.Util.getQueryStringParams();\r\n                var e = params[self.MAP_EXTENT_PARAM_NAME] = intersectionExtent.toString();\r\n                params[self.MAP_DEFINITION_PARAM_NAME] = btoa(JSON.stringify(mapDefinition));\r\n                if (self.serviceWorkerEnabled) {\r\n                    params[self.SERVICE_WORKER_FLAG] = 1;\r\n                }\r\n                const u = location.origin + location.pathname + '?' + TC.Util.getParamString(params);\r\n                self.currentMap = { name: opts.mapName, extent: e, url: u };\r\n                self.isDownloading = true;\r\n\r\n                // Guardado mediante service workers\r\n                if (self.serviceWorkerEnabled) {\r\n                    const urlList = [];\r\n                    for (var i = 0, len = requestSchemas.length; i < len; i++) {\r\n                        var schema = requestSchemas[i];\r\n                        var urlPattern = null;\r\n                        for (var j = 0, lenj = self.baseLayers.length; j < lenj; j++) {\r\n                            var l = self.baseLayers[j];\r\n                            if (l.id === schema.layerId) {\r\n                                urlPattern = self.wrap.getGetTilePattern(l);\r\n                                if (l.getFallbackLayer) {\r\n                                    // Esto se usa para meter en almacenamiento local el capabilities de la capa de fallback y evitar errores cuando no haya red\r\n                                    l.getFallbackLayer();\r\n                                }\r\n                                if (l.thumbnail) {\r\n                                    urlList.push(l.thumbnail);\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (urlPattern) {\r\n                            for (var k = 0, lenk = schema.tileMatrixLimits.length; k < lenk; k++) {\r\n                                var tml = schema.tileMatrixLimits[k];\r\n                                for (var r = tml.rt; r <= tml.rb; r++) {\r\n                                    for (var c = tml.cl; c <= tml.cr; c++) {\r\n                                        urlList.push(urlPattern.replace('{TileMatrixSet}', schema.tileMatrixSet).replace('{TileMatrix}', tml.mId).replace('{TileCol}', c).replace('{TileRow}', r));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    urlList.push(u);\r\n                    self.cacheUrlList(urlList, { name: u });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ctlProto.cancelCacheRequest = function () {\r\n        var self = this;\r\n        if (self.currentMap) {\r\n            self.deleteCache(self.currentMap.url).then(function (obj) {\r\n                if (!obj) {\r\n                    self.currentMap = null;\r\n                }\r\n            });\r\n        }\r\n        self.isDownloading = false;\r\n        self.setReadyState();\r\n    };\r\n\r\n    ctlProto.deleteMap = function (name) {\r\n        var self = this;\r\n\r\n        var map = self.findStoredMap({ name: name });\r\n        if (map) {\r\n            self.deleteCache(map.url);\r\n        }\r\n    };\r\n\r\n    ctlProto.startDeleteMap = function (name) {\r\n        const self = this;\r\n        if (navigator.onLine) {\r\n            if (name) {\r\n                var confirmText = self.getLocaleString('cb.delete.confirm', { mapName: name });\r\n                if (!self.serviceWorkerEnabled) {\r\n                    confirmText = confirmText + \" \" + self.getLocaleString('cb.delete.confirm.connect.warning');\r\n                }\r\n                if (confirm(confirmText)) {\r\n                    if (navigator.onLine) {\r\n                        setDeletingState(self);\r\n                        self.deleteMap(name);\r\n                    } else {\r\n                        TC.alert(self.getLocaleString('cb.delete.conn.alert'));\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            TC.alert(self.getLocaleString('cb.delete.conn.alert'));\r\n        }\r\n    };\r\n\r\n    ctlProto.findStoredMap = function (options) {\r\n        var self = this;\r\n        return self.storedMaps.filter(function (elm) {\r\n            var result = true;\r\n            if (options.name && options.name !== elm.name) {\r\n                result = false;\r\n            }\r\n            if (result && options.url && options.url !== elm.url) {\r\n                result = false;\r\n            }\r\n            return result;\r\n        })[0];\r\n    };\r\n\r\n    ctlProto.showDownloadProgress = function (current, total) {\r\n        const self = this;\r\n        const cs = self._classSelector;\r\n        const count = self.div.querySelector(cs + '-progress-count');\r\n        if (total) {\r\n            var percent = Math.min(Math.round(current * 100 / total), 100);\r\n            var percentString = percent + '%';\r\n            const pr = self.div.querySelector(cs + '-progress-ratio');\r\n            if (pr) {\r\n                pr.style.width = percentString;\r\n            }\r\n            if (count) {\r\n                count.innerHTML = percentString;\r\n            }\r\n        }\r\n        else {\r\n            const pb = self.div.querySelector(cs + '-progress-bar');\r\n            if (pb) {\r\n                pb.classList.add(TC.Consts.classes.HIDDEN);\r\n            }\r\n            if (count) {\r\n                count.innerHTML = self.getLocaleString('xFiles', { quantity: current });\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.updateRequestSchemas = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        opts.extent = opts.extent || self.extent;\r\n        opts.layers = opts.layers || self.baseLayers;\r\n        self.requestSchemas = self.wrap.getRequestSchemas(opts);\r\n        return self.requestSchemas;\r\n    };\r\n\r\n    ctlProto.getResolutions = function () {\r\n        const self = this;\r\n        var result = [];\r\n\r\n        const resolutionMapper = function (tml) {\r\n            return tml.res;\r\n        };\r\n        // Obtenemos un array de resoluciones por cada esquema de cada capa\r\n        const allResolutions = self.requestSchemas.map(function (schema) {\r\n            return schema.tileMatrixLimits.map(resolutionMapper);\r\n        });\r\n\r\n        // \"Hacemos la cremallera\" con los arrays de resoluciones de todas las capas y añadimos resoluciones al array de resultados\r\n        result = result\r\n            .concat.apply(result, allResolutions)\r\n            .sort((a, b) => b - a)\r\n            .filter((elm, idx, arr) => idx === 0 || arr[idx - 1] !== elm);\r\n        return result;\r\n    };\r\n\r\n    ctlProto.getOnlineMapUrl = function () {\r\n        const self = this;\r\n        const params = TC.Util.getQueryStringParams();\r\n        delete params[self.MAP_DEFINITION_PARAM_NAME];\r\n        delete params[self.MAP_EXTENT_PARAM_NAME];\r\n        delete params[self.SERVICE_WORKER_FLAG];\r\n        var newParams = TC.Util.getParamString(params);\r\n        if (newParams.length) {\r\n            newParams = '?' + newParams;\r\n        }\r\n        return location.pathname + newParams + location.hash;\r\n    };\r\n\r\n})();\r\n"]}