{"version":3,"sources":["control/Elevation.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Elevation","apply","this","arguments","displayElevation","resultsPanel","inherit","ctlProto","prototype","CLASS","template","compiler","main","container","depth0","helpers","partials","data","alias1","nullContext","alias2","escapeExpression","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","name","hash","loc","start","line","column","end","useData","1","lambda","3","stack1","fn","program","inverse","4","6","8","noop","elevationProfileCache","Map","removeElevationProfileFromCache","feature","coords","getCoords","delete","toString","register","map","self","Promise","resolve","reject","then","on","Consts","event","FEATUREMODIFY","FEATUREREMOVE","e","LAYERREMOVE","layer","features","forEach","feat","catch","error","getElevationTool","proxyObj","options","elevation","ctl","setElevationToolOptions","Util","extend","displayElevationValue","Point","tool","getElevation","crs","coordinates","geometry","length","targets","locale","Cfg","point","tValue","sValue","displayControls","getControlsByClass","concat","filter","caller","highlightedFeature","featElm","getFeatureElement","target","querySelector","push","currentFeature","Popup","getContainerElement","ResultsPanel","getInfoContainer","getRenderedHtml","originalValue","formatNumber","Math","round","elevationValue","heightValue","toLocaleString","maximumFractionDigits","html","querySelectorAll","elm","remove","insertAdjacentHTML","displayElevationProfile","featureOrCoords","opts","Polyline","MultiPolyline","Feature","getProfilePanel","open","renderProfile","profile","renderPromise","renderElevationProfile","setCurrentFeature","get","getElevationProfileFromCache","li","getLoadingIndicator","waitId","addWait","render","elevCoords","distance","maxElevation","Number","NEGATIVE_INFINITY","minElevation","POSITIVE_INFINITY","utmCrs","reproject","idx","arr","prev","dx","dy","sqrt","ele","max","min","elevationData","x","elevationGainOptions","hillDeltaThreshold","onlyOriginalElevation","msg","getLocaleString","getElevationGain","isSecondary","elevationProfileChartData","secondaryElevationProfileChartData","showLegend","ignoreCaching","set","cacheElevationProfile","originalElevation","removeWait","timestamp","Date","now","_depTimestamp","elevationOptions","partialCallback","keys","resolution","sampleNumber","callback","isFunction","resetElevationProfile","createProfilePanel","resultsPanelOptions","id","getUID","content","titles","chart","ctx","onmouseout","removeElevationTooltip","tooltip","getElevationTooltip","addControlPromise","addResultsPanelChart","controlContainer","position","POSITION","RIGHT","addControl","displayOn","toUpperCase","substring","div","document","createElement","appendChild","_decorateChartPanel","async","_resultsPanelPromise","upHill","downHill","openChart","profileData","classList","contains","classes","HIDDEN","loadDataOnChart","isMinimized","doVisible","closeElevationProfile","close","that","toggleSelectedStyle","oldClose","d","wrap","showElevationMarker","getElevationChartTooltip","hide","hideElevationMarker"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.control.Elevation = function () {\r\n    const self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self.displayElevation = true;\r\n    self.resultsPanel = null;\r\n};\r\n\r\nTC.inherit(TC.control.Elevation, TC.Control);\r\n\r\n(function () {\r\n    const ctlProto = TC.control.Elevation.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-elev';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/tc-ctl-ftools.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-val'] = TC.apiLocation + \"TC/templates/tc-ctl-elev-val.hbs\";\r\n\r\n\r\n    const elevationProfileCache = new Map();\r\n\r\n    const getElevationProfileFromCache = function (feature) {\r\n        if (feature) {\r\n            const coords = feature.getCoords();\r\n            if (coords) {\r\n                return elevationProfileCache.get(coords.toString());\r\n            }\r\n            return null;\r\n        }\r\n    };\r\n\r\n    const cacheElevationProfile = function (feature, data) {\r\n        if (feature) {\r\n            const coords = feature.getCoords();\r\n            if (coords) {\r\n                elevationProfileCache.set(coords.toString(), data);\r\n            }\r\n        }\r\n    };\r\n\r\n    const removeElevationProfileFromCache = function (feature) {\r\n        if (feature) {\r\n            const coords = feature.getCoords();\r\n            if (coords) {\r\n                elevationProfileCache.delete(coords.toString());\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            TC.Control.prototype.register.call(self, map).then(function () {\r\n\r\n                map\r\n                    .on(TC.Consts.event.FEATUREMODIFY + ' ' + TC.Consts.event.FEATUREREMOVE, function (e) {\r\n                        removeElevationProfileFromCache(e.feature);\r\n                    })\r\n                    .on(TC.Consts.event.FEATUREREMOVE, function (e) {\r\n                        removeElevationProfileFromCache(e.feature);\r\n                    })\r\n                    .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                        e.layer.features && e.layer.features.forEach(feat => removeElevationProfileFromCache(feat));\r\n                    });\r\n\r\n                resolve(self);\r\n\r\n            }).catch(function (error) {\r\n                reject(error);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.getElevationTool = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const proxyObj = {\r\n                options: {\r\n                    displayElevation: self.options || true\r\n                },\r\n                elevation: self.elevation,\r\n                map: self.map\r\n            };\r\n            TC.Control.prototype.getElevationTool.call(proxyObj).then(ctl => {\r\n                self.elevation = ctl;\r\n                resolve(ctl);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.setElevationToolOptions = function (options) {\r\n        const self = this;\r\n        TC.Util.extend(self.options, options);       \r\n        if (self.elevation) {\r\n            TC.Util.extend(self.elevation.options, self.options);\r\n        }\r\n    };\r\n\r\n    ctlProto.displayElevationValue = function (feature) {\r\n        const self = this;\r\n        if (feature instanceof TC.feature.Point) {\r\n            self.getElevationTool().then(function (tool) {\r\n                tool.getElevation({\r\n                    crs: self.map.crs,\r\n                    coordinates: [feature.geometry]\r\n                }).then(function (elevation) {\r\n                    if (elevation.length) {\r\n                        const targets = [];\r\n                        const locale = self.map.options.locale || TC.Cfg.locale;\r\n                        const point = elevation[0];\r\n                        const tValue = point[2];\r\n                        const sValue = point.length > 3 ? point[3] : null;\r\n\r\n                        const displayControls = self.map.getControlsByClass('TC.control.Popup')\r\n                            .concat(self.map.getControlsByClass('TC.control.ResultsPanel'));\r\n                        displayControls\r\n                            .filter(ctl => (ctl.caller && ctl.caller.highlightedFeature) === feature)\r\n                            .forEach(function addElevElmToGfiCtl(ctl) {\r\n                                const featElm = ctl.caller.getFeatureElement(feature);\r\n                                if (featElm) {\r\n                                    target = featElm.querySelector('tbody');\r\n                                    targets.push(target);\r\n                                }\r\n                            });\r\n                        displayControls\r\n                            .filter(ctl => ctl.currentFeature === feature)\r\n                            .forEach(function addElevElmToCtl(ctl) {\r\n                                let container;\r\n                                switch (true) {\r\n                                    case TC.control.Popup && ctl instanceof TC.control.Popup:\r\n                                        container = ctl.getContainerElement();\r\n                                        break;\r\n                                    case TC.control.ResultsPanel && ctl instanceof TC.control.ResultsPanel:\r\n                                        container = ctl.getInfoContainer();\r\n                                        break;\r\n                                    default:\r\n                                        break;\r\n                                }\r\n                                if (container) {\r\n                                    target = container.querySelector('tbody');\r\n                                    targets.push(target);\r\n                                }\r\n                            });\r\n\r\n                        targets.forEach(function addElevElmToTarget(target) {\r\n                            self.getRenderedHtml(self.CLASS + '-val', {\r\n                                originalValue: feature.geometry[2] ? TC.Util.formatNumber(Math.round(feature.geometry[2]), locale) : '',\r\n                                elevationValue: tValue !== null ? TC.Util.formatNumber(Math.round(tValue), locale) : '',\r\n                                heightValue: sValue ? sValue.toLocaleString(locale, { maximumFractionDigits: 1 }) : ''\r\n                            }, function (html) {\r\n                                target.querySelectorAll(`tr[class|=${self.CLASS}-pair]`).forEach(elm => elm.remove());\r\n                                target.insertAdjacentHTML('beforeend', html);\r\n                            });\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.displayElevationProfile = function (featureOrCoords, opts) {\r\n        const self = this;\r\n        const options = opts || {};\r\n        let coords;\r\n        switch (true) {\r\n            case TC.feature.Polyline && featureOrCoords instanceof TC.feature.Polyline:\r\n                coords = featureOrCoords.geometry;\r\n                break;\r\n            case TC.feature.MultiPolyline && featureOrCoords instanceof TC.feature.MultiPolyline:\r\n                coords = featureOrCoords.geometry[0];\r\n                break;\r\n            case featureOrCoords instanceof TC.Feature:\r\n                return;\r\n            default:\r\n                coords = featureOrCoords;\r\n        }\r\n        self.getProfilePanel().then(function (resultsPanel) {\r\n            resultsPanel.open();\r\n        });\r\n        const renderProfile = function (profile) {\r\n            self.getProfilePanel().then(function (resultsPanel) {\r\n                resultsPanel.renderPromise().then(function () {\r\n                    self.renderElevationProfile(profile);\r\n                });\r\n            });\r\n        };\r\n        if (featureOrCoords instanceof TC.Feature) {\r\n            self.getProfilePanel().then(function (resultsPanel) {\r\n                resultsPanel.setCurrentFeature(featureOrCoords);\r\n            });\r\n            const profile = getElevationProfileFromCache(featureOrCoords);\r\n            if (profile) {\r\n                renderProfile(profile);\r\n                return;\r\n            }\r\n        }\r\n        const li = self.map.getLoadingIndicator();\r\n        const waitId = li && li.addWait();\r\n        const render = function (elevCoords, options) {\r\n            let distance = 0.0;\r\n            let maxElevation = Number.NEGATIVE_INFINITY;\r\n            let minElevation = Number.POSITIVE_INFINITY;\r\n            if (self.map.crs !== self.map.options.utmCrs) {\r\n                elevCoords = TC.Util.reproject(elevCoords, self.map.crs, self.map.options.utmCrs);\r\n            }\r\n            const profile = elevCoords\r\n                .map(function calculateDistanceAndExtremes(point, idx, arr) {\r\n                    let prev = idx === 0 ? point : arr[idx - 1];\r\n                    const dx = point[0] - prev[0];\r\n                    const dy = point[1] - prev[1];\r\n                    distance += Math.sqrt(dx * dx + dy * dy);\r\n                    var ele = point[2] || 0;\r\n                    if (typeof ele === 'number') {\r\n                        maxElevation = Math.max(ele, maxElevation);\r\n                        minElevation = Math.min(ele, minElevation);\r\n                    }\r\n                    return [distance, ele];\r\n                });\r\n            if (profile.length === 1) {\r\n                // Espera una línea, duplicamos el punto para que no se rompa el renderizado del gráfico\r\n                profile.push(profile[0]);\r\n            }\r\n            let elevationData = {\r\n                x: profile.map(function (elm) {\r\n                    return elm[0];\r\n                }),\r\n                ele: profile.map(function (elm) {\r\n                    return elm[1] || 0;\r\n                }),\r\n                coords: elevCoords,\r\n                min: minElevation,\r\n                max: maxElevation,\r\n            };\r\n\r\n            const elevationGainOptions = {\r\n                coords: elevCoords\r\n            };\r\n            if (typeof self.options === 'object' && self.map.options.elevation) {\r\n                elevationGainOptions.hillDeltaThreshold = self.options.hillDeltaThreshold || self.map.options.elevation.hillDeltaThreshold;\r\n            }\r\n            if (minElevation === 0 && maxElevation === 0 && options.onlyOriginalElevation) {\r\n                elevationData = {\r\n                    msg: self.getLocaleString(\"geo.trk.chart.chpe.empty\")\r\n                };\r\n            }\r\n            TC.Util.extend(elevationData, TC.tool.Elevation.getElevationGain(elevationGainOptions), options);\r\n\r\n            if (options.isSecondary && self.elevationProfileChartData) {\r\n                if (!self.elevationProfileChartData.secondaryElevationProfileChartData) {\r\n                    self.elevationProfileChartData.showLegend = true;\r\n                    self.elevationProfileChartData.secondaryElevationProfileChartData = [];\r\n                    self.elevationProfileChartData.secondaryElevationProfileChartData.push(elevationData);\r\n                } else {\r\n                    self.elevationProfileChartData.secondaryElevationProfileChartData[0] = elevationData;\r\n                }\r\n            }\r\n\r\n            // Cacheamos el perfil\r\n            if (featureOrCoords instanceof TC.Feature && !options.ignoreCaching) {\r\n                cacheElevationProfile(featureOrCoords, elevationData);\r\n            }\r\n\r\n            renderProfile(elevationData);\r\n        };\r\n        \r\n        self.getElevationTool().then(function (tool) {\r\n            if (options.originalElevation) {\r\n                render(coords, options);\r\n            }\r\n            if (options.onlyOriginalElevation) {\r\n                li && li.removeWait(waitId);\r\n                return;\r\n            }\r\n\r\n            const timestamp = Date.now();\r\n            self._depTimestamp = timestamp;\r\n            const elevationOptions = {\r\n                crs: self.map.crs,\r\n                coordinates: coords,\r\n                partialCallback: function (elevCoords) {\r\n                    if (timestamp === self._depTimestamp) { // Evitamos que una petición anterior machaque una posterior\r\n                        render(elevCoords, { isSecondary: Object.keys(options).length === 0 ? false : true, ignoreCaching: options.ignoreCaching });\r\n                    }\r\n                }\r\n            };\r\n            if (tool.options.hasOwnProperty(\"resolution\")) {\r\n                elevationOptions.resolution = tool.options.resolution;\r\n            }\r\n            if (tool.options.hasOwnProperty(\"sampleNumber\") && tool.options.sampleNumber !== 0) {\r\n                elevationOptions.resolution = 0;\r\n            }\r\n            tool.getElevation(elevationOptions)\r\n                .then(function () {\r\n                    if (options.callback && TC.Util.isFunction(options.callback)) {\r\n                        options.callback();\r\n                    }\r\n                    li && li.removeWait(waitId);\r\n                })\r\n                .catch(function (error) {\r\n                    self.resetElevationProfile();\r\n                    li && li.removeWait(waitId);\r\n                });\r\n        });\r\n    };\r\n\r\n    ctlProto.createProfilePanel = function () {\r\n        const self = this;\r\n\r\n        const resultsPanelOptions = {\r\n            id: self.getUID(),\r\n            content: \"chart\",\r\n            titles: {\r\n                main: self.getLocaleString(\"geo.trk.chart.chpe\"),\r\n                max: self.getLocaleString(\"geo.trk.chart.chpe\")\r\n            },\r\n            chart: {\r\n                ctx: self,\r\n                onmouseout: ctlProto.removeElevationTooltip,\r\n                tooltip: ctlProto.getElevationTooltip\r\n            }\r\n        };\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            var addControlPromise;\r\n            const addResultsPanelChart = function (controlContainer) {\r\n                resultsPanelOptions.position = controlContainer.POSITION.RIGHT;\r\n                addControlPromise = controlContainer.addControl('resultsPanel', resultsPanelOptions);\r\n            };\r\n\r\n            if (self.options.displayOn) {\r\n                var controlContainer = self.map.getControlsByClass('TC.control.' + self.options.displayOn[0].toUpperCase() + self.options.displayOn.substring(1))[0];\r\n                if (!controlContainer) {\r\n                    self.map.addControl(self.options.displayOn).then(addResultsPanelChart);\r\n                } else {\r\n                    addResultsPanelChart(controlContainer);\r\n                }\r\n            } else {\r\n                resultsPanelOptions.div = document.createElement('div');\r\n                self.map.div.appendChild(resultsPanelOptions.div);\r\n                addControlPromise = self.map.addControl('resultsPanel', resultsPanelOptions);\r\n            }\r\n\r\n            addControlPromise.then(function (resultsPanel) {\r\n                resultsPanel.caller = self;\r\n                self.resultsPanel = resultsPanel;\r\n                self._decorateChartPanel();\r\n                resolve(resultsPanel);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.getProfilePanel = async function () {\r\n        const self = this;\r\n        if (!self._resultsPanelPromise) {\r\n            self._resultsPanelPromise = self.createProfilePanel();\r\n        }\r\n        return await self._resultsPanelPromise;\r\n    };\r\n\r\n    ctlProto.resetElevationProfile = function () {\r\n        const self = this;\r\n        if (self.options.displayElevation && self.resultsPanel) {\r\n            self.elevationProfileChartData = {\r\n                x: [0],\r\n                ele: [0],\r\n                coords: [0, 0, 0],\r\n                upHill: 0,\r\n                downHill: 0\r\n            };\r\n            self.resultsPanel.openChart(self.elevationProfileChartData);\r\n        }\r\n    };\r\n\r\n    ctlProto.renderElevationProfile = function (profileData) {\r\n        const self = this;\r\n        if (!profileData.isSecondary) {\r\n            self.elevationProfileChartData = profileData || self.elevationProfileChartData;\r\n        }\r\n        self.getProfilePanel().then(function (resultsPanel) {\r\n            if (!resultsPanel.div.classList.contains(TC.Consts.classes.HIDDEN)) {\r\n                if (profileData.isSecondary) {\r\n                    resultsPanel.loadDataOnChart(self.elevationProfileChartData);\r\n                } else {\r\n                    resultsPanel.openChart(self.elevationProfileChartData);\r\n                }\r\n                if (!resultsPanel.isMinimized()) {\r\n                    resultsPanel.doVisible();\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.closeElevationProfile = function () {\r\n        const self = this;\r\n        self.getProfilePanel().then(function (resultsPanel) {\r\n            resultsPanel.close();\r\n        });\r\n    };\r\n\r\n    ctlProto._decorateChartPanel = function () {\r\n        const self = this;\r\n        self.resultsPanel.setCurrentFeature = function (feature) {\r\n            const that = this;\r\n            if (that.currentFeature) {\r\n                that.currentFeature.toggleSelectedStyle(false);\r\n            }\r\n            that.currentFeature = feature;\r\n            if (feature) {\r\n                feature.toggleSelectedStyle(true);\r\n            }\r\n        };\r\n\r\n        const oldClose = self.resultsPanel.close;\r\n        self.resultsPanel.close = function () {\r\n            const that = this;\r\n            if (that.currentFeature) {\r\n                that.currentFeature.toggleSelectedStyle(false);\r\n            }\r\n            oldClose.call(that);\r\n        };\r\n    };\r\n\r\n    ctlProto.getElevationTooltip = function (d) {\r\n        const self = this;\r\n        self.resultsPanel.wrap.showElevationMarker({\r\n            data: d,\r\n            layer: self.resultsPanel.currentFeature && self.resultsPanel.currentFeature.layer,\r\n            coords: self.elevationProfileChartData.coords\r\n        });\r\n\r\n        return self.resultsPanel.getElevationChartTooltip(d);\r\n    };\r\n\r\n    ctlProto.removeElevationTooltip = function () {\r\n        const self = this;\r\n        if (self.resultsPanel) {\r\n            if (self.resultsPanel.chart && self.resultsPanel.chart.chart) {\r\n                self.resultsPanel.chart.chart.tooltip.hide();\r\n            }\r\n            self.resultsPanel.wrap.hideElevationMarker();\r\n        }\r\n    }\r\n})();"]}