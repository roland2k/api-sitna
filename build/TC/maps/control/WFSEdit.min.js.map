{"version":3,"sources":["control/WFSEdit.js"],"names":["TC","control","SWCacheClient","syncLoadJS","apiLocation","WFSEdit","self","this","apply","arguments","_classSelector","CLASS","layer","callback","Util","isFunction","options","layersEditData","showsOriginalFeatures","showOriginalFeatures","highlightsAdded","highlightsModified","highlightsRemoved","highlightChanges","getBeforeEditLayerStyleFunction","getBeforeEditLayerStyle","styles","point","fillColor","fillOpacity","strokeColor","strokeWidth","strokeOpacity","radius","line","polygon","inherit","newFeatureIdNumber","setSyncState","ctl","layerEditData","getLayerEditData","_saveBtn","disabled","navigator","onLine","checkedOut","isSyncing","setEditState","enabled","div","querySelector","classList","toggle","Consts","classes","HIDDEN","type","layerType","WFS","WMS","wfsLayer","isLayerCropped","filter","Bbox","properties","_recropBtn","setChangesButtonsState","_discardBtn","setChangedState","isChanged","loadJS","window","localforage","url","LOCALFORAGE","storagePrefix","getStoragePrefix","keys","then","i","len","length","indexOf","storeFeature","key","feature","Promise","resolve","reject","obj","geometryType","Polygon","geom","POLYGON","Polyline","POLYLINE","Point","POINT","MultiPolygon","MULTIPOLYGON","MultiPolyline","MULTIPOLYLINE","id","provId","attributes","data","geometry","setItem","catch","error","deleteFeature","removeItem","Error","LOCAL_STORAGE_KEY_PREFIX","featureType","featureNS","getLayerStoreID","getAddedStoragePrefix","LOCAL_STORAGE_ADDED_KEY_PREFIX","getModifiedStoragePrefix","LOCAL_STORAGE_MODIFIED_KEY_PREFIX","getRemovedStoragePrefix","LOCAL_STORAGE_REMOVED_KEY_PREFIX","getLayerTitle","getPath","join","title","ctlProto","prototype","template","1","container","depth0","helpers","partials","alias1","lambda","alias2","escapeExpression","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","3","compiler","main","stack1","nullContext","alias3","name","hash","loc","start","column","end","fn","program","inverse","noop","useData","register","map","addEventListener","_editPromise","addControl","getUID","downloadElevation","snapping","editControl","getAvailableFeaturesToImport","candidates","getPrototypeOf","getLayer","addedFeaturesLayer","modifiedFeaturesLayer","removedFeaturesLayer","beforeEditLayer","importFeatures","features","featuresToImport","newFeatures","constructor","geometryName","on","event","DRAWEND","e","serializable","_storeFeatureAdd","FEATUREMODIFY","feat","fid","storeSuccess","storeFailure","getLocaleString","storedFeature","getFeatureById","setCoords","setData","getData","addFeature","_createAuxFeature","FEATUREADD","FEATUREREMOVE","_storeFeatureRemove","workLayers","forEach","addLayer","LAYERUPDATE","readOnly","getEditableLayer","l","cacheLayer","err","console","log","ZOOM","LAYERADD","LAYERREMOVE","_removingLayer","wmsLayer","setLayer","option","_layerSelect","parentElement","removeChild","LAYERERROR","reason","WFSErrors","MAX_NUM_FEATURES","toast","limit","msgType","WARNING","removeLayer","loaded","wfsLayers","elm","stealth","ready","getControlsByClass","addLayerTool","renderFn","layerId","className","button","text","document","createElement","innerHTML","setAttribute","add","dataset","appendChild","LOADING","getWFSCapabilities","finally","remove","updateEvents","BEFORELAYERUPDATE","CONTROLACTIVATE","CONTROLDEACTIVATE","updateFn","setTimeout","ACTIVE","isRaster","names","actionFn","prevLayer","openEditSession","render","editLayers","wl","push","_set1stRenderPromise","Control","renderData","layers","controlId","_layerDiv","value","viewToolsDiv","_editingWatch","_beforeEditLayerWatch","_addedWatch","_modifiedWatch","_removedWatch","target","checked","highlightAdded","highlightModified","highlightRemoved","colorRegExp","RegExp","onColorClick","input","match","click","onColorChange","prefix","newColor","setStyles","src","getLegendImage","addedColorInputId","CLICK","passive","getElementById","modifiedColorInputId","removedColorInputId","confirm","layerTitle","applyEdits","discardEdits","reload","getExtent","getCRS","refresh","editedFeatures","concat","Geometry","featuresOutside","extent","bbox","ii","intersects","isBase","renderPromise","appendOption","message","selector","mapLayer","setNewLayer","editableLayer","endProcess","_enableEditSerialization","getEditControl","c","setMode","closeEditSession","newFeature","removeFeature","removedStoragePrefix","result","setStyle","setId","getServiceWorker","gfUrl","wrap","getGetFeatureUrl","dftUrl","getDescribeFeatureTypeUrl","createCache","urlList","getFeatureType","li","getLoadingIndicator","waitId","addWait","describeFeatureType","attr","getGeometryType","substr","removeWait","_addAuxLayersToMap","beLayer","afLayer","mfLayer","rfLayer","all","idx","setVisibility","insertLayer","newIdx","getAddedFeaturesLayerStyle","getModifiedFeaturesLayerStyle","getRemovedFeaturesLayerStyle","setComplexGeometry","activate","modes","Edit","mode","MODIFY","OTHER","ADDPOINT","ADDLINE","ADDPOLYGON","constrainModes","VECTOR","deactivate","BLANK_IMAGE","previousLayer","removePromises","notEditableErrorMsg","getCapabilitiesPromise","capabilities","getDisgregatedLayerNames","fullLayerName","colonIdx","shortLayerName","substring","FeatureTypes","Vector","async","wfsLayerOptions","getWFSURL","outputFormat","format","JSON","isLayerEdited","some","optionalLayer","MULTIPOINT","getLegendImageFromStyle","baseTitle","extend","owner","aflIsOld","zIndex","mflIsOld","rflIsOld","featurePromises","removedFeature","f","modifiedFeature","addedFeature","addedStoragePrefix","modifiedStoragePrefix","res","rej","getItem","readFeature","k","clone","addPromise","idNumber","parseInt","lastIndexOf","Math","max","addPoint","addPolyline","addPolygon","addMultiPolyline","addMultiPolygon","newFeat","state","Layer","IDLE","onLayerUpdate","off","modified","unmodifiedFeature","newData","oldValue","newValue","response","transactionSummary","totalInserted","totalUpdated","totalDeleted","deleteCache","INFO","code","ERROR","_joinedFeatureAttributes","clearFeatures","setSelectedFeatures","modifyControl","closeAttributes","show","highlight","getStyleFromFeatureType","getNegativeColor","color","rgba","getRGBA","toString","padStart","dash","lineDash","colorizeLayer","addedCustomColor","modifiedCustomColor","removedCustomColor"],"mappings":"AAAAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGC,QAAQC,eACZF,GAAGG,WAAWH,GAAGI,YAAc,4BAGnCJ,GAAGC,QAAQI,QAAU,WACjB,MAAMC,EAAOC,KAEbP,GAAGC,QAAQC,cAAcM,MAAMD,KAAME,WAErCH,EAAKI,eAAiB,IAAMJ,EAAKK,MAEjCL,EAAKM,MAAQ,KAEbN,EAAKO,SAAWb,GAAGc,KAAKC,WAAWN,UAAU,IAAMA,UAAU,GAAMH,EAAKU,QAAQH,SAAWP,EAAKU,QAAQH,SAAW,KACnHP,EAAKW,eAAiB,GACtBX,EAAKY,sBAAsE,kBAAtCZ,EAAKU,QAAQG,sBAAsCb,EAAKU,QAAQG,qBACrGb,EAAKc,gBAAkBd,EAAKe,mBAAqBf,EAAKgB,kBAA8D,kBAAlChB,EAAKU,QAAQO,kBAAkCjB,EAAKU,QAAQO,iBACzIvB,GAAGc,KAAKC,WAAWT,EAAKU,QAAQQ,mCACjClB,EAAKkB,gCAAkClB,EAAKmB,yBAEhDnB,EAAKoB,OAASpB,EAAKU,QAAQU,QAAU,CACjCC,MAAO,CACHC,UAAW,UACXC,YAAa,GACbC,YAAa,UACbC,YAAa,EACbC,cAAe,EACfC,OAAQ,GAEZC,KAAM,CACFJ,YAAa,UACbC,YAAa,EACbC,cAAe,GAEnBG,QAAS,CACLP,UAAW,UACXC,YAAa,GACbC,YAAa,UACbC,YAAa,EACbC,cAAe,KAK3BhC,GAAGoC,QAAQpC,GAAGC,QAAQI,QAASL,GAAGC,QAAQC,gBAE1C,WACI,IAAImC,EAAqB,EACzB,MAIMC,EAAe,SAAUC,GAC3B,MAAMC,EAAgBD,EAAIE,mBAC1BF,EAAIG,SAASC,WAAaC,UAAUC,QAAUL,GAAiBA,EAAcM,aAAeP,EAAIQ,WAG9FC,EAAe,SAAUT,EAAKU,GAChCV,EAAIW,IAAIC,cAAcZ,EAAI7B,eAAiB,SAAS0C,UAAUC,OAAOrD,GAAGsD,OAAOC,QAAQC,QAASP,IAAYV,EAAI3B,SAAW2B,EAAI3B,MAAM6C,OAASzD,GAAGsD,OAAOI,UAAUC,KAAOpB,EAAI3B,MAAM6C,OAASzD,GAAGsD,OAAOI,UAAUE,MAChN,GAAIrB,EAAI3B,OAAS2B,EAAI3B,MAAMiD,SAAU,CACjC,MAAMC,EAAiB9D,GAAG+D,QAAU/D,GAAG+D,OAAOC,MAAQzB,EAAI3B,MAAMiD,SAASI,sBAAsBjE,GAAG+D,OAAOC,KACzGzB,EAAI2B,WAAWd,UAAUC,OAAOrD,GAAGsD,OAAOC,QAAQC,QAASM,GAE/DvB,EAAIW,IAAIC,cAAcZ,EAAI7B,eAAiB,SAAS0C,UAAUC,OAAOrD,GAAGsD,OAAOC,QAAQC,QAASP,IAG9FkB,EAAyB,SAAU5B,GACrCD,EAAaC,GACb,MAAMC,EAAgBD,EAAIE,mBAC1BF,EAAI6B,YAAYzB,UAAYH,IAAkBA,EAAcM,YAG1DuB,EAAkB,SAAU9B,EAAK+B,GACnC,GAAI/B,EAAI3B,MAAO,CACX,MAAM4B,EAAgBD,EAAIE,mBAC1B,QAAyB,IAAd6B,EAA2B,CAClC9B,EAAcM,WAAawB,EAC3BH,EAAuB5B,QAGvBvC,GAAGuE,QAAQC,OAAOC,YAAa,CAACzE,GAAGsD,OAAOoB,IAAIC,aAAc,WACxD,IAAIC,EAAgBC,EAAiBtC,GACrCkC,YAAYK,OAAOC,KAAK,SAAUD,GAC9B,GAAIA,EAAM,CAEN,IADA,IAAInC,GAAW,EACNqC,EAAI,EAAGC,EAAMH,EAAKI,OAAQF,EAAIC,EAAKD,IACxC,GAAuC,IAAnCF,EAAKE,GAAGG,QAAQP,GAAsB,CACtCjC,GAAW,EACX,MAGRH,EAAcM,YAAcH,EAC5BwB,EAAuB5B,aAOvC4B,EAAuB5B,IAIzB6C,EAAe,SAAUC,EAAKC,GAChC,OAAO,IAAIC,QAAQ,SAAUC,EAASC,GAClCzF,GAAGuE,QAAQC,OAAOC,YAAa,CAACzE,GAAGsD,OAAOoB,IAAIC,aAAc,WACxD,IAAIe,EACAC,EACJ,QAAQ,GACJ,KAAKL,aAAmBtF,GAAGsF,QAAQM,QAC/BD,EAAe3F,GAAGsD,OAAOuC,KAAKC,QAC9B,MACJ,KAAKR,aAAmBtF,GAAGsF,QAAQS,SAC/BJ,EAAe3F,GAAGsD,OAAOuC,KAAKG,SAC9B,MACJ,KAAKV,aAAmBtF,GAAGsF,QAAQW,MAC/BN,EAAe3F,GAAGsD,OAAOuC,KAAKK,MAC9B,MACJ,KAAKZ,aAAmBtF,GAAGsF,QAAQa,aAC/BR,EAAe3F,GAAGsD,OAAOuC,KAAKO,aAC9B,MACJ,KAAKd,aAAmBtF,GAAGsF,QAAQe,cAC/BV,EAAe3F,GAAGsD,OAAOuC,KAAKS,cAGtCZ,EAAM,CACFa,GAAIjB,EAAQiB,IAAMjB,EAAQkB,OAC1BC,WAAYnB,EAAQoB,KACpBjD,KAAMkC,EACNgB,SAAUrB,EAAQqB,UAEtBlC,YAAYmC,QAAQvB,EAAKK,GACpBX,KAAK,WACFS,EAAQ,CAAEF,QAASA,MAEtBuB,MAAM,SAAUC,GACbrB,EAAO,CAAEH,QAASA,EAASwB,MAAOA,WAOhDC,EAAgB,SAAU1B,GAC5B,OAAO,IAAIE,QAAQ,SAAUC,EAASC,GAClCzF,GAAGuE,QAAQC,OAAOC,YAAa,CAACzE,GAAGsD,OAAOoB,IAAIC,aAAc,WACxDF,YAAYuC,WAAW3B,GAClBN,KAAK,WACFS,EAAQH,KAEXwB,MAAM,SAAUC,GACbrB,EAAOwB,MAAMH,WA+B3BjC,EAAmB,SAAUtC,EAAK3B,GACpC,OAAO2B,EAAI2E,yBATS,SAAUtG,GAC9B,IAAIuG,EAAcvG,EAAMI,QAAQmG,YAAY,GACxCA,EAAYhC,QAAQ,KAAO,IAC3BgC,EAAcvG,EAAMI,QAAQoG,UAAY,IAAMD,GAElD,OAAOA,EAAc,IAAMvG,EAAMI,QAAQ0D,IAIH2C,CAAgBzG,GAAS2B,EAAI3B,MAAMiD,UAAYtB,EAAI3B,QAGvF0G,EAAwB,SAAU/E,EAAK3B,GACzC,OAAOiE,EAAiBtC,EAAK3B,GAAS2B,EAAIgF,gCAGxCC,EAA2B,SAAUjF,EAAK3B,GAC5C,OAAOiE,EAAiBtC,EAAK3B,GAAS2B,EAAIkF,mCAGxCC,EAA0B,SAAUnF,EAAK3B,GAC3C,OAAOiE,EAAiBtC,EAAK3B,GAAS2B,EAAIoF,kCAGxCC,EAAgB,SAAUhH,GAC5B,OAAOA,EAAMiH,QAAUjH,EAAMiH,UAAUC,KAAK,YAAUlH,EAAMmH,OAASnH,EAAM2F,IAGzEyB,EAAWhI,GAAGC,QAAQI,QAAQ4H,UAEpCD,EAASrH,MAAQ,iBAEjBqH,EAASE,SAAW,CAACC,EAAI,SAASC,EAAUC,EAAOC,EAAQC,EAAS7B,GAAW,IAAI8B,EAAOJ,EAAUK,OAAQC,EAAON,EAAUO,iBAAkBC,EAAiBR,EAAUQ,gBAAkB,SAASC,EAAQC,GAAuB,GAAIC,OAAOd,UAAUe,eAAeC,KAAKJ,EAAQC,GAA0B,OAAOD,EAAOC,IAAuD,MAAO,0BAAgCJ,EAAOF,EAAkB,MAAVH,EAAiBO,EAAeP,EAAO,MAAQA,EAASA,IAAc,KAAWK,EAAOF,EAAkB,MAAVH,EAAiBO,EAAeP,EAAO,SAAWA,EAASA,IAAc,iBAAkBa,EAAI,SAASd,EAAUC,EAAOC,EAAQC,EAAS7B,GAAW,MAAO,YAAayC,SAAW,CAAC,EAAE,YAAYC,KAAO,SAAShB,EAAUC,EAAOC,EAAQC,EAAS7B,GAAW,IAAI2C,EAAQb,EAAiB,MAAVH,EAAiBA,EAAUD,EAAUkB,aAAe,GAAKZ,EAAON,EAAUO,iBAAkBY,EAAOnB,EAAUK,OAAQG,EAAiBR,EAAUQ,gBAAkB,SAASC,EAAQC,GAAuB,GAAIC,OAAOd,UAAUe,eAAeC,KAAKJ,EAAQC,GAA0B,OAAOD,EAAOC,IAAuD,MAAO,OAAYJ,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,iBAAiB,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,EAAE0H,OAAS,GAAGC,IAAM,CAAC3H,KAAO,EAAE0H,OAAS,QAAa,8IAAyJlB,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,oBAAoB,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,EAAE0H,OAAS,IAAIC,IAAM,CAAC3H,KAAO,EAAE0H,OAAS,QAAa,iBAAiT,OAA1RP,EAAST,EAAeN,EAAQ,QAAQW,KAAKT,EAAkB,MAAVH,EAAiBO,EAAeP,EAAO,UAAYA,EAAQ,CAACmB,KAAO,OAAOC,KAAO,GAAGK,GAAK1B,EAAU2B,QAAQ,EAAGrD,EAAM,GAAGsD,QAAU5B,EAAU6B,KAAKvD,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,EAAE0H,OAAS,GAAGC,IAAM,CAAC3H,KAAO,EAAE0H,OAAS,QAAkBP,EAAS,IAAS,6NAAsOX,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,wBAAwB,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,IAAIC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,QAAa,mNAA6NlB,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,KAAoT,OAAxSgB,EAAST,EAAeN,EAAQ,MAAMW,KAAKT,EAAkB,MAAVH,EAAiBO,EAAeP,EAAO,wBAA0BA,EAAQ,CAACmB,KAAO,KAAKC,KAAO,GAAGK,GAAK1B,EAAU2B,QAAQ,EAAGrD,EAAM,GAAGsD,QAAU5B,EAAU6B,KAAKvD,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,IAAIC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAmBP,EAAS,IAAS,uFAA+FX,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,KAAWK,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,0BAA0B,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,KAAKC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,uIAA+IlB,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,uFAAgGK,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,YAAmBK,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,qBAAqB,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,KAAKC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,iJAA4JlB,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,KAAgT,OAApSgB,EAAST,EAAeN,EAAQ,MAAMW,KAAKT,EAAkB,MAAVH,EAAiBO,EAAeP,EAAO,oBAAsBA,EAAQ,CAACmB,KAAO,KAAKC,KAAO,GAAGK,GAAK1B,EAAU2B,QAAQ,EAAGrD,EAAM,GAAGsD,QAAU5B,EAAU6B,KAAKvD,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,IAAIC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAmBP,EAAS,IAAS,iFAAyFX,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,KAAWK,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,gBAAgB,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,KAAKC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,0IAAkJlB,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,6FAAsGK,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,YAAmBK,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,qBAAqB,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,KAAKC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,uJAAkKlB,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,KAAgT,OAApSgB,EAAST,EAAeN,EAAQ,MAAMW,KAAKT,EAAkB,MAAVH,EAAiBO,EAAeP,EAAO,oBAAsBA,EAAQ,CAACmB,KAAO,KAAKC,KAAO,GAAGK,GAAK1B,EAAU2B,QAAQ,EAAGrD,EAAM,GAAGsD,QAAU5B,EAAU6B,KAAKvD,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,IAAIC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAmBP,EAAS,IAAS,uFAA+FX,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,KAAWK,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,mBAAmB,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,KAAKC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,yIAAiJlB,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,2FAAoGK,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,YAAmBK,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,qBAAqB,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,KAAKC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,qJAAgKlB,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,KAAgT,OAApSgB,EAAST,EAAeN,EAAQ,MAAMW,KAAKT,EAAkB,MAAVH,EAAiBO,EAAeP,EAAO,oBAAsBA,EAAQ,CAACmB,KAAO,KAAKC,KAAO,GAAGK,GAAK1B,EAAU2B,QAAQ,EAAGrD,EAAM,GAAGsD,QAAU5B,EAAU6B,KAAKvD,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,IAAIC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAmBP,EAAS,IAAS,qFAA6FX,EAAOa,EAAkB,MAAVlB,EAAiBO,EAAeP,EAAO,aAAeA,EAASA,IAAc,KAAWK,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,kBAAkB,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,KAAKC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,0IAAkJlB,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,8BAA8B,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,IAAIC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,QAAa,KAAWlB,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,8BAA8B,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,KAAKC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,yMAAqNlB,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,cAAc,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,IAAIC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,KAAWlB,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,cAAc,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,KAAKC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,wGAAgHlB,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,iBAAiB,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,IAAIC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,KAAWlB,EAAOE,EAAeN,EAAQ,QAAQW,KAAKT,EAAO,iBAAiB,CAACgB,KAAO,OAAOC,KAAO,GAAG/C,KAAOA,EAAKgD,IAAM,CAACC,MAAQ,CAACzH,KAAO,GAAG0H,OAAS,KAAKC,IAAM,CAAC3H,KAAO,GAAG0H,OAAS,SAAc,2BAA4BM,SAAU,GAEvrTlC,EAASd,yBAA2B,mBACpCc,EAAST,+BAAiC,UAC1CS,EAASP,kCAAoC,aAC7CO,EAASL,iCAAmC,YAE5CK,EAASmC,SAAW,SAAUC,GAC1B,MAAM9J,EAAOC,KAEb,OAAO,IAAIgF,QAAQ,SAAUC,EAASC,GAElCzF,GAAGC,QAAQC,cAAc+H,UAAUkC,SAASlB,KAAK3I,EAAM8J,GAAKrF,KAAK,WAE7DP,OAAO6F,iBAAiB,SAAU,WAC9B/H,EAAahC,KAEjBkE,OAAO6F,iBAAiB,UAAW,WAC/B/H,EAAahC,KAGjBA,EAAKgK,aAAeF,EAAIG,WAAW,OAAQ,CACvChE,GAAIjG,EAAKkK,SACTtH,IAAK5C,EAAK4C,IAAIC,kBAAkB7C,EAAKK,cACrCe,OAAQpB,EAAKoB,OACb+I,kBAAmBnK,EAAKU,QAAQyJ,kBAChCC,SAAUpK,EAAKU,QAAQ0J,WAE3BpK,EAAKgK,aAAavF,KAAK,SAAUxC,GAC7BjC,EAAKqK,YAAcpI,EAEnBjC,EAAKqK,YAAYC,6BAA+B,WAC5C,MAAMC,EAAa9B,OAAO+B,eAAexK,EAAKqK,aAAaC,6BAA6B3B,KAAK3I,EAAKqK,aAC5FnI,EAAgBlC,EAAKmC,mBAC3B,OAAOoI,EAAW9G,OAAO2B,IACrB,MAAM9E,EAAQwJ,EAAIW,SAASrF,EAAIa,IAC/B,OAAO3F,IAAU4B,EAAcwI,oBAC3BpK,IAAU4B,EAAcyI,uBACxBrK,IAAU4B,EAAc0I,sBACxBtK,IAAU4B,EAAc2I,mBAGpC7K,EAAKqK,YAAYS,eAAiB,SAAUC,GACxC,MAAMC,EAAoBD,GAAY9K,KAAK+K,kBAAoB,GACzD9I,EAAgBlC,EAAKmC,mBACrB8I,EAAc/I,EAAciE,WAAa6E,EAAiBlB,IAAI,SAAU9E,GAC1E,MAAMrB,EAAa,GACnB,IAAK,IAAIoB,KAAO7C,EAAciE,WAC1BxC,EAAWoB,GAAOC,EAAQoB,KAAKrB,GAEnC,OAAO,IAAIC,EAAQkG,YAAYlG,EAAQqB,SAAU,CAAE8E,aAAcjJ,EAAciJ,aAAc/E,KAAMzC,MAClGoH,EACLtC,OAAO+B,eAAexK,EAAKqK,aAAaS,eAAenC,KAAK3I,EAAKqK,YAAaY,IAElFjL,EAAKqK,YACAe,GAAG1L,GAAGsD,OAAOqI,MAAMC,QAAS,SAAUC,GAC/BvL,EAAKmC,mBAAmBqJ,cACxBxL,EAAKyL,iBAAiBF,EAAEvG,WAG/BoG,GAAG1L,GAAGsD,OAAOqI,MAAMK,cAAe,SAAUH,GACzC,MAAMI,EAAOJ,EAAEvG,QACT4G,EAAMD,EAAKzF,QAAUyF,EAAK1F,GAC1B4F,EAAe,WACjB9H,EAAgB/D,GAAM,IAEpB8L,EAAe,WACjBpM,GAAG8G,MAAMxG,EAAK+L,gBAAgB,8CAE5B7J,EAAgBlC,EAAKmC,mBAC3B,GAAID,EAAcsJ,aAAc,CAC5B,IAAIQ,EAAgB9J,EAAcwI,mBAAmBuB,eAAeL,GACpE,GAAII,EAAe,CACfA,EAAcE,UAAUP,EAAKtF,UAC7B2F,EAAcG,QAAQR,EAAKS,WAC3BtH,EAAakC,EAAsBhH,GAAQ4L,EAAKD,GAAMlH,KAAKoH,EAAcC,OAExE,CAED,GADAE,EAAgB9J,EAAcyI,sBAAsBsB,eAAeL,GAChD,CACfI,EAAcE,UAAUP,EAAKtF,UAC7B2F,EAAcG,QAAQR,EAAKS,gBAG3BlK,EAAcyI,sBAAsB0B,WAAWrM,EAAKsM,kBAAkBX,IAE1E7G,EAAaoC,EAAyBlH,GAAQ4L,EAAKD,GAAMlH,KAAKoH,EAAcC,OAIvFV,GAAG1L,GAAGsD,OAAOqI,MAAMkB,WAAY,SAAUhB,GAClCvL,EAAKmC,mBAAmBqJ,cACxBxL,EAAKyL,iBAAiBF,EAAEvG,WAG/BoG,GAAG1L,GAAGsD,OAAOqI,MAAMmB,cAAe,SAAUjB,GACrCvL,EAAKmC,mBAAmBqJ,cACxBxL,EAAKyM,oBAAoBlB,EAAEvG,WAIvC8E,EAAI4C,WAAWC,QAAQrM,GAASN,EAAK4M,SAAStM,IAE9CwJ,EACKsB,GAAG1L,GAAGsD,OAAOqI,MAAMwB,YAAa,SAAUtB,GACvC,MAAMjL,EAAQiL,EAAEjL,MACZA,EAAM6C,OAASzD,GAAGsD,OAAOI,UAAUC,KAAQ/C,EAAMI,QAAQoM,UACzD9M,EAAK+M,iBAAiBzM,GACjBmE,KAAKuI,GAAKhN,EAAKiN,WAAWD,IAC1BzG,MAAM2G,GAAOC,QAAQC,IAAI,uBAAyB9M,EAAM2F,OAGpEmF,GAAG1L,GAAGsD,OAAOqI,MAAMgC,KAAM,SAAU9B,GAChCzB,EAAI4C,WACCjJ,OAAOuJ,GAAKA,EAAEzJ,UACdE,OAAOuJ,GAAKhN,EAAKM,QAAU0M,GAC3BL,QAAQ,SAAUrM,GACfA,EAAMiD,SAAW,KACjBvD,EAAK+M,iBAAiBzM,OAGjC8K,GAAG1L,GAAGsD,OAAOqI,MAAMiC,SAAU,SAAU/B,GACpCvL,EAAK4M,SAASrB,EAAEjL,SAEnB8K,GAAG1L,GAAGsD,OAAOqI,MAAMkC,YAAa,SAAUhC,GACvC,MAAMjL,EAAQiL,EAAEjL,MAChB,GAAIN,EAAKwN,iBAAmBlN,EACxB,QAEAN,EAAKM,QAAUA,GAAUA,EAAMmN,UAAYzN,EAAKM,QAAUA,EAAMmN,WAChEzN,EAAK0N,SAAS,MAElB,MAAMC,EAAS3N,EAAK4N,aAAa/K,+BAA+BvC,EAAM2F,QAClE0H,GACAA,EAAOE,cAAcC,YAAYH,KAGxCvC,GAAG1L,GAAGsD,OAAOqI,MAAM0C,WAAY,SAAUxC,GACtC,MAAMjL,EAAQiL,EAAEjL,MAChB,GAAIA,EAAM6C,OAASzD,GAAGsD,OAAOI,UAAUC,MAAQ/C,EAAMI,QAAQoM,SAAU,CAC/DvB,EAAEyC,SAAWtO,GAAGsD,OAAOiL,UAAUC,kBACjCpE,EAAIqE,MAAMnO,EAAK+L,gBAAgB,0BAA2B,CAAEqC,MAAO7C,EAAEnF,KAAKgI,QAAU,CAAEjL,KAAMzD,GAAGsD,OAAOqL,QAAQC,UAElH,GAAItO,EAAKM,QAAUA,GAAUN,EAAKM,OAASN,EAAKM,MAAMiD,WAAajD,EAAQ,QAChEN,EAAKW,eAAeX,EAAKM,MAAM2F,IACtCjG,EAAK0N,SAAS,MAElB,GAAIpN,EAAMmN,SAAU,CAChB3D,EAAIyE,YAAYjO,GAChBA,EAAMmN,SAASlK,SAAW,SAK1C2B,EAAQlF,KAGZ8J,EAAI0E,OAAO,WACPxO,EAAK4N,aAAavL,UAAW,EAE7B,GAAIrC,EAAKU,QAAQJ,MACbN,EAAK0N,SAAS1N,EAAKU,QAAQJ,WAE1B,CACD,MAAMmO,EAAY3E,EAAI4C,WAAWjJ,OAAO,SAAUiL,GAC9C,OAAOA,EAAIvL,OAASzD,GAAGsD,OAAOI,UAAUC,MAAQqL,EAAIhO,QAAQiO,UAEvC,IAArBF,EAAU7J,OACV5E,EAAK0N,SAASe,EAAU,GAAGxI,IAG3BjG,EAAK0N,SAAS,MAItB1N,EAAKa,qBAAqBb,EAAKY,yBAGnCkJ,EAAI8E,MAAM,WACN9E,EAAI+E,mBAAmB,+BAA+BlC,QAAQ,SAAU1K,GACpEA,EAAI6M,aAAa,CACbC,SAAU,SAAUjH,EAAWkH,GAC3B,MAAMC,EAAYjP,EAAKK,MAAQ,YAC/B,IAAI6O,EAASpH,EAAUjF,cAAc,UAAYoM,GACjD,IAAKC,EAAQ,CACT,MAAMC,EAAOnP,EAAK+L,gBAAgB,mBAClCmD,EAASE,SAASC,cAAc,WACzBC,UAAYH,EACnBD,EAAOK,aAAa,QAASJ,GAC7BD,EAAOpM,UAAU0M,IAAIP,GACrBC,EAAOO,QAAQT,QAAUA,EACzBlH,EAAU4H,YAAYR,GACtB,MAAM5O,EAAQwJ,EAAIW,SAASuE,GAC3B,GAAI1O,EAAM6C,OAASzD,GAAGsD,OAAOI,UAAUE,IAAK,CACxC4L,EAAOpM,UAAU0M,IAAI9P,GAAGsD,OAAOC,QAAQ0M,SACvCrP,EAAMsP,qBACDrJ,MAAM,IAAM2I,EAAOpM,UAAU0M,IAAI9P,GAAGsD,OAAOC,QAAQC,SACnD2M,QAAQ,IAAMX,EAAOpM,UAAUgN,OAAOpQ,GAAGsD,OAAOC,QAAQ0M,WAGrE,OAAOT,GAEXa,aAAc,CAACrQ,GAAGsD,OAAOqI,MAAM2E,kBAAmBtQ,GAAGsD,OAAOqI,MAAMwB,YAAanN,GAAGsD,OAAOqI,MAAM0C,WAAYrO,GAAGsD,OAAOqI,MAAM4E,gBAAiBvQ,GAAGsD,OAAOqI,MAAM6E,mBAC5JC,SAAU,SAAU5E,GAChB,MAAM2D,EAASjP,KACTK,EAAQwJ,EAAIW,SAASyE,EAAOO,QAAQT,SAC1CoB,WAAW,KACPlB,EAAOpM,UAAUC,OAAOrD,GAAGsD,OAAOC,QAAQoN,OAAQrQ,EAAKM,QAAUA,IAClE,KACH4O,EAAO7M,UAAY/B,GAAUA,EAAMgQ,YAAqC,IAAvBhQ,EAAMiQ,MAAM3L,QAEjE4L,SAAU,WACN,MACMlQ,EAAQwJ,EAAIW,SADHxK,KACmBwP,QAAQT,SACpCyB,EAAYzQ,EAAKM,MAFRL,KAGR6C,UAAUgN,OAAOpQ,GAAGsD,OAAOC,QAAQoN,SACrC/P,EAAMiQ,OAAgC,IAAvBjQ,EAAMiQ,MAAM3L,SAAkBtE,EAAMgQ,cAChDhQ,GAASmQ,IAAcnQ,EACvBN,EAAK0N,SAASpN,GAAOmE,KAAK,KAEtBzE,EAAK0Q,oBAIT1Q,EAAK0N,SAAS,mBAWlDhG,EAASiJ,OAAS,SAAUpQ,GACxB,MAAMP,EAAOC,KACb,IAAI2Q,EAAa,GACjB,GAAI5Q,EAAK8J,IACL,IAAK,IAAIpF,EAAI,EAAGC,EAAM3E,EAAK8J,IAAI4C,WAAW9H,OAAQF,EAAIC,EAAKD,IAAK,CAC5D,IAAImM,EAAK7Q,EAAK8J,IAAI4C,WAAWhI,GACzBmM,EAAG1N,OAASzD,GAAGsD,OAAOI,UAAUC,KAAQwN,EAAGnQ,QAAQiO,SACnDiC,EAAWE,KAAK,CACZ7K,GAAI4K,EAAG5K,GACPwB,MAAOoJ,EAAGpJ,OAASoJ,EAAG5K,KAKtC,OAAOjG,EAAK+Q,qBAAqBrR,GAAGsR,QAAQrJ,UAAUsJ,WAAWtI,KAAK3I,EAAM,CACxEkR,OAAQN,EACR/P,qBAAsBb,EAAKY,sBAC3BK,iBAAkBjB,EAAKc,iBAAmBd,EAAKe,oBAAsBf,EAAKgB,kBAC1EmQ,UAAWnR,EAAKiG,IACjB,WAECjG,EAAKoR,UAAYpR,EAAK4C,IAAIC,cAAc7C,EAAKI,eAAiB,UAC9DJ,EAAK4N,aAAe5N,EAAKoR,UAAUvO,cAAc7C,EAAKI,eAAiB,cACvEJ,EAAK4N,aAAa7D,iBAAiB,SAAU,SAAUwB,GACnD7I,EAAa1C,GAAM,GACnBA,EAAK+M,iBAAiB/M,EAAK4N,aAAayD,OACnC5M,KAAK,SAAUnE,GACZN,EAAK0N,SAASpN,EAAMmN,UAAYnN,GAAOmE,KAAK,WACpCzE,EAAKM,OACLN,EAAK0Q,sBAIhBnK,MAAM,KACHvG,EAAK0N,SAAS,UAI1B,MAAM4D,EAAetR,EAAK4C,IAAIC,cAAc7C,EAAKI,eAAiB,SAElEJ,EAAKuR,cAAgBD,EAAazO,kBAAkB7C,EAAKK,oBACzDL,EAAKwR,sBAAwBF,EAAazO,kBAAkB7C,EAAKK,6BACjEL,EAAKyR,YAAcH,EAAazO,kBAAkB7C,EAAKK,0BACvDL,EAAK0R,eAAiBJ,EAAazO,kBAAkB7C,EAAKK,6BAC1DL,EAAK2R,cAAgBL,EAAazO,kBAAkB7C,EAAKK,4BAEzDiR,EAAazO,kBAAkB7C,EAAKK,0BAA0BL,EAAKiG,MAAM8D,iBAAiB,SAAU,SAAUwB,GAC1GvL,EAAKa,qBAAqB0K,EAAEqG,OAAOC,WAGvCP,EAAazO,kBAAkB7C,EAAKK,uBAAuBL,EAAKiG,MAAM8D,iBAAiB,SAAU,SAAUwB,GACvGvL,EAAK8R,eAAevG,EAAEqG,OAAOC,WAGjCP,EAAazO,kBAAkB7C,EAAKK,0BAA0BL,EAAKiG,MAAM8D,iBAAiB,SAAU,SAAUwB,GAC1GvL,EAAK+R,kBAAkBxG,EAAEqG,OAAOC,WAGpCP,EAAazO,kBAAkB7C,EAAKK,yBAAyBL,EAAKiG,MAAM8D,iBAAiB,SAAU,SAAUwB,GACzGvL,EAAKgS,iBAAiBzG,EAAEqG,OAAOC,WAGnC,MAAMI,EAAc,IAAIC,UAAUlS,EAAKK,uBAAuBL,EAAKiG,MAC7DkM,EAAe,SAAU5G,GAC3B,MAAM6G,EAAQnS,KAAK4N,cAAchL,cAAc,qBACzCX,EAAgBlC,EAAKmC,mBACrB7B,EAAQ4B,EAAckQ,EAAMnM,GAAGoM,MAAMJ,GAAa,GAAK,iBAC7D,OAAQ/P,EAAcmD,cAClB,KAAK3F,GAAGsD,OAAOuC,KAAKK,MAChBwM,EAAMf,MAAQ/Q,EAAMc,OAAOC,MAAMG,YACjC,MACJ,KAAK9B,GAAGsD,OAAOuC,KAAKG,SACpB,KAAKhG,GAAGsD,OAAOuC,KAAKS,cAChBoM,EAAMf,MAAQ/Q,EAAMc,OAAOQ,KAAKJ,YAChC,MACJ,QACI4Q,EAAMf,MAAQ/Q,EAAMc,OAAOS,QAAQL,YAG3C4Q,EAAME,SAGJC,EAAgB,SAAUhH,GAC5B,MAAM6G,EAAQ7G,EAAEqG,OACV1P,EAAgBlC,EAAKmC,mBACrBqQ,EAASJ,EAAMnM,GAAGoM,MAAMJ,GAAa,GACrC3R,EAAQ4B,EAAcsQ,EAAS,iBAC/BC,EAAWvQ,EAAcsQ,EAAS,eAAiBJ,EAAMf,MAC/D,OAAQnP,EAAcmD,cAClB,KAAK3F,GAAGsD,OAAOuC,KAAKK,MAChBtF,EAAMc,OAAOC,MAAMG,YAAciR,EACjC,MACJ,KAAK/S,GAAGsD,OAAOuC,KAAKG,SACpB,KAAKhG,GAAGsD,OAAOuC,KAAKS,cAChB1F,EAAMc,OAAOQ,KAAKJ,YAAciR,EAChC,MACJ,QACInS,EAAMc,OAAOS,QAAQL,YAAciR,EACnCnS,EAAMc,OAAOS,QAAQP,UAAYmR,EAGzCnS,EAAMoS,UAAUpS,EAAMc,QACtBpB,MAASwS,UAAeG,IAAMC,EAAetS,EAAO4B,EAAcmD,eAGhEwN,KAAuB7S,EAAKK,wBAAwBL,EAAKiG,KAC/DqL,EAAazO,4BAA4BgQ,OAAuB9I,iBAAiBrK,GAAGsD,OAAOqI,MAAMyH,MAAOX,EAAc,CAAEY,SAAS,IACjI3D,SAAS4D,eAAeH,GAAmB9I,iBAAiB,SAAUwI,GAEtE,MAAMU,KAA0BjT,EAAKK,2BAA2BL,EAAKiG,KACrEqL,EAAazO,4BAA4BoQ,OAA0BlJ,iBAAiBrK,GAAGsD,OAAOqI,MAAMyH,MAAOX,EAAc,CAAEY,SAAS,IACpI3D,SAAS4D,eAAeC,GAAsBlJ,iBAAiB,SAAUwI,GAEzE,MAAMW,KAAyBlT,EAAKK,0BAA0BL,EAAKiG,KACnEqL,EAAazO,4BAA4BqQ,OAAyBnJ,iBAAiBrK,GAAGsD,OAAOqI,MAAMyH,MAAOX,EAAc,CAAEY,SAAS,IACnI3D,SAAS4D,eAAeE,GAAqBnJ,iBAAiB,SAAUwI,GAExEvS,EAAKoC,SAAWpC,EAAK4C,IAAIC,cAAc7C,EAAKI,eAAiB,aAC7DJ,EAAKoC,SAAS2H,iBAAiBrK,GAAGsD,OAAOqI,MAAMyH,MAAO,WAClDpT,GAAGyT,QAAQnT,EAAK+L,gBAAgB,0BAA2B,CAAEqH,WAAY9L,EAActH,EAAKM,SAAW,WACnGN,EAAKqT,gBAEV,CAAEN,SAAS,IAEd/S,EAAK8D,YAAc9D,EAAK4C,IAAIC,cAAc7C,EAAKI,eAAiB,gBAChEJ,EAAK8D,YAAYiG,iBAAiBrK,GAAGsD,OAAOqI,MAAMyH,MAAO,WACrDpT,GAAGyT,QAAQnT,EAAK+L,gBAAgB,4BAA6B,CAAEqH,WAAY9L,EAActH,EAAKM,SAAW,WACrGN,EAAKsT,kBAEV,CAAEP,SAAS,IAEd/S,EAAK4D,WAAa5D,EAAK4C,IAAIC,kBAAkB7C,EAAKK,qBAAqBL,EAAKK,kBAC5EL,EAAK4D,WAAWmG,iBAAiBrK,GAAGsD,OAAOqI,MAAMyH,MAAO,WACpD,GAAI9S,EAAKM,MAAO,CACZ,MAAMiT,EAAS,KACX,GAAIvT,EAAKM,OAASN,EAAKM,MAAMiD,UAAY7D,GAAG+D,QAAU/D,GAAG+D,OAAOC,MAAQ1D,EAAKM,MAAMiD,SAASI,sBAAsBjE,GAAG+D,OAAOC,KAAM,CAC9H,MAAMxB,EAAgBlC,EAAKmC,mBAC3BnC,EAAKM,MAAMiD,SAASI,WAAa,IAAIjE,GAAG+D,OAAOC,KAAK,KAAM1D,EAAK8J,IAAI0J,YAAaxT,EAAK8J,IAAI2J,UACzFzT,EAAKM,MAAMiD,SAASmQ,UACpB,GAAIxR,EAAc2I,gBAAiB,CAC/B3I,EAAc2I,gBAAgBlH,WAAa3D,EAAKM,MAAMiD,SAASI,WAC/DzB,EAAc2I,gBAAgB6I,aAIpCxR,EAAgBlC,EAAKmC,mBACrBwR,EAAiBzR,EAAcwI,mBAAmBK,SAAS6I,OAAO1R,EAAcyI,sBAAsBI,SAAU7I,EAAc0I,qBAAqBG,UACrJ4I,EAAe/O,OACflF,GAAGuE,QACEvE,GAAGmU,SACJnU,GAAGI,YAAc,cACjB,WACI,IAAIgU,GAAkB,EACtB,MAAMC,EAAS/T,EAAK8J,IAAI0J,YAClBQ,EAAO,CAAC,CAACD,EAAO,GAAIA,EAAO,IAAK,CAACA,EAAO,GAAIA,EAAO,IAAK,CAACA,EAAO,GAAIA,EAAO,IAAK,CAACA,EAAO,GAAIA,EAAO,KACzG,IAAK,IAAIrP,EAAI,EAAGuP,EAAKN,EAAe/O,OAAQF,EAAIuP,EAAIvP,IAChD,IAAKhF,GAAGmU,SAASK,WAAWP,EAAejP,GAAG2B,SAAU2N,GAAO,CAC3DF,GAAkB,EAClB,MAGJA,EACApU,GAAGyT,QAAQnT,EAAK+L,gBAAgB,uCAAwC,WACpEwH,MAIJA,MAMZA,MAIT,CAAER,SAAS,IAEVrT,GAAGc,KAAKC,WAAWF,IACnBA,QAKZmH,EAASkF,SAAW,SAAUtM,GAC1B,MAAMN,EAAOC,KASRK,EAAM6T,QAAW7T,EAAMI,QAAQoM,UAAaxM,EAAMI,QAAQiO,SAC3D3O,EAAK+M,iBAAiBzM,GACjBmE,KAAK,SAAUuI,IAER1M,EAAMgQ,YAAetD,EAAES,UAZlB,SAAUnN,GAC3B,MAAMqN,EAASyB,SAASC,cAAc,UACtC1B,EAAO4B,aAAa,QAASjP,EAAM2F,IACnC0H,EAAO2B,UAAYhI,EAAchH,GACjCN,EAAKoU,gBAAgB3P,KAAK,WACtBzE,EAAK4N,aAAa8B,YAAY/B,KAQtB0G,CAAa/T,KAGpBiG,MAAO2G,GAAQC,QAAQC,aAAa9M,EAAM2F,4BAA4BiH,EAAIoH,aAIvF5M,EAASgG,SAAW,SAAUpN,GAC1B,MAAMN,EAAOC,KACb,OAAO,IAAIgF,QAAQ,SAAUC,EAASC,GAElC,MAAM2E,EAAM9J,EAAK8J,IACXyK,EAAWvU,EAAK4C,IAAIC,cAAc7C,EAAKI,eAAiB,cAE9DE,EAAQwJ,EAAIW,SAASnK,GACrB,MAAMkU,EAAW1K,EAAI4C,WAAWjJ,OAAOuJ,GAAKA,IAAM1M,GAAO,GAEnDmU,EAAc,WAChB,GAAID,EACAxU,EAAK+M,iBAAiByH,GACjB/P,KAAK,SAAUiQ,GACZ,MAAMC,EAAa,WACf3U,EAAKM,MAAQkU,EACbxU,EAAK4U,yBAAyBJ,GACzB/P,KAAK,WACFzE,EAAK6U,iBAAiBpQ,KAAKqQ,IACvBP,EAASlD,MAAQrR,EAAKM,MAAM2F,GAC5B6O,EAAEC,QAAQ,MACVD,EAAEpH,SAASgH,GACXxP,EAAQlF,EAAKM,WAGpBiG,MAAO2G,IACJlN,EAAK0N,SAAS,MACdvI,EAAO+H,MAIfpD,EAAI4C,WAAW7H,QAAQ6P,IAAkB,EACzCC,IAGA7K,EAAI8C,SAAS8H,GAAejQ,KAAKkQ,KAGxCpO,MAAM,KACHvG,EAAK0N,SAAS,MACdxI,EAAQ,YAGf,CACGlF,EAAKM,OAASN,EAAKM,MAAMiD,WACzBvD,EAAKwN,eAAiBxN,EAAKM,MAAMiD,UAErCvD,EAAK6U,iBAAiBpQ,KAAKqQ,IACvBpS,EAAa1C,GAAM,GAEnBA,EAAKgV,mBACAvQ,KAAK,KACF8P,EAASlD,MAAQ,GACjByD,EAAEC,QAAQ,MACVD,EAAEpH,SAAS,MACX1N,EAAKM,MAAQ,KACb4E,EAAQ,QAEX2K,QAAQ,YACE7P,EAAKwN,qBAMhC,GAAc,OAAVlN,GAAmBN,EAAKM,MAGvB,CACGN,EAAKM,MAAMiD,WACXvD,EAAKwN,eAAiBxN,EAAKM,MAAMiD,UAErCvD,EAAKgV,mBAAmBvQ,KAAK,KACrB+P,GACAC,WARRA,OAeZ/M,EAAS+D,iBAAmB,SAAUzG,GAClC,MAAMhF,EAAOC,KACb+E,EAAQkB,OA1qBD,cAAgBnE,IA2qBvB,MAAMG,EAAgBlC,EAAKmC,mBACrB8S,EAAajV,EAAKsM,kBAAkBtH,GAC1C9C,EAAcwI,mBAAmB2B,WAAW4I,GAC5CnQ,EAAakC,EAAsBhH,GAAQgF,EAAQkB,OAAQ+O,GAAYxQ,KAAK,WACxEV,EAAgB/D,GAAM,IAEvB,WACCN,GAAG8G,MAAMxG,EAAK+L,gBAAgB,6CAItCrE,EAAS+E,oBAAsB,SAAUzH,GACrC,MAAMhF,EAAOC,KACb,IAAI2L,EAAM5G,EAAQkB,QAAUlB,EAAQiB,GAChC4F,EAAe,WACf9H,EAAgB/D,IAGhB8L,EAAe,WACfpM,GAAG8G,MAAMxG,EAAK+L,gBAAgB,8CAElC,MAAM7J,EAAgBlC,EAAKmC,mBAC3B,GAAID,EAAcsJ,aAAc,CAC5B,IAAIQ,EAAgB9J,EAAcwI,mBAAmBuB,eAAeL,GACpE,GAAKI,EAmBA,CACD9J,EAAcwI,mBAAmBwK,cAAclJ,GAC/CvF,EAAcO,EAAsBhH,GAAQ4L,GAAKnH,KAAKoH,EAAcC,OArBpD,CAChB,IAAIqJ,EAAuB/N,EAAwBpH,GAEnD,GADAgM,EAAgB9J,EAAcyI,sBAAsBsB,eAAeL,GAQ9D,CACD1J,EAAcyI,sBAAsBuK,cAAclJ,GAClD9J,EAAc0I,qBAAqByB,WAAWrM,EAAKsM,kBAAkBtH,IACrEyB,EAAcS,EAAyBlH,GAAQ4L,GAAKnH,KAAK,WACrDoH,IACA/G,EAAaqQ,EAAuBvJ,EAAK5G,GAASP,KAAKoH,EAAcC,IACtEA,QAXH,KADAE,EAAgB9J,EAAc0I,qBAAqBqB,eAAeL,IAC9C,CAChB1J,EAAc0I,qBAAqByB,WAAWrM,EAAKsM,kBAAkBtH,IACrEF,EAAaqQ,EAAuBvJ,EAAK5G,GAASP,KAAKoH,EAAcC,OAmBzFpE,EAAS4E,kBAAoB,SAAUtH,GACnC,MACM4G,EAAM5G,EAAQkB,QAAUlB,EAAQiB,GAChC/D,EAFOjC,KAEckC,mBACrBiT,EAAS,IAAIpQ,EAAQkG,YAAYlG,EAAQqB,SAAU,CAAE8E,aAAcjJ,EAAciJ,aAAc/E,KAAMpB,EAAQoH,YACnHgJ,EAAOC,SAAS,MAChBD,EAAOE,MAAM1J,GACb,OAAOwJ,GAGX1N,EAASmN,eAAiB,WACtB,MAAM7U,EAAOC,KACb,OAAOD,EAAKgK,cAAgB,IAAI/E,QAAQ,SAAUC,EAASC,GACvDnF,EAAKoU,gBAAgB3P,KAAK,IAAMS,EAAQlF,EAAKqK,iBAIrD3C,EAASuF,WAAa,SAAU3M,GAC5B,MAAMN,EAAOC,KACb,OAAO,IAAIgF,QAAQ,SAAUC,EAASC,GAClCnF,EAAKuV,mBAAmB9Q,KAAK,WACzB,GAAInC,UAAUC,OAAQ,CAClB,MAAMiT,EAAQlV,EAAMmV,KAAKC,mBACnBC,EAASrV,EAAMsV,4BACjBJ,GAASG,EACT3V,EAAK6V,YAAYtR,EAAiBvE,EAAMM,GAAQ,CAC5CwV,QAAS,CAACN,EAAOG,KAClBlR,KAAK,IAAMS,IAAWsB,GAASrB,EAAOqB,IAGzCtB,SAIJA,MAELqB,MAAMC,GAASrB,EAAOqB,OAIjCkB,EAASqO,eAAiB,SAAUzV,GAChC,MAAMN,EAAOC,KACb,OAAO,IAAIgF,QAAQ,SAAUC,EAASC,GAClC7E,EAAQA,GAASN,EAAKM,MACtB,MAAM0V,EAAKlM,IAAImM,sBACTC,EAASF,GAAMA,EAAGG,UACxB7V,EAAM8V,sBACD3R,KAAK,SAAU0B,GACZnG,EAAK6U,iBAAiBpQ,KAAK,SAAU4F,GACjC,MAAMnI,EAAgBlC,EAAKmC,iBAAiB7B,GAE5C4B,EAAciE,WAAa,GAC3B,IAAK,IAAIpB,KAAOoB,EAAY,CACxB,MAAMkQ,EAAOlQ,EAAWpB,GAClBM,EAAegF,EAAYiM,gBAAgBD,EAAKlT,MACtD,GAAIkC,EAAc,CACdnD,EAAciJ,aAAekL,EAAKnN,KAClChH,EAAcmD,aAAuC,kBAAjBA,EAA6B,KAAOA,OAGxEnD,EAAciE,WAAWpB,GAAOsR,EAGxC,IAAK,IAAItR,KAAO7C,EAAciE,WAAY,CACtC,MAAMkQ,EAAOnU,EAAciE,WAAWpB,GACtCsR,EAAKlT,KAAOkT,EAAKlT,KAAKoT,OAAOF,EAAKlT,KAAK0B,QAAQ,KAAO,GAE1DK,EAAQhD,OAGfqE,MAAM,SAAU2G,GACb/H,EAAO+H,KAEV2C,QAAQ,IAAMmG,GAAMA,EAAGQ,WAAWN,OAI/CxO,EAAS+O,mBAAqB,SAAUnW,GACpC,MAAMN,EAAOC,KACb,OAAO,IAAIgF,QAAQ,SAAUC,EAASC,GAClC7E,EAAQA,GAASN,EAAKM,MACtB,MAAM4B,EAAgBlC,EAAKmC,iBAAiB7B,GACtCoW,EAAUxU,EAAc2I,gBAC9B,GAAI6L,EAAS,CACT,MAAMC,EAAUzU,EAAcwI,mBACxBkM,EAAU1U,EAAcyI,sBACxBkM,EAAU3U,EAAc0I,qBAC9B3F,QAAQ6R,IAAI,CACRhN,IAAI8C,SAAS8J,GACb5M,IAAI8C,SAAS+J,GACb7M,IAAI8C,SAASgK,GACb9M,IAAI8C,SAASiK,KACdpS,KAAK,WACJzE,EAAK+M,iBAAiBzM,GAAOmE,KAAK,SAAUiQ,GACxC,IAAIqC,EAAMjN,IAAIoH,OAAOrM,QAAQ6P,GAC7BgC,EAAQM,cAAchX,EAAKY,uBAC3B+V,EAAQK,cAAchX,EAAKc,iBAC3B8V,EAAQI,cAAchX,EAAKe,oBAC3B8V,EAAQG,cAAchX,EAAKgB,mBAC3BhB,EAAK8J,IAAImN,YAAYP,IAAWK,EAAK,WACjC,MAAMG,EAASH,EAAM,EACrBjN,IAAImN,YAAYN,EAASO,GACzBpN,IAAImN,YAAYL,EAASM,GACzBpN,IAAImN,YAAYJ,EAASK,GAEzBR,EAAQhE,UAAU1S,EAAKmB,wBAAwBuT,IAC/CiC,EAAQjE,UAAU1S,EAAKmX,2BAA2BzC,IAClDkC,EAAQlE,UAAU1S,EAAKoX,8BAA8B1C,IACrDmC,EAAQnE,UAAU1S,EAAKqX,6BAA6B3C,IACpD1U,EAAKuR,cAAcoB,IAAMC,EAAe8B,EAAexS,EAAcmD,cACrErF,EAAKwR,sBAAsBmB,IAAMC,EAAe8D,EAASxU,EAAcmD,cACvErF,EAAKyR,YAAYkB,IAAMC,EAAe+D,EAASzU,EAAcmD,cAC7DrF,EAAK0R,eAAeiB,IAAMC,EAAegE,EAAS1U,EAAcmD,cAChErF,EAAK2R,cAAcgB,IAAMC,EAAeiE,EAAS3U,EAAcmD,cAC/DH,eAMZC,EAAO,IAAIwB,iCAAiCrG,EAAM2F,UAK9DyB,EAASgJ,gBAAkB,WACvB,MAAM1Q,EAAOC,KACb,OAAKD,EAAKM,MAGH,IAAI2E,QAAQ,SAAUC,EAASC,GAElCnF,EAAK+V,iBACAtR,KAAK,SAAUvC,GAEZlC,EAAK6U,iBAAiBpQ,KAAK,SAAU4F,GACjCrK,EAAK+M,iBAAiB/M,EAAKM,OAAOmE,KAAK,SAAUiQ,GAC7CrK,EAAYqD,SAASgH,GACrB,OAAQxS,EAAcmD,cAClB,KAAK3F,GAAGsD,OAAOuC,KAAKS,cACpB,KAAKtG,GAAGsD,OAAOuC,KAAKO,aAChBuE,EAAYiN,oBAAmB,GAC/B,MACJ,QACIjN,EAAYiN,oBAAmB,GAGvCjN,EAAYkN,WACZ7U,EAAa1C,GAAM,GACnB+D,EAAgB/D,GAEhB,MAAMwX,EAAQ,CAAC9X,GAAGC,QAAQ8X,KAAKC,KAAKC,OAAQjY,GAAGC,QAAQ8X,KAAKC,KAAKE,OACjE,OAAQ1V,EAAcmD,cAClB,KAAK3F,GAAGsD,OAAOuC,KAAKK,MAChB4R,EAAM1G,KAAKpR,GAAGC,QAAQ8X,KAAKC,KAAKG,UAChC,MACJ,KAAKnY,GAAGsD,OAAOuC,KAAKG,SACpB,KAAKhG,GAAGsD,OAAOuC,KAAKS,cAChBwR,EAAM1G,KAAKpR,GAAGC,QAAQ8X,KAAKC,KAAKI,SAEhC,MACJ,KAAKpY,GAAGsD,OAAOuC,KAAKC,QACpB,KAAK9F,GAAGsD,OAAOuC,KAAKO,aAChB0R,EAAM1G,KAAKpR,GAAGC,QAAQ8X,KAAKC,KAAKK,YAMxC1N,EAAY2N,eAAeR,GAC3BnN,EAAY0K,QAAQrV,GAAGC,QAAQ8X,KAAKC,KAAKC,QAEzC3X,EAAKyW,qBACAhS,KAAK,IAAMS,KACXqB,MAAQ2G,GAAQ/H,EAAO+H,UAIvC3G,MAAM,SAAU2G,GACTlN,EAAKM,OAASN,EAAKM,MAAM6C,OAASzD,GAAGsD,OAAOI,UAAU6U,OACtDjY,EAAK6U,iBAAiBpQ,KAAK,SAAU4F,GACjCA,EAAYkN,WACZ7U,EAAa1C,GAAM,GACnBqK,EAAY0K,QAAQrV,GAAGC,QAAQ8X,KAAKC,KAAKC,QACzCzS,MAIJC,EAAO+H,OA5DZjI,QAAQE,OAAOwB,MAAM,8BAkEpCe,EAASsN,iBAAmB,WACxB,MAAMhV,EAAOC,KACb,OAAO,IAAIgF,QAAQ,SAAUC,EAASC,GAClCnF,EAAKoU,gBAAgB3P,KAAK,WACtBV,EAAgB/D,GAAM,GACtBA,EAAK6U,iBAAiBpQ,KAAKqQ,GAAKA,EAAEoD,cAClC,MAAMhW,EAAgBlC,EAAKmC,mBAC3B,GAAID,GAAiBA,EAAc2I,gBAAiB,CAChD7K,EAAKuR,cAAcoB,IAAMjT,GAAGsD,OAAOmV,YACnCnY,EAAKwR,sBAAsBmB,IAAMjT,GAAGsD,OAAOmV,YAC3CnY,EAAKyR,YAAYkB,IAAMjT,GAAGsD,OAAOmV,YACjCnY,EAAK0R,eAAeiB,IAAMjT,GAAGsD,OAAOmV,YACpCnY,EAAK2R,cAAcgB,IAAMjT,GAAGsD,OAAOmV,YACnC,MAAMC,EAAgBpY,EAAKM,MAC3BN,EAAK+M,iBAAiB/M,EAAKM,OAAOmE,KAAK,SAAUiQ,GAC7C,MAAM2D,EAAiB,GACjB9J,EAAc,SAAUjO,GACtBwJ,IAAI4C,WAAW7H,QAAQvE,IAAU,GACjC+X,EAAevH,KAAKhH,IAAIyE,YAAYjO,KAG5CiO,EAAYrM,EAAc2I,iBAC1B0D,EAAYrM,EAAc2I,iBAC1B0D,EAAYrM,EAAcwI,oBAC1B6D,EAAYrM,EAAcyI,uBAC1B4D,EAAYrM,EAAc0I,sBAC1B,GAAIwN,IAAkB1D,EAAe,CACjC0D,EAAc7U,SAAW,KACzBgL,EAAYmG,GAEhBzP,QAAQ6R,IAAIuB,GAAgB5T,KAAK,IAAMS,YAI3CA,SAMhBwC,EAASqF,iBAAmB,SAAUzM,GAClC,MAAMN,EAAOC,KACb,OAAO,IAAIgF,QAAQ,SAAUC,EAASC,GAClC,MAAMmT,WAA+BhY,EAAM2F,mBAC3C3F,EAAQN,EAAK8J,IAAMA,IAAIW,SAASnK,GAASA,GAEjCA,EAAM6C,OAASzD,GAAGsD,OAAOI,UAAUC,MAAQ/C,EAAMmN,WAAcnN,EAAMI,QAAQiO,SAAYrO,EAAMI,QAAQoM,UAGlGxM,EAAM6C,OAASzD,GAAGsD,OAAOI,UAAUE,IACpChD,EAAMiD,SACNjD,EAAMiD,SAASgV,yBAAyB9T,KAAK,IAAMS,EAAQ5E,EAAMiD,WAGjEjD,EAAMsP,qBACDnL,KAAK,SAAU+T,GAEZ,MAAMtH,EAAS5Q,EAAMmY,2BACfC,EAAgBxH,EAAO,GACvByH,EAAWD,EAAc7T,QAAQ,KACjC+T,EAAiBF,EAAcG,UAAUF,EAAW,GAEpC,IAAlBzH,EAAOtM,QAAgB4T,EAAaM,aAAapQ,eAAekQ,GAChElZ,GAAGuE,QACEvE,GAAGY,MAAMyY,OACVrZ,GAAGI,YAAc,kBACjBkZ,iBACI,MAAMC,EAAkB,CACpBhT,GAAIjG,EAAKkK,SACT/G,KAAMzD,GAAGsD,OAAOI,UAAUC,IAC1Be,UAAW9D,EAAM4Y,YACjBvV,WAAY3D,EAAK8J,IAAM,IAAIpK,GAAG+D,OAAOC,KAAK,KAAMoG,IAAI0J,YAAa1J,IAAI2J,UAAY,KACjF0F,aAAczZ,GAAGsD,OAAOoW,OAAOC,KAC/B5R,SAAUnH,EAAMiH,UAAUC,KAAK,iBAAYxH,EAAK+L,gBAAgB,oBAChEZ,aAAc,OACdtE,YAAa,CAAC6R,GACd5R,UAfD,UAgBC1F,OAAQpB,EAAKoB,OACbuN,SAAS,GAEbrO,EAAMiD,SAAW,IAAI7D,GAAGY,MAAMyY,OAAOE,GACrC3Y,EAAMiD,SAASkK,SAAWnN,EAC1B4E,EAAQ5E,EAAMiD,YAKtB4B,EAAO,IAAIwB,MAAM2R,MAGxB/R,MAAO2G,GAAQ/H,EAAO+H,IAG1B5M,EAAM6C,OAASzD,GAAGsD,OAAOI,UAAU6U,OACxC/S,EAAQ5E,GAGR6E,EAAO,IAAIwB,MAAM2R,IAlDjBhY,EAAMiY,yBAAyB9T,KAAK,IAAMS,EAAQ5E,IAsDtD6E,EAAO,IAAIwB,MAAM,wBAK7Be,EAAS4R,cAAgB,SAAUhZ,GAC/B,MAAMN,EAAOC,KACb,OAAO,IAAIgF,QAAQ,SAAUC,EAASC,GAClC,MAAMb,EAAgBC,EAAiBvE,EAAMM,GAC7CZ,GAAGuE,QAAQC,OAAOC,YAAa,CAACzE,GAAGsD,OAAOoB,IAAIC,aAAc,WACxDF,YAAYK,OAAOC,KAAK,SAAUD,GAE1BU,IADAV,GACQA,EAAK+U,KAAKxU,GAAsC,IAA/BA,EAAIF,QAAQP,YAUzDoD,EAASvF,iBAAmB,SAAUqX,GAClC,MACMlZ,EAAQkZ,GADDvZ,KACuBK,MACpC,OAAKA,EAFQL,KAKDU,eAAeL,EAAM2F,IALpBhG,KAK+BU,eAAeL,EAAM2F,KAAO,CACpEzD,YAAY,GAHL,MAOf,MAAMoQ,EAAiB,SAAUtS,EAAO+E,GACpC,OAAQA,GACJ,KAAK3F,GAAGsD,OAAOuC,KAAKK,MACpB,KAAKlG,GAAGsD,OAAOuC,KAAKkU,WAChB,OAAO/Z,GAAGc,KAAKkZ,wBAAwBpZ,EAAMc,OAAOC,MAAO,CAAEgE,aAAc3F,GAAGsD,OAAOuC,KAAKK,QAC9F,KAAKlG,GAAGsD,OAAOuC,KAAKG,SACpB,KAAKhG,GAAGsD,OAAOuC,KAAKS,cAChB,OAAOtG,GAAGc,KAAKkZ,wBAAwBpZ,EAAMc,OAAOQ,KAAM,CAAEyD,aAAc3F,GAAGsD,OAAOuC,KAAKG,WAC7F,QACI,OAAOhG,GAAGc,KAAKkZ,wBAAwBpZ,EAAMc,OAAOS,QAAS,CAAEwD,aAAc3F,GAAGsD,OAAOuC,KAAKC,YAIxGkC,EAASkN,yBAA2B,SAAUtU,GAC1C,MAAMN,EAAOC,KACb,OAAO,IAAIgF,QAAQ,SAAUC,EAASC,GAClCnF,EAAK+M,iBAAiBzM,GACjBmE,KAAK,SAAUiQ,GAEZ,MAAMC,EAAa,WACf,MAAMzS,EAAgBlC,EAAKmC,iBAAiB7B,GAEtCqZ,EAAYrZ,EAAMiH,QAAUjH,EAAMiH,UAAUC,KAAK,YAAUlH,EAAMmH,OAASnH,EAAM2F,GAEtF,IAAI4E,EAAkB3I,EAAc2I,gBAC/BA,IACDA,EAAkB3I,EAAc2I,gBAAkB,IAAInL,GAAGY,MAAMyY,OAAOrZ,GAAGc,KAAKoZ,OAAO,GAAIlF,EAAchU,QAAS,CAC5GuF,GAAIjG,EAAKkK,SACTzC,SAAUkS,OAAe3Z,EAAK+L,gBAAgB,qBAC9Ce,UAAU,EACV+M,MAAO7Z,EACP2O,SAAS,MAIjB,IAAIjE,EAAqBxI,EAAcwI,mBACvC,IAAIoP,GAAW,EACf,IAAKpP,EAAoB,CACrBoP,GAAW,EACXpP,EAAqBxI,EAAcwI,mBAAqB,IAAIhL,GAAGY,MAAMyY,OAAO,CACxE9S,GAAIjG,EAAKkK,SACTzC,SAAUkS,OAAe3Z,EAAK+L,gBAAgB,mBAC9C8N,MAAO7Z,EACP2O,SAAS,EACToL,OAAQ,IAIhB,IAAIpP,EAAwBzI,EAAcyI,sBAC1C,IAAIqP,GAAW,EACf,IAAKrP,EAAuB,CACxBqP,GAAW,EACXrP,EAAwBzI,EAAcyI,sBAAwB,IAAIjL,GAAGY,MAAMyY,OAAO,CAC9E9S,GAAIjG,EAAKkK,SACTzC,SAAUkS,OAAe3Z,EAAK+L,gBAAgB,sBAC9C8N,MAAO7Z,EACP2O,SAAS,EACToL,OAAQ,IAIhB,IAAInP,EAAuB1I,EAAc0I,qBACzC,IAAIqP,GAAW,EACf,IAAKrP,EAAsB,CACvBqP,GAAW,EACXrP,EAAuB1I,EAAc0I,qBAAuB,IAAIlL,GAAGY,MAAMyY,OAAO,CAC5E9S,GAAIjG,EAAKkK,SACTzC,SAAUkS,OAAe3Z,EAAK+L,gBAAgB,qBAC9C8N,MAAO7Z,EACP2O,SAAS,EACToL,OAAQ,IAIhB,MAAMG,EAAkB,GACxB,GAAIJ,GAAYE,GAAYC,EAAU,CAElCrP,EAAqBG,SAAS4B,QAAQ,SAAUwN,GAC5C,MAAMC,EAAI1F,EAAczI,eAAekO,EAAelU,IAClDmU,GACA1F,EAAcQ,cAAckF,KAGpCzP,EAAsBI,SAAS4B,QAAQ,SAAU0N,GAC7C,MAAMD,EAAI1F,EAAczI,eAAeoO,EAAgBpU,IACvD,GAAImU,EAAG,CACHA,EAAElO,UAAUmO,EAAgBhU,UAC5B+T,EAAEjO,QAAQkO,EAAgBjO,cAGlC1B,EAAmBK,SAAS4B,QAAQ,SAAU2N,GACrC5F,EAAczI,eAAeqO,EAAarU,KAC3CiU,EAAgBpJ,KAAK4D,EAAcrI,WAAWrM,EAAKsM,kBAAkBgO,OAG7ErV,QAAQ6R,IAAIoD,GAAiBzV,KAAK,KAC9BvC,EAAcsJ,cAAe,EAC7BtG,EAAQwP,SAGX,CAED,MAAMpQ,EAAgBC,EAAiBvE,EAAM0U,GACvC6F,EAAqBvT,EAAsBhH,EAAM0U,GACjD8F,EAAwBtT,EAAyBlH,EAAM0U,GACvDS,EAAuB/N,EAAwBpH,EAAM0U,GAC3DhV,GAAGuE,QAAQC,OAAOC,YAAa,CAACzE,GAAGsD,OAAOoB,IAAIC,aAAc,WAExDF,YAAYK,OAAOC,KAAK,SAAUD,GAC1BA,GACAA,EACKf,OAAOsB,GAAsC,IAA/BA,EAAIF,QAAQP,IAC1BqI,QAAQ,SAAU5H,GAEfmV,EAAgBpJ,KAAK,IAAI7L,QAAQ,SAAUwV,EAAKC,IA3iCxE,SAAU3V,GAC1B,OAAO,IAAIE,QAAQ,SAAUC,EAASC,GAClCzF,GAAGuE,QAAQC,OAAOC,YAAa,CAACzE,GAAGsD,OAAOoB,IAAIC,aAAc,WACxDF,YAAYwW,QAAQ5V,GACfN,KAAK,SAAU4M,GACZnM,EAAQ,CACJH,IAAKA,EACLC,QAASqM,MAGhB9K,MAAM,SAAUC,GACbrB,EAAOqB,UAiiCqBoU,CAAY7V,GAAKN,KAAK,SAASW,GAC3B,IAAIa,EACA4U,EAAIzV,EAAIL,IACZ,GAAwC,IAApC8V,EAAEhW,QAAQsQ,GAA6B,CACvClP,EAAK4U,EAAEtE,OAAOpB,EAAqBvQ,QACnC,MAAMI,EAAU0P,EAAczI,eAAehG,GAC7CyO,EAAcQ,cAAclQ,GAC5B4F,EAAqByB,WAAWrH,GAASP,KAAK,IAAMgW,EAAIzV,SAGvD,GAAyC,IAArC6V,EAAEhW,QAAQ2V,GAA8B,CAC7CvU,EAAK4U,EAAEtE,OAAOiE,EAAsB5V,QACpC,MAAMI,EAAU0P,EAAczI,eAAehG,GAC7C,GAAIjB,EAAS,CACTA,EAAQkH,UAAU9G,EAAIJ,QAAQqB,UAC9BrB,EAAQmH,QAAQ/G,EAAIJ,QAAQmB,YAC5B,MAAM8O,EAAajQ,EAAQ8V,QAC3B7F,EAAWK,MAAMtQ,EAAQiB,IACzB0E,EAAsB0B,WAAW4I,GAAYxQ,KAAK,IAAMgW,EAAIzV,SAI5DyV,EAAIzV,QAGP,GAAsC,IAAlC6V,EAAEhW,QAAQ0V,GAA2B,CAC1CtU,EAAK4U,EAAEtE,OAAOgE,EAAmB3V,QACjC,IAEImW,EAFAC,EAAWC,SAAShV,EAAGsQ,OAAOtQ,EAAGiV,YAAY,KAAO,IACxDnZ,EAAqBoZ,KAAKC,IAAIrZ,EAAoBiZ,EAAW,GAE7D,OAAQ5V,EAAIJ,QAAQ7B,MAChB,KAAKzD,GAAGsD,OAAOuC,KAAKK,MAChBmV,EAAarG,EAAc2G,SAASjW,EAAIJ,QAAQqB,UAChD,MACJ,KAAK3G,GAAGsD,OAAOuC,KAAKG,SAChBqV,EAAarG,EAAc4G,YAAYlW,EAAIJ,QAAQqB,UACnD,MACJ,KAAK3G,GAAGsD,OAAOuC,KAAKC,QAChBuV,EAAarG,EAAc6G,WAAWnW,EAAIJ,QAAQqB,UAClD,MACJ,KAAK3G,GAAGsD,OAAOuC,KAAKS,cAChB+U,EAAarG,EAAc8G,iBAAiBpW,EAAIJ,QAAQqB,UACxD,MACJ,KAAK3G,GAAGsD,OAAOuC,KAAKO,aAChBiV,EAAarG,EAAc+G,gBAAgBrW,EAAIJ,QAAQqB,UAK/D0U,EAAWtW,KAAK,SAAUkH,GAEtBA,EAAKzF,OAASD,EACd0F,EAAKQ,QAAQ/G,EAAIJ,QAAQmB,YACzB,MAAMuV,EAAU/P,EAAKmP,QACrBY,EAAQrG,SAAS,MACjBqG,EAAQpG,MAAM3J,EAAKzF,QACnBwE,EAAmB2B,WAAWqP,GAASjX,KAAK,IAAOgW,EAAIiB,cAQnFzW,QAAQ6R,IAAIoD,GAAiBzV,KAAK,KAC9BvC,EAAcsJ,cAAe,EAC7BtG,EAAQwP,WAO5B,GAAIA,EAAcvR,OAASzD,GAAGsD,OAAOI,UAAUC,IAC3C,GAAIqR,EAAciH,QAAUjc,GAAGkc,MAAMD,MAAME,KACvClH,QAEC,CACD,MAAMmH,EAAgB,SAAUvQ,GAC5B,GAAIA,EAAEjL,QAAUoU,EAAe,CAC3BC,IACA3U,EAAK8J,IAAIiS,IAAIrc,GAAGsD,OAAOqI,MAAMwB,YAAaiP,KAGlD9b,EAAK8J,IAAIsB,GAAG1L,GAAGsD,OAAOqI,MAAMwB,YAAaiP,QAI7C5W,EAAQwP,QAM5BhN,EAAS2L,WAAa,WAClB,MAAMrT,EAAOC,KACb,GAAID,EAAKM,MAAO,CACZ,MAAM4B,EAAgBlC,EAAKmC,mBAC3B,GAAID,EAAcsJ,aAAc,CAC5BxL,EAAKyC,WAAY,EACjBT,EAAahC,GACb,MAAMgW,EAAKhW,EAAK8J,IAAImM,sBACdC,EAASF,GAAMA,EAAGG,UAElB6F,EAAW9Z,EAAcyI,sBAAsBI,SAASjB,IAAI,SAAU9E,GACxE,MAAMoQ,EAAS,IAAIpQ,EAAQkG,YAAYlG,EAAQqB,SAAU,CAAE8E,aAAcjJ,EAAciJ,eACjF8Q,EAAoB/Z,EAAc2I,gBAAgBE,SAAStH,OAAO2W,GAAKA,EAAEnU,KAAOjB,EAAQiB,IAAI,GAClG,IAAIiW,EACJ,GAAID,EAAmB,CACnBC,EAAU,GACV,IAAK,IAAInX,KAAOC,EAAQoB,KACpB,GAAY,OAARrB,EAAc,CACd,MAAMoX,EAAWF,EAAkB7V,KAAKrB,GAClCqX,EAAWpX,EAAQoB,KAAKrB,GAC1BoX,IAAaC,IACbF,EAAQnX,GAAOqX,SAM3BF,EAAUlX,EAAQoB,KAEtBgP,EAAOjJ,QAAQ+P,GACf9G,EAAOE,MAAMtQ,EAAQiB,IACrB,OAAOmP,IAEXpV,EAAK+M,iBAAiB/M,EAAKM,OACtBmE,KAAK,SAAUuI,GACZA,EAAEqG,WAAWnR,EAAcwI,mBAAmBK,SAAUiR,EAAU9Z,EAAc0I,qBAAqBG,UAChGtG,KAAK,SAAU4X,GAEZ,GAAIA,EAASC,mBAAmBC,gBAAkBra,EAAcwI,mBAAmBK,SAASnG,QACxFyX,EAASC,mBAAmBE,eAAiBR,EAASpX,QACtDyX,EAASC,mBAAmBG,eAAiBva,EAAc0I,qBAAqBG,SAASnG,OAAQ,CACjGlF,GAAG8G,MAAM,qEACT2G,QAAQC,IAAIiP,EAAUna,EAAcwI,mBAAoBsR,EAAU9Z,EAAc0I,sBAChF,MAAM,IAAIjE,6CAA0C0V,EAASC,mBAAmBC,sBAAsBra,EAAcwI,mBAAmBK,SAASnG,kBAGhJ5E,EAAKM,MAAM6C,OAASzD,GAAGsD,OAAOI,UAAUE,KACxCtD,EAAKM,MAAMoT,UAEf1T,EAAK0c,YAAYnY,EAAiBvE,IAAOyE,KAAK,WAC1CzE,EAAKiN,WAAWD,GAAGvI,KAAK,WACpBzE,EAAKyC,WAAY,EACjBuT,GAAMA,EAAGQ,WAAWN,GAEpBlW,EAAKsT,eACLtT,EAAK8J,IAAIqE,MAAMnO,EAAK+L,gBAAgB,uCAAwC,CAAE5I,KAAMzD,GAAGsD,OAAOqL,QAAQsO,aAIjHpW,MAAM,SAAUnB,GACbpF,EAAKyC,WAAY,EACjBT,EAAahC,GACbN,GAAG8G,MAAMxG,EAAK+L,gBAAgB,sBAAuB,CAAE6Q,KAAMxX,EAAIwX,KAAM5O,OAAQ5I,EAAI4I,SAAW,CAAE7K,KAAMzD,GAAGsD,OAAOqL,QAAQwO,eAOpJnV,EAAS4L,aAAe,WACpB,IAAItT,EAAOC,KACXD,EAAK8c,yBAA2B,GAChC,IAAIxY,EAAgBC,EAAiBvE,GACrCN,GAAGuE,QAAQC,OAAOC,YAAa,CAACzE,GAAGsD,OAAOoB,IAAIC,aAAc,WACxDF,YAAYK,OAAOC,KAAK,SAAUD,GAC9B,GAAIA,EAAM,CACN,IAAK,IAAIE,EAAI,EAAGC,EAAMH,EAAKI,OAAQF,EAAIC,EAAKD,IAAK,CAC7C,IAAIK,EAAMP,EAAKE,GACoB,IAA/BK,EAAIF,QAAQP,IACZH,YAAYuC,WAAW3B,GAG/B,GAAI/E,EAAKM,MAAO,CACZ,MAAM4B,EAAgBlC,EAAKmC,mBAC3B,GAAID,EAAcsJ,aAAc,CAC5BtJ,EAAcwI,mBAAmBqS,gBACjC7a,EAAcyI,sBAAsBoS,gBACpC7a,EAAc0I,qBAAqBmS,gBACnC/c,EAAKqK,YAAY2S,oBAAoB,IACrChd,EAAKqK,YAAY4S,cAAcC,kBAC/Bld,EAAK+M,iBAAiB/M,EAAKM,OAAOmE,KAAKuI,GAAKA,EAAE0G,YAGtD3P,EAAgB/D,GAAM,MAG9BA,EAAKqK,YAAY0K,QAAQ,SAIjCrN,EAAS7G,qBAAuB,SAAUsc,GACzBld,KACRW,sBAAwBuc,EAC7B,MAAMjb,EAFOjC,KAEckC,mBACvBD,GACAA,EAAc2I,gBAAgBmM,cAAcmG,IAIpDzV,EAASoK,eAAiB,SAAUsL,GACnBnd,KACRa,gBAAkBsc,EACvB,MAAMlb,EAFOjC,KAEckC,mBACvBD,GAAiBA,EAAcwI,oBAC/BxI,EAAcwI,mBAAmBsM,cAAcoG,IAIvD1V,EAASqK,kBAAoB,SAAUqL,GACtBnd,KACRc,mBAAqBqc,EAC1B,MAAMlb,EAFOjC,KAEckC,mBACvBD,GAAiBA,EAAcyI,uBAC/BzI,EAAcyI,sBAAsBqM,cAAcoG,IAI1D1V,EAASsK,iBAAmB,SAAUoL,GACrBnd,KACRe,kBAAoBoc,EACzB,MAAMlb,EAFOjC,KAEckC,mBACvBD,GAAiBA,EAAc0I,sBAC/B1I,EAAc0I,qBAAqBoM,cAAcoG,IAIzD,MAAMC,EAA0B,SAAUpb,EAAK3B,GAC3C,MAAM8U,EAAS,GAEf,OADsBnT,EAAIE,iBAAiB7B,EAAMmN,UAAYnN,GACvC+E,cAClB,KAAK3F,GAAGsD,OAAOuC,KAAKC,QACpB,KAAK9F,GAAGsD,OAAOuC,KAAKO,aAChBsP,EAAOvT,QAAUvB,EAAMwJ,IAAIpJ,QAAQU,OAAOS,QAC1C,MACJ,KAAKnC,GAAGsD,OAAOuC,KAAKG,SACpB,KAAKhG,GAAGsD,OAAOuC,KAAKS,cAChBoP,EAAOxT,KAAOtB,EAAMwJ,IAAIpJ,QAAQU,OAAOQ,KACvC,MACJ,QACIwT,EAAO/T,MAAQf,EAAMwJ,IAAIpJ,QAAQU,OAAOC,MAGhD,OAAO+T,GAGX1N,EAASvG,wBAA0B,SAAUb,GACzC,MACMgd,EAAmB,SAAUC,GAC/B,MAAMC,EAAOld,EAAMmV,KAAKgI,QAAQF,GAChC,IAAK,IAAI7Y,EAAI,EAAGA,EAAI,EAAGA,IACnB8Y,EAAK9Y,GAAK,IAAM8Y,EAAK9Y,GAEzB,MAAO,KAAiB,MAAV8Y,EAAK,GAAuB,IAAVA,EAAK,GAAWA,EAAK,IAAIE,SAAS,IAAIC,SAAS,EAAG,MAGhFC,EAAO,CAAC,EAAG,GACXxI,EAAS1V,GAAGc,KAAKoZ,QAAO,EAAM,GAAItZ,EAAMI,QAAQU,QAAUic,EAVnDpd,KAUiFK,IAC9F,GAAI8U,EAAO/T,MAAO,CACd+T,EAAO/T,MAAMG,YAAc8b,EAAiBlI,EAAO/T,MAAMG,aACzD4T,EAAO/T,MAAMwc,SAAWD,EAE5B,GAAIxI,EAAOxT,KAAM,CACbwT,EAAOxT,KAAKJ,YAAc8b,EAAiBlI,EAAOxT,KAAKJ,aACvD4T,EAAOxT,KAAKic,SAAWD,EAE3B,GAAIxI,EAAOvT,QAAS,CAChBuT,EAAOvT,QAAQL,YAAc8b,EAAiBlI,EAAOvT,QAAQL,aAC7D4T,EAAOvT,QAAQgc,SAAWD,EAG9B,OAAOxI,GAGX,MAAM0I,EAAgB,SAAU7b,EAAK3B,EAAOid,GACxC,MAAMnI,EAAS1V,GAAGc,KAAKoZ,QAAO,EAAM,GAAItZ,EAAMI,QAAQU,QAAUic,EAAwBpb,EAAK3B,IAC7F,GAAI8U,EAAO/T,MAAO,CACd+T,EAAO/T,MAAMG,YAAc+b,EAC3BnI,EAAO/T,MAAMC,UAAYic,EAEzBnI,EAAOxT,OACPwT,EAAOxT,KAAKJ,YAAc+b,GAE9B,GAAInI,EAAOvT,QAAS,CAChBuT,EAAOvT,QAAQL,YAAc+b,EAC7BnI,EAAOvT,QAAQP,UAAYic,EAG/B,OAAOnI,GAGX1N,EAASyP,2BAA6B,SAAU7W,GAC5C,MACM4B,EADOjC,KACckC,iBAAiB7B,EAAMmN,UAAYnN,GAC9D,OAAOwd,EAFM7d,KAEcK,EAAO4B,EAAc6b,kBAAoB,YAGxErW,EAAS0P,8BAAgC,SAAU9W,GAC/C,MACM4B,EADOjC,KACckC,iBAAiB7B,EAAMmN,UAAYnN,GAC9D,OAAOwd,EAFM7d,KAEcK,EAAO4B,EAAc8b,qBAAuB,YAG3EtW,EAAS2P,6BAA+B,SAAU/W,GAC9C,MACM4B,EADOjC,KACckC,iBAAiB7B,EAAMmN,UAAYnN,GAC9D,OAAOwd,EAFM7d,KAEcK,EAAO4B,EAAc+b,oBAAsB,YAh9C9E","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.SWCacheClient) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/SWCacheClient');\r\n}\r\n\r\nTC.control.WFSEdit = function () {\r\n    const self = this;\r\n\r\n    TC.control.SWCacheClient.apply(this, arguments);\r\n\r\n    self._classSelector = '.' + self.CLASS;\r\n\r\n    self.layer = null;\r\n    //self.feature = self.options.feature ? self.options.feature : null;\r\n    self.callback = TC.Util.isFunction(arguments[2]) ? arguments[2] : (self.options.callback ? self.options.callback : null);\r\n    self.layersEditData = {};\r\n    self.showsOriginalFeatures = (typeof self.options.showOriginalFeatures === 'boolean') ? self.options.showOriginalFeatures : false;\r\n    self.highlightsAdded = self.highlightsModified = self.highlightsRemoved = (typeof self.options.highlightChanges === 'boolean') ? self.options.highlightChanges : true;\r\n    if (!TC.Util.isFunction(self.options.getBeforeEditLayerStyleFunction)) {\r\n        self.getBeforeEditLayerStyleFunction = self.getBeforeEditLayerStyle;\r\n    }\r\n    self.styles = self.options.styles || {\r\n        point: {\r\n            fillColor: \"#0000aa\",\r\n            fillOpacity: 0.1,\r\n            strokeColor: \"#0000aa\",\r\n            strokeWidth: 2,\r\n            strokeOpacity: 1,\r\n            radius: 6\r\n        },\r\n        line: {\r\n            strokeColor: \"#0000aa\",\r\n            strokeWidth: 2,\r\n            strokeOpacity: 1\r\n        },\r\n        polygon: {\r\n            fillColor: \"#0000aa\",\r\n            fillOpacity: 0.1,\r\n            strokeColor: \"#0000aa\",\r\n            strokeWidth: 2,\r\n            strokeOpacity: 1\r\n        }\r\n    }\r\n};\r\n\r\nTC.inherit(TC.control.WFSEdit, TC.control.SWCacheClient);\r\n\r\n(function () {\r\n    var newFeatureIdNumber = 0;\r\n    const getNewFeatureId = function () {\r\n        return \"NewFeature.\" + newFeatureIdNumber++;\r\n    };\r\n\r\n    const setSyncState = function (ctl) {\r\n        const layerEditData = ctl.getLayerEditData();\r\n        ctl._saveBtn.disabled = !(navigator.onLine && layerEditData && layerEditData.checkedOut) || ctl.isSyncing;\r\n    };\r\n\r\n    const setEditState = function (ctl, enabled) {\r\n        ctl.div.querySelector(ctl._classSelector + '-view').classList.toggle(TC.Consts.classes.HIDDEN, !enabled || !ctl.layer || !(ctl.layer.type === TC.Consts.layerType.WFS || ctl.layer.type === TC.Consts.layerType.WMS));\r\n        if (ctl.layer && ctl.layer.wfsLayer) {\r\n            const isLayerCropped = TC.filter && TC.filter.Bbox && ctl.layer.wfsLayer.properties instanceof TC.filter.Bbox;\r\n            ctl._recropBtn.classList.toggle(TC.Consts.classes.HIDDEN, !isLayerCropped);\r\n        }\r\n        ctl.div.querySelector(ctl._classSelector + '-edit').classList.toggle(TC.Consts.classes.HIDDEN, !enabled);\r\n    };\r\n\r\n    const setChangesButtonsState = function (ctl) {\r\n        setSyncState(ctl);\r\n        const layerEditData = ctl.getLayerEditData();\r\n        ctl._discardBtn.disabled = !layerEditData || !layerEditData.checkedOut;\r\n    };\r\n\r\n    const setChangedState = function (ctl, isChanged) {\r\n        if (ctl.layer) {\r\n            const layerEditData = ctl.getLayerEditData();\r\n            if (typeof isChanged !== 'undefined') {\r\n                layerEditData.checkedOut = isChanged;\r\n                setChangesButtonsState(ctl);\r\n            }\r\n            else {\r\n                TC.loadJS(!window.localforage, [TC.Consts.url.LOCALFORAGE], function () {\r\n                    var storagePrefix = getStoragePrefix(ctl);\r\n                    localforage.keys().then(function (keys) {\r\n                        if (keys) {\r\n                            var disabled = true;\r\n                            for (var i = 0, len = keys.length; i < len; i++) {\r\n                                if (keys[i].indexOf(storagePrefix) === 0) {\r\n                                    disabled = false;\r\n                                    break;\r\n                                }\r\n                            }\r\n                            layerEditData.checkedOut = !disabled;\r\n                            setChangesButtonsState(ctl);\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setChangesButtonsState(ctl);\r\n        }\r\n    };\r\n\r\n    const storeFeature = function (key, feature) {\r\n        return new Promise(function (resolve, reject) {\r\n            TC.loadJS(!window.localforage, [TC.Consts.url.LOCALFORAGE], function () {\r\n                var obj;\r\n                var geometryType;\r\n                switch (true) {\r\n                    case feature instanceof TC.feature.Polygon:\r\n                        geometryType = TC.Consts.geom.POLYGON;\r\n                        break;\r\n                    case feature instanceof TC.feature.Polyline:\r\n                        geometryType = TC.Consts.geom.POLYLINE;\r\n                        break;\r\n                    case feature instanceof TC.feature.Point:\r\n                        geometryType = TC.Consts.geom.POINT;\r\n                        break;\r\n                    case feature instanceof TC.feature.MultiPolygon:\r\n                        geometryType = TC.Consts.geom.MULTIPOLYGON;\r\n                        break;\r\n                    case feature instanceof TC.feature.MultiPolyline:\r\n                        geometryType = TC.Consts.geom.MULTIPOLYLINE;\r\n                        break;\r\n                }\r\n                obj = {\r\n                    id: feature.id || feature.provId,\r\n                    attributes: feature.data,\r\n                    type: geometryType,\r\n                    geometry: feature.geometry,\r\n                }\r\n                localforage.setItem(key, obj)\r\n                    .then(function () {\r\n                        resolve({ feature: feature });\r\n                    })\r\n                    .catch(function (error) {\r\n                        reject({ feature: feature, error: error });\r\n                    });\r\n            });\r\n        });\r\n    };\r\n\r\n\r\n    const deleteFeature = function (key) {\r\n        return new Promise(function (resolve, reject) {\r\n            TC.loadJS(!window.localforage, [TC.Consts.url.LOCALFORAGE], function () {\r\n                localforage.removeItem(key)\r\n                    .then(function () {\r\n                        resolve(key);\r\n                    })\r\n                    .catch(function (error) {\r\n                        reject(Error(error));\r\n                    });\r\n            });\r\n        });\r\n    };\r\n\r\n    const readFeature = function (key) {\r\n        return new Promise(function (resolve, reject) {\r\n            TC.loadJS(!window.localforage, [TC.Consts.url.LOCALFORAGE], function () {\r\n                localforage.getItem(key)\r\n                    .then(function (value) {\r\n                        resolve({\r\n                            key: key,\r\n                            feature: value\r\n                        });\r\n                    })\r\n                    .catch(function (error) {\r\n                        reject(error);\r\n                    });\r\n            });\r\n        });\r\n    };\r\n\r\n    const getLayerStoreID = function (layer) {\r\n        let featureType = layer.options.featureType[0];\r\n        if (featureType.indexOf(':') < 0) {\r\n            featureType = layer.options.featureNS + ':' + featureType;\r\n        }\r\n        return featureType + '@' + layer.options.url;\r\n    };\r\n\r\n    const getStoragePrefix = function (ctl, layer) {\r\n        return ctl.LOCAL_STORAGE_KEY_PREFIX + getLayerStoreID(layer || ctl.layer.wfsLayer || ctl.layer);\r\n    };\r\n\r\n    const getAddedStoragePrefix = function (ctl, layer) {\r\n        return getStoragePrefix(ctl, layer) + ctl.LOCAL_STORAGE_ADDED_KEY_PREFIX;\r\n    };\r\n\r\n    const getModifiedStoragePrefix = function (ctl, layer) {\r\n        return getStoragePrefix(ctl, layer) + ctl.LOCAL_STORAGE_MODIFIED_KEY_PREFIX;\r\n    };\r\n\r\n    const getRemovedStoragePrefix = function (ctl, layer) {\r\n        return getStoragePrefix(ctl, layer) + ctl.LOCAL_STORAGE_REMOVED_KEY_PREFIX;\r\n    };\r\n\r\n    const getLayerTitle = function (layer) {\r\n        return layer.getPath ? layer.getPath().join(' • ') : (layer.title || layer.id)\r\n    };\r\n\r\n    const ctlProto = TC.control.WFSEdit.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-wfsedit';\r\n\r\n    ctlProto.template = TC.apiLocation + \"TC/templates/tc-ctl-wfsedit.hbs\";\r\n\r\n    ctlProto.LOCAL_STORAGE_KEY_PREFIX = \"TC.offline.edit.\";\r\n    ctlProto.LOCAL_STORAGE_ADDED_KEY_PREFIX = \".added.\";\r\n    ctlProto.LOCAL_STORAGE_MODIFIED_KEY_PREFIX = \".modified.\";\r\n    ctlProto.LOCAL_STORAGE_REMOVED_KEY_PREFIX = \".removed.\";\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            TC.control.SWCacheClient.prototype.register.call(self, map).then(function () {\r\n\r\n                window.addEventListener('online', function () {\r\n                    setSyncState(self);\r\n                });\r\n                window.addEventListener('offline', function () {\r\n                    setSyncState(self);\r\n                });\r\n\r\n                self._editPromise = map.addControl('edit', {\r\n                    id: self.getUID(),\r\n                    div: self.div.querySelector(`.${self.CLASS}-edit`),\r\n                    styles: self.styles,\r\n                    downloadElevation: self.options.downloadElevation,\r\n                    snapping: self.options.snapping\r\n                });\r\n                self._editPromise.then(function (ctl) {\r\n                    self.editControl = ctl;\r\n\r\n                    self.editControl.getAvailableFeaturesToImport = function () {\r\n                        const candidates = Object.getPrototypeOf(self.editControl).getAvailableFeaturesToImport.call(self.editControl);\r\n                        const layerEditData = self.getLayerEditData();\r\n                        return candidates.filter(obj => {\r\n                            const layer = map.getLayer(obj.id);\r\n                            return layer !== layerEditData.addedFeaturesLayer &&\r\n                                layer !== layerEditData.modifiedFeaturesLayer &&\r\n                                layer !== layerEditData.removedFeaturesLayer &&\r\n                                layer !== layerEditData.beforeEditLayer;\r\n                        });\r\n                    };\r\n                    self.editControl.importFeatures = function (features) {\r\n                        const featuresToImport = (features || this.featuresToImport || []);\r\n                        const layerEditData = self.getLayerEditData();\r\n                        const newFeatures = layerEditData.attributes ? featuresToImport.map(function (feature) {\r\n                            const properties = {};\r\n                            for (let key in layerEditData.attributes) {\r\n                                properties[key] = feature.data[key];\r\n                            }\r\n                            return new feature.constructor(feature.geometry, { geometryName: layerEditData.geometryName, data: properties });\r\n                        }) : features;\r\n                        Object.getPrototypeOf(self.editControl).importFeatures.call(self.editControl, newFeatures);\r\n                    };\r\n                    self.editControl\r\n                        .on(TC.Consts.event.DRAWEND, function (e) {\r\n                            if (self.getLayerEditData().serializable) {\r\n                                self._storeFeatureAdd(e.feature);\r\n                            }\r\n                        })\r\n                        .on(TC.Consts.event.FEATUREMODIFY, function (e) {\r\n                            const feat = e.feature;\r\n                            const fid = feat.provId || feat.id;\r\n                            const storeSuccess = function () {\r\n                                setChangedState(self, true);\r\n                            };\r\n                            const storeFailure = function () {\r\n                                TC.error(self.getLocaleString('failedWhenSavingModifyOperationInSession'));\r\n                            };\r\n                            const layerEditData = self.getLayerEditData();\r\n                            if (layerEditData.serializable) {\r\n                                let storedFeature = layerEditData.addedFeaturesLayer.getFeatureById(fid);\r\n                                if (storedFeature) {\r\n                                    storedFeature.setCoords(feat.geometry);\r\n                                    storedFeature.setData(feat.getData());\r\n                                    storeFeature(getAddedStoragePrefix(self) + fid, feat).then(storeSuccess, storeFailure);\r\n                                }\r\n                                else {\r\n                                    storedFeature = layerEditData.modifiedFeaturesLayer.getFeatureById(fid);\r\n                                    if (storedFeature) {\r\n                                        storedFeature.setCoords(feat.geometry);\r\n                                        storedFeature.setData(feat.getData());\r\n                                    }\r\n                                    else {\r\n                                        layerEditData.modifiedFeaturesLayer.addFeature(self._createAuxFeature(feat));\r\n                                    }\r\n                                    storeFeature(getModifiedStoragePrefix(self) + fid, feat).then(storeSuccess, storeFailure);\r\n                                }\r\n                            }\r\n                        })\r\n                        .on(TC.Consts.event.FEATUREADD, function (e) {\r\n                            if (self.getLayerEditData().serializable) {\r\n                                self._storeFeatureAdd(e.feature);\r\n                            }\r\n                        })\r\n                        .on(TC.Consts.event.FEATUREREMOVE, function (e) {\r\n                            if (self.getLayerEditData().serializable) {\r\n                                self._storeFeatureRemove(e.feature);\r\n                            }\r\n                        });\r\n\r\n                    map.workLayers.forEach(layer => self.addLayer(layer));\r\n\r\n                    map\r\n                        .on(TC.Consts.event.LAYERUPDATE, function (e) {\r\n                            const layer = e.layer;\r\n                            if (layer.type === TC.Consts.layerType.WFS && !layer.options.readOnly) {\r\n                                self.getEditableLayer(layer)\r\n                                    .then(l => self.cacheLayer(l))\r\n                                    .catch(err => console.log('Layer not editable: ' + layer.id));\r\n                            }\r\n                        })\r\n                        .on(TC.Consts.event.ZOOM, function (e) {\r\n                            map.workLayers\r\n                                .filter(l => l.wfsLayer)\r\n                                .filter(l => self.layer !== l)\r\n                                .forEach(function (layer) {\r\n                                    layer.wfsLayer = null;\r\n                                    self.getEditableLayer(layer);\r\n                                });\r\n                        })\r\n                        .on(TC.Consts.event.LAYERADD, function (e) {\r\n                            self.addLayer(e.layer);\r\n                        })\r\n                        .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                            const layer = e.layer;\r\n                            if (self._removingLayer === layer) {\r\n                                return;\r\n                            }\r\n                            if (self.layer === layer || (layer.wmsLayer && self.layer === layer.wmsLayer)) {\r\n                                self.setLayer(null);\r\n                            }\r\n                            const option = self._layerSelect.querySelector(`option[value=\"${layer.id}\"]`);\r\n                            if (option) {\r\n                                option.parentElement.removeChild(option);\r\n                            }\r\n                        })\r\n                        .on(TC.Consts.event.LAYERERROR, function (e) {\r\n                            const layer = e.layer;\r\n                            if (layer.type === TC.Consts.layerType.WFS && !layer.options.readOnly) {\r\n                                if (e.reason === TC.Consts.WFSErrors.MAX_NUM_FEATURES) {\r\n                                    map.toast(self.getLocaleString('query.msgTooManyResults', { limit: e.data.limit }), { type: TC.Consts.msgType.WARNING });\r\n                                }\r\n                                if (self.layer === layer || (self.layer && self.layer.wfsLayer === layer)) {\r\n                                    delete self.layersEditData[self.layer.id];\r\n                                    self.setLayer(null);\r\n                                }\r\n                                if (layer.wmsLayer) {\r\n                                    map.removeLayer(layer);\r\n                                    layer.wmsLayer.wfsLayer = null;\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                    resolve(self);\r\n                });\r\n\r\n                map.loaded(function () {\r\n                    self._layerSelect.disabled = false;\r\n\r\n                    if (self.options.layer) {\r\n                        self.setLayer(self.options.layer);\r\n                    }\r\n                    else {\r\n                        const wfsLayers = map.workLayers.filter(function (elm) {\r\n                            return elm.type === TC.Consts.layerType.WFS && !elm.options.stealth;\r\n                        });\r\n                        if (wfsLayers.length === 1) {\r\n                            self.setLayer(wfsLayers[0].id);\r\n                        }\r\n                        else {\r\n                            self.setLayer(null);\r\n                        }\r\n                    }\r\n\r\n                    self.showOriginalFeatures(self.showsOriginalFeatures);\r\n                });\r\n\r\n                map.ready(function () {\r\n                    map.getControlsByClass('TC.control.WorkLayerManager').forEach(function (ctl) {\r\n                        ctl.addLayerTool({\r\n                            renderFn: function (container, layerId) {\r\n                                const className = self.CLASS + '-btn-edit';\r\n                                let button = container.querySelector('button.' + className);\r\n                                if (!button) {\r\n                                    const text = self.getLocaleString('featureEditing');\r\n                                    button = document.createElement('button');\r\n                                    button.innerHTML = text;\r\n                                    button.setAttribute('title', text);\r\n                                    button.classList.add(className);\r\n                                    button.dataset.layerId = layerId;\r\n                                    container.appendChild(button);\r\n                                    const layer = map.getLayer(layerId);\r\n                                    if (layer.type === TC.Consts.layerType.WMS) {\r\n                                        button.classList.add(TC.Consts.classes.LOADING);\r\n                                        layer.getWFSCapabilities()\r\n                                            .catch(() => button.classList.add(TC.Consts.classes.HIDDEN))\r\n                                            .finally(() => button.classList.remove(TC.Consts.classes.LOADING));\r\n                                    }\r\n                                }\r\n                                return button;\r\n                            },\r\n                            updateEvents: [TC.Consts.event.BEFORELAYERUPDATE, TC.Consts.event.LAYERUPDATE, TC.Consts.event.LAYERERROR, TC.Consts.event.CONTROLACTIVATE, TC.Consts.event.CONTROLDEACTIVATE],\r\n                            updateFn: function (e) {\r\n                                const button = this;\r\n                                const layer = map.getLayer(button.dataset.layerId);\r\n                                setTimeout(() => {\r\n                                    button.classList.toggle(TC.Consts.classes.ACTIVE, self.layer === layer);\r\n                                }, 500);\r\n                                button.disabled = !layer || (layer.isRaster() && layer.names.length !== 1);\r\n                            },\r\n                            actionFn: function () {\r\n                                const button = this;\r\n                                const layer = map.getLayer(button.dataset.layerId);\r\n                                const prevLayer = self.layer;\r\n                                button.classList.remove(TC.Consts.classes.ACTIVE);\r\n                                if ((layer.names && layer.names.length === 1) || !layer.isRaster()) {\r\n                                    if (layer && prevLayer !== layer) {\r\n                                        self.setLayer(layer).then(() => {\r\n                                            //button.classList.toggle(TC.Consts.classes.ACTIVE, self.layer === layer);\r\n                                            self.openEditSession();\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        self.setLayer(null);\r\n                                    }\r\n                                }\r\n                            }\r\n                        });\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        var editLayers = [];\r\n        if (self.map) {\r\n            for (var i = 0, len = self.map.workLayers.length; i < len; i++) {\r\n                var wl = self.map.workLayers[i];\r\n                if (wl.type === TC.Consts.layerType.WFS && !wl.options.stealth) {\r\n                    editLayers.push({\r\n                        id: wl.id,\r\n                        title: wl.title || wl.id\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return self._set1stRenderPromise(TC.Control.prototype.renderData.call(self, {\r\n            layers: editLayers,\r\n            showOriginalFeatures: self.showsOriginalFeatures,\r\n            highlightChanges: self.highlightsAdded || self.highlightsModified || self.highlightsRemoved,\r\n            controlId: self.id\r\n        }, function () {\r\n\r\n            self._layerDiv = self.div.querySelector(self._classSelector + '-layer');\r\n            self._layerSelect = self._layerDiv.querySelector(self._classSelector + '-layer-sel');\r\n            self._layerSelect.addEventListener('change', function (e) {\r\n                setEditState(self, false);\r\n                self.getEditableLayer(self._layerSelect.value)\r\n                    .then(function (layer) {\r\n                        self.setLayer(layer.wmsLayer || layer).then(function () {\r\n                            if (self.layer) {\r\n                                self.openEditSession();\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(() => {\r\n                        self.setLayer(null);\r\n                    });\r\n            });\r\n\r\n            const viewToolsDiv = self.div.querySelector(self._classSelector + '-view');\r\n\r\n            self._editingWatch = viewToolsDiv.querySelector(`.${self.CLASS}-view-watch`);\r\n            self._beforeEditLayerWatch = viewToolsDiv.querySelector(`.${self.CLASS}-view-original-watch`);\r\n            self._addedWatch = viewToolsDiv.querySelector(`.${self.CLASS}-view-added-watch`);\r\n            self._modifiedWatch = viewToolsDiv.querySelector(`.${self.CLASS}-view-modified-watch`);\r\n            self._removedWatch = viewToolsDiv.querySelector(`.${self.CLASS}-view-removed-watch`);\r\n\r\n            viewToolsDiv.querySelector(`#${self.CLASS}-view-original-cb-${self.id}`).addEventListener('change', function (e) {\r\n                self.showOriginalFeatures(e.target.checked);\r\n            });\r\n\r\n            viewToolsDiv.querySelector(`#${self.CLASS}-view-added-cb-${self.id}`).addEventListener('change', function (e) {\r\n                self.highlightAdded(e.target.checked);\r\n            });\r\n\r\n            viewToolsDiv.querySelector(`#${self.CLASS}-view-modified-cb-${self.id}`).addEventListener('change', function (e) {\r\n                self.highlightModified(e.target.checked);\r\n            });\r\n\r\n            viewToolsDiv.querySelector(`#${self.CLASS}-view-removed-cb-${self.id}`).addEventListener('change', function (e) {\r\n                self.highlightRemoved(e.target.checked);\r\n            });\r\n\r\n            const colorRegExp = new RegExp(`${self.CLASS}-view-clr-(.+)-${self.id}`);\r\n            const onColorClick = function (e) {\r\n                const input = this.parentElement.querySelector('input[type=color]');\r\n                const layerEditData = self.getLayerEditData();\r\n                const layer = layerEditData[input.id.match(colorRegExp)[1] + 'FeaturesLayer'];\r\n                switch (layerEditData.geometryType) {\r\n                    case TC.Consts.geom.POINT:\r\n                        input.value = layer.styles.point.strokeColor;\r\n                        break;\r\n                    case TC.Consts.geom.POLYLINE:\r\n                    case TC.Consts.geom.MULTIPOLYLINE:\r\n                        input.value = layer.styles.line.strokeColor;\r\n                        break;\r\n                    default:\r\n                        input.value = layer.styles.polygon.strokeColor;\r\n                        break;\r\n                }\r\n                input.click();\r\n            };\r\n\r\n            const onColorChange = function (e) {\r\n                const input = e.target;\r\n                const layerEditData = self.getLayerEditData();\r\n                const prefix = input.id.match(colorRegExp)[1];\r\n                const layer = layerEditData[prefix + 'FeaturesLayer'];\r\n                const newColor = layerEditData[prefix + 'CustomColor'] = input.value;\r\n                switch (layerEditData.geometryType) {\r\n                    case TC.Consts.geom.POINT:\r\n                        layer.styles.point.strokeColor = newColor;\r\n                        break;\r\n                    case TC.Consts.geom.POLYLINE:\r\n                    case TC.Consts.geom.MULTIPOLYLINE:\r\n                        layer.styles.line.strokeColor = newColor;\r\n                        break;\r\n                    default:\r\n                        layer.styles.polygon.strokeColor = newColor;\r\n                        layer.styles.polygon.fillColor = newColor;\r\n                        break;\r\n                }\r\n                layer.setStyles(layer.styles);\r\n                self[`_${prefix}Watch`].src = getLegendImage(layer, layerEditData.geometryType);\r\n            };\r\n\r\n            const addedColorInputId = `${self.CLASS}-view-clr-added-${self.id}`;\r\n            viewToolsDiv.querySelector(`label[for=\"${addedColorInputId}\"]`).addEventListener(TC.Consts.event.CLICK, onColorClick, { passive: true });\r\n            document.getElementById(addedColorInputId).addEventListener('change', onColorChange);\r\n\r\n            const modifiedColorInputId = `${self.CLASS}-view-clr-modified-${self.id}`;\r\n            viewToolsDiv.querySelector(`label[for=\"${modifiedColorInputId}\"]`).addEventListener(TC.Consts.event.CLICK, onColorClick, { passive: true });\r\n            document.getElementById(modifiedColorInputId).addEventListener('change', onColorChange);\r\n\r\n            const removedColorInputId = `${self.CLASS}-view-clr-removed-${self.id}`;\r\n            viewToolsDiv.querySelector(`label[for=\"${removedColorInputId}\"]`).addEventListener(TC.Consts.event.CLICK, onColorClick, { passive: true });\r\n            document.getElementById(removedColorInputId).addEventListener('change', onColorChange);\r\n\r\n            self._saveBtn = self.div.querySelector(self._classSelector + '-btn-save');\r\n            self._saveBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                TC.confirm(self.getLocaleString('edit.applyEdits.confirm', { layerTitle: getLayerTitle(self.layer) }), function () {\r\n                    self.applyEdits();\r\n                });\r\n            }, { passive: true });\r\n            \r\n            self._discardBtn = self.div.querySelector(self._classSelector + '-btn-discard');\r\n            self._discardBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                TC.confirm(self.getLocaleString('edit.discardEdits.confirm', { layerTitle: getLayerTitle(self.layer) }), function () {\r\n                    self.discardEdits();\r\n                });\r\n            }, { passive: true });\r\n\r\n            self._recropBtn = self.div.querySelector(`.${self.CLASS}-view button.${self.CLASS}-btn-crop`);\r\n            self._recropBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                if (self.layer) {\r\n                    const reload = () => {\r\n                        if (self.layer && self.layer.wfsLayer && TC.filter && TC.filter.Bbox && self.layer.wfsLayer.properties instanceof TC.filter.Bbox) {\r\n                            const layerEditData = self.getLayerEditData();\r\n                            self.layer.wfsLayer.properties = new TC.filter.Bbox(null, self.map.getExtent(), self.map.getCRS());\r\n                            self.layer.wfsLayer.refresh();\r\n                            if (layerEditData.beforeEditLayer) {\r\n                                layerEditData.beforeEditLayer.properties = self.layer.wfsLayer.properties;\r\n                                layerEditData.beforeEditLayer.refresh();\r\n                            }\r\n                        }\r\n                    };\r\n                    const layerEditData = self.getLayerEditData();\r\n                    const editedFeatures = layerEditData.addedFeaturesLayer.features.concat(layerEditData.modifiedFeaturesLayer.features, layerEditData.removedFeaturesLayer.features);\r\n                    if (editedFeatures.length) {\r\n                        TC.loadJS(\r\n                            !TC.Geometry,\r\n                            TC.apiLocation + 'TC/Geometry',\r\n                            function () {\r\n                                let featuresOutside = false;\r\n                                const extent = self.map.getExtent();\r\n                                const bbox = [[extent[0], extent[1]], [extent[0], extent[3]], [extent[2], extent[3]], [extent[2], extent[1]]];\r\n                                for (var i = 0, ii = editedFeatures.length; i < ii; i++) {\r\n                                    if (!TC.Geometry.intersects(editedFeatures[i].geometry, bbox)) {\r\n                                        featuresOutside = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (featuresOutside) {\r\n                                    TC.confirm(self.getLocaleString('refreshLayerToCurrentExtent.confirm'), function () {\r\n                                        reload();\r\n                                    });\r\n                                }\r\n                                else {\r\n                                    reload();\r\n                                }\r\n                            }\r\n                        );\r\n                    }\r\n                    else {\r\n                        reload();\r\n                    }\r\n                    \r\n                }\r\n            }, { passive: true });\r\n\r\n            if (TC.Util.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        }));\r\n    };\r\n\r\n    ctlProto.addLayer = function (layer) {\r\n        const self = this;\r\n        const appendOption = function (layer) {\r\n            const option = document.createElement('option');\r\n            option.setAttribute('value', layer.id);\r\n            option.innerHTML = getLayerTitle(layer);\r\n            self.renderPromise().then(function () {\r\n                self._layerSelect.appendChild(option);\r\n            });\r\n        };\r\n        if (!layer.isBase && !layer.options.readOnly && !layer.options.stealth) {\r\n            self.getEditableLayer(layer)\r\n                .then(function (l) {\r\n                    // Añadimos opción cuando es una capa WMS con WFS asociado o una capa WFS independiente\r\n                    if (layer.isRaster() || !l.wmsLayer) {\r\n                        appendOption(layer);\r\n                    }\r\n                })\r\n                .catch((err) => console.log(`Layer ${layer.id} not editable. Reason: ${err.message}`));\r\n        }\r\n    };\r\n\r\n    ctlProto.setLayer = function (layer) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            const map = self.map;\r\n            const selector = self.div.querySelector(self._classSelector + '-layer-sel');\r\n\r\n            layer = map.getLayer(layer);\r\n            const mapLayer = map.workLayers.filter(l => l === layer)[0];\r\n\r\n            const setNewLayer = function () {\r\n                if (mapLayer) {\r\n                    self.getEditableLayer(mapLayer)\r\n                        .then(function (editableLayer) {\r\n                            const endProcess = function () {\r\n                                self.layer = mapLayer;\r\n                                self._enableEditSerialization(mapLayer)\r\n                                    .then(function () {\r\n                                        self.getEditControl().then(c => {\r\n                                            selector.value = self.layer.id;\r\n                                            c.setMode(null);\r\n                                            c.setLayer(editableLayer);\r\n                                            resolve(self.layer);\r\n                                        });\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        self.setLayer(null);\r\n                                        reject(err);\r\n                                    });\r\n                            };\r\n\r\n                            if (map.workLayers.indexOf(editableLayer) >= 0) {\r\n                                endProcess();\r\n                            }\r\n                            else {\r\n                                map.addLayer(editableLayer).then(endProcess);\r\n                            }\r\n                        })\r\n                        .catch(() => {\r\n                            self.setLayer(null);\r\n                            resolve(null);\r\n                        });\r\n                }\r\n                else {\r\n                    if (self.layer && self.layer.wfsLayer) {\r\n                        self._removingLayer = self.layer.wfsLayer;\r\n                    }\r\n                    self.getEditControl().then(c => {\r\n                        setEditState(self, false);\r\n                        //setChangedState(self, false);\r\n                        self.closeEditSession()\r\n                            .then(() => {\r\n                                selector.value = '';\r\n                                c.setMode(null);\r\n                                c.setLayer(null);\r\n                                self.layer = null;\r\n                                resolve(null);\r\n                            })\r\n                            .finally(() => {\r\n                                delete self._removingLayer;\r\n                            });\r\n                    });\r\n                }\r\n            };\r\n\r\n            if (layer === null || !self.layer) {\r\n                setNewLayer();\r\n            }\r\n            else {\r\n                if (self.layer.wfsLayer) {\r\n                    self._removingLayer = self.layer.wfsLayer;\r\n                }\r\n                self.closeEditSession().then(() => {\r\n                    if (mapLayer) {\r\n                        setNewLayer();\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto._storeFeatureAdd = function (feature) {\r\n        const self = this;\r\n        feature.provId = getNewFeatureId();\r\n        const layerEditData = self.getLayerEditData();\r\n        const newFeature = self._createAuxFeature(feature);\r\n        layerEditData.addedFeaturesLayer.addFeature(newFeature);\r\n        storeFeature(getAddedStoragePrefix(self) + feature.provId, newFeature).then(function () {\r\n            setChangedState(self, true);\r\n            //self.map.toast(self.getLocaleString('addOperationSavedInSession'));\r\n        }, function () {\r\n            TC.error(self.getLocaleString('failedWhenSavingAddOperationInSession'));\r\n        });\r\n    };\r\n\r\n    ctlProto._storeFeatureRemove = function (feature) {\r\n        const self = this;\r\n        var fid = feature.provId || feature.id;\r\n        var storeSuccess = function () {\r\n            setChangedState(self);\r\n            //self.map.toast(self.getLocaleString('removeOperationSavedInSession'));\r\n        };\r\n        var storeFailure = function () {\r\n            TC.error(self.getLocaleString('failedWhenSavingRemoveOperationInSession'));\r\n        };\r\n        const layerEditData = self.getLayerEditData();\r\n        if (layerEditData.serializable) {\r\n            let storedFeature = layerEditData.addedFeaturesLayer.getFeatureById(fid);\r\n            if (!storedFeature) {\r\n                var removedStoragePrefix = getRemovedStoragePrefix(self);\r\n                storedFeature = layerEditData.modifiedFeaturesLayer.getFeatureById(fid);\r\n                if (!storedFeature) {\r\n                    storedFeature = layerEditData.removedFeaturesLayer.getFeatureById(fid);\r\n                    if (!storedFeature) {\r\n                        layerEditData.removedFeaturesLayer.addFeature(self._createAuxFeature(feature));\r\n                        storeFeature(removedStoragePrefix + fid, feature).then(storeSuccess, storeFailure);\r\n                    }\r\n                }\r\n                else {\r\n                    layerEditData.modifiedFeaturesLayer.removeFeature(storedFeature);\r\n                    layerEditData.removedFeaturesLayer.addFeature(self._createAuxFeature(feature));\r\n                    deleteFeature(getModifiedStoragePrefix(self) + fid).then(function () {\r\n                        storeSuccess();\r\n                        storeFeature(removedStoragePrefix + fid, feature).then(storeSuccess, storeFailure);\r\n                    }, storeFailure);\r\n                }\r\n            }\r\n            else {\r\n                layerEditData.addedFeaturesLayer.removeFeature(storedFeature);\r\n                deleteFeature(getAddedStoragePrefix(self) + fid).then(storeSuccess, storeFailure);\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto._createAuxFeature = function (feature) {\r\n        const self = this;\r\n        const fid = feature.provId || feature.id;\r\n        const layerEditData = self.getLayerEditData();\r\n        const result = new feature.constructor(feature.geometry, { geometryName: layerEditData.geometryName, data: feature.getData() });\r\n        result.setStyle(null);\r\n        result.setId(fid);\r\n        return result;\r\n    };\r\n\r\n    ctlProto.getEditControl = function () {\r\n        const self = this;\r\n        return self._editPromise || new Promise(function (resolve, reject) {\r\n            self.renderPromise().then(() => resolve(self.editControl));\r\n        });\r\n    };\r\n\r\n    ctlProto.cacheLayer = function (layer) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            self.getServiceWorker().then(function () {\r\n                if (navigator.onLine) {\r\n                    const gfUrl = layer.wrap.getGetFeatureUrl();\r\n                    const dftUrl = layer.getDescribeFeatureTypeUrl();\r\n                    if (gfUrl && dftUrl) {\r\n                        self.createCache(getStoragePrefix(self, layer), {\r\n                            urlList: [gfUrl, dftUrl]\r\n                        }).then(() => resolve(), error => reject(error));\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                else {\r\n                    resolve();\r\n                }\r\n            }).catch(error => reject(error));\r\n        });\r\n    };\r\n\r\n    ctlProto.getFeatureType = function (layer) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            layer = layer || self.layer;\r\n            const li = map.getLoadingIndicator();\r\n            const waitId = li && li.addWait();\r\n            layer.describeFeatureType()\r\n                .then(function (attributes) {\r\n                    self.getEditControl().then(function (editControl) {\r\n                        const layerEditData = self.getLayerEditData(layer);\r\n                        // recogemos los atributos no geométricos y definimos la geometría\r\n                        layerEditData.attributes = {};\r\n                        for (var key in attributes) {\r\n                            const attr = attributes[key];\r\n                            const geometryType = editControl.getGeometryType(attr.type);\r\n                            if (geometryType) {\r\n                                layerEditData.geometryName = attr.name;\r\n                                layerEditData.geometryType = typeof geometryType === 'boolean' ? null : geometryType;\r\n                            }\r\n                            else {\r\n                                layerEditData.attributes[key] = attr;\r\n                            }\r\n                        }\r\n                        for (var key in layerEditData.attributes) {\r\n                            const attr = layerEditData.attributes[key];\r\n                            attr.type = attr.type.substr(attr.type.indexOf(':') + 1);\r\n                        }\r\n                        resolve(layerEditData);\r\n                    });\r\n                })\r\n                .catch(function (err) {\r\n                    reject(err);\r\n                })\r\n                .finally(() => li && li.removeWait(waitId));\r\n        });\r\n    };\r\n\r\n    ctlProto._addAuxLayersToMap = function (layer) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            layer = layer || self.layer;\r\n            const layerEditData = self.getLayerEditData(layer);\r\n            const beLayer = layerEditData.beforeEditLayer;\r\n            if (beLayer) {\r\n                const afLayer = layerEditData.addedFeaturesLayer;\r\n                const mfLayer = layerEditData.modifiedFeaturesLayer;\r\n                const rfLayer = layerEditData.removedFeaturesLayer;\r\n                Promise.all([\r\n                    map.addLayer(beLayer),\r\n                    map.addLayer(afLayer),\r\n                    map.addLayer(mfLayer),\r\n                    map.addLayer(rfLayer)\r\n                ]).then(function () {\r\n                    self.getEditableLayer(layer).then(function (editableLayer) {\r\n                        let idx = map.layers.indexOf(editableLayer);\r\n                        beLayer.setVisibility(self.showsOriginalFeatures);\r\n                        afLayer.setVisibility(self.highlightsAdded);\r\n                        mfLayer.setVisibility(self.highlightsModified);\r\n                        rfLayer.setVisibility(self.highlightsRemoved);\r\n                        self.map.insertLayer(beLayer, ++idx, function () {\r\n                            const newIdx = idx + 1;\r\n                            map.insertLayer(afLayer, newIdx);\r\n                            map.insertLayer(mfLayer, newIdx);\r\n                            map.insertLayer(rfLayer, newIdx);\r\n\r\n                            beLayer.setStyles(self.getBeforeEditLayerStyle(editableLayer));\r\n                            afLayer.setStyles(self.getAddedFeaturesLayerStyle(editableLayer));\r\n                            mfLayer.setStyles(self.getModifiedFeaturesLayerStyle(editableLayer));\r\n                            rfLayer.setStyles(self.getRemovedFeaturesLayerStyle(editableLayer));\r\n                            self._editingWatch.src = getLegendImage(editableLayer, layerEditData.geometryType);\r\n                            self._beforeEditLayerWatch.src = getLegendImage(beLayer, layerEditData.geometryType);\r\n                            self._addedWatch.src = getLegendImage(afLayer, layerEditData.geometryType);\r\n                            self._modifiedWatch.src = getLegendImage(mfLayer, layerEditData.geometryType);\r\n                            self._removedWatch.src = getLegendImage(rfLayer, layerEditData.geometryType);\r\n                            resolve();\r\n                        });\r\n                    });\r\n                });\r\n            }\r\n            else {\r\n                reject(new Error(`No auxiliary layers for ${layer.id}`));\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.openEditSession = function () {\r\n        const self = this;\r\n        if (!self.layer) {\r\n            return Promise.reject(Error('No layer set for editing'));\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            self.getFeatureType() // Obtenemos datos de los atributos y la geometría\r\n                .then(function (layerEditData) {\r\n\r\n                    self.getEditControl().then(function (editControl) {\r\n                        self.getEditableLayer(self.layer).then(function (editableLayer) {\r\n                            editControl.setLayer(editableLayer);\r\n                            switch (layerEditData.geometryType) {\r\n                                case TC.Consts.geom.MULTIPOLYLINE:\r\n                                case TC.Consts.geom.MULTIPOLYGON:\r\n                                    editControl.setComplexGeometry(true);\r\n                                    break;\r\n                                default:\r\n                                    editControl.setComplexGeometry(false);\r\n                                    break;\r\n                            }\r\n                            editControl.activate();\r\n                            setEditState(self, true);\r\n                            setChangedState(self);\r\n\r\n                            const modes = [TC.control.Edit.mode.MODIFY, TC.control.Edit.mode.OTHER];\r\n                            switch (layerEditData.geometryType) {\r\n                                case TC.Consts.geom.POINT:\r\n                                    modes.push(TC.control.Edit.mode.ADDPOINT);\r\n                                    break;\r\n                                case TC.Consts.geom.POLYLINE:\r\n                                case TC.Consts.geom.MULTIPOLYLINE:\r\n                                    modes.push(TC.control.Edit.mode.ADDLINE);\r\n                                    //modes.push(TC.control.Edit.mode.CUT);\r\n                                    break;\r\n                                case TC.Consts.geom.POLYGON:\r\n                                case TC.Consts.geom.MULTIPOLYGON:\r\n                                    modes.push(TC.control.Edit.mode.ADDPOLYGON);\r\n                                    //modes.push(TC.control.Edit.mode.CUT);\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            editControl.constrainModes(modes);\r\n                            editControl.setMode(TC.control.Edit.mode.MODIFY);\r\n\r\n                            self._addAuxLayersToMap()\r\n                                .then(() => resolve())\r\n                                .catch ((err) => reject(err));\r\n                        })\r\n                    });\r\n                })\r\n                .catch(function (err) {\r\n                    if (self.layer && self.layer.type === TC.Consts.layerType.VECTOR) {\r\n                        self.getEditControl().then(function (editControl) {\r\n                            editControl.activate();\r\n                            setEditState(self, true);\r\n                            editControl.setMode(TC.control.Edit.mode.MODIFY);\r\n                            resolve();\r\n                        });\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    ctlProto.closeEditSession = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            self.renderPromise().then(function () {\r\n                setChangedState(self, false);\r\n                self.getEditControl().then(c => c.deactivate());\r\n                const layerEditData = self.getLayerEditData();\r\n                if (layerEditData && layerEditData.beforeEditLayer) {\r\n                    self._editingWatch.src = TC.Consts.BLANK_IMAGE;\r\n                    self._beforeEditLayerWatch.src = TC.Consts.BLANK_IMAGE;\r\n                    self._addedWatch.src = TC.Consts.BLANK_IMAGE;\r\n                    self._modifiedWatch.src = TC.Consts.BLANK_IMAGE;\r\n                    self._removedWatch.src = TC.Consts.BLANK_IMAGE;\r\n                    const previousLayer = self.layer;\r\n                    self.getEditableLayer(self.layer).then(function (editableLayer) {\r\n                        const removePromises = []\r\n                        const removeLayer = function (layer) {\r\n                            if (map.workLayers.indexOf(layer) >= 0) {\r\n                                removePromises.push(map.removeLayer(layer));\r\n                            }\r\n                        };\r\n                        removeLayer(layerEditData.beforeEditLayer);\r\n                        removeLayer(layerEditData.beforeEditLayer);\r\n                        removeLayer(layerEditData.addedFeaturesLayer);\r\n                        removeLayer(layerEditData.modifiedFeaturesLayer);\r\n                        removeLayer(layerEditData.removedFeaturesLayer);\r\n                        if (previousLayer !== editableLayer) {\r\n                            previousLayer.wfsLayer = null;\r\n                            removeLayer(editableLayer);\r\n                        }\r\n                        Promise.all(removePromises).then(() => resolve());\r\n                    });\r\n                }\r\n                else {\r\n                    resolve();\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.getEditableLayer = function (layer) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const notEditableErrorMsg = `Layer ${layer.id} not editable`;\r\n            layer = self.map ? map.getLayer(layer) : layer;\r\n            if (layer) {\r\n                if (layer.type === TC.Consts.layerType.WFS && (layer.wmsLayer || (!layer.options.stealth && !layer.options.readOnly))) {\r\n                    layer.getCapabilitiesPromise().then(() => resolve(layer));\r\n                }\r\n                else if (layer.type === TC.Consts.layerType.WMS) {\r\n                    if (layer.wfsLayer) {\r\n                        layer.wfsLayer.getCapabilitiesPromise().then(() => resolve(layer.wfsLayer));\r\n                    }\r\n                    else {\r\n                        layer.getWFSCapabilities()\r\n                            .then(function (capabilities) {\r\n                                //comprobamos que la solo es una capa y existe en el capabilities del WFS\r\n                                const layers = layer.getDisgregatedLayerNames();\r\n                                const fullLayerName = layers[0];\r\n                                const colonIdx = fullLayerName.indexOf(':');\r\n                                const shortLayerName = fullLayerName.substring(colonIdx + 1);\r\n                                const prefix = 'Edicion'; //fullLayerName.substr(0, colonIdx + 1);\r\n                                if (layers.length !== 1 || capabilities.FeatureTypes.hasOwnProperty(shortLayerName)) {\r\n                                    TC.loadJS(\r\n                                        !TC.layer.Vector,\r\n                                        TC.apiLocation + 'TC/layer/Vector',\r\n                                        async function () {\r\n                                            const wfsLayerOptions = {\r\n                                                id: self.getUID(),\r\n                                                type: TC.Consts.layerType.WFS,\r\n                                                url: await layer.getWFSURL(),\r\n                                                properties: self.map ? new TC.filter.Bbox(null, map.getExtent(), map.getCRS()) : null,\r\n                                                outputFormat: TC.Consts.format.JSON,\r\n                                                title: `${layer.getPath().join(' • ')} - ${self.getLocaleString('featureEditing')}`,\r\n                                                geometryName: 'geom',\r\n                                                featureType: [fullLayerName],\r\n                                                featureNS: prefix,\r\n                                                styles: self.styles,\r\n                                                stealth: true\r\n                                            };\r\n                                            layer.wfsLayer = new TC.layer.Vector(wfsLayerOptions);\r\n                                            layer.wfsLayer.wmsLayer = layer;\r\n                                            resolve(layer.wfsLayer);\r\n                                        }\r\n                                    );\r\n                                }\r\n                                else {\r\n                                    reject(new Error(notEditableErrorMsg));\r\n                                }\r\n                            })\r\n                            .catch((err) => reject(err));\r\n                    }\r\n                }\r\n                else if (layer.type === TC.Consts.layerType.VECTOR) {\r\n                    resolve(layer);\r\n                }\r\n                else {\r\n                    reject(new Error(notEditableErrorMsg));\r\n                }\r\n            }\r\n            else {\r\n                reject(new Error('No layer to edit'));\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.isLayerEdited = function (layer) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const storagePrefix = getStoragePrefix(self, layer);\r\n            TC.loadJS(!window.localforage, [TC.Consts.url.LOCALFORAGE], function () {\r\n                localforage.keys().then(function (keys) {\r\n                    if (keys) {\r\n                        resolve(keys.some(key => key.indexOf(storagePrefix) === 0));\r\n                    }\r\n                    else {\r\n                        resolve(false);\r\n                    }\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.getLayerEditData = function (optionalLayer) {\r\n        const self = this;\r\n        const layer = optionalLayer || self.layer;\r\n        if (!layer) {\r\n            return null;\r\n        }\r\n        return self.layersEditData[layer.id] = self.layersEditData[layer.id] || {\r\n            checkedOut: false\r\n        };\r\n    };\r\n\r\n    const getLegendImage = function (layer, geometryType) {\r\n        switch (geometryType) {\r\n            case TC.Consts.geom.POINT:\r\n            case TC.Consts.geom.MULTIPOINT:\r\n                return TC.Util.getLegendImageFromStyle(layer.styles.point, { geometryType: TC.Consts.geom.POINT });\r\n            case TC.Consts.geom.POLYLINE:\r\n            case TC.Consts.geom.MULTIPOLYLINE:\r\n                return TC.Util.getLegendImageFromStyle(layer.styles.line, { geometryType: TC.Consts.geom.POLYLINE });\r\n            default:\r\n                return TC.Util.getLegendImageFromStyle(layer.styles.polygon, { geometryType: TC.Consts.geom.POLYGON });\r\n        }\r\n    };\r\n\r\n    ctlProto._enableEditSerialization = function (layer) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            self.getEditableLayer(layer)\r\n                .then(function (editableLayer) {\r\n\r\n                    const endProcess = function () {\r\n                        const layerEditData = self.getLayerEditData(layer);\r\n\r\n                        const baseTitle = layer.getPath ? layer.getPath().join(' • ') : (layer.title || layer.id);\r\n\r\n                        var beforeEditLayer = layerEditData.beforeEditLayer;\r\n                        if (!beforeEditLayer) {\r\n                            beforeEditLayer = layerEditData.beforeEditLayer = new TC.layer.Vector(TC.Util.extend({}, editableLayer.options, {\r\n                                id: self.getUID(),\r\n                                title: `${baseTitle} - ${self.getLocaleString('dataBeforeEdits')}`,\r\n                                readOnly: true,\r\n                                owner: self,\r\n                                stealth: true\r\n                            }));\r\n                        }\r\n\r\n                        var addedFeaturesLayer = layerEditData.addedFeaturesLayer;\r\n                        let aflIsOld = true;\r\n                        if (!addedFeaturesLayer) {\r\n                            aflIsOld = false;\r\n                            addedFeaturesLayer = layerEditData.addedFeaturesLayer = new TC.layer.Vector({\r\n                                id: self.getUID(),\r\n                                title: `${baseTitle} - ${self.getLocaleString('addedFeatures')}`,\r\n                                owner: self,\r\n                                stealth: true,\r\n                                zIndex: 2\r\n                            });\r\n                        }\r\n\r\n                        var modifiedFeaturesLayer = layerEditData.modifiedFeaturesLayer;\r\n                        let mflIsOld = true;\r\n                        if (!modifiedFeaturesLayer) {\r\n                            mflIsOld = false;\r\n                            modifiedFeaturesLayer = layerEditData.modifiedFeaturesLayer = new TC.layer.Vector({\r\n                                id: self.getUID(),\r\n                                title: `${baseTitle} - ${self.getLocaleString('modifiedFeatures')}`,\r\n                                owner: self,\r\n                                stealth: true,\r\n                                zIndex: 2\r\n                            });\r\n                        }\r\n\r\n                        var removedFeaturesLayer = layerEditData.removedFeaturesLayer;\r\n                        let rflIsOld = true;\r\n                        if (!removedFeaturesLayer) {\r\n                            rflIsOld = false;\r\n                            removedFeaturesLayer = layerEditData.removedFeaturesLayer = new TC.layer.Vector({\r\n                                id: self.getUID(),\r\n                                title: `${baseTitle} - ${self.getLocaleString('removedFeatures')}`,\r\n                                owner: self,\r\n                                stealth: true,\r\n                                zIndex: 2\r\n                            });\r\n                        }\r\n\r\n                        const featurePromises = [];\r\n                        if (aflIsOld && mflIsOld && rflIsOld) {\r\n                            // Existen de antes las capas de adiciones, modificaciones y eliminaciones. Leemos de ahí.\r\n                            removedFeaturesLayer.features.forEach(function (removedFeature) {\r\n                                const f = editableLayer.getFeatureById(removedFeature.id);\r\n                                if (f) {\r\n                                    editableLayer.removeFeature(f);\r\n                                }\r\n                            });\r\n                            modifiedFeaturesLayer.features.forEach(function (modifiedFeature) {\r\n                                const f = editableLayer.getFeatureById(modifiedFeature.id);\r\n                                if (f) {\r\n                                    f.setCoords(modifiedFeature.geometry);\r\n                                    f.setData(modifiedFeature.getData());\r\n                                }\r\n                            });\r\n                            addedFeaturesLayer.features.forEach(function (addedFeature) {\r\n                                if (!editableLayer.getFeatureById(addedFeature.id)) {\r\n                                    featurePromises.push(editableLayer.addFeature(self._createAuxFeature(addedFeature)));\r\n                                }\r\n                            });\r\n                            Promise.all(featurePromises).then(() => {\r\n                                layerEditData.serializable = true;\r\n                                resolve(editableLayer);\r\n                            });\r\n                        }\r\n                        else {\r\n                            // Las capas de adiciones, modificaciones y eliminaciones son nuevas. Leemos de local storage.\r\n                            const storagePrefix = getStoragePrefix(self, editableLayer);\r\n                            const addedStoragePrefix = getAddedStoragePrefix(self, editableLayer);\r\n                            const modifiedStoragePrefix = getModifiedStoragePrefix(self, editableLayer);\r\n                            const removedStoragePrefix = getRemovedStoragePrefix(self, editableLayer);\r\n                            TC.loadJS(!window.localforage, [TC.Consts.url.LOCALFORAGE], function () {\r\n                                //var li = map.getLoadingIndicator();\r\n                                localforage.keys().then(function (keys) {\r\n                                    if (keys) {\r\n                                        keys\r\n                                            .filter(key => key.indexOf(storagePrefix) === 0)\r\n                                            .forEach(function (key) {\r\n                                                //li && li.addWait(uid);\r\n                                                featurePromises.push(new Promise(function (res, rej) {\r\n                                                    readFeature(key).then(function(obj) {\r\n                                                        var id;\r\n                                                        var k = obj.key;\r\n                                                        if (k.indexOf(removedStoragePrefix) === 0) {\r\n                                                            id = k.substr(removedStoragePrefix.length);\r\n                                                            const feature = editableLayer.getFeatureById(id);\r\n                                                            editableLayer.removeFeature(feature);\r\n                                                            removedFeaturesLayer.addFeature(feature).then(() => res(feature));\r\n                                                            //li && li.removeWait(uid);\r\n                                                        }\r\n                                                        else if (k.indexOf(modifiedStoragePrefix) === 0) {\r\n                                                            id = k.substr(modifiedStoragePrefix.length);\r\n                                                            const feature = editableLayer.getFeatureById(id);\r\n                                                            if (feature) {\r\n                                                                feature.setCoords(obj.feature.geometry);\r\n                                                                feature.setData(obj.feature.attributes);\r\n                                                                const newFeature = feature.clone();\r\n                                                                newFeature.setId(feature.id);\r\n                                                                modifiedFeaturesLayer.addFeature(newFeature).then(() => res(feature));\r\n                                                                //li && li.removeWait(uid);\r\n                                                            }\r\n                                                            else {\r\n                                                                res(feature);\r\n                                                            }\r\n                                                        }\r\n                                                        else if (k.indexOf(addedStoragePrefix) === 0) {\r\n                                                            id = k.substr(addedStoragePrefix.length);\r\n                                                            var idNumber = parseInt(id.substr(id.lastIndexOf('.') + 1));\r\n                                                            newFeatureIdNumber = Math.max(newFeatureIdNumber, idNumber + 1);\r\n                                                            var addPromise;\r\n                                                            switch (obj.feature.type) {\r\n                                                                case TC.Consts.geom.POINT:\r\n                                                                    addPromise = editableLayer.addPoint(obj.feature.geometry);\r\n                                                                    break;\r\n                                                                case TC.Consts.geom.POLYLINE:\r\n                                                                    addPromise = editableLayer.addPolyline(obj.feature.geometry);\r\n                                                                    break;\r\n                                                                case TC.Consts.geom.POLYGON:\r\n                                                                    addPromise = editableLayer.addPolygon(obj.feature.geometry);\r\n                                                                    break;\r\n                                                                case TC.Consts.geom.MULTIPOLYLINE:\r\n                                                                    addPromise = editableLayer.addMultiPolyline(obj.feature.geometry);\r\n                                                                    break;\r\n                                                                case TC.Consts.geom.MULTIPOLYGON:\r\n                                                                    addPromise = editableLayer.addMultiPolygon(obj.feature.geometry);\r\n                                                                    break;\r\n                                                                default:\r\n                                                                    break;\r\n                                                            };\r\n                                                            addPromise.then(function (feat) {\r\n                                                                //feat.setStyle(TC.Util.extend({}, layer.styles.line, layer.styles.polygon));\r\n                                                                feat.provId = id;\r\n                                                                feat.setData(obj.feature.attributes);\r\n                                                                const newFeat = feat.clone();\r\n                                                                newFeat.setStyle(null);\r\n                                                                newFeat.setId(feat.provId);\r\n                                                                addedFeaturesLayer.addFeature(newFeat).then(() =>  res(newFeat));\r\n                                                                //li && li.removeWait(uid);\r\n                                                            });\r\n                                                        }\r\n                                                    });\r\n                                                }));\r\n                                            });\r\n                                    }\r\n                                    Promise.all(featurePromises).then(() => {\r\n                                        layerEditData.serializable = true;\r\n                                        resolve(editableLayer);\r\n                                    });\r\n                                });\r\n                            });\r\n                        }\r\n                    };\r\n\r\n                    if (editableLayer.type === TC.Consts.layerType.WFS) {\r\n                        if (editableLayer.state === TC.Layer.state.IDLE) {\r\n                            endProcess();\r\n                        }\r\n                        else {\r\n                            const onLayerUpdate = function (e) {\r\n                                if (e.layer === editableLayer) {\r\n                                    endProcess();\r\n                                    self.map.off(TC.Consts.event.LAYERUPDATE, onLayerUpdate);\r\n                                }\r\n                            }\r\n                            self.map.on(TC.Consts.event.LAYERUPDATE, onLayerUpdate);\r\n                        }\r\n                    }\r\n                    else {\r\n                        resolve(editableLayer);\r\n                    }\r\n                });\r\n        });\r\n    };\r\n\r\n    ctlProto.applyEdits = function () {\r\n        const self = this;\r\n        if (self.layer) {\r\n            const layerEditData = self.getLayerEditData();\r\n            if (layerEditData.serializable) {\r\n                self.isSyncing = true;\r\n                setSyncState(self);\r\n                const li = self.map.getLoadingIndicator();\r\n                const waitId = li && li.addWait();\r\n                // Copiamos modificadas para ponerle el nombre de atributo de geometría descrito en DescribeFeatureType.\r\n                const modified = layerEditData.modifiedFeaturesLayer.features.map(function (feature) {\r\n                    const result = new feature.constructor(feature.geometry, { geometryName: layerEditData.geometryName });\r\n                    const unmodifiedFeature = layerEditData.beforeEditLayer.features.filter(f => f.id === feature.id)[0];\r\n                    let newData;\r\n                    if (unmodifiedFeature) {\r\n                        newData = {};\r\n                        for (var key in feature.data) {\r\n                            if (key !== 'id') {\r\n                                const oldValue = unmodifiedFeature.data[key];\r\n                                const newValue = feature.data[key];\r\n                                if (oldValue !== newValue) {\r\n                                    newData[key] = newValue;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        newData = feature.data;\r\n                    }\r\n                    result.setData(newData);\r\n                    result.setId(feature.id);\r\n                    return result;\r\n                });\r\n                self.getEditableLayer(self.layer)\r\n                    .then(function (l) {\r\n                        l.applyEdits(layerEditData.addedFeaturesLayer.features, modified, layerEditData.removedFeaturesLayer.features)\r\n                            .then(function (response) {\r\n                                // SONDA DE PRUEBA, BORRAR EN PRO //\r\n                                if (response.transactionSummary.totalInserted !== layerEditData.addedFeaturesLayer.features.length ||\r\n                                    response.transactionSummary.totalUpdated !== modified.length ||\r\n                                    response.transactionSummary.totalDeleted !== layerEditData.removedFeaturesLayer.features.length) {\r\n                                    TC.error(\"Error de concordancia de número de entidades en transacción\");\r\n                                    console.log(response, layerEditData.addedFeaturesLayer, modified, layerEditData.removedFeaturesLayer);\r\n                                    throw new Error(`Error en transacción: Insertados ${response.transactionSummary.totalInserted}, hay ${layerEditData.addedFeaturesLayer.features.length} en capa`);\r\n                                }\r\n                                ////////////////////////////////////\r\n                                if (self.layer.type === TC.Consts.layerType.WMS) {\r\n                                    self.layer.refresh();\r\n                                }\r\n                                self.deleteCache(getStoragePrefix(self)).then(function () {\r\n                                    self.cacheLayer(l).then(function () {\r\n                                        self.isSyncing = false;\r\n                                        li && li.removeWait(waitId);\r\n                                        // Las acciones a realizar a partir de este punto son las mismas que al descartar una edición\r\n                                        self.discardEdits();\r\n                                        self.map.toast(self.getLocaleString('changesSuccessfullySyncedWithServer'), { type: TC.Consts.msgType.INFO });\r\n                                    });\r\n                                });\r\n                            })\r\n                            .catch(function (obj) {\r\n                                self.isSyncing = false;\r\n                                setSyncState(self);\r\n                                TC.error(self.getLocaleString('errorSyncingChanges', { code: obj.code, reason: obj.reason }), { type: TC.Consts.msgType.ERROR });\r\n                            });\r\n                    });\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.discardEdits = function () {\r\n        var self = this;\r\n        self._joinedFeatureAttributes = [];\r\n        var storagePrefix = getStoragePrefix(self);\r\n        TC.loadJS(!window.localforage, [TC.Consts.url.LOCALFORAGE], function () {\r\n            localforage.keys().then(function (keys) {\r\n                if (keys) {\r\n                    for (var i = 0, len = keys.length; i < len; i++) {\r\n                        var key = keys[i];\r\n                        if (key.indexOf(storagePrefix) === 0) {\r\n                            localforage.removeItem(key);\r\n                        }\r\n                    }\r\n                    if (self.layer) {\r\n                        const layerEditData = self.getLayerEditData();\r\n                        if (layerEditData.serializable) {\r\n                            layerEditData.addedFeaturesLayer.clearFeatures();\r\n                            layerEditData.modifiedFeaturesLayer.clearFeatures();\r\n                            layerEditData.removedFeaturesLayer.clearFeatures();\r\n                            self.editControl.setSelectedFeatures([]);\r\n                            self.editControl.modifyControl.closeAttributes();\r\n                            self.getEditableLayer(self.layer).then(l => l.refresh());\r\n                        }\r\n                    }\r\n                    setChangedState(self, false);\r\n                }\r\n            });\r\n            self.editControl.setMode(null);\r\n        });\r\n    };\r\n\r\n    ctlProto.showOriginalFeatures = function (show) {\r\n        const self = this;\r\n        self.showsOriginalFeatures = show;\r\n        const layerEditData = self.getLayerEditData();\r\n        if (layerEditData) {\r\n            layerEditData.beforeEditLayer.setVisibility(show);\r\n        }\r\n    };\r\n\r\n    ctlProto.highlightAdded = function (highlight) {\r\n        const self = this;\r\n        self.highlightsAdded = highlight;\r\n        const layerEditData = self.getLayerEditData();\r\n        if (layerEditData && layerEditData.addedFeaturesLayer) {\r\n            layerEditData.addedFeaturesLayer.setVisibility(highlight);\r\n        }\r\n    };\r\n\r\n    ctlProto.highlightModified = function (highlight) {\r\n        const self = this;\r\n        self.highlightsModified = highlight;\r\n        const layerEditData = self.getLayerEditData();\r\n        if (layerEditData && layerEditData.modifiedFeaturesLayer) {\r\n            layerEditData.modifiedFeaturesLayer.setVisibility(highlight);\r\n        }\r\n    };\r\n\r\n    ctlProto.highlightRemoved = function (highlight) {\r\n        const self = this;\r\n        self.highlightsRemoved = highlight;\r\n        const layerEditData = self.getLayerEditData();\r\n        if (layerEditData && layerEditData.removedFeaturesLayer) {\r\n            layerEditData.removedFeaturesLayer.setVisibility(highlight);\r\n        }\r\n    };\r\n\r\n    const getStyleFromFeatureType = function (ctl, layer) {\r\n        const result = {};\r\n        const layerEditData = ctl.getLayerEditData(layer.wmsLayer || layer);\r\n        switch (layerEditData.geometryType) {\r\n            case TC.Consts.geom.POLYGON:\r\n            case TC.Consts.geom.MULTIPOLYGON:\r\n                result.polygon = layer.map.options.styles.polygon;\r\n                break;\r\n            case TC.Consts.geom.POLYLINE:\r\n            case TC.Consts.geom.MULTIPOLYLINE:\r\n                result.line = layer.map.options.styles.line;\r\n                break;\r\n            default:\r\n                result.point = layer.map.options.styles.point;\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.getBeforeEditLayerStyle = function (layer) {\r\n        const self = this;\r\n        const getNegativeColor = function (color) {\r\n            const rgba = layer.wrap.getRGBA(color);\r\n            for (var i = 0; i < 3; i++) {\r\n                rgba[i] = 255 - rgba[i];\r\n            }\r\n            return '#' + (rgba[0] * 65536 + rgba[1] * 256 + rgba[2]).toString(16).padStart(6, '0');\r\n        };\r\n\r\n        const dash = [1, 3];\r\n        const result = TC.Util.extend(true, {}, layer.options.styles || getStyleFromFeatureType(self, layer));\r\n        if (result.point) {\r\n            result.point.strokeColor = getNegativeColor(result.point.strokeColor);\r\n            result.point.lineDash = dash;\r\n        }\r\n        if (result.line) {\r\n            result.line.strokeColor = getNegativeColor(result.line.strokeColor);\r\n            result.line.lineDash = dash;\r\n        }\r\n        if (result.polygon) {\r\n            result.polygon.strokeColor = getNegativeColor(result.polygon.strokeColor);\r\n            result.polygon.lineDash = dash;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    const colorizeLayer = function (ctl, layer, color) {\r\n        const result = TC.Util.extend(true, {}, layer.options.styles || getStyleFromFeatureType(ctl, layer));\r\n        if (result.point) {\r\n            result.point.strokeColor = color;\r\n            result.point.fillColor = color;\r\n        }\r\n        if (result.line) {\r\n            result.line.strokeColor = color;\r\n        }\r\n        if (result.polygon) {\r\n            result.polygon.strokeColor = color;\r\n            result.polygon.fillColor = color;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.getAddedFeaturesLayerStyle = function (layer) {\r\n        const self = this;\r\n        const layerEditData = self.getLayerEditData(layer.wmsLayer || layer);\r\n        return colorizeLayer(self, layer, layerEditData.addedCustomColor || '#00ff00');\r\n    };\r\n\r\n    ctlProto.getModifiedFeaturesLayerStyle = function (layer) {\r\n        const self = this;\r\n        const layerEditData = self.getLayerEditData(layer.wmsLayer || layer);\r\n        return colorizeLayer(self, layer, layerEditData.modifiedCustomColor || '#ff7f00');\r\n    };\r\n\r\n    ctlProto.getRemovedFeaturesLayerStyle = function (layer) {\r\n        const self = this;\r\n        const layerEditData = self.getLayerEditData(layer.wmsLayer || layer);\r\n        return colorizeLayer(self, layer, layerEditData.removedCustomColor || '#ff0000');\r\n    };\r\n\r\n})();"]}