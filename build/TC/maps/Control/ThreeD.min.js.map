{"version":3,"sources":["control/ThreeD.js"],"names":["TC","control","ThreeD","Control","apply","this","arguments","inherit","ctlProto","prototype","CLASS","classes","BETA","BTNACTIVE","template","compiler","main","container","depth0","helpers","partials","data","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","escapeExpression","nullContext","name","hash","loc","start","line","column","end","useData","register","map","self","result","on","Consts","event","VIEWCHANGE","e","view","THREED","activate","renderData","callback","button","div","querySelector","addEventListener","CLICK","disabled","on3DView","unapply","setAttribute","getLocaleString","classList","remove","passive","Util","isFunction","browserSupportWebGL","removeDisabled","view3D","options","getRenderedHtml","loadJS","apiLocation","add","manageButton","deactivate","window","WebGLRenderingContext","canvas","document","createElement","webglOptions","alpha","stencil","failIfMajorPerformanceCaveat","gl","getContext","isSlower","console","log","E","warning","toast","type","msgType","WARNING","duration"],"mappings":"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","sourcesContent":["/**\r\n  * Configuración adicional necesaria del control 3D en el mapa.  \r\n  * @typedef ThreeDOptions\r\n  * @extends ViewOptions\r\n  * @see MapViewOptions\r\n  * @property {HTMLElement|string} [div] - Elemento del DOM en el que crear la vista o valor de atributo id de dicho elemento.  \r\n  *\r\n  * @example <caption>[Ver en vivo](../examples/cfg.ThreeDOptions.html)</caption> {@lang html}\r\n  * <div id=\"mapa\"/>\r\n  * <div id=\"vista3d\"/>\r\n  * <script>\r\n  *     // Establecemos un layout simplificado apto para hacer demostraciones de controles.\r\n  *     SITNA.Cfg.layout = \"layout/ctl-container\";\r\n  *     // Añadimos el control de selector de mapa de fondos en el primer DIV del marcado markup.html contenido en el layout configurado en la propiedad SITNA.Cfg.layout.\r\n  *     SITNA.Cfg.controls.basemapSelector = {\r\n  *         div: \"slot1\"\r\n  *     };\r\n  *     // Añadimos el control de tabla de contenidos en el segundo DIV del marcado markup.html contenido en el layout configurado en la propiedad SITNA.Cfg.layout.\r\n  *     SITNA.Cfg.controls.TOC = {\r\n  *         div: \"slot2\"\r\n  *     };\r\n  *     // Añadimos una capa raster desde un servicio WMS y una capa vectorial\r\n  *     // a partir de un archivo geográfico en formato GML.\r\n  *     SITNA.Cfg.workLayers = [\r\n  *         {\r\n  *             id: \"wms\",\r\n  *             title: \"Camino de Santiago\",\r\n  *             type: SITNA.Consts.layerType.WMS,\r\n  *             url: \"//idena.navarra.es/ogc/wms\",\r\n  *             layerNames: \"IDENA:PATRIM_Lin_CaminoSantR\",\r\n  *             format: SITNA.Consts.mimeType.PNG\r\n  *         },\r\n  *         {\r\n  *             id: \"gml\",\r\n  *             type: SITNA.Consts.layerType.VECTOR,\r\n  *             url: \"data/ESTACIONESTREN.gml\"\r\n  *         }\r\n  *     ];\r\n  *     // Añadimos el control 3D.\r\n  *     SITNA.Cfg.controls.threeD = true;\r\n  *     // Configuramos en la propiedad `views` del mapa la vista `threeD` que requiere el control threeD para el correcto funcionamiento.\r\n  *     SITNA.Cfg.views = {\r\n  *         threeD: {\r\n  *             div: \"vista3d\" // Indicamos el identificador del DIV en el marcado en el cual cargar la vista 3D.\r\n  *         }\r\n  *     };\r\n  *     var map = new SITNA.Map(\"mapa\");\r\n  * </script>\r\n  */\r\n\r\nTC.control = TC.control || {};\r\n\r\n(function () {\r\n\r\n    TC.control.ThreeD = function () {\r\n        var self = this;\r\n\r\n        TC.Control.apply(self, arguments);\r\n    };\r\n\r\n    TC.inherit(TC.control.ThreeD, TC.Control);\r\n\r\n    var ctlProto = TC.control.ThreeD.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-3d';\r\n    ctlProto.classes = {\r\n        BETA: 'tc-beta-button',\r\n        BTNACTIVE: 'active'\r\n    };\r\n\r\n    ctlProto.template = TC.apiLocation + \"TC/templates/tc-ctl-3d.hbs\";\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        map.on(TC.Consts.event.VIEWCHANGE, function (e) {\r\n            if (e.view == TC.Consts.view.THREED) { // cargamos la vista 3D desde el estado actualizamos el estado del botón\r\n                self.activate();\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.renderData = function (data, callback) {\r\n        const self = this;\r\n\r\n        return TC.Control.prototype.renderData.call(self, data, function () {\r\n            self.button = self.div.querySelector('.' + self.CLASS + '-btn');\r\n\r\n            self.button.addEventListener(TC.Consts.event.CLICK, function () {\r\n\r\n                if (self.button.disabled) {\r\n                    return;\r\n                }\r\n\r\n                if (!self.map.on3DView) {\r\n                    self.activate();\r\n                } else {\r\n                    self.button.disabled = true;\r\n\r\n                    TC.view.ThreeD.unapply({\r\n                        callback: function () {\r\n                            self.button.setAttribute('title', self.getLocaleString(\"threed.tip\"));\r\n\r\n                            self.button.classList.remove(self.classes.BTNACTIVE);\r\n\r\n                            self.button.disabled = false;\r\n                        }\r\n                    });\r\n                }\r\n            }, { passive: true });\r\n\r\n            if (TC.Util.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.activate = function () {\r\n        var self = this;\r\n\r\n        if (!self.map.on3DView) {\r\n            self.button.disabled = true;\r\n        }\r\n\r\n        self.browserSupportWebGL.call(self);\r\n\r\n        const manageButton = function () {\r\n            self.button.setAttribute('title', self.getLocaleString('threed.two.tip'));\r\n            self.button.classList.remove(self.classes.BETA);\r\n\r\n            self.button.classList.add(self.classes.BTNACTIVE);\r\n        };\r\n\r\n        const removeDisabled = function () {\r\n            self.button.disabled = false;\r\n        };\r\n\r\n        if (!self.map.view3D) {\r\n            TC.loadJS(\r\n                !TC.view || !TC.view.ThreeD,\r\n                TC.apiLocation + 'TC/view/ThreeD',\r\n                function () {                                                           /* provisional */\r\n                    TC.view.ThreeD.apply({ map: self.map, options: self.options, getRenderedHtml: self.getRenderedHtml, callback: removeDisabled });\r\n                });\r\n        } else if (!self.map.on3DView) {                                               /* provisional */\r\n            TC.view.ThreeD.apply({ map: self.map, options: self.options, getRenderedHtml: self.getRenderedHtml, callback: removeDisabled });\r\n        }\r\n\r\n        manageButton();\r\n\r\n        //TC.Control.prototype.activate.call(self);\r\n    };\r\n\r\n    ctlProto.deactivate = function () {\r\n        var self = this;\r\n\r\n        TC.Control.prototype.deactivate.call(self);\r\n    };\r\n\r\n    ctlProto.browserSupportWebGL = function () {\r\n        var self = this;\r\n        var result = false;\r\n\r\n        //Check for webgl support and if not, then fall back to leaflet\r\n        if (!window.WebGLRenderingContext) {\r\n            // Browser has no idea what WebGL is. Suggest they\r\n            // get a new browser by presenting the user with link to\r\n            // http://get.webgl.org\r\n            result = false;\r\n        } else {\r\n            var canvas = document.createElement('canvas');\r\n\r\n            var webglOptions = {\r\n                alpha: false,\r\n                stencil: false,\r\n                failIfMajorPerformanceCaveat: true\r\n            };\r\n\r\n            try {\r\n                var gl = canvas.getContext(\"webgl\", webglOptions) ||\r\n                    canvas.getContext(\"experimental-webgl\", webglOptions) ||\r\n                    canvas.getContext(\"webkit-3d\", webglOptions) ||\r\n                    canvas.getContext(\"moz-webgl\", webglOptions);\r\n                if (!gl) {\r\n                    // We couldn't get a WebGL context without a major performance caveat.  Let's see if we can get one at all.\r\n                    webglOptions.failIfMajorPerformanceCaveat = false;\r\n                    gl = canvas.getContext(\"webgl\", webglOptions) ||\r\n                        canvas.getContext(\"experimental-webgl\", webglOptions) ||\r\n                        canvas.getContext(\"webkit-3d\", webglOptions) ||\r\n                        canvas.getContext(\"moz-webgl\", webglOptions);\r\n                    if (!gl) {\r\n                        // No WebGL at all.\r\n                        result = false;\r\n                    } else {\r\n                        // We can do WebGL, but only with software rendering (or similar).\r\n                        result = 'slow';\r\n                        self.isSlower = true;\r\n                    }\r\n                } else {\r\n                    // WebGL is good to go!\r\n                    result = true;\r\n                }\r\n            } catch (e) {\r\n                console.log(E);\r\n            }\r\n\r\n            if (result === \"slow\" || !result) {\r\n                var warning = result === \"slow\" ? \"threed.slowSupport.supported\" : \"threed.not.supported\";\r\n                self.map.toast(self.getLocaleString(warning), {\r\n                    type: TC.Consts.msgType.WARNING,\r\n                    duration: 10000\r\n                });\r\n            }\r\n\r\n            return result;\r\n        }\r\n    };\r\n\r\n})();"]}