{"version":3,"sources":["control/FeatureTools.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Consts","event","POPUP","POPUPHIDE","DRAWCHART","DRAWTABLE","DIALOG","FEATUREHIGHLIGHT","FEATUREDOWNPLAY","FeatureTools","self","this","apply","arguments","cs","_classSelector","CLASS","_selectors","ELEVATION_CHECKBOX","INTERPOLATION_RADIO","INTERPOLATION_DISTANCE","_dialogDiv","Util","getDiv","options","dialogDiv","window","$","_$dialogDiv","document","body","appendChild","inherit","ctlProto","prototype","TITLE_SEPARATOR","FILE_TITLE_SEPARATOR","template","compiler","main","container","depth0","helpers","partials","data","alias1","nullContext","alias2","escapeExpression","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","name","hash","loc","start","line","column","end","useData","register","map","on","e","caller","currentFeature","addUI","getDisplayControl","updateUI","Promise","resolve","reject","all","renderPromise","then","addControl","id","getUID","div","querySelector","includeControls","ctl","_shareCtl","catch","err","Error","render","_set1stRenderPromise","renderData","elevation","displayElevation","getRenderedHtml","checkboxId","html","innerHTML","menuContainer","getMenuElement","menuIsMissing","loadJS","Print","endAddUIPromise","getContainerElement","querySelectorAll","length","highlightedFeature","showsPopup","printControl","target","printableElement","title","tools","DOMParser","parseFromString","firstChild","stateful","shareBtn","parentElement","removeChild","_setToolButtonHandlers","_decorateDisplay","displayControl","attributeTable","addEventListener","CLICK","zoomToFeature","getCurrentFeature","passive","forEach","a","stopPropagation","classList","add","setAttribute","getLocaleString","uiDiv","isActive","layer","owner","filterLayer","dataset","layerId","featureId","profileBtn","toggle","classes","HIDDEN","feature","Polyline","MultiPolyline","remove","ACTIVE","setTimeout","showDownloadDialog","getFeatureFromElement","showShareDialog","getElevationControl","elevCtl","displayElevationProfile","removeFeature","async","elevationControl","downloadDialog","getDownloadDialog","fileName","_getFeatureFilename","assign","openCallback","trigger","open","shareDialog","showModal","onShowShareDialog","closeCallback","featureToShare","elm","getLayer","getFeatureById","zoomToFeatures","animate","closeDisplay","filterFn","isVisible","getControlsByClass","Popup","filter","pu","hide","ResultsPanel","p","close","resultsLayer","confirm","dialog","shareCtl","extraParams","clone","setId","mustGetElevations","resolution","getGeometryStride","elevOptions","crs","features","maxCoordQuantity","sampleNumber","getElevationToool","tool","setGeometry","error","coordsArray","getCoordsArray","firstCoord","coord","setCoords","geometry","prepareFeatureToShare","f","shareDiv","link","generateLink","input","value","generateIframe","getFeatureTitle","result","toString","replace","RegExp","toLowerCase","getFormattedDate","Date"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.Consts.event.POPUP = TC.Consts.event.POPUP || 'popup.tc';\r\nTC.Consts.event.POPUPHIDE = TC.Consts.event.POPUPHIDE || 'popuphide.tc';\r\nTC.Consts.event.DRAWCHART = TC.Consts.event.DRAWCHART || 'drawchart.tc';\r\nTC.Consts.event.DRAWTABLE = TC.Consts.event.DRAWTABLE || 'drawtable.tc';\r\nTC.Consts.event.DIALOG = TC.Consts.event.DIALOG || 'dialog.tc';\r\nTC.Consts.event.FEATUREHIGHLIGHT = TC.Consts.event.FEATUREHIGHLIGHT || 'featurehighlight.tc';\r\nTC.Consts.event.FEATUREDOWNPLAY = TC.Consts.event.FEATUREDOWNPLAY || 'featuredownplay.tc';\r\n\r\nTC.control.FeatureTools = function () {\r\n    const self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    const cs = self._classSelector = '.' + self.CLASS;\r\n    self._selectors = {\r\n        ELEVATION_CHECKBOX: cs + '-dialog-elev input[type=checkbox]',\r\n        INTERPOLATION_RADIO: 'input[type=radio][name=finfo-ip-coords]',\r\n        INTERPOLATION_DISTANCE: cs + '-dialog-ip-m'\r\n    };\r\n\r\n    self._dialogDiv = TC.Util.getDiv(self.options.dialogDiv);\r\n    if (window.$) {\r\n        self._$dialogDiv = $(self._dialogDiv);\r\n    }\r\n    if (!self.options.dialogDiv) {\r\n        document.body.appendChild(self._dialogDiv);\r\n    }\r\n};\r\n\r\nTC.inherit(TC.control.FeatureTools, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.FeatureTools.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-ftools';\r\n\r\n    ctlProto.TITLE_SEPARATOR = ' • ';\r\n    ctlProto.FILE_TITLE_SEPARATOR = '__';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/tc-ctl-ftools.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/tc-ctl-ftools-dialog.hbs\";\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        map\r\n            .on(TC.Consts.event.POPUP + ' ' + TC.Consts.event.DRAWTABLE + ' ' + TC.Consts.event.DRAWCHART, function (e) {\r\n                const control = e.control;\r\n                if (control.caller || (!control.caller && control.currentFeature)) {\r\n                    self.addUI(control);\r\n                }\r\n                // TODO: ¿Y si miramos si la feature del control ya está asociada a otro control abierto para decir si decoramos o no?\r\n            })\r\n            .on(TC.Consts.event.FEATUREHIGHLIGHT, function (e) {\r\n                self.addUI(e.control.getDisplayControl());\r\n            })\r\n            .on(TC.Consts.event.FEATUREDOWNPLAY, function (e) {\r\n                self.updateUI(e.control.getDisplayControl());\r\n            });\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all([TC.Control.prototype.register.call(self, map), self.renderPromise()]).then(function () {\r\n                self.map.addControl('share', {\r\n                    id: self.getUID(),\r\n                    div: self._dialogDiv.querySelector('.tc-modal-body .' + self.CLASS + '-share-dialog-ctl'),\r\n                    includeControls: false // Establecemos el control para que no exporte estados de controles, así no se comparte la feature dos veces\r\n                }).then(function (ctl) {\r\n                    self._shareCtl = ctl;\r\n                    resolve(self);\r\n                }).catch(function (err) {\r\n                    reject(err instanceof Error ? err : Error(err));\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.render = function () {\r\n        const self = this;\r\n\r\n        return self._set1stRenderPromise(Promise.all([\r\n            self.renderData({ elevation: self.options.displayElevation }),\r\n            self.getRenderedHtml(self.CLASS + '-dialog', {\r\n                checkboxId: self.getUID(),\r\n                elevation: self.options.displayElevation\r\n            }, function (html) {\r\n                self._dialogDiv.innerHTML = html;\r\n            })\r\n        ]));\r\n    };\r\n\r\n    ctlProto.addUI = function (ctl) {\r\n        const self = this;\r\n        const menuContainer = ctl.getMenuElement();\r\n        // Nos aseguramos de que el se decora el control una sola vez\r\n        const menuIsMissing = function () {\r\n            return menuContainer && !menuContainer.querySelector('.' + self.CLASS);\r\n        };\r\n        if (menuIsMissing()) {\r\n            // Añadimos los botones de herramientas\r\n            self.getRenderedHtml(self.CLASS, null, function (html) {\r\n\r\n                // Añadimos botón de imprimir\r\n                TC.loadJS(\r\n                    !TC.control.Print,\r\n                    [TC.apiLocation + 'TC/control/Print'],\r\n                    function () {\r\n                        if (menuIsMissing()) {\r\n                            let endAddUIPromise = Promise.resolve();\r\n                            const container = ctl.getContainerElement();\r\n                            if (!container.querySelectorAll('.' + TC.control.Print.prototype.CLASS + '-btn').length) {\r\n                                const highlightedFeature = (!ctl.caller && ctl.currentFeature) ? ctl.currentFeature : ctl.caller.highlightedFeature;\r\n                                if (highlightedFeature && highlightedFeature.showsPopup === true) {\r\n                                    self.printControl = new TC.control.Print({\r\n                                        target: menuContainer,\r\n                                        printableElement: container,\r\n                                        title: highlightedFeature.id\r\n                                    });\r\n                                    endAddUIPromise = self.printControl.renderPromise();\r\n                                }\r\n                            }\r\n\r\n                            endAddUIPromise.then(function endAddUI() {\r\n                                if (menuIsMissing()) {\r\n                                    const parser = new DOMParser();\r\n                                    const tools = parser.parseFromString(html, 'text/html').body.firstChild;\r\n                                    menuContainer.appendChild(tools);\r\n\r\n                                    self.updateUI(ctl);\r\n\r\n                                    if (!self.map.options.stateful) {\r\n                                        // Compartir no funciona sin estado\r\n                                        const shareBtn = tools.querySelector('.' + self.CLASS + '-share-btn');\r\n                                        shareBtn.parentElement.removeChild(shareBtn);\r\n                                    }\r\n                                    self._setToolButtonHandlers(ctl);\r\n\r\n                                    self._decorateDisplay(ctl);\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n            });\r\n        }\r\n        else {\r\n            self.updateUI(ctl);\r\n        }\r\n    };\r\n\r\n    ctlProto._decorateDisplay = function (displayControl) {\r\n        const self = this;\r\n\r\n        if (!displayControl.caller && displayControl.currentFeature) { // Si es un popup/panel propio de la feature\r\n\r\n            // Añadimos un zoom a la feature al pulsar en la tabla\r\n            const attributeTable = displayControl.getContainerElement().querySelector('table.tc-attr');\r\n            if (attributeTable) {\r\n                attributeTable.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    self.zoomToFeature(self.getCurrentFeature(displayControl));\r\n                }, { passive: true });\r\n\r\n                attributeTable.querySelectorAll('a, table label, table input').forEach(function (a) {\r\n                    a.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                        e.stopPropagation(); // No queremos zoom si pulsamos en un enlace\r\n                    }, { passive: true });\r\n                });\r\n\r\n                attributeTable.classList.add(self.CLASS + '-zoom');\r\n                attributeTable.setAttribute('title', self.getLocaleString('clickToCenter'));\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.updateUI = function (ctl) {\r\n        const self = this;\r\n        const uiDiv = ctl.getMenuElement().querySelector('.' + self.CLASS);\r\n        const currentFeature = self.getCurrentFeature(ctl);\r\n        // Primer caso para que isActive == true: que esté resaltada una feature.\r\n        // Segundo caso: que la feature no sea de GFI.\r\n        // Se puede haber llamado a updateUI después de haber eliminado la feature(FEATUREDOWNPLAY)\r\n        // por es necesario que la feature tenga capa para considerar isActive == true.\r\n        const isActive = currentFeature && currentFeature.layer && currentFeature.layer.owner ?\r\n            currentFeature.layer.owner.filterLayer !== currentFeature.layer : currentFeature && !!currentFeature.layer;\r\n        if (isActive) {\r\n            if (currentFeature) {\r\n                uiDiv.dataset.layerId = currentFeature.layer.id;\r\n                uiDiv.dataset.featureId = currentFeature.id;\r\n                const profileBtn = uiDiv.querySelector(`.${self.CLASS}-prof-btn`);\r\n                if (profileBtn) {\r\n                    profileBtn.classList.toggle(TC.Consts.classes.HIDDEN,\r\n                        !(currentFeature instanceof TC.feature.Polyline || currentFeature instanceof TC.feature.MultiPolyline));\r\n                }\r\n            }\r\n            else {\r\n                delete uiDiv.dataset.layerId;\r\n                delete uiDiv.dataset.featureId;\r\n            }\r\n        }\r\n        if (self.printControl && currentFeature) {\r\n            self.printControl.title = currentFeature.id\r\n        }\r\n        if (uiDiv) {\r\n            uiDiv.classList.remove(TC.Consts.classes.ACTIVE);\r\n            setTimeout(function () {\r\n                uiDiv.classList.toggle(TC.Consts.classes.ACTIVE, !!isActive);\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    ctlProto._setToolButtonHandlers = function (ctl) {\r\n        const self = this;\r\n\r\n        const container = ctl.getMenuElement();\r\n\r\n        // Evento para mostrar diálogo modal de descarga\r\n        container.querySelector('.' + self.CLASS + '-dl-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.showDownloadDialog(self.getFeatureFromElement(this.parentElement));\r\n        }, { passive: true });\r\n\r\n        if (self.map.options.stateful) {\r\n            // Evento para mostrar diálogo modal de compartir\r\n            container.querySelector('.' + self.CLASS + '-share-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                self.showShareDialog(self.getFeatureFromElement(this.parentElement));\r\n            }, { passive: true });\r\n        }\r\n\r\n        // Evento para hacer zoom\r\n        container.querySelector('.' + self.CLASS + '-zoom-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.zoomToFeature(self.getFeatureFromElement(this.parentElement));\r\n        }, { passive: true });\r\n\r\n        // Evento para hacer ver perfil\r\n        const profileBtn = container.querySelector(`.${self.CLASS}-prof-btn`);\r\n        if (profileBtn) {\r\n            profileBtn.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                self.getElevationControl().then(elevCtl => elevCtl && elevCtl.displayElevationProfile(self.getCurrentFeature(ctl)));\r\n            }, { passive: true });\r\n        }\r\n\r\n        // Evento para borrar la feature\r\n        container.querySelector('.' + self.CLASS + '-del-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.removeFeature(self.getFeatureFromElement(this.parentElement));\r\n        }, { passive: true });\r\n    };\r\n\r\n    ctlProto.getElevationControl = async function () {\r\n        const self = this;\r\n        if (!self.options.displayElevation) {\r\n            return null;\r\n        }\r\n        if (!self.elevationControl) {\r\n            self.elevationControl = await self.map.addControl('elevation');\r\n        }\r\n        return self.elevationControl;\r\n    };\r\n\r\n    ctlProto.showDownloadDialog = async function (feature) {\r\n        const self = this;\r\n\r\n        const downloadDialog = await self.getDownloadDialog();\r\n\r\n        var options = {\r\n            title: self.getLocaleString(\"feature\") + \" - \" + self.getLocaleString(\"download\"),\r\n            fileName: self._getFeatureFilename(feature)\r\n        };\r\n\r\n        if (self.map.elevation || self.options.displayElevation) {\r\n            options = Object.assign({}, options, {\r\n                elevation: Object.assign({}, self.map.elevation && self.map.elevation.options, self.options.displayElevation)\r\n            });\r\n        }\r\n\r\n        options.openCallback = function () {\r\n            self.map.trigger(TC.Consts.event.DIALOG, { control: downloadDialog });\r\n        };\r\n\r\n        downloadDialog.open(feature, options);\r\n    };\r\n\r\n    ctlProto.showShareDialog = function (feature) {\r\n        const self = this;\r\n        const shareDialog = self._dialogDiv.querySelector('.' + self.CLASS + '-share-dialog');\r\n        shareDialog.dataset.layerId = feature.layer.id;\r\n        shareDialog.dataset.featureId = feature.id;\r\n        TC.Util.showModal(shareDialog, {\r\n            openCallback: function () {\r\n                self.onShowShareDialog(shareDialog);\r\n            },\r\n            closeCallback: function () {\r\n                self._shareCtl.featureToShare = null;\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.getCurrentFeature = function (ctl) {\r\n        return ctl && ((ctl.caller && ctl.caller.highlightedFeature) ||\r\n            ctl.currentFeature);\r\n    };\r\n\r\n    ctlProto.getFeatureFromElement = function (elm) {\r\n        const self = this;\r\n        const layer = self.map.getLayer(elm.dataset.layerId);\r\n        if (layer) {\r\n            return layer.getFeatureById(elm.dataset.featureId);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    ctlProto.zoomToFeature = function (feature) {\r\n        const self = this;\r\n        if (self.map) {\r\n            self.map.zoomToFeatures([feature], { animate: true });\r\n        }\r\n    };\r\n\r\n    ctlProto.removeFeature = function (feature) {\r\n        const self = this;\r\n        const removeFeature = function () {\r\n            if (feature && feature.layer) {\r\n                feature.layer.removeFeature(feature);\r\n            }\r\n        };\r\n        const closeDisplay = function () {\r\n            const filterFn = ctl => ctl.caller && ctl.caller.highlightedFeature === feature && ctl.isVisible();\r\n            const popups = self.map.getControlsByClass(TC.control.Popup);\r\n            popups\r\n                .filter(filterFn)\r\n                .forEach(pu => pu.hide());\r\n\r\n            const panels = self.map.getControlsByClass(TC.control.ResultsPanel);\r\n            panels\r\n                .filter(filterFn)\r\n                .forEach(p => p.close());\r\n        };\r\n        // No pedimos confirmación para borrar si es un resalte de GFI.\r\n        if (feature && feature.layer.owner && feature.layer === feature.layer.owner.resultsLayer) {\r\n            removeFeature();\r\n            closeDisplay();\r\n        }\r\n        else {\r\n            TC.confirm(self.getLocaleString('deleteFeature.confirm'), function () {\r\n                removeFeature();\r\n                closeDisplay();\r\n            });\r\n        }\r\n    };\r\n\r\n    const prepareFeatureToShare = function (ctl, options) {\r\n        options = options || {};\r\n        return new Promise(function (resolve, reject) {\r\n            const currentFeature = options.feature;\r\n            if (currentFeature) {\r\n                const feature = currentFeature.clone();\r\n                feature.setId(currentFeature.id);\r\n                feature.layer = currentFeature.layer;\r\n                if (options.elevation) {\r\n                    var mustGetElevations = true;\r\n                    if (!options.elevation.resolution && feature.getGeometryStride() > 2) {\r\n                        mustGetElevations = false;\r\n                    }\r\n                    if (mustGetElevations) {\r\n                        const elevOptions = {\r\n                            crs: ctl.map.crs,\r\n                            features: [feature],\r\n                            maxCoordQuantity: ctl.options.displayElevation && ctl.options.displayElevation.maxCoordQuantity,\r\n                            resolution: options.elevation.resolution,\r\n                            sampleNumber: 0 // No queremos determinar el número de muestras\r\n                        };\r\n                        ctl.getElevationToool().then(function (tool) {\r\n                            tool.setGeometry(elevOptions).then(\r\n                                function (features) {\r\n                                    resolve(features[0]);\r\n                                },\r\n                                function (error) {\r\n                                    reject(error instanceof Error ? error : Error(error));\r\n                                }\r\n                            );\r\n                        });\r\n                    }\r\n                    else {\r\n                        resolve(feature);\r\n                    }\r\n                }\r\n                else {\r\n                    const coordsArray = feature.getCoordsArray();\r\n                    const firstCoord = coordsArray[0];\r\n                    if (firstCoord && firstCoord.length > 2) {\r\n                        coordsArray.forEach(function (coord) {\r\n                            coord.length = 2;\r\n                        });\r\n                        feature.setCoords(feature.geometry);\r\n                    }\r\n                    resolve(feature);\r\n                }\r\n            }\r\n            else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.onShowShareDialog = function (dialog) {\r\n        const self = this;\r\n        const shareCtl = self._shareCtl;\r\n        shareCtl.extraParams = null;\r\n        const feature = self.getFeatureFromElement(dialog);\r\n        prepareFeatureToShare(self, { feature: feature }).then(async function (f) {\r\n            shareCtl.featureToShare = f;\r\n            const shareDiv = shareCtl.div;\r\n            const link = await shareCtl.generateLink();\r\n            const input = shareDiv.querySelector(\".tc-url input[type=text]\");\r\n            input.value = link;\r\n            delete input.dataset[\"update\"];\r\n            delete input.dataset[\"shortened\"];\r\n            shareDiv.querySelector(\".tc-iframe input[type=text]\").value = await shareCtl.generateIframe(link);\r\n        });\r\n    };\r\n\r\n    ctlProto.getFeatureTitle = function (feature) {\r\n        var result = \"\";\r\n        if (feature) {\r\n            result = feature.id;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto._getFeatureFilename = function (feature) {\r\n        const self = this;\r\n        const layerTitle = self.getFeatureTitle(feature).toString().replace(new RegExp(self.TITLE_SEPARATOR, 'g'), self.FILE_TITLE_SEPARATOR) || self.getLocaleString('feature');\r\n        return layerTitle.toLowerCase().replace(/\\s/gi, '_') + '_' + TC.Util.getFormattedDate(new Date().toString(), true);\r\n    };\r\n\r\n})();\r\n"]}