{"version":3,"sources":["control/FeatureTools.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","infoShare","Consts","event","POPUP","POPUPHIDE","DRAWCHART","DRAWTABLE","DIALOG","FEATUREHIGHLIGHT","FEATUREDOWNPLAY","FeatureTools","self","this","apply","arguments","exportsState","cs","_classSelector","CLASS","_selectors","ELEVATION_CHECKBOX","INTERPOLATION_RADIO","INTERPOLATION_DISTANCE","_dialogDiv","Util","getDiv","options","dialogDiv","window","$","_$dialogDiv","document","body","appendChild","inherit","mix","ctlProto","prototype","TITLE_SEPARATOR","FILE_TITLE_SEPARATOR","template","compiler","main","container","depth0","helpers","partials","data","alias1","nullContext","alias2","escapeExpression","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","name","hash","loc","start","line","column","end","useData","register","map","on","e","caller","currentFeature","addUI","getDisplayControl","updateUI","Promise","resolve","reject","all","renderPromise","then","getShareDialog","catch","err","Error","render","_set1stRenderPromise","renderData","elevation","displayElevation","getRenderedHtml","checkboxId","getUID","html","innerHTML","ctl","menuContainer","getMenuElement","menuIsMissing","querySelector","getCurrentFeature","loadJS","Print","endAddUIPromise","getContainerElement","querySelectorAll","length","highlightedFeature","showsPopup","printControl","target","printableElement","title","id","tools","DOMParser","parseFromString","firstChild","_setToolButtonHandlers","_decorateDisplay","displayControl","forEach","attributeTable","addEventListener","CLICK","zoomToFeatures","passive","classList","add","setAttribute","getLocaleString","a","stopPropagation","uiDiv","isActive","layer","owner","filterLayer","dataset","layerId","featureId","isCluster","cluster","features","shareBtn","toggle","classes","HIDDEN","getElevationTool","tool","profileBtn","feature","Polyline","MultiPolyline","chart","elevBtn","Point","remove","ACTIVE","setTimeout","getSingleClusteredFeature","Array","isArray","onDownloadButtonClick","getFeatureFromElement","parentElement","showDownloadDialog","onShareButtonClick","prepareFeatureToShare","async","f","toShare","showShareDialog","onZoomButtonClick","onDeleteButtonClick","removeFeature","onProfileButtonClick","depOptions","getElevationControl","elevCtl","getGeometryStride","originalElevation","onlyOriginalElevation","setElevationToolOptions","resolution","sampleNumber","assign","displayElevationProfile","onElevationButtonClick","displayElevationValue","elevationControl","addControl","downloadDialog","getDownloadDialog","fileName","_getFeatureFilename","openCallback","trigger","action","open","elm","getLayer","getFeatureById","animate","closeDisplay","filterFn","isVisible","getControlsByClass","Popup","filter","pu","hide","ResultsPanel","p","close","resultsLayer","confirm","clone","setId","mustGetElevations","elevOptions","crs","maxCoordQuantity","setGeometry","error","coordsArray","getCoordsArray","firstCoord","coord","setCoords","geometry","getFeatureTitle","result","toString","replace","RegExp","toLowerCase","getFormattedDate","Date","exportState","state","doZoom","layerState","featureToShare","sharedFeaturesLayer","importState","addLayer","type","layerType","VECTOR","stealth"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nif (!TC.control.infoShare) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/infoShare');\r\n}\r\n\r\nTC.Consts.event.POPUP = TC.Consts.event.POPUP || 'popup.tc';\r\nTC.Consts.event.POPUPHIDE = TC.Consts.event.POPUPHIDE || 'popuphide.tc';\r\nTC.Consts.event.DRAWCHART = TC.Consts.event.DRAWCHART || 'drawchart.tc';\r\nTC.Consts.event.DRAWTABLE = TC.Consts.event.DRAWTABLE || 'drawtable.tc';\r\nTC.Consts.event.DIALOG = TC.Consts.event.DIALOG || 'dialog.tc';\r\nTC.Consts.event.FEATUREHIGHLIGHT = TC.Consts.event.FEATUREHIGHLIGHT || 'featurehighlight.tc';\r\nTC.Consts.event.FEATUREDOWNPLAY = TC.Consts.event.FEATUREDOWNPLAY || 'featuredownplay.tc';\r\n\r\nTC.control.FeatureTools = function() {\r\n    const self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self.exportsState = true;\r\n    const cs = self._classSelector = '.' + self.CLASS;\r\n    self._selectors = {\r\n        ELEVATION_CHECKBOX: cs + '-dialog-elev input[type=checkbox]',\r\n        INTERPOLATION_RADIO: 'input[type=radio][name=finfo-ip-coords]',\r\n        INTERPOLATION_DISTANCE: cs + '-dialog-ip-m'\r\n    };\r\n\r\n    self._dialogDiv = TC.Util.getDiv(self.options.dialogDiv);\r\n    if (window.$) {\r\n        self._$dialogDiv = $(self._dialogDiv);\r\n    }\r\n    if (!self.options.dialogDiv) {\r\n        document.body.appendChild(self._dialogDiv);\r\n    }\r\n};\r\n\r\nTC.inherit(TC.control.FeatureTools, TC.Control);\r\nTC.mix(TC.control.FeatureTools, TC.control.infoShare);\r\n\r\n(function() {\r\n    var ctlProto = TC.control.FeatureTools.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-ftools';\r\n\r\n    ctlProto.TITLE_SEPARATOR = ' • ';\r\n    ctlProto.FILE_TITLE_SEPARATOR = '__';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/tc-ctl-ftools.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/tc-ctl-ftools-dialog.hbs\";\r\n\r\n    ctlProto.register = function(map) {\r\n        const self = this;\r\n        map\r\n            .on(TC.Consts.event.POPUP + ' ' + TC.Consts.event.DRAWTABLE + ' ' + TC.Consts.event.DRAWCHART, function(e) {\r\n                const control = e.control;\r\n                if (control.caller || (!control.caller && control.currentFeature)) {\r\n                    self.addUI(control);\r\n                }\r\n                // TODO: ¿Y si miramos si la feature del control ya está asociada a otro control abierto para decir si decoramos o no?\r\n            })\r\n            .on(TC.Consts.event.FEATUREHIGHLIGHT, function(e) {\r\n                self.addUI(e.control.getDisplayControl());\r\n            })\r\n            .on(TC.Consts.event.FEATUREDOWNPLAY, function(e) {\r\n                self.updateUI(e.control.getDisplayControl());\r\n            });\r\n\r\n        return new Promise(function(resolve, reject) {\r\n            Promise.all([TC.Control.prototype.register.call(self, map), self.renderPromise()]).then(function() {\r\n                self.getShareDialog().then(function() {\r\n                    resolve(self);\r\n                }).catch(function(err) {\r\n                    reject(err instanceof Error ? err : Error(err));\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.render = function() {\r\n        const self = this;\r\n\r\n        return self._set1stRenderPromise(Promise.all([\r\n            self.renderData({ elevation: self.options.displayElevation }),\r\n            self.getRenderedHtml(self.CLASS + '-dialog', {\r\n                checkboxId: self.getUID(),\r\n                elevation: self.options.displayElevation\r\n            }, function(html) {\r\n                self._dialogDiv.innerHTML = html;\r\n            })\r\n        ]));\r\n    };\r\n\r\n    ctlProto.addUI = function(ctl) {\r\n        const self = this;\r\n        const menuContainer = ctl.getMenuElement();\r\n        // Nos aseguramos de que el se decora el control una sola vez\r\n        const menuIsMissing = function() {\r\n            return menuContainer && !menuContainer.querySelector('.' + self.CLASS);\r\n        };\r\n\r\n        if (self.getCurrentFeature(ctl)) {\r\n            if (menuIsMissing()) {\r\n                // Añadimos los botones de herramientas\r\n                self.getRenderedHtml(self.CLASS, null, function(html) {\r\n\r\n                    // Añadimos botón de imprimir\r\n                    TC.loadJS(\r\n                        !TC.control.Print,\r\n                        [TC.apiLocation + 'TC/control/Print'],\r\n                        function() {\r\n                            if (menuIsMissing()) {\r\n                                let endAddUIPromise = Promise.resolve();\r\n                                const container = ctl.getContainerElement();\r\n                                if (!container.querySelectorAll('.' + TC.control.Print.prototype.CLASS + '-btn').length) {\r\n                                    const highlightedFeature = (!ctl.caller && ctl.currentFeature) ? ctl.currentFeature : ctl.caller.highlightedFeature;\r\n                                    if (highlightedFeature && highlightedFeature.showsPopup === true) {\r\n                                        self.printControl = new TC.control.Print({\r\n                                            target: menuContainer,\r\n                                            printableElement: container,\r\n                                            title: highlightedFeature.id\r\n                                        });\r\n                                        endAddUIPromise = self.printControl.renderPromise();\r\n                                    }\r\n                                }\r\n\r\n                                endAddUIPromise.then(function endAddUI() {\r\n                                    if (menuIsMissing()) {\r\n                                        const parser = new DOMParser();\r\n                                        const tools = parser.parseFromString(html, 'text/html').body.firstChild;\r\n                                        menuContainer.appendChild(tools);\r\n\r\n                                        self.updateUI(ctl);\r\n\r\n                                        self._setToolButtonHandlers(ctl);\r\n\r\n                                        self._decorateDisplay(ctl);\r\n                                    }\r\n                                });\r\n                            }\r\n                        });\r\n                });\r\n            }\r\n            else {\r\n                self.updateUI(ctl);\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto._decorateDisplay = function(displayControl) {\r\n        const self = this;\r\n\r\n        displayControl.getContainerElement().querySelectorAll('table.tc-attr').forEach(function(attributeTable) {\r\n            if (!displayControl.caller && displayControl.currentFeature) { // Si es un popup/panel propio de la feature\r\n\r\n                // Añadimos un zoom a la feature al pulsar en la tabla\r\n                attributeTable.addEventListener(TC.Consts.event.CLICK, function(e) {\r\n                    self.zoomToFeatures([self.getCurrentFeature(displayControl)]);\r\n                }, { passive: true });\r\n\r\n                attributeTable.classList.add(self.CLASS + '-zoom');\r\n                attributeTable.setAttribute('title', self.getLocaleString('clickToCenter'));\r\n            }\r\n\r\n            attributeTable.querySelectorAll('a, label, input, video, audio').forEach(function(a) {\r\n                a.addEventListener(TC.Consts.event.CLICK, function(e) {\r\n                    e.stopPropagation(); // No queremos zoom si pulsamos en un enlace\r\n                }, { passive: true });\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.updateUI = function(ctl) {\r\n        const self = this;\r\n        const uiDiv = ctl.getMenuElement().querySelector('.' + self.CLASS);\r\n        const currentFeature = self.getCurrentFeature(ctl);\r\n        // Primer caso para que isActive == true: que esté resaltada una feature.\r\n        // Segundo caso: que la feature no sea de GFI.\r\n        // Se puede haber llamado a updateUI después de haber eliminado la feature(FEATUREDOWNPLAY)\r\n        // por es necesario que la feature tenga capa para considerar isActive == true.\r\n        const isActive = currentFeature && currentFeature.layer && currentFeature.layer.owner ?\r\n            currentFeature.layer.owner.filterLayer !== currentFeature.layer : currentFeature && !!currentFeature.layer;\r\n        if (isActive) {\r\n            if (currentFeature) {\r\n                uiDiv.dataset.layerId = currentFeature.layer.id;\r\n                uiDiv.dataset.featureId = currentFeature.id;\r\n\r\n                const isCluster = !!currentFeature.layer.cluster && currentFeature.features.length > 1;\r\n                const shareBtn = uiDiv.querySelector(`.${self.CLASS}-share-btn`);\r\n                shareBtn && shareBtn.classList.toggle(TC.Consts.classes.HIDDEN, isCluster);\r\n                uiDiv.querySelector(`.${self.CLASS}-dl-btn`).classList.toggle(TC.Consts.classes.HIDDEN, isCluster);\r\n                uiDiv.querySelector(`.${self.CLASS}-del-btn`).classList.toggle(TC.Consts.classes.HIDDEN, isCluster);\r\n\r\n                self.getElevationTool().then(function(tool) {\r\n                    const profileBtn = uiDiv.querySelector(`.${self.CLASS}-prof-btn`);\r\n                    if (profileBtn) {\r\n                        profileBtn.classList.toggle(TC.Consts.classes.HIDDEN,\r\n                            !tool ||\r\n                            !((TC.feature.Polyline && currentFeature instanceof TC.feature.Polyline) ||\r\n                                (TC.feature.MultiPolyline && currentFeature instanceof TC.feature.MultiPolyline)) ||\r\n                            !!ctl.chart);\r\n                    }\r\n                    const elevBtn = uiDiv.querySelector(`.${self.CLASS}-elev-btn`);\r\n                    if (elevBtn) {\r\n                        elevBtn.classList.toggle(TC.Consts.classes.HIDDEN, !tool || !(currentFeature instanceof TC.feature.Point) || isCluster);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                delete uiDiv.dataset.layerId;\r\n                delete uiDiv.dataset.featureId;\r\n            }\r\n        }\r\n        if (self.printControl && currentFeature) {\r\n            self.printControl.title = currentFeature.id\r\n        }\r\n        if (uiDiv) {\r\n            uiDiv.classList.remove(TC.Consts.classes.ACTIVE);\r\n            setTimeout(function() {\r\n                uiDiv.classList.toggle(TC.Consts.classes.ACTIVE, !!isActive);\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    const getSingleClusteredFeature = function (feature) {\r\n        if (feature && Array.isArray(feature.features)) {\r\n            if (feature.features.length === 1) {\r\n                return feature.features[0];\r\n            }\r\n            return null;\r\n        }\r\n        return feature;\r\n    };\r\n\r\n    const getClusteredFeatures = function (feature) {\r\n        if (feature) {\r\n            if (Array.isArray(feature.features)) {\r\n                return feature.features;\r\n            }\r\n            return [feature];\r\n        }\r\n        return [];\r\n    };\r\n\r\n    ctlProto.onDownloadButtonClick = function (e) {\r\n        const self = this;\r\n        let feature = getSingleClusteredFeature(self.getFeatureFromElement(e.target.parentElement));\r\n        if (feature) {\r\n            self.showDownloadDialog(feature);\r\n        }\r\n    };\r\n\r\n    ctlProto.onShareButtonClick = function (e) {\r\n        const self = this;\r\n        const feature = getSingleClusteredFeature(self.getFeatureFromElement(e.target.parentElement));\r\n        if (feature) {\r\n            prepareFeatureToShare(self, { feature: feature }).then(async function (f) {\r\n                self.toShare = {\r\n                    feature: f\r\n                };\r\n\r\n                self.showShareDialog();\r\n            });\r\n        } else {\r\n            throw \"FeatureTools: there is not a feature to share\";\r\n        }\r\n    };\r\n\r\n    ctlProto.onZoomButtonClick = function (e) {\r\n        const self = this;\r\n        const features = getClusteredFeatures(self.getFeatureFromElement(e.target.parentElement));\r\n        if (features.length) {\r\n            self.zoomToFeatures(features);\r\n        }\r\n    };\r\n\r\n    ctlProto.onDeleteButtonClick = function (e) {\r\n        const self = this;\r\n        self.removeFeature(self.getFeatureFromElement(e.target.parentElement));\r\n    };\r\n\r\n    ctlProto.onProfileButtonClick = function (e) {\r\n        const self = this;\r\n        const feature = getSingleClusteredFeature(self.getFeatureFromElement(e.target.parentElement));\r\n        const depOptions = {};\r\n        if (feature) {\r\n            self.getElevationControl().then(function (elevCtl) {\r\n                if (elevCtl) {\r\n                    if (feature.getGeometryStride() > 2) {\r\n                        depOptions.originalElevation = true;\r\n                        depOptions.onlyOriginalElevation = false;\r\n\r\n                        elevCtl.setElevationToolOptions({\r\n                            resolution: self.options.resolution || 0,\r\n                            sampleNumber: self.options.sampleNumber || 0\r\n                        });\r\n                    } else {\r\n                        elevCtl.setElevationToolOptions(Object.assign({}, self.map.elevation && self.map.elevation.options, self.options.displayElevation));\r\n                    }\r\n                    elevCtl.displayElevationProfile(feature, depOptions);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.onElevationButtonClick = function (e) {\r\n        const self = this;\r\n        self.getElevationControl().then(elevCtl => elevCtl && elevCtl.displayElevationValue(getSingleClusteredFeature(self.getFeatureFromElement(e.target.parentElement))));\r\n    };\r\n\r\n    ctlProto._setToolButtonHandlers = function(ctl) {\r\n        const self = this;\r\n\r\n        const container = ctl.getMenuElement();\r\n\r\n        // Evento para mostrar diálogo modal de descarga\r\n        container.querySelector('.' + self.CLASS + '-dl-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.onDownloadButtonClick(e);\r\n        }, { passive: true });\r\n\r\n        // Evento para mostrar diálogo modal de compartir\r\n        container.querySelector('.' + self.CLASS + '-share-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.onShareButtonClick(e);\r\n        }, { passive: true });\r\n\r\n        // Evento para hacer zoom\r\n        container.querySelector('.' + self.CLASS + '-zoom-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.onZoomButtonClick(e);\r\n        }, { passive: true });\r\n\r\n        // Evento para hacer ver perfil\r\n        const profileBtn = container.querySelector(`.${self.CLASS}-prof-btn`);\r\n        if (profileBtn) {\r\n            profileBtn.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                self.onProfileButtonClick(e);\r\n            }, { passive: true });\r\n        }\r\n\r\n        // Evento para hacer ver elevación\r\n        const elevBtn = container.querySelector(`.${self.CLASS}-elev-btn`);\r\n        if (elevBtn) {\r\n            elevBtn.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                self.onElevationButtonClick(e);\r\n            }, { passive: true });\r\n        }\r\n\r\n        // Evento para borrar la feature\r\n        container.querySelector('.' + self.CLASS + '-del-btn').addEventListener(TC.Consts.event.CLICK, function (e) {\r\n            self.onDeleteButtonClick(e);\r\n        }, { passive: true });\r\n    };\r\n\r\n    ctlProto.getElevationControl = async function() {\r\n        const self = this;\r\n        if (!self.options.displayElevation) {\r\n            return null;\r\n        }\r\n        if (!self.elevationControl) {\r\n            self.elevationControl = await self.map.addControl('elevation', self.options.displayElevation);\r\n        }\r\n        return self.elevationControl;\r\n    };\r\n\r\n    ctlProto.showDownloadDialog = async function(feature) {\r\n        const self = this;\r\n\r\n        const downloadDialog = await self.getDownloadDialog();\r\n\r\n        var options = {\r\n            title: self.getLocaleString(\"feature\") + \" - \" + self.getLocaleString(\"download\"),\r\n            fileName: self._getFeatureFilename(feature)\r\n        };\r\n\r\n        if (self.map.elevation || self.options.displayElevation) {\r\n            options = Object.assign({}, options, {\r\n                elevation: Object.assign({}, self.map.elevation && self.map.elevation.options, self.options.displayElevation)\r\n            });\r\n        }\r\n\r\n        options.openCallback = function() {\r\n            self.map.trigger(TC.Consts.event.DIALOG, { control: downloadDialog, action: \"download\" });\r\n        };\r\n\r\n        downloadDialog.open(feature, options);\r\n    };\r\n\r\n    ctlProto.getCurrentFeature = function(ctl) {\r\n        return ctl && ((ctl.caller && ctl.caller.highlightedFeature) ||\r\n            ctl.currentFeature);\r\n    };\r\n\r\n    ctlProto.getFeatureFromElement = function(elm) {\r\n        const self = this;\r\n        const layer = self.map.getLayer(elm.dataset.layerId);\r\n        if (layer) {\r\n            return layer.getFeatureById(elm.dataset.featureId);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    ctlProto.zoomToFeatures = function(features) {\r\n        const self = this;\r\n        if (self.map) {\r\n            self.map.zoomToFeatures(features, { animate: true });\r\n        }\r\n    };\r\n\r\n    ctlProto.removeFeature = function(feature) {\r\n        const self = this;\r\n        const removeFeature = function () {\r\n            if (feature && feature.layer) {\r\n                feature.layer.removeFeature(feature);\r\n            }\r\n        };\r\n        const closeDisplay = function() {\r\n            const filterFn = ctl => ctl.caller && ctl.caller.highlightedFeature === feature && ctl.isVisible();\r\n            const popups = self.map.getControlsByClass(TC.control.Popup);\r\n            popups\r\n                .filter(filterFn)\r\n                .forEach(pu => pu.hide());\r\n\r\n            const panels = self.map.getControlsByClass(TC.control.ResultsPanel);\r\n            panels\r\n                .filter(filterFn)\r\n                .forEach(p => p.close());\r\n        };\r\n        // No pedimos confirmación para borrar si es un resalte de GFI.\r\n        if (feature && feature.layer && feature.layer.owner && feature.layer === feature.layer.owner.resultsLayer) {\r\n            removeFeature();\r\n            closeDisplay();\r\n        }\r\n        else {\r\n            TC.confirm(self.getLocaleString('deleteFeature.confirm'), function() {\r\n                removeFeature();\r\n                closeDisplay();\r\n            });\r\n        }\r\n    };\r\n\r\n    const prepareFeatureToShare = function(ctl, options) {\r\n        options = options || {};\r\n        return new Promise(function(resolve, reject) {\r\n            const currentFeature = options.feature;\r\n            if (currentFeature) {\r\n                const feature = currentFeature.clone();\r\n                feature.setId(currentFeature.id);\r\n                feature.layer = currentFeature.layer;\r\n                if (options.elevation) {\r\n                    var mustGetElevations = true;\r\n                    if (!options.elevation.resolution && feature.getGeometryStride() > 2) {\r\n                        mustGetElevations = false;\r\n                    }\r\n                    if (mustGetElevations) {\r\n                        const elevOptions = {\r\n                            crs: ctl.map.crs,\r\n                            features: [feature],\r\n                            maxCoordQuantity: ctl.options.displayElevation && ctl.options.displayElevation.maxCoordQuantity,\r\n                            resolution: options.elevation.resolution,\r\n                            sampleNumber: 0 // No queremos determinar el número de muestras\r\n                        };\r\n                        ctl.getElevationTool().then(function(tool) {\r\n                            tool.setGeometry(elevOptions).then(\r\n                                function(features) {\r\n                                    resolve(features[0]);\r\n                                },\r\n                                function(error) {\r\n                                    reject(error instanceof Error ? error : Error(error));\r\n                                }\r\n                            );\r\n                        });\r\n                    }\r\n                    else {\r\n                        resolve(feature);\r\n                    }\r\n                }\r\n                else {\r\n                    const coordsArray = feature.getCoordsArray();\r\n                    const firstCoord = coordsArray[0];\r\n                    if (firstCoord && firstCoord.length > 2) {\r\n                        coordsArray.forEach(function(coord) {\r\n                            coord.length = 2;\r\n                        });\r\n                        feature.setCoords(feature.geometry);\r\n                    }\r\n                    resolve(feature);\r\n                }\r\n            }\r\n            else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.getFeatureTitle = function(feature) {\r\n        var result = \"\";\r\n        if (feature) {\r\n            result = feature.id;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto._getFeatureFilename = function(feature) {\r\n        const self = this;\r\n        const layerTitle = self.getFeatureTitle(feature).toString().replace(new RegExp(self.TITLE_SEPARATOR, 'g'), self.FILE_TITLE_SEPARATOR) || self.getLocaleString('feature');\r\n        return layerTitle.toLowerCase().replace(/\\s/gi, '_') + '_' + TC.Util.getFormattedDate(new Date().toString(), true);\r\n    };\r\n\r\n    ctlProto.exportState = function() {\r\n        const self = this;\r\n\r\n        if (self.toShare) {\r\n            const state = {};\r\n            if (self.toShare.doZoom) {\r\n                state.doZoom = self.toShare.doZoom;\r\n            }\r\n            state.id = self.id;\r\n            if (self.toShare.feature) {\r\n                let layerState;\r\n                const featureToShare = self.toShare.feature.clone();\r\n                featureToShare.showsPopup = true;\r\n                layerState = self.toShare.feature.layer.exportState({\r\n                    features: [featureToShare]\r\n                });\r\n                state.features = layerState.features;\r\n                if (layerState.crs) {\r\n                    state.crs = layerState.crs;\r\n                }\r\n            } else if (self.toShare.features) {\r\n                state.features = self.toShare.features;\r\n                if (self.sharedFeaturesLayer) {\r\n                    let layerState = self.sharedFeaturesLayer.exportState();\r\n                    state.features = layerState.features;\r\n                }\r\n                if (self.toShare.crs) {\r\n                    state.crs = self.toShare.crs;\r\n                }\r\n            }\r\n            return state;\r\n\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importState = function(state) {\r\n        const self = this;\r\n        if (self.map && state.features && state.features.length) {\r\n            self.toShare = {\r\n                features: state.features\r\n            };\r\n            if (state.crs) {\r\n                self.toShare.crs = state.crs;\r\n            }\r\n            self.map.addLayer({\r\n                id: self.getUID(),\r\n                owner: self,\r\n                type: TC.Consts.layerType.VECTOR,\r\n                title: self.getLocaleString('foi'),\r\n                stealth: true\r\n            }).then(function(layer) {\r\n                self.sharedFeaturesLayer = layer;\r\n                layer.importState({ features: state.features, crs: state.crs }).then(function() {\r\n                    if (state.doZoom) {\r\n                        self.map.zoomToFeatures(layer.features);\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n})();\r\n"]}