{"version":3,"sources":["control/Draw.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Feature","feature","Point","Polyline","Polygon","Consts","event","DRAWSTART","DRAWEND","DRAWCANCEL","DRAWUNDO","DRAWREDO","POINT","MEASURE","MEASUREPARTIAL","STYLECHANGE","CHANGE","formatColor","color","match","length","Draw","self","this","apply","arguments","browserFeatures","inputTypeColor","window","CP","loadCSS","_classSelector","CLASS","_pointClass","_lineClass","_polygonClass","history","historyIndex","exportsState","on","e","resetValues","layer","persistent","features","clearFeatures","point","setDrawState","setFeatureAddReadyState","setId","getUID","getLocaleString","callBack","_layerPromise","inherit","ctlProto","prototype","ctl","_endBtn","disabled","mode","geom","POLYGON","POLYLINE","_redoBtn","_undoBtn","_cancelBtn","template","1","container","depth0","helpers","partials","data","alias1","nullContext","alias2","escapeExpression","alias3","lambda","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","name","hash","loc","start","line","column","end","compiler","main","stack1","fn","program","inverse","noop","useData","render","callback","strToolTip","strokeColor","strokeWidth","options","MULTIPOLYLINE","div","classList","add","styles","MULTIPOLYGON","polygon","MULTIPOINT","renderObject","tooltip","styleTools","_set1stRenderPromise","renderData","input","querySelector","style","backgroundColor","value","picker","document","body","onclick","preventDefault","onfocus","blur","onchange","map","loaded","setStrokeColor","reset","measure","_cancelClick","Util","isFunction","undefined","wrap","_newBtn","addEventListener","CLICK","new","passive","cancel","undo","redo","_strokeColorPicker","target","_strokeWidthSelector","setStrokeWidth","_strokeWidthWatch","register","extend","result","VIEWCHANGE","view","PRINTING","PROJECTIONCHANGE","forEach","idx","arr","reproject","oldCrs","newCrs","Promise","resolve","reject","setLayer","addLayer","id","title","stealth","owner","type","layerType","VECTOR","then","putLayerOnTop","setMode","trigger","ctrl","activate","classes","ACTIVE","remove","deactivate","clear","clearFatures","isExclusive","setStyle","isActive","getModeStyle","setStrokeColorWatch","property","setStrokeWidthWatch","width","parseInt","Number","NaN","borderBottomWidth","getLayer","layerStyles","Cfg","exportState","importState","state"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\nif (!TC.Feature || !TC.feature.Point) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/feature/Point');\r\n}\r\nif (!TC.Feature || !TC.feature.Polyline) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/feature/Polyline');\r\n}\r\nif (!TC.Feature || !TC.feature.Polygon) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/feature/Polygon');\r\n}\r\n\r\nTC.Consts.event.DRAWSTART = 'drawstart.tc';\r\nTC.Consts.event.DRAWEND = 'drawend.tc';\r\nTC.Consts.event.DRAWCANCEL = 'drawcancel.tc';\r\nTC.Consts.event.DRAWUNDO = 'drawundo.tc';\r\nTC.Consts.event.DRAWREDO = 'drawredo.tc';\r\nTC.Consts.event.POINT = 'point.tc';\r\nTC.Consts.event.MEASURE = 'measure.tc';\r\nTC.Consts.event.MEASUREPARTIAL = 'measurepartial.tc';\r\nTC.Consts.event.STYLECHANGE = 'stylechange.tc';\r\nTC.Consts.event.CHANGE = 'change';\r\n\r\n(function () {\r\n\r\n    const formatColor = function (color) {\r\n        const match = color.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i);\r\n        if (match && match.length) {\r\n            return '#' + match[1] + match[1] + match[2] + match[2] + match[3] + match[3];\r\n        }\r\n        return color;\r\n    };\r\n\r\n    TC.control.Draw = function () {\r\n        var self = this;\r\n\r\n        TC.Control.apply(self, arguments);\r\n\r\n        if (!TC.browserFeatures.inputTypeColor() && !window.CP) {\r\n            TC.loadCSS(TC.apiLocation + 'lib/color-picker/color-picker.min.css');\r\n            TC.syncLoadJS(TC.apiLocation + 'lib/color-picker/color-picker.min.js');\r\n        }\r\n\r\n        self._classSelector = '.' + self.CLASS;\r\n\r\n        self._pointClass = self.CLASS + '-point';\r\n        self._lineClass = self.CLASS + '-line';\r\n        self._polygonClass = self.CLASS + '-polygon';\r\n\r\n        self.history = [];\r\n        self.historyIndex = 0;\r\n        self.exportsState = true;\r\n\r\n        self\r\n            .on(TC.Consts.event.DRAWSTART, function (e) {\r\n                self.resetValues();\r\n            })\r\n            .on(TC.Consts.event.POINT, function (e) {\r\n                if (self.layer && !self.persistent && self.layer.features && self.layer.features.length > 0) {\r\n                    self.layer.clearFeatures();\r\n                }\r\n\r\n                self.history.length = self.historyIndex;\r\n                self.history[self.historyIndex++] = e.point;\r\n\r\n                setDrawState(self);\r\n            })\r\n            .on(TC.Consts.event.DRAWEND, function (e) {\r\n                setFeatureAddReadyState(self);\r\n\r\n                e.feature.setId(TC.getUID(self.getLocaleString('sketch') + '.'));\r\n\r\n                if (self.callBack) {\r\n                    self.callBack(e.feature);\r\n                }\r\n            });\r\n\r\n        self._layerPromise = null;\r\n    };\r\n\r\n    TC.inherit(TC.control.Draw, TC.Control);\r\n\r\n    var ctlProto = TC.control.Draw.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-draw';\r\n\r\n    var setDrawState = function (ctl) {\r\n        ctl._endBtn.disabled =\r\n            ctl.historyIndex === 0 ||\r\n            (ctl.mode === TC.Consts.geom.POLYGON && ctl.historyIndex < 3) ||\r\n            (ctl.mode === TC.Consts.geom.POLYLINE && ctl.historyIndex < 2);\r\n        ctl._redoBtn.disabled = ctl.history.length === ctl.historyIndex;\r\n        ctl._undoBtn.disabled = ctl.historyIndex === 0;\r\n    };\r\n\r\n    var setFeatureAddReadyState = function (ctl) {\r\n        ctl.resetValues();\r\n        ctl._endBtn.disabled = true;\r\n        ctl._cancelBtn.disabled = false;\r\n    };\r\n\r\n    ctlProto.template = TC.apiLocation + \"TC/templates/tc-ctl-draw.hbs\";\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        let strToolTip;\r\n        let strokeColor;\r\n        let strokeWidth;\r\n        switch (self.options.mode) {\r\n            case TC.Consts.geom.POLYLINE:\r\n            case TC.Consts.geom.MULTIPOLYLINE:\r\n                strToolTip = self.getLocaleString('drawLine');\r\n                self.div.classList.add(self._lineClass);\r\n                strokeColor = self.styles.line.strokeColor;\r\n                strokeWidth = self.styles.line.strokeWidth;\r\n                break;\r\n            case TC.Consts.geom.POLYGON:\r\n            case TC.Consts.geom.MULTIPOLYGON:\r\n                strToolTip = self.getLocaleString('drawPolygon');\r\n                self.div.classList.add(self._polygonClass);\r\n                strokeColor = self.styles.polygon.strokeColor;\r\n                strokeWidth = self.styles.polygon.strokeWidth;\r\n                break;\r\n            case TC.Consts.geom.POINT:\r\n            case TC.Consts.geom.MULTIPOINT:\r\n                strToolTip = self.getLocaleString('drawPoint');\r\n                self.div.classList.add(self._pointClass);\r\n                strokeColor = self.styles.point.strokeColor;\r\n                strokeWidth = self.styles.point.strokeWidth;\r\n                break;\r\n            default:\r\n                strToolTip = self.getLocaleString('draw');\r\n                strokeColor = self.styles.line.strokeColor;\r\n                strokeWidth = self.styles.line.strokeWidth;\r\n                break;\r\n        }\r\n        const renderObject = {\r\n            tooltip: strToolTip,\r\n            strokeColor: formatColor(strokeColor),\r\n            strokeWidth: strokeWidth,\r\n            styleTools: self.options.styleTools\r\n        };\r\n        return self._set1stRenderPromise(self.renderData(renderObject, function () {\r\n            if (!TC.browserFeatures.inputTypeColor()) {\r\n                // El navegador no soporta input[type=color], usamos polyfill\r\n                const input = self.div.querySelector('input[type=color]');\r\n                if (input) {\r\n                    input.style.backgroundColor = input.value;\r\n                    input.style.color = 'transparent';\r\n                    const picker = new CP(input, 'click', document.body);\r\n\r\n                    input.onclick = function (e) {\r\n                        e.preventDefault();\r\n                    };\r\n\r\n                    // Evitamos que salga el teclado virtual en iOS\r\n                    input.onfocus = function (e) {\r\n                        this.blur();\r\n                    };\r\n\r\n                    input.onchange = function (e) {\r\n                        this.style.backgroundColor = this.value;\r\n                    };\r\n\r\n                    self.map.loaded(function () {\r\n                        picker.on(\"change\", function (color) {\r\n                            self.setStrokeColor('#' + color);\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n            self.reset = true;\r\n            self.callBack = null;\r\n            self.measure = false;\r\n            self._cancelClick = false;\r\n\r\n            self.mode = self.options.mode || TC.Consts.geom.POLYLINE;\r\n\r\n            if (self.options.measure)\r\n                self.measure = self.options.measure\r\n            if (TC.Util.isFunction(self.options.callback))\r\n                self.callBack = self.options.callback;\r\n            if (self.options.persistent === undefined) {\r\n                self.persistent = true;\r\n            }\r\n            else {\r\n                self.persistent = self.options.persistent;\r\n            }\r\n\r\n            self.wrap = new TC.wrap.control.Draw(self);\r\n\r\n            self._newBtn = self.div.querySelector(self._classSelector + '-btn-new');\r\n            self._newBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.new();\r\n            }, { passive: true });\r\n\r\n            self._cancelBtn = self.div.querySelector(self._classSelector + '-btn-cancel');\r\n            self._cancelBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.cancel();\r\n            }, { passive: true });\r\n\r\n            self._endBtn = self.div.querySelector(self._classSelector + '-btn-end');\r\n            self._endBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.end();\r\n            }, { passive: true });\r\n\r\n            self._undoBtn = self.div.querySelector(self._classSelector + '-btn-undo');\r\n            self._undoBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.undo();\r\n            }, { passive: true });\r\n\r\n            self._redoBtn = self.div.querySelector(self._classSelector + '-btn-redo');\r\n            self._redoBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.redo();\r\n            }, { passive: true });\r\n\r\n            if (self.options.styleTools) {\r\n                self._strokeColorPicker = self.div.querySelector(self._classSelector + '-str-c');\r\n                self._strokeColorPicker.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                    self.setStrokeColor(e.target.value);\r\n                });\r\n\r\n                self._strokeWidthSelector = self.div.querySelector(self._classSelector + '-str-w');\r\n                self._strokeWidthSelector.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                    self.setStrokeWidth(e.target.value);\r\n                });\r\n                self._strokeWidthWatch = self.div.querySelector(self._classSelector + '-str-w-watch');\r\n            }\r\n\r\n            if (TC.Util.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        }));\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        self.styles = TC.Util.extend(true, {}, map.options.styles, self.options.styles);\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        self.map\r\n            .on(TC.Consts.event.VIEWCHANGE, function () {\r\n                if (self.map.view === TC.Consts.view.PRINTING) {\r\n                    self.end();\r\n\r\n                    // No lanzo el evento porque da error al no llegar una feature\r\n                    // self.trigger(TC.Consts.event.DRAWEND);\r\n                }\r\n            })\r\n            .on(TC.Consts.event.PROJECTIONCHANGE, function (e) {\r\n                self.history.forEach(function (point, idx, arr) {\r\n                    arr[idx] = TC.Util.reproject(point, e.oldCrs, e.newCrs);\r\n                });\r\n            });\r\n\r\n        self._layerPromise = new Promise(function (resolve, reject) {\r\n            map.loaded(function () {\r\n                if (self.options.layer) {\r\n                    self.setLayer(self.options.layer);\r\n                    resolve(self.layer);\r\n                }\r\n                else {\r\n                    // Si self.options.layer === false se instancia el control sin capa asociada\r\n                    if (self.options.layer === false) {\r\n                        self.setLayer(null);\r\n                        resolve(null);\r\n                    }\r\n                    else {\r\n                        map.addLayer({\r\n                            id: self.getUID(),\r\n                            title: 'DrawControl',\r\n                            stealth: true,\r\n                            owner: self,\r\n                            type: TC.Consts.layerType.VECTOR,\r\n                            styles: {\r\n                                point: self.styles.point,\r\n                                line: self.styles.line,\r\n                                polygon: self.styles.polygon\r\n                            }\r\n                        }).then(function (layer) {\r\n                            map.putLayerOnTop(layer);\r\n                            self.setLayer(layer);\r\n                            resolve(self.layer);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.new = function () {\r\n        var self = this;\r\n        if (self.layer && !self.persistent) {\r\n            self.layer.clearFeatures();\r\n        }\r\n        self._cancelBtn.disabled = false;\r\n        self.setMode(self.mode, true);\r\n        return self;\r\n    };\r\n\r\n    ctlProto.undo = function () {\r\n        var self = this;\r\n        var result = self.wrap.undo();\r\n        if (result) {\r\n            self.historyIndex--;\r\n            setDrawState(self);\r\n\r\n            if (self.historyIndex <= 0) {\r\n                self.resetValues();\r\n            }\r\n            self.trigger(TC.Consts.event.DRAWUNDO);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.redo = function () {\r\n        var self = this;\r\n        var result = this.wrap.redo();\r\n        if (result) {\r\n            self.historyIndex++;\r\n            setDrawState(self);\r\n            self.trigger(TC.Consts.event.DRAWREDO);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.cancel = function () {\r\n        var self = this;\r\n        self._cancelClick = true;\r\n        this.setMode(null, false);\r\n        self.resetValues();\r\n        setFeatureAddReadyState(self);\r\n        self._cancelBtn.disabled = true;\r\n        self.trigger(TC.Consts.event.DRAWCANCEL, { ctrl: self });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.activate = function () {\r\n        var self = this;\r\n        self._newBtn.classList.add(TC.Consts.classes.ACTIVE);\r\n        self._cancelBtn.disabled = false;\r\n        TC.Control.prototype.activate.call(self);\r\n        self.wrap.activate(self.mode);\r\n        self.div.classList.remove(self._pointClass, self._lineClass, self._polygonClass);\r\n        switch (self.mode) {\r\n            case TC.Consts.geom.POINT:\r\n                self.div.classList.add(self._pointClass);\r\n                break;\r\n            case TC.Consts.geom.POLYLINE:\r\n                self.div.classList.add(self._lineClass);\r\n                break;\r\n            case TC.Consts.geom.POLYGON:\r\n                self.div.classList.add(self._polygonClass);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    };\r\n\r\n    ctlProto.deactivate = function () {\r\n        var self = this;\r\n        if (self._newBtn) {\r\n            self._newBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n        }\r\n        if (self._cancelBtn) {\r\n            self._cancelBtn.disabled = true;\r\n        }\r\n        TC.Control.prototype.deactivate.call(self, !self._cancelClick);\r\n        if (self.wrap) {\r\n            self.wrap.deactivate();\r\n        }\r\n        self.resetValues();\r\n        //self.trigger(TC.Consts.event.DRAWCANCEL, { ctrl: self });\r\n        self._cancelClick = false;\r\n    };\r\n\r\n    ctlProto.clear = function () {\r\n        const self = this;\r\n        if (self.layer) {\r\n            self.layer.clearFatures();\r\n        }\r\n        self.resetValues();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.isExclusive = function () {\r\n        return true;\r\n    };\r\n\r\n    ctlProto.end = function () {\r\n        const self = this;\r\n        self.wrap.end();\r\n        self.resetValues();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setMode = function (mode, activate) {\r\n        const self = this;\r\n\r\n        if (mode)\r\n            self.mode = mode;\r\n\r\n        if (activate && mode) {\r\n            //if (self.layer) {\r\n                //self.layer.map.putLayerOnTop(self.layer);\r\n            //}\r\n            self.activate();\r\n        }\r\n        else {\r\n            self.deactivate();\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setStyle = function (style) {\r\n        const self = this;\r\n        if (style) {\r\n            self.style = TC.Util.extend(self.style, style);\r\n        }\r\n        else {\r\n            switch (self.options.mode) {\r\n                case TC.Consts.geom.POLYLINE:\r\n                case TC.Consts.geom.MULTIPOLYLINE:\r\n                    style = { line: self.styles.line };\r\n                    break;\r\n                case TC.Consts.geom.POLYGON:\r\n                case TC.Consts.geom.MULTIPOLYGON:\r\n                    style = { polygon: self.styles.polygon };\r\n                    break;\r\n                case TC.Consts.geom.POINT:\r\n                case TC.Consts.geom.MULTIPOINT:\r\n                    style = { point: self.styles.point };\r\n                    break;\r\n                default:\r\n                    style = {};\r\n                    break;\r\n            }\r\n        }\r\n        if (self.isActive) {\r\n            self.wrap.setStyle(style);\r\n        }\r\n    };\r\n\r\n    ctlProto.getModeStyle = function(mode) {\r\n        const self = this;\r\n        mode = mode || self.options.mode;\r\n        switch (mode) {\r\n            case TC.Consts.geom.POLYLINE:\r\n            case TC.Consts.geom.MULTIPOLYLINE:\r\n                return self.styles.line;\r\n            case TC.Consts.geom.POLYGON:\r\n            case TC.Consts.geom.MULTIPOLYGON:\r\n                return self.styles.polygon;\r\n            case TC.Consts.geom.POINT:\r\n            case TC.Consts.geom.MULTIPOINT:\r\n                return self.styles.point;\r\n            default:\r\n                return null;\r\n                break;\r\n        }\r\n    };\r\n\r\n    ctlProto.setStrokeColorWatch = function (color) {\r\n        const self = this;\r\n        if (self.options.styleTools) {\r\n            if (color === undefined) {\r\n                color = self.getModeStyle().strokeColor;\r\n            }\r\n            const match = color.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i);\r\n            if (match && match.length) {\r\n                color = '#' + match[1] + match[1] + match[2] + match[2] + match[3] + match[3];\r\n            }\r\n            self._strokeColorPicker.value = color;\r\n            if (!TC.browserFeatures.inputTypeColor()) {\r\n                const input = self._strokeColorPicker;\r\n                input.style.backgroundColor = color;\r\n                input.blur();\r\n            }\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setStrokeColor = function (color) {\r\n        const self = this;\r\n        const style = self.getModeStyle();\r\n        if (style) {\r\n            style.strokeColor = color;\r\n        }\r\n\r\n        // Resetea el estilo\r\n        if (self.isActive) {\r\n            self.setStyle();\r\n        }\r\n\r\n        self.setStrokeColorWatch(color);\r\n        self.trigger(TC.Consts.event.STYLECHANGE, { property: 'strokeColor', value: color });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setStrokeWidthWatch = function (width) {\r\n        const self = this;\r\n        if (self.options.styleTools) {\r\n            if (width === undefined) {\r\n                width = self.getModeStyle().strokeWidth;\r\n            }\r\n            width = parseInt(width, 10);\r\n            if (width !== Number.NaN) {\r\n                self._strokeWidthSelector.value = width;\r\n                self._strokeWidthWatch.style.borderBottomWidth = width + 'px';\r\n            }\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setStrokeWidth = function(width) {\r\n        const self = this;\r\n        width = parseInt(width, 10);\r\n        if (width !== Number.NaN) {\r\n            const style = self.getModeStyle();\r\n            if (style) {\r\n                style.strokeWidth = width;\r\n            }\r\n\r\n            // Resetea el estilo\r\n            if (self.isActive) {\r\n                self.setStyle();\r\n            }\r\n\r\n            self.setStrokeWidthWatch(width);\r\n            self.trigger(TC.Consts.event.STYLECHANGE, { property: 'strokeWidth', value: width });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getLayer = function () {\r\n        const self = this;\r\n        if (self.layer) {\r\n            return Promise.resolve(self.layer);\r\n        }\r\n        return this._layerPromise;\r\n    };\r\n\r\n    ctlProto.setLayer = function (layer) {\r\n        const self = this;\r\n        if (self.map) {\r\n            if (typeof (layer) === \"string\") {\r\n                self.layer = self.map.getLayer(layer);\r\n            }\r\n            else {\r\n                self.layer = layer;\r\n            }\r\n\r\n            self.styles = {};\r\n            const layerStyles = (self.layer && self.layer.styles) || TC.Cfg.styles;\r\n            TC.Util.extend(true, self.styles, self.options.styles || layerStyles);\r\n\r\n        }\r\n    };\r\n\r\n    ctlProto.resetValues = function () {\r\n        const self = this;\r\n        self.history.length = 0;\r\n        self.historyIndex = 0;\r\n        setDrawState(self);\r\n        return self;\r\n    };\r\n\r\n    ctlProto.exportState = function () {\r\n        const self = this;\r\n        if (self.exportsState && self.layer) {\r\n            return {\r\n                id: self.id,\r\n                layer: self.layer.exportState()\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importState = function (state) {\r\n        const self = this;\r\n        self.getLayer().then(function (layer) {\r\n            layer.importState(state.layer);\r\n        });\r\n    };\r\n})();"]}