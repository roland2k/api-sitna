{"version":3,"sources":["control/CacheBuilder.js"],"names":["TC","control","SWCacheClient","syncLoadJS","apiLocation","Consts","classes","CONNECTION_OFFLINE","CONNECTION_WIFI","CONNECTION_MOBILE","OFFLINE","CacheBuilder","self","this","apply","arguments","cs","_classSelector","CLASS","_selectors","DRAW","DRAWING","PROGRESS","NEW","LIST","LISTITEM","OKBTN","NEWBTN","SAVEBTN","CANCELBTN","EDITBTN","VIEWBTN","DELETEBTN","TILECOUNT","NAMETB","TEXTBOX","EXIT","OFFPANEL","BLLIST","BLLISTITEM","BLLISTTEXT","RNGMAXRES","SEARCH","EMPTYLIST","OFFLINEHIDDEN","storedMaps","mapDefString","Util","getParameterByName","MAP_DEFINITION_PARAM_NAME","extentString","MAP_EXTENT_PARAM_NAME","mapIsOffline","currentMapDefinition","JSON","parse","window","atob","decodeURIComponent","currentMapExtent","getExtentFromString","localStorage","key","setItem","removeItem","e","error","getLocaleString","i","len","length","indexOf","LOCAL_STORAGE_KEY_PREFIX","ROOT_CACHE_NAME","values","getItem","split","extent","shift","map","name","join","url","substr","push","sort","a","b","options","extend","_dialogDiv","getDiv","dialogDiv","$","_$dialogDiv","document","body","appendChild","querySelectorAll","forEach","elm","classList","add","HIDDEN","Control","wrap","isDownloading","baseLayers","avgTileSize","Cfg","requestSchemas","minResolution","currentMap","_loadedCount","pushState","history","state","result","_offlinePanelDiv","params","getQueryStringParams","SERVICE_WORKER_FLAG","newParams","getParamString","href","location","pathname","hash","querySelector","setAttribute","connection","navigator","mozConnection","webkitConnection","onlineHandler","panel","remove","type","undefined","addEventListener","inherit","ctlProto","prototype","_states","READY","EDIT","DOWNLOADING","DELETING","_actions","CREATE","DELETE","offlineControls","event","MAPCACHEDOWNLOAD","MAPCACHEDELETE","MAPCACHEPROGRESS","MAPCACHEERROR","template","1","container","depth0","helpers","partials","data","3","5","stack1","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","invokePartial","indent","decorators","compiler","main","alias1","nullContext","alias2","escapeExpression","alias3","lambda","loc","start","line","column","end","fn","program","inverse","noop","usePartial","useData","str","parseFloat","setNameReadyState","ctl","li","formatNumber","number","toString","replace","updateResolutions","opts","resDiv","range","resText","resLevel","resLeft","resolutions","getResolutions","rangeValue","value","currentResolution","getResolution","filter","r","parseInt","resValue","Math","floor","Number","toLocaleString","locale","disabled","style","left","innerHTML","updateThumbnails","cb","idx","checked","schema","layerId","tml","resolution","tileMatrixLimits","res","findTileMatrixLimits","qsIdx","j","lenj","l","id","layerNames","matrixSet","format","tagName","parentElement","backgroundSize","backgroundPosition","backgroundImage","mId","rt","cl","formatSize","size","quantity","showEstimatedMapSize","text","tileCount","ii","jj","cr","rb","estimatedMapSize","round","getListElementByMapUrl","hashIdx","lis","div","anchor","getAttribute","saveMapToStorage","encodeURIComponent","removeMap","findStoredMap","removeMapFromStorage","getListElementByMapName","removeChild","splice","removeAttribute","render","callback","_set1stRenderPromise","Promise","resolve","reject","renderObject","listId","getUID","getRenderedHtml","html","CLICK","preventDefault","selectionStart","selectionEnd","focus","then","renderData","generateCache","passive","_updateReadyState","setEditState","setReadyState","cancelCacheRequest","list","EventTarget","listenerBySelector","startDeleteMap","target","textbox","setNameEditingState","newName","btn","showExtent","contains","ACTIVE","viewBtn","mapName","layer","clearFeatures","addPolygon","showsPopup","zoomToFeatures","features","trackSearch","searchListener","searchTerm","toLowerCase","display","mapLis","matches","removeProperty","visibility","RegExp","test","textContent","some","hidden","_filter","trim","checkbox","getLayer","updateRequestSchemas","rangeListener","isFunction","catch","err","Error","msg","returnValue","register","getServiceWorker","serviceWorker","ready","trigger","loaded","count","total","action","onLine","manifestFile","documentElement","ajax","method","responseType","response","loadJS","hex_md5","HASH","idxEnd","lines","urls","obj","hashStorageKey","cacheUrlList","one","firstLoad","confirm","reload","renderPromise","warning","createElement","header","reason","message","console","log","offlinePanelDiv","offPanel","drawId","layerPromise","addLayer","layerType","VECTOR","stealth","owner","styles","all","addControl","mode","geom","RECTANGLE","persistent","objects","boxDraw","setLayer","on","DRAWSTART","toast","msgType","INFO","DRAWEND","points","feature","geometry","pStart","pEnd","minx","min","maxx","max","miny","maxy","setExtent","checkboxes","getCompatibleMatrixSets","crs","includes","getRequestSchemas","layers","toggle","visibleLi","showModal","openCallback","setTimeout","time","Date","opt","year","month","day","hour","minute","second","closeCallback","CONTROLDEACTIVATE","_state","EDITING","addRenderedListNode","blList","isLayerAdded","isValidLayer","WMTS","mustReproject","detectSafari","detectIOS","isSameOrigin","parser","DOMParser","parseFromString","firstChild","isBase","cachedResolutions","setResolutions","LAYERADD","LAYERREMOVE","PROJECTIONCHANGE","offCtls","offCtl","toUpperCase","concat","getControlsByClass","controls","disable","putLayerOnTop","mapDef","isSameLayer","mapDefLayer","protocol","urlIdx","tms","tmsIdx","missingLayers","availableBaseLayers","abl","finally","cachedLayers","baseLayer","setBaseLayer","removeLayer","animate","removeHash","serviceWorkerEnabled","DISABLED","alert","addMap","showDownloadProgress","handleError","status","detectIE","Array","isArray","cancel","activate","startRequest","closeModal","setDownloadingState","requestCache","storage","estimate","availableMB","quota","usage","mapSize","availableStorage","urlList","createCache","silent","getExtent","filterTml","arr","trimTml","intersectionExtent","POSITIVE_INFINITY","NEGATIVE_INFINITY","rs","unitsPerTile","tSize","origin","precision","pow","isGeo","DEGREE_PRECISION","METER_PRECISION","mapDefinition","bBox","ceil","layerUrl","shortFormat","formatIdx","btoa","stringify","u","lastIndexOf","urlPattern","getGetTilePattern","getFallbackLayer","thumbnail","k","lenk","c","deleteCache","deleteMap","confirmText","setDeletingState","current","percentString","pr","width","pb","resolutionMapper","allResolutions"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.control.SWCacheClient) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/SWCacheClient');\r\n}\r\n\r\n(function () {\r\n\r\n    TC.Consts.classes.CONNECTION_OFFLINE = TC.Consts.classes.CONNECTION_OFFLINE || 'tc-conn-offline';\r\n    TC.Consts.classes.CONNECTION_WIFI = TC.Consts.classes.CONNECTION_WIFI || 'tc-conn-wifi';\r\n    TC.Consts.classes.CONNECTION_MOBILE = TC.Consts.classes.CONNECTION_MOBILE || 'tc-conn-mobile';\r\n    TC.Consts.classes.OFFLINE = TC.Consts.classes.OFFLINE || 'tc-offline';\r\n\r\n    var ALREADY_EXISTS = 'already_exists';\r\n\r\n    var manifestUrlList;\r\n    var requestManifest = function () {\r\n        return new Promise(function (resolve, reject) {\r\n            if (manifestUrlList && manifestUrlList.length) {\r\n                resolve(manifestUrlList);\r\n            }\r\n            else {\r\n                var manifestFile = document.documentElement.getAttribute('manifest') || 'manifest.appcache';\r\n                if (manifestFile) {\r\n                    TC.ajax({\r\n                        url: manifestFile,\r\n                        method: 'GET',\r\n                        responseType: 'text'\r\n                    }).then(function (response) {\r\n                        var data = response.data;\r\n                        TC.loadJS(\r\n                            !window.hex_md5,\r\n                            [TC.apiLocation + TC.Consts.url.HASH],\r\n                            function () {\r\n                                var hash = hex_md5(data);\r\n                                var idxEnd = data.indexOf('NETWORK:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                idxEnd = data.indexOf('FALLBACK:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                idxEnd = data.indexOf('SETTINGS:');\r\n                                if (idxEnd >= 0) {\r\n                                    data = data.substr(0, idxEnd);\r\n                                }\r\n                                var lines = data.split(/[\\n\\r]/).filter(function (elm) {\r\n                                    return elm.length > 0 && elm.indexOf('#') !== 0 && elm !== 'CACHE:';\r\n                                });\r\n                                // Eliminamos la primera línea porque siempre es CACHE MANIFEST\r\n                                lines.shift();\r\n                                resolve({\r\n                                    hash: hash,\r\n                                    urls: lines\r\n                                });\r\n                            }\r\n                        );\r\n                    }).catch(function (error) {\r\n                        reject(error);\r\n                    });\r\n                }\r\n                else {\r\n                    reject(Error('There is no manifest in document'));\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.control.CacheBuilder = function () {\r\n        var self = this;\r\n\r\n        TC.control.SWCacheClient.apply(this, arguments);\r\n\r\n        var cs = self._classSelector = '.' + self.CLASS;\r\n        self._selectors = {\r\n            DRAW: cs + '-draw',\r\n            DRAWING: cs + '-drawing',\r\n            PROGRESS: cs + '-progress',\r\n            NEW: cs + '-new',\r\n            LIST: cs + '-list',\r\n            LISTITEM: cs + '-list > li',\r\n            OKBTN: cs + '-btn-ok',\r\n            NEWBTN: cs + '-btn-new',\r\n            SAVEBTN: '.tc-btn-save',\r\n            CANCELBTN: '.tc-btn-cancel',\r\n            EDITBTN: '.tc-btn-edit',\r\n            VIEWBTN: '.tc-btn-view',\r\n            DELETEBTN: '.tc-btn-delete',\r\n            TILECOUNT: cs + '-tile-count',\r\n            NAMETB: cs + '-txt-name',\r\n            TEXTBOX: 'input.tc-textbox',\r\n            EXIT: cs + '-link-exit',\r\n            OFFPANEL: cs + '-off-panel',\r\n            BLLIST: cs + '-bl-list',\r\n            BLLISTITEM: cs + '-bl-list > li',\r\n            BLLISTTEXT: cs + '-bl-panel-txt',\r\n            RNGMAXRES: cs + '-rng-maxres',\r\n            SEARCH: cs + '-map-available-srch',\r\n            EMPTYLIST: cs + '-map-available-empty',\r\n            OFFLINEHIDDEN: '[data-no-cb]'\r\n        };\r\n\r\n        self.storedMaps = [];\r\n\r\n        const mapDefString = TC.Util.getParameterByName(self.MAP_DEFINITION_PARAM_NAME);\r\n        const extentString = TC.Util.getParameterByName(self.MAP_EXTENT_PARAM_NAME);\r\n        self.mapIsOffline = !!mapDefString;\r\n        if (mapDefString) {\r\n            self.currentMapDefinition = JSON.parse(window.atob(decodeURIComponent(mapDefString)));\r\n        }\r\n        if (extentString) {\r\n            self.currentMapExtent = getExtentFromString(extentString);\r\n        }\r\n\r\n        // Comprobación de disponibilidad de localStorage\r\n        try {\r\n            self.localStorage = window.localStorage;\r\n            const key = \"__delete_me__\";\r\n            self.localStorage.setItem(key, key);\r\n            self.localStorage.removeItem(key);\r\n        }\r\n        catch (e) {\r\n            self.localStorage = null;\r\n            TC.error(self.getLocaleString('couldNotAccessLocalStorage'));\r\n        }\r\n\r\n        // Carga de mapas guardados\r\n        if (self.localStorage) {\r\n            for (var i = 0, len = self.localStorage.length; i < len; i++) {\r\n                var key = self.localStorage.key(i);\r\n                if (key.indexOf(self.LOCAL_STORAGE_KEY_PREFIX) === 0 && key !== self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME + '.hash') {\r\n                    // Es un nombre de mapa y no es el hash de integridad de la cache root\r\n                    var values = self.localStorage.getItem(key).split(\" \");\r\n                    var extent = getExtentFromString(values.shift());\r\n                    var name = values.join(\" \");\r\n                    var map = {\r\n                        name: name,\r\n                        extent: extent,\r\n                        url: decodeURIComponent(key.substr(self.LOCAL_STORAGE_KEY_PREFIX.length))\r\n                    }\r\n                    self.storedMaps.push(map);\r\n                }\r\n            }\r\n            self.storedMaps.sort(function (a, b) {\r\n                if (a.name > b.name) {\r\n                    return 1;\r\n                }\r\n                if (a.name < b.name) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            });\r\n        }\r\n\r\n        var options = TC.Util.extend({}, len > 1 ? arguments[1] : arguments[0]);\r\n        self._dialogDiv = TC.Util.getDiv(options.dialogDiv);\r\n        if (window.$) {\r\n            self._$dialogDiv = $(self._dialogDiv);\r\n        }\r\n        if (!options.dialogDiv) {\r\n            document.body.appendChild(self._dialogDiv);\r\n        }\r\n\r\n        if (self.mapIsOffline) {\r\n            document.querySelectorAll(self._selectors.OFFLINEHIDDEN).forEach(function (elm) {\r\n                elm.classList.add(TC.Consts.classes.HIDDEN);\r\n            })\r\n        }\r\n\r\n        TC.Control.apply(self, arguments);\r\n        self.wrap = new TC.wrap.control.CacheBuilder(self);\r\n\r\n        self.isDownloading = false;\r\n        self.baseLayers = [];\r\n\r\n        self.options.avgTileSize = self.options.avgTileSize || TC.Cfg.avgTileSize;\r\n        self.requestSchemas = [];\r\n        self.minResolution = 0;\r\n        self.currentMap = null;\r\n\r\n        self._loadedCount = 0;\r\n\r\n        // Actualización del enlace al modo online\r\n        // Parche para detectar cambios en el hash. Lo usamos para actualizar los enlaces a los idiomas\r\n        var pushState = history.pushState;\r\n        history.pushState = function (state) {\r\n            var result;\r\n            //if (typeof history.onpushstate == \"function\") {\r\n            //    history.onpushstate({ state: state });\r\n            //}\r\n            result = pushState.apply(history, arguments);\r\n            if (self._offlinePanelDiv) {\r\n                const params = TC.Util.getQueryStringParams();\r\n                delete params[self.MAP_DEFINITION_PARAM_NAME];\r\n                delete params[self.MAP_EXTENT_PARAM_NAME];\r\n                delete params[self.SERVICE_WORKER_FLAG];\r\n                var newParams = TC.Util.getParamString(params);\r\n                if (newParams.length) {\r\n                    newParams = '?' + newParams;\r\n                }\r\n                const href = location.pathname + newParams + location.hash;\r\n                self._offlinePanelDiv.querySelector(self._selectors.EXIT).setAttribute('href', href);\r\n            }\r\n            return result;\r\n        }\r\n\r\n        // Detección de estado de conexión\r\n        var connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection || {};\r\n        var onlineHandler = function () {\r\n            if (self._offlinePanelDiv) {\r\n                const panel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                panel.classList.remove(\r\n                    TC.Consts.classes.CONNECTION_OFFLINE,\r\n                    TC.Consts.classes.CONNECTION_MOBILE,\r\n                    TC.Consts.classes.CONNECTION_WIFI);\r\n\r\n                var type = connection.type;\r\n                switch (type) {\r\n                    case 1:\r\n                    case 2:\r\n                    case undefined:\r\n                        panel.classList.add(TC.Consts.classes.CONNECTION_WIFI);\r\n                        break;\r\n                    default:\r\n                        panel.classList.add(TC.Consts.classes.CONNECTION_MOBILE);\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n        if (connection.addEventListener) {\r\n            connection.addEventListener('typechange', onlineHandler);\r\n        }\r\n        window.addEventListener('online', onlineHandler);\r\n        window.addEventListener('offline', function () {\r\n            if (self._offlinePanelDiv) {\r\n                const panel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                panel.classList.add(TC.Consts.classes.CONNECTION_OFFLINE);\r\n                panel.classList.remove(TC.Consts.classes.CONNECTION_MOBILE, TC.Consts.classes.CONNECTION_WIFI);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.inherit(TC.control.CacheBuilder, TC.control.SWCacheClient);\r\n\r\n    var ctlProto = TC.control.CacheBuilder.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-cbuild';\r\n    ctlProto.MAP_DEFINITION_PARAM_NAME = \"map-def\";\r\n    ctlProto.MAP_EXTENT_PARAM_NAME = \"map-extent\";\r\n    ctlProto.LOCAL_STORAGE_KEY_PREFIX = \"TC.offline.map.\";\r\n    ctlProto.ROOT_CACHE_NAME = \"root\";\r\n    ctlProto.SERVICE_WORKER_FLAG = 'sw';\r\n    ctlProto._states = {\r\n        READY: 'ready',\r\n        EDIT: 'editing',\r\n        DOWNLOADING: 'downloading',\r\n        DELETING: 'deleting'\r\n    };\r\n    ctlProto._actions = {\r\n        CREATE: 'create',\r\n        DELETE: 'delete'\r\n    };\r\n    ctlProto.offlineControls = [\r\n        'attribution',\r\n        'basemapSelector',\r\n        'cacheBuilder',\r\n        'click',\r\n        'coordinates',\r\n        'draw',\r\n        'edit',\r\n        'geolocation',\r\n        'loadingIndicator',\r\n        'measure',\r\n        'navBar',\r\n        'popup',\r\n        'print',\r\n        'scale',\r\n        'scaleBar',\r\n        'scaleSelector',\r\n        'state',\r\n        'fullScreen'\r\n    ];\r\n\r\n    TC.Consts.event.MAPCACHEDOWNLOAD = TC.Consts.event.MAPCACHEDOWNLOAD || 'mapcachedownload.tc';\r\n    TC.Consts.event.MAPCACHEDELETE = TC.Consts.event.MAPCACHEDELETE || 'mapcachedelete.tc';\r\n    TC.Consts.event.MAPCACHEPROGRESS = TC.Consts.event.MAPCACHEPROGRESS || 'mapcacheprogress.tc';\r\n    TC.Consts.event.MAPCACHEERROR = TC.Consts.event.MAPCACHEERROR || 'mapcacheerror.tc';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/tc-ctl-cbuild.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-map-node'] = TC.apiLocation + \"TC/templates/tc-ctl-cbuild-map-node.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-bl-node'] = TC.apiLocation + \"TC/templates/tc-ctl-cbuild-bl-node.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-dialog'] = TC.apiLocation + \"TC/templates/tc-ctl-cbuild-dialog.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-off-panel'] = TC.apiLocation + \"TC/templates/tc-ctl-cbuild-off-panel.hbs\";\r\n\r\n    const getExtentFromString = function (str) {\r\n        return decodeURIComponent(str).split(',').map(function (elm) {\r\n            return parseFloat(elm);\r\n        });\r\n    };\r\n\r\n    const setDownloadingState = function (ctl) {\r\n        ctl._state = ctl._states.DOWNLOADING;\r\n        TC.Util.closeModal();\r\n        ctl.showDownloadProgress(0, 1);\r\n        ctl.div.querySelector(ctl._selectors.NEW).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.PROGRESS).classList.remove(TC.Consts.classes.HIDDEN);\r\n        ctl._dialogDiv.querySelector(ctl._selectors.OKBTN).disabled = true;\r\n        ctl.div.querySelector(ctl._selectors.NEWBTN).disabled = true;\r\n        ctl.layer.clearFeatures();\r\n        ctl.boxDraw.cancel();\r\n    };\r\n\r\n    const setDeletingState = function (ctl) {\r\n        ctl._state = ctl._states.DELETING;\r\n        ctl.showDownloadProgress(0, 1);\r\n        ctl.div.querySelector(ctl._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelector(ctl._selectors.NEW).classList.remove(TC.Consts.classes.HIDDEN);\r\n        ctl.div.querySelectorAll(ctl._selectors.LISTITEM).forEach(function (li) {\r\n            li.classList.add(TC.Consts.classes.DISABLED);\r\n        });\r\n        ctl._dialogDiv.querySelector(ctl._selectors.OKBTN).disabled = true;\r\n        ctl.div.querySelector(ctl._selectors.NEWBTN).disabled = false;\r\n        ctl._dialogDiv.querySelector(ctl._selectors.TILECOUNT).innerHTML = '';\r\n        ctl.boxDraw.cancel();\r\n    };\r\n\r\n    const setNameEditingState = function (ctl, li) {\r\n        li.querySelector('span').classList.add(TC.Consts.classes.HIDDEN);\r\n        const textbox = li.querySelector(ctl._selectors.TEXTBOX);\r\n        textbox.classList.remove(TC.Consts.classes.HIDDEN);\r\n        textbox.value = li.querySelector('span a').innerHTML;\r\n        textbox.focus();\r\n        li.querySelector(ctl._selectors.SAVEBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.CANCELBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.EDITBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.VIEWBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.DELETEBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    const setNameReadyState = function (ctl, li) {\r\n        li.querySelector('span').classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.TEXTBOX).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.SAVEBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.CANCELBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.EDITBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.VIEWBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n        li.querySelector(ctl._selectors.DELETEBTN).classList.remove(TC.Consts.classes.HIDDEN);\r\n    };\r\n\r\n    var formatNumber = function (number) {\r\n        return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    };\r\n\r\n    var updateResolutions = function (ctl, options) {\r\n        var opts = options || {};\r\n        const resDiv = ctl._dialogDiv.querySelector(ctl._classSelector + '-res');\r\n        const range = ctl._dialogDiv.querySelector(ctl._selectors.RNGMAXRES);\r\n        var resolutions = ctl.getResolutions();\r\n        var resText, resLevel, resLeft;\r\n        if (resolutions.length) {\r\n            range.setAttribute('max', resolutions.length - 1);\r\n            if (ctl.minResolution) {\r\n                // Si ya había resolución previa y no se ha tocado el slider, se actualiza su valor\r\n                if (opts.rangeValue === undefined) {\r\n                    for (var i = 0, len = resolutions.length; i < len; i++) {\r\n                        if (ctl.minResolution >= resolutions[i]) {\r\n                            range.value = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                if (opts.rangeValue === undefined) {\r\n                    // Si no había resolución previa se selecciona un valor inicial igual a la resolución actual\r\n                    const currentResolution = ctl.map.getResolution();\r\n                    range.value = resolutions.filter(r => r > currentResolution).length;\r\n                }\r\n            }\r\n            resLevel = parseInt(range.value);\r\n            var resValue = Math.floor(new Number(resolutions[resLevel]) * 1000) / 1000;\r\n            resText = ctl.getLocaleString('metersPerPixel', {\r\n                value: resValue.toLocaleString((ctl.map ? ctl.map.options.locale : TC.Cfg.locale).replace('_', '-'))\r\n            });\r\n            resLeft = (resLevel + 1) * 100 / (resolutions.length + 1) + '%';\r\n            range.disabled = false;\r\n            ctl.minResolution = resolutions[range.value];\r\n        }\r\n        else {\r\n            resLevel = 0;\r\n            resText = '';\r\n            range.value = 0;\r\n            resLeft = '0';\r\n            ctl.minResolution = 0;\r\n            range.disabled = true;\r\n        }\r\n        resDiv.style.left = resLeft;\r\n        resDiv.innerHTML = resText;\r\n    };\r\n\r\n    const findTileMatrixLimits = function (schema, resolution) {\r\n        var result = null;\r\n        for (var i = 0, len = schema.tileMatrixLimits.length; i < len; i++) {\r\n            result = schema.tileMatrixLimits[i];\r\n            if (result.res <= resolution) {\r\n                break;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const updateThumbnails = function (ctl) {\r\n        ctl._dialogDiv.querySelectorAll(ctl._classSelector + '-bl-node input[type=checkbox]').forEach(function (cb, idx) {\r\n            if (cb.checked) {\r\n                var schema = ctl.requestSchemas.filter(function (elm) {\r\n                    return elm.layerId === cb.value;\r\n                })[0];\r\n                if (schema) {\r\n                    var tml = findTileMatrixLimits(schema, ctl.minResolution);\r\n                    if (tml) {\r\n                        var tmKey = '{TileMatrix}';\r\n                        var trKey = '{TileRow}';\r\n                        var tcKey = '{TileCol}';\r\n                        var url = schema.url;\r\n                        if (url.indexOf(tmKey) < 0) {\r\n                            // Caso KVP\r\n                            var qsIdx = url.indexOf('?');\r\n                            if (qsIdx >= 0) {\r\n                                url = url.substr(0, qsIdx);\r\n                            }\r\n                            for (var j = 0, lenj = ctl.baseLayers.length; j < lenj; j++) {\r\n                                var l = ctl.baseLayers[j];\r\n                                if (l.id === schema.layerId) {\r\n                                    url = url + '?layer=' + l.layerNames + '&style=default&tilematrixset=' + l.matrixSet +\r\n                                        '&Service=WMTS&Request=GetTile&Version=1.0.0&Format=' + l.format +\r\n                                        '&TileMatrix=' + tmKey + '&TileRow=' + trKey + '&TileCol=' + tcKey;\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        while (cb && cb.tagName !== 'LABEL') {\r\n                            cb = cb.parentElement;\r\n                        }\r\n                        if (cb) {\r\n                            cb.style.backgroundSize = 'auto';\r\n                            cb.style.backgroundPosition = 'left bottom';\r\n                            cb.style.backgroundImage = 'url(' + url.replace('{TileMatrix}', tml.mId).replace(trKey, tml.rt).replace(tcKey, tml.cl) + ')';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    const formatSize = function (ctl, size) {\r\n        var result;\r\n        if (size < 1) {\r\n            result = ctl.getLocaleString('lessThan1Mb');\r\n        }\r\n        else {\r\n            result = ctl.getLocaleString('approxXMb', { quantity: formatNumber(size) });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const showEstimatedMapSize = function (ctl) {\r\n        var text = '';\r\n        ctl.tileCount = 0;\r\n        for (var i = 0, ii = ctl.requestSchemas.length; i < ii; i++) {\r\n            var schema = ctl.requestSchemas[i];\r\n            for (var j = 0, jj = schema.tileMatrixLimits.length; j < jj; j++) {\r\n                var tml = schema.tileMatrixLimits[j];\r\n                ctl.tileCount += (tml.cr - tml.cl + 1) * (tml.rb - tml.rt + 1);\r\n                if (tml.res < ctl.minResolution) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (ctl.tileCount) {\r\n            ctl.estimatedMapSize = Math.round(ctl.tileCount * ctl.options.avgTileSize / 1048576);\r\n            text = ctl.getLocaleString('xTiles', { quantity: formatNumber(ctl.tileCount) }) + ' (' + formatSize(ctl, ctl.estimatedMapSize) + ')';\r\n        }\r\n        ctl._dialogDiv.querySelector(ctl._selectors.TILECOUNT).innerHTML = text;\r\n    };\r\n\r\n    const getListElementByMapName = function (ctl, name) {\r\n        const lis = ctl.div.querySelectorAll(ctl._selectors.LISTITEM);\r\n        for (var i = 0, len = lis.length; i < len; i++) {\r\n            const li = lis[i];\r\n            const anchor = li.querySelector('a');\r\n            if (anchor && anchor.innerHTML === name) {\r\n                return li;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const getListElementByMapUrl = function (ctl, url) {\r\n        var hashIdx = url.indexOf('#');\r\n        if (hashIdx >= 0) {\r\n            url = url.substr(0, hashIdx);\r\n        }\r\n        const lis = ctl.div.querySelectorAll(ctl._selectors.LISTITEM);\r\n        for (var i = 0, len = lis.length; i < len; i++) {\r\n            const li = lis[i];\r\n            const anchor = li.querySelector('a');\r\n            if (anchor && anchor.getAttribute('href') === url) {\r\n                return li;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    var saveMapToStorage = function (ctl, map) {\r\n        var result = false;\r\n        if (ctl.localStorage) {\r\n            ctl.localStorage.setItem(ctl.LOCAL_STORAGE_KEY_PREFIX + encodeURIComponent(map.url), map.extent + \" \" + map.name);\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var removeMapFromStorage = function (ctl, url) {\r\n        var result = false;\r\n        if (ctl.localStorage) {\r\n            ctl.localStorage.removeItem(ctl.LOCAL_STORAGE_KEY_PREFIX + encodeURIComponent(url));\r\n            result = true;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const addMap = function (ctl) {\r\n        const map = ctl.currentMap;\r\n        if (saveMapToStorage(ctl, map)) {\r\n            ctl.getRenderedHtml(ctl.CLASS + '-map-node', { name: map.name, url: map.url }, function (html) {\r\n                const parser = new DOMParser();\r\n                ctl.div.querySelector(ctl._selectors.LIST).appendChild(parser.parseFromString(html, 'text/html').body.firstChild);\r\n                ctl.div.querySelector(ctl._selectors.EMPTYLIST).setAttribute('hidden', 'hidden');\r\n                ctl.div.querySelector(ctl._selectors.SEARCH).disabled = false;\r\n            });\r\n            ctl.storedMaps.push(map);\r\n        }\r\n    };\r\n\r\n    const removeMap = function (ctl, url) {\r\n        const map = ctl.findStoredMap({ url: url });\r\n        if (map) {\r\n            if (removeMapFromStorage(ctl, url)) {\r\n                const li = getListElementByMapName(ctl, map.name);\r\n                if (li) {\r\n                    li.parentElement.removeChild(li);\r\n                }\r\n            }\r\n            var idx = ctl.storedMaps.indexOf(map);\r\n            ctl.storedMaps.splice(idx, 1);\r\n            if (!ctl.storedMaps.length) {\r\n                ctl.div.querySelector(ctl._selectors.SEARCH).disabled = true;\r\n                ctl.div.querySelector(ctl._selectors.EMPTYLIST).removeAttribute('hidden');\r\n            }\r\n\r\n            return map.name;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(new Promise(function (resolve, reject) {\r\n            var renderObject = { storedMaps: self.storedMaps, listId: self.CLASS + '-list-' + TC.getUID() };\r\n            self.getRenderedHtml(self.CLASS + '-dialog', null, function (html) {\r\n                self._dialogDiv.innerHTML = html;\r\n                self._dialogDiv.querySelector(self._selectors.NAMETB).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    e.preventDefault();\r\n                    this.selectionStart = 0;\r\n                    this.selectionEnd = this.value.length;\r\n                    this.focus();\r\n\r\n                });\r\n            }).then(function () {\r\n                self.renderData(renderObject, function () {\r\n                    self._dialogDiv.querySelector(self._selectors.OKBTN).addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.generateCache();\r\n                    }, { passive: true });\r\n                    self._dialogDiv.querySelector(self._selectors.NAMETB).addEventListener('input', function () {\r\n                        self._updateReadyState();\r\n                    });\r\n                    self.div.querySelector(self._selectors.NEWBTN).addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.setEditState();\r\n                    }, { passive: true });\r\n                    self.div.querySelector(self._classSelector + '-btn-cancel-draw').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.setReadyState();\r\n                    }, { passive: true });\r\n\r\n                    self.div.querySelector(self._classSelector + '-btn-cancel-dl').addEventListener(TC.Consts.event.CLICK, function () {\r\n                        self.cancelCacheRequest();\r\n                    }, { passive: true });\r\n\r\n                    const list = self.div.querySelector(self._selectors.LIST);\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.DELETEBTN, function (e) {\r\n                        self.startDeleteMap(e.target.parentElement.querySelector('a').innerHTML);\r\n                    }), { passive: true });\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.EDITBTN, function (e) {\r\n                        setNameEditingState(self, e.target.parentElement);\r\n                    }), { passive: true });\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.CANCELBTN, function (e) {\r\n                        const li = e.target.parentElement;\r\n                        li.querySelector(self._selectors.TEXTBOX).value = li.querySelector('a').innerHTML;\r\n                        setNameReadyState(self, li);\r\n                    }), { passive: true });\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.SAVEBTN, function (e) {\r\n                        const li = e.target.parentElement;\r\n                        setNameReadyState(self, li);\r\n                        const anchor = li.querySelector('a');\r\n                        const newName = li.querySelector(self._selectors.TEXTBOX).value;\r\n                        const map = self.findStoredMap({ url: anchor.getAttribute('href') });\r\n                        if (map) {\r\n                            map.name = newName;\r\n                            anchor.innerHTML = newName;\r\n                            anchor.setAttribute('title', newName);\r\n                            saveMapToStorage(self, map);\r\n                        }\r\n                    }), { passive: true });\r\n                    list.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector(self._selectors.VIEWBTN, function (e) {\r\n                        const btn = e.target;\r\n                        var showExtent = !btn.classList.contains(TC.Consts.classes.ACTIVE);\r\n                        const viewBtn = self.div.querySelector(self._selectors.VIEWBTN);\r\n                        viewBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n                        viewBtn.parentElement.classList.remove(TC.Consts.classes.ACTIVE);\r\n                        const mapName = btn.parentElement.querySelector('a').innerHTML;\r\n                        if (mapName) {\r\n                            var map = self.findStoredMap({ name: mapName });\r\n                            if (map) {\r\n                                var extent = getExtentFromString(map.extent);\r\n                                self.layer.clearFeatures();\r\n                                if (showExtent) {\r\n                                    self.layer.addPolygon(\r\n                                        [\r\n                                            [\r\n                                                [extent[0], extent[1]],\r\n                                                [extent[0], extent[3]],\r\n                                                [extent[2], extent[3]],\r\n                                                [extent[2], extent[1]]\r\n                                            ]\r\n                                        ]\r\n                                        , {\r\n                                            showsPopup: false\r\n                                        }).then(function () {\r\n                                            self.layer.map.zoomToFeatures(self.layer.features);\r\n                                        });\r\n                                    btn.classList.add(TC.Consts.classes.ACTIVE);\r\n                                    btn.parentElement.classList.add(TC.Consts.classes.ACTIVE);\r\n                                    btn.setAttribute('title', self.getLocaleString('removeMapExtent'));\r\n                                }\r\n                            }\r\n                        }\r\n                    }), { passive: true });\r\n\r\n                    var _filter = function (searchTerm) {\r\n                        searchTerm = searchTerm.toLowerCase();\r\n                        //tc-ctl-cbuild-map-available-empty\r\n                        const lis = self.div.querySelectorAll(self._selectors.LISTITEM);\r\n                        lis.forEach(function (li) {\r\n                            li.style.display = 'none';\r\n                        });\r\n                        const mapLis = [];\r\n                        lis.forEach(function (li) {\r\n                            if (li.matches('li:not([class]),li.' + TC.Consts.classes.ACTIVE)) {\r\n                                mapLis.push(li);\r\n                            }\r\n                        });\r\n\r\n                        if (searchTerm.length === 0) {\r\n                            mapLis.forEach(function (li) {\r\n                                li.style.removeProperty('display');\r\n                            });\r\n                            self.div.querySelector(self._classSelector + '-map-search-icon').style.visibility = 'visible';\r\n                        } else {\r\n                            self.div.querySelector(self._classSelector + '-map-search-icon').style.visibility = 'hidden';\r\n                            var r = new RegExp(searchTerm, 'i');\r\n                            mapLis.forEach(function (li) {\r\n                                li.style.display = r.test(li.querySelector('a').textContent) ? '' : 'none';\r\n                            });\r\n\r\n                            if (!mapLis.some(function (li) {\r\n                                return !li.hidden;\r\n                            })) {\r\n                                lis.forEach(function (li) {\r\n                                    if (li.matches('[class^=\"tc-ctl-cbuild-map-not\"]')) {\r\n                                        li.style.removeProperty('display');\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    const trackSearch = self.div.querySelector(self._selectors.SEARCH);\r\n                    const searchListener = function () {\r\n                        _filter(this.value.toLowerCase().trim());\r\n                    };\r\n                    trackSearch.addEventListener('keyup', searchListener);\r\n                    trackSearch.addEventListener('search', searchListener);\r\n\r\n                    self._dialogDiv.querySelector(self._selectors.BLLIST).addEventListener('change', TC.EventTarget.listenerBySelector('input[type=checkbox]', function (e) {\r\n                        const checkbox = e.target;\r\n                        if (checkbox.checked) {\r\n                            self.baseLayers.push(self.map.getLayer(checkbox.value));\r\n                        }\r\n                        else {\r\n                            for (var i = 0, ii = self.baseLayers.length; i < ii; i++) {\r\n                                const bl = self.baseLayers[i];\r\n                                if (bl.id === checkbox.value) {\r\n                                    self.baseLayers.splice(i, 1);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        self.updateRequestSchemas();\r\n                        updateResolutions(self);\r\n                        updateThumbnails(self);\r\n                        self._updateReadyState();\r\n                        showEstimatedMapSize(self);\r\n                    }));\r\n\r\n                    const range = self._dialogDiv.querySelector(self._selectors.RNGMAXRES);\r\n                    const rangeListener = function (e) {\r\n                        updateResolutions(self, {\r\n                            rangeValue: e.target.value\r\n                        });\r\n                        updateThumbnails(self);\r\n                        showEstimatedMapSize(self);\r\n                    };\r\n                    range.addEventListener('input', rangeListener);\r\n                    range.addEventListener('change', rangeListener);\r\n\r\n                    const li = getListElementByMapUrl(self, location.href);\r\n                    if (li) {\r\n                        li.classList.add(TC.Consts.classes.ACTIVE);\r\n                    }\r\n\r\n                    if (TC.Util.isFunction(callback)) {\r\n                        callback();\r\n                    }\r\n                })\r\n                    .then(function () {\r\n                        resolve();\r\n                    })\r\n                    .catch(function (err) {\r\n                        reject(err instanceof Error ? err : Error(err));\r\n                    });\r\n            });\r\n\r\n            // Control para evitar que se cancele una descarga de cache al salir de la página\r\n            window.addEventListener('beforeunload', function (e) {\r\n                if (self.isDownloading) {\r\n                    var msg = self.getLocaleString('cb.mapDownloading.warning');\r\n                    e.returnValue = msg;\r\n                    return msg;\r\n                }\r\n            }, true);\r\n        }));\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        var self = this;\r\n\r\n        const result = TC.control.SWCacheClient.prototype.register.call(self, map);\r\n\r\n        self.getServiceWorker().then(\r\n            function () {\r\n                navigator.serviceWorker.ready.then(function () {\r\n                    navigator.serviceWorker.addEventListener('message', function (event) {\r\n                        switch (event.data.event) {\r\n                            case 'progress':\r\n                                self.trigger(TC.Consts.event.MAPCACHEPROGRESS, { url: event.data.name, loaded: event.data.count, total: event.data.total });\r\n                                break;\r\n                            case 'cached':\r\n                                self.trigger(TC.Consts.event.MAPCACHEDOWNLOAD, { url: event.data.name });\r\n                                break;\r\n                            case 'deleted':\r\n                                self.trigger(TC.Consts.event.MAPCACHEDELETE, { url: event.data.name });\r\n                                break;\r\n                            case 'error':\r\n                                if (event.data.action === self._actions.CREATE) {\r\n                                    TC.error(self.getLocaleString('cb.resourceDownload.error', { url: event.data.url }));\r\n                                }\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                    });\r\n                });\r\n\r\n                if (navigator.onLine) {\r\n                    // Cacheamos mediante service worker las URLs del manifiesto\r\n                    requestManifest().then(function (obj) {\r\n                        const hashStorageKey = self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME + '.hash';\r\n                        var hash;\r\n                        if (self.localStorage) {\r\n                            hash = self.localStorage.getItem(hashStorageKey);\r\n                        }\r\n                        if (hash !== obj.hash) {\r\n                            self.cacheUrlList(obj.urls);\r\n                            self.one(TC.Consts.event.MAPCACHEDOWNLOAD, function () {\r\n                                const firstLoad = !hash;\r\n                                if (self.localStorage) {\r\n                                    self.localStorage.setItem(hashStorageKey, obj.hash);\r\n                                }\r\n                                if (!firstLoad) {\r\n                                    TC.confirm(self.getLocaleString('newAppVersionAvailable'), function () {\r\n                                        location.reload();\r\n                                    });\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            function (error) {\r\n                self.renderPromise().then(function () {\r\n                    const container = self.div.querySelector(`.${self.CLASS}-new`);\r\n                    const warning = document.createElement('div');\r\n                    warning.classList.add('tc-alert', 'alert-warning');\r\n                    const header = document.createElement('p');\r\n                    const text = document.createElement('strong');\r\n                    text.innerHTML = self.getLocaleString('offlineMap.error');\r\n                    header.appendChild(text);\r\n                    const reason = document.createElement('p');\r\n                    reason.innerHTML = error.message;\r\n                    warning.appendChild(header);\r\n                    warning.appendChild(reason);\r\n                    container.querySelector(self._selectors.NEWBTN).classList.add(TC.Consts.classes.HIDDEN);\r\n                    container.appendChild(warning);\r\n                });\r\n            }\r\n        ).catch(() => console.log(\"No SW available: no events handled\"));\r\n\r\n        if (self.mapIsOffline) {\r\n            map.div.classList.add(TC.Consts.classes.OFFLINE);\r\n\r\n            // Si no está especificado, el panel de aviso offline se cuelga del div del mapa\r\n            self._offlinePanelDiv = TC.Util.getDiv(self.options.offlinePanelDiv);\r\n            if (!self.options.offlinePanelDiv) {\r\n                map.div.appendChild(self._offlinePanelDiv);\r\n            }\r\n            self.getRenderedHtml(self.CLASS + '-off-panel', null, function (html) {\r\n                self._offlinePanelDiv.innerHTML = html;\r\n                if (!navigator.onLine) {\r\n                    const offPanel = self._offlinePanelDiv.querySelector(self._selectors.OFFPANEL);\r\n                    offPanel.classList.add(TC.Consts.classes.CONNECTION_OFFLINE);\r\n                    offPanel.classList.remove(TC.Consts.classes.CONNECTION_MOBILE, TC.Consts.classes.CONNECTION_WIFI);\r\n                }\r\n                self._offlinePanelDiv.querySelector(self._selectors.EXIT).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    TC.confirm(self.getLocaleString('offlineMapExit.confirm'),\r\n                        null,\r\n                        function () {\r\n                            e.preventDefault();\r\n                        });\r\n                });\r\n            });\r\n        }\r\n\r\n        const drawId = self.getUID();\r\n        const layerId = self.getUID();\r\n        self.layerPromise = map.addLayer({\r\n            id: layerId,\r\n            type: TC.Consts.layerType.VECTOR,\r\n            stealth: true,\r\n            owner: self,\r\n            styles: {\r\n                line: map.options.styles.line\r\n            }\r\n        });\r\n        self.layer = null;\r\n        Promise.all([\r\n            self.layerPromise,\r\n            self.renderPromise(),\r\n            map.addControl('draw', {\r\n                id: drawId,\r\n                div: self.div.querySelector(self._selectors.DRAW),\r\n                mode: TC.Consts.geom.RECTANGLE,\r\n                persistent: false\r\n            })\r\n        ]).then(function (objects) {\r\n            const layer = self.layer = objects[0];\r\n            const boxDraw = self.boxDraw = objects[2];\r\n            boxDraw.setLayer(layer);\r\n            boxDraw\r\n                .on(TC.Consts.event.DRAWSTART, function (e) {\r\n                    self.map.toast(self.getLocaleString('clickOnDownloadAreaOppositeCorner'), { type: TC.Consts.msgType.INFO });\r\n                })\r\n                .on(TC.Consts.event.DRAWEND, function (e) {\r\n                    var points = e.feature.geometry[0];\r\n                    var pStart = points[0];\r\n                    var pEnd = points[2];\r\n                    var minx = Math.min(pStart[0], pEnd[0]);\r\n                    var maxx = Math.max(pStart[0], pEnd[0]);\r\n                    var miny = Math.min(pStart[1], pEnd[1]);\r\n                    var maxy = Math.max(pStart[1], pEnd[1]);\r\n                    self.setExtent([minx, miny, maxx, maxy]);\r\n                    const checkboxes = self._dialogDiv.querySelectorAll('input[type=checkbox]');\r\n                    checkboxes.forEach(function (checkbox) {\r\n                        // Comprobamos que la extensión del mapa está disponible a alguna resolución\r\n                        const layer = self.map.getLayer(checkbox.value);\r\n                        var li = checkbox;\r\n                        while (li && li.tagName !== 'LI') {\r\n                            li = li.parentElement;\r\n                        }\r\n                        if (layer.wrap.getCompatibleMatrixSets(map.crs).includes(layer.matrixSet)) {\r\n                            const tml = self.wrap.getRequestSchemas({\r\n                                extent: self.extent,\r\n                                layers: [layer]\r\n                            })[0].tileMatrixLimits;\r\n\r\n                            li.classList.toggle(TC.Consts.classes.HIDDEN, !tml.length);\r\n                        }\r\n                        else {\r\n                            li.classList.add(TC.Consts.classes.HIDDEN);\r\n                        }\r\n                    });\r\n                    const visibleLi = self._dialogDiv.querySelector(self._selectors.BLLISTITEM + ':not(.' + TC.Consts.classes.HIDDEN + ')');\r\n                    self._dialogDiv.querySelector(self._selectors.BLLISTTEXT).innerHTML = self.getLocaleString(visibleLi ? 'selectAtLeastOne' : 'cb.noMapsAtSelectedExtent');\r\n\r\n                    updateThumbnails(self);\r\n                    showEstimatedMapSize(self);\r\n                    TC.Util.showModal(self._dialogDiv.querySelector(self._classSelector + '-dialog'), {\r\n                        openCallback: function () {\r\n                            setTimeout(function () { // Este timeout evita el pulsado accidental cuando sale el diálogo\r\n                                checkboxes.forEach(function (cb) {\r\n                                    cb.disabled = false;\r\n                                });\r\n                            }, 100);\r\n                            var time;\r\n                            if (Date.prototype.toLocaleString) {\r\n                                var opt = {};\r\n                                opt.year = opt.month = opt.day = opt.hour = opt.minute = opt.second = 'numeric';\r\n                                time = new Date().toLocaleString(self.map.options.locale.replace('_', '-'), opt);\r\n                            }\r\n                            else {\r\n                                time = new Date().toString();\r\n                            }\r\n                            self._dialogDiv.querySelector(self._selectors.NAMETB).value = time;\r\n                            self._updateReadyState();\r\n                        },\r\n                        closeCallback: function () {\r\n                            checkboxes.forEach(function (cb) {\r\n                                cb.disabled = true;\r\n                            });\r\n                            self.boxDraw.layer.clearFeatures();\r\n                        }\r\n                    });\r\n                });\r\n\r\n            map.on(TC.Consts.event.CONTROLDEACTIVATE, function (e) {\r\n                if (boxDraw === e.control) {\r\n                    if (self._state === self._states.EDITING) {\r\n                        self.setReadyState();\r\n                    }\r\n                }\r\n            });\r\n\r\n        });\r\n\r\n        var addRenderedListNode = function (layer) {\r\n            var result = false;\r\n            const blList = self._dialogDiv.querySelector(self._selectors.BLLIST);\r\n            const isLayerAdded = function () {\r\n                return !!blList.querySelector('li[data-layer-uid=\"' + layer.id + '\"]');\r\n            };\r\n            var isValidLayer = layer.type === TC.Consts.layerType.WMTS && !layer.mustReproject;\r\n            if (TC.Util.detectSafari() && TC.Util.detectIOS()) {\r\n                isValidLayer = isValidLayer && TC.Util.isSameOrigin(layer.url);\r\n            }\r\n            if (isValidLayer && !isLayerAdded()) {\r\n                result = true;\r\n                self.getRenderedHtml(self.CLASS + '-bl-node', layer, function (html) {\r\n                    if (!isLayerAdded()) {\r\n                        const parser = new DOMParser();\r\n                        blList.appendChild(parser.parseFromString(html, 'text/html').body.firstChild);\r\n                    }\r\n                });\r\n            }\r\n            return result;\r\n        };\r\n\r\n        const addLayer = function (layer) {\r\n            if (layer.isBase && self.mapIsOffline) {\r\n                // Capamos las resoluciones de la capa\r\n                const resolutions = layer.getResolutions();\r\n                if (resolutions) {\r\n                    const cachedResolutions = resolutions.filter(r => r >= self.currentMapDefinition.res);\r\n                    if (cachedResolutions.length) {\r\n                        layer.setResolutions(cachedResolutions);\r\n                    }\r\n                }\r\n            }\r\n            //14/03/2019 GLS: esperamos a que se haya renderizado el dialogo para obtener la lista\r\n            self.renderPromise().then(function () {\r\n                addRenderedListNode(layer);\r\n            });\r\n        };\r\n\r\n        map\r\n            .on(TC.Consts.event.LAYERADD, function (e) {\r\n                addLayer(e.layer);\r\n            })\r\n            .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                //14/03/2019 GLS: esperamos a que se haya renderizado el dialogo para obtener la lista\r\n                self.renderPromise().then(function () {\r\n                    const layer = e.layer;\r\n                    if (layer.type === TC.Consts.layerType.WMTS) {\r\n                        const li = self._dialogDiv\r\n                            .querySelector(self._selectors.BLLIST)\r\n                            .querySelector('li[data-layer-uid=\"' + layer.id + '\"]');\r\n                        li.parentElement.removeChild(li);\r\n                    }\r\n                });\r\n            })\r\n            .on(TC.Consts.event.PROJECTIONCHANGE, function (e) {\r\n                map.baseLayers.forEach(l => addLayer(l));\r\n            });\r\n\r\n        map.ready(function () {\r\n            if (self.mapIsOffline) {\r\n                // Deshabilitamos los controles que no son usables en modo offline\r\n                var offCtls = [];\r\n                var i, len;\r\n                for (i = 0, len = self.offlineControls.length; i < len; i++) {\r\n                    var offCtl = self.offlineControls[i];\r\n                    offCtl = offCtl.substr(0, 1).toUpperCase() + offCtl.substr(1);\r\n                    offCtls = offCtls.concat(map.getControlsByClass('TC.control.' + offCtl));\r\n                }\r\n\r\n                for (i = 0, len = map.controls.length; i < len; i++) {\r\n                    var ctl = map.controls[i];\r\n                    if (offCtls.indexOf(ctl) < 0) {\r\n                        ctl.disable();\r\n                    }\r\n                }\r\n\r\n                document.querySelectorAll(self._selectors.OFFLINEHIDDEN).forEach(function (elm) {\r\n                    elm.classList.add(TC.Consts.classes.HIDDEN);\r\n                });\r\n            }\r\n        });\r\n\r\n        map.loaded(function () {\r\n\r\n            self.layerPromise.then(function (layer) {\r\n                map.putLayerOnTop(layer);\r\n            });\r\n\r\n            self.renderPromise().then(function () {\r\n                self.div.querySelector(self._selectors.NEWBTN).disabled = false;\r\n                map.baseLayers.forEach(addRenderedListNode);\r\n            });\r\n\r\n            if (self.mapIsOffline) {\r\n                const mapDef = self.currentMapDefinition;\r\n                const isSameLayer = function (layer, mapDefLayer) {\r\n                    const layerUrl = layer.url.indexOf('//') === 0 ? location.protocol + layer.url : layer.url;\r\n                    return (layerUrl === mapDef.url[mapDefLayer.urlIdx] && layer.layerNames === mapDefLayer.id && layer.matrixSet === mapDef.tms[mapDefLayer.tmsIdx]);\r\n                };\r\n                // Añadimos al mapa las capas guardadas que no están por defecto\r\n                const missingLayers = map.options.availableBaseLayers\r\n                    .filter((abl) => abl.type === TC.Consts.layerType.WMTS) // Capas cacheables\r\n                    .filter((abl) => { // Que estén en el mapa sin conexión\r\n                        return mapDef.layers.some((l) => isSameLayer(abl, l));\r\n                    })\r\n                    .filter((abl) => { // Que no estén en las capas por defecto\r\n                        return !map.baseLayers.some((l) => l.id === abl.id);\r\n                    });\r\n                Promise.all(missingLayers.map((layer) => {\r\n                    return map.addLayer(TC.Util.extend({}, layer, { isBase: true }));\r\n                })).finally(function () {\r\n                    // Obtenemos las capas cacheadas\r\n                    const cachedLayers = [];\r\n                    for (var i = 0, ii = mapDef.layers.length; i < ii; i++) {\r\n                        for (var j = 0, jj = map.baseLayers.length; j < jj; j++) {\r\n                            const baseLayer = map.baseLayers[j];\r\n                            if (baseLayer.type === TC.Consts.layerType.WMTS && isSameLayer(baseLayer, mapDef.layers[i])) {\r\n                                cachedLayers.push(baseLayer);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (cachedLayers.length) {\r\n                        map.setBaseLayer(cachedLayers[0], function () {\r\n                            // Quitamos las capas no disponibles (la capa en blanco la mantenemos)\r\n                            for (var i = map.baseLayers.length - 1; i >= 0; i--) {\r\n                                const baseLayer = map.baseLayers[i];\r\n                                if (baseLayer.type !== TC.Consts.layerType.VECTOR && !cachedLayers.includes(baseLayer)) {\r\n                                    map.removeLayer(baseLayer);\r\n                                }\r\n                            }\r\n\r\n                            map.setExtent(self.currentMapExtent, { animate: false });\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        self\r\n            .on(TC.Consts.event.MAPCACHEDOWNLOAD, function (e) {\r\n                self.isDownloading = false;\r\n                const removeHash = function (url) {\r\n                    const hashIdx = url.indexOf('#');\r\n                    return (hashIdx >= 0) ? url.substr(0, hashIdx) : url;\r\n                }\r\n                const url = removeHash(e.url);\r\n                const li = getListElementByMapUrl(self, url);\r\n                if (li && !self.serviceWorkerEnabled) {\r\n                    // Se ha descargado un mapa cuando se quería borrar. Pasa cuando la cache ya estaba borrada pero la entrada en localStorage no.\r\n                    li.classList.remove(TC.Consts.classes.DISABLED);\r\n                    TC.alert(self.getLocaleString('cb.delete.error'));\r\n                }\r\n                else {\r\n                    if (self.currentMap && url === self.currentMap.url) {\r\n                        addMap(self);\r\n                        map.toast(self.getLocaleString('mapDownloaded', { mapName: self.currentMap.name }));\r\n                    }\r\n                }\r\n                self.currentMap = null;\r\n                self.setReadyState();\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEDELETE, function (e) {\r\n                self.isDownloading = false;\r\n                var mapName = removeMap(self, e.url) || (self.currentMap && self.currentMap.name);\r\n                self.currentMap = null;\r\n                if (mapName) {\r\n                    map.toast(self.getLocaleString('mapDeleted', { mapName: mapName }));\r\n                }\r\n                self.setReadyState();\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEPROGRESS, function (e) {\r\n                var total = e.total;\r\n                if (!total && self.requestSchemas) {\r\n                    total = self.requestSchemas[0].tileCount;\r\n                }\r\n                var loaded = e.loaded;\r\n                if (loaded) {\r\n                    self._loadedCount = loaded;\r\n                }\r\n                else {\r\n                    self._loadedCount += 1;\r\n                    loaded = self._loadedCount;\r\n                }\r\n                self.showDownloadProgress(loaded, total);\r\n            })\r\n            .on(TC.Consts.event.MAPCACHEERROR, function (e) {\r\n                self.isDownloading = false;\r\n                self.setReadyState();\r\n                var msg = self.getLocaleString('cb.mapCreation.error');\r\n                var handleError = true;\r\n                switch (e.reason) {\r\n                    case 'quota':\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonQuota');\r\n                        break;\r\n                    case 'resource':\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonResource');\r\n                        break;\r\n                    case 'manifest':\r\n                        if (e.status == '410') {\r\n                            removeMap(self, e.url);\r\n                        }\r\n                        handleError = false;\r\n                        break;\r\n                    case ALREADY_EXISTS:\r\n                        msg += '. ' + self.getLocaleString('cb.mapCreation.error.reasonAlreadyExists');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                if (handleError) {\r\n                    if (TC.Util.detectIE()) {\r\n                        TC.error(msg);\r\n                        TC.alert(self.getLocaleString('cb.mapCreation.error.reasonEdge'));\r\n                    }\r\n                    else {\r\n                        TC.alert(msg);\r\n                    }\r\n                }\r\n                self.currentMap = null;\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.setExtent = function (extent) {\r\n        var self = this;\r\n        if (Array.isArray(extent) && extent.length >= 4) {\r\n            self.extent = extent;\r\n            self.updateRequestSchemas();\r\n        }\r\n    };\r\n\r\n    ctlProto._updateReadyState = function () {\r\n        const self = this;\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled =\r\n            !self.extent ||\r\n            self._dialogDiv.querySelector(self._selectors.NAMETB).value.length === 0 ||\r\n            self._dialogDiv.querySelector(self._selectors.RNGMAXRES).disabled;\r\n    };\r\n\r\n    ctlProto.setReadyState = function () {\r\n        const self = this;\r\n        self._state = self._states.READY;\r\n        self.showDownloadProgress(0, 1);\r\n        self.div.querySelector(self._selectors.DRAWING).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.NEW).classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelectorAll(self._selectors.LISTITEM).forEach(function (li) {\r\n            li.classList.remove(TC.Consts.classes.DISABLED);\r\n        });\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled = true;\r\n        self.div.querySelector(self._selectors.NEWBTN).disabled = false;\r\n        self._dialogDiv.querySelector(self._selectors.TILECOUNT).innerHTML = '';\r\n        self.extent = null;\r\n        self._loadedCount = 0;\r\n        if (self.boxDraw) {\r\n            self.boxDraw.cancel();\r\n        }\r\n    };\r\n\r\n    ctlProto.setEditState = function () {\r\n        const self = this;\r\n        self._state = self._states.EDITING;\r\n        self.showDownloadProgress(0, 1);\r\n        self.div.querySelector(self._selectors.NEW).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.PROGRESS).classList.add(TC.Consts.classes.HIDDEN);\r\n        self.div.querySelector(self._selectors.DRAWING).classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.map.toast(self.getLocaleString('clickOnDownloadAreaFirstCorner'), { type: TC.Consts.msgType.INFO });\r\n        self._dialogDiv.querySelector(self._selectors.OKBTN).disabled = true;\r\n        self.div.querySelector(self._selectors.NEWBTN).disabled = true;\r\n        self._dialogDiv.querySelector(self._selectors.NAMETB).value = '';\r\n        self.boxDraw.activate();\r\n    };\r\n\r\n    ctlProto.generateCache = function () {\r\n        const self = this;\r\n        const options = {\r\n            mapName: self._dialogDiv.querySelector(self._selectors.NAMETB).value\r\n        };\r\n        if (self.findStoredMap({ name: options.mapName })) {\r\n            TC.alert(self.getLocaleString('cb.mapNameAlreadyExists.error', options));\r\n        }\r\n        else {\r\n            var startRequest = function () {\r\n                self.div.querySelector(self._classSelector + '-name').innerHTML = options.mapName;\r\n                self.map.toast(self.getLocaleString('downloadingMap', { mapName: options.mapName }));\r\n                setDownloadingState(self);\r\n                self.requestCache(options);\r\n            };\r\n\r\n            // Usamos Storage API si existe\r\n            if (navigator.storage && navigator.storage.estimate) {\r\n                navigator.storage.estimate().then(function (estimate) {\r\n                    const availableMB = (estimate.quota - estimate.usage) / 1048576;\r\n                    if (self.estimatedMapSize < availableMB) {\r\n                        startRequest();\r\n                    }\r\n                    else {\r\n                        TC.confirm(self.getLocaleString('cb.mapCreation.warning.reasonSize', {\r\n                            mapName: options.mapName,\r\n                            mapSize: formatSize(self, self.estimatedMapSize),\r\n                            availableStorage: formatSize(self, Math.round(availableMB))\r\n                        }), startRequest);\r\n                    }\r\n                });\r\n            }\r\n            else {\r\n                startRequest();\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.cacheUrlList = function (urlList, options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        self.createCache(opts.name || (self.LOCAL_STORAGE_KEY_PREFIX + self.ROOT_CACHE_NAME), {\r\n            urlList: urlList,\r\n            silent: opts.silent\r\n        });\r\n    };\r\n\r\n    ctlProto.requestCache = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        if (self.map) {\r\n            var extent = opts.extent || self.extent || self.map.getExtent();\r\n            self.updateRequestSchemas({ extent: extent });\r\n\r\n            if (self.requestSchemas) {\r\n                var filterTml = function (elm, i, arr) {\r\n                    var result = elm.res >= self.minResolution;\r\n                    if (!result && i > 0) {\r\n                        result = arr[i - 1].res > self.minResolution;\r\n                    }\r\n                    return result;\r\n                };\r\n                var trimTml = function (tml) {\r\n                    return {\r\n                        mId: tml.mId,\r\n                        cl: tml.cl,\r\n                        cr: tml.cr,\r\n                        rt: tml.rt,\r\n                        rb: tml.rb\r\n                    };\r\n                };\r\n                // Solo mantenemos los esquemas hasta el nivel de resolución mínima o el inmediatamente inferior a ella si no lo tiene\r\n                var requestSchemas = self.requestSchemas.map(function (schema) {\r\n                    return {\r\n                        layerId: schema.layerId,\r\n                        tileMatrixLimits: schema.tileMatrixLimits.filter(filterTml)\r\n                    };\r\n                });\r\n                // Actualizamos el extent para que coincida con las teselas del último nivel de los esquemas\r\n                // También eliminamos del esquema todo lo irrelevante para la petición\r\n                var intersectionExtent = [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY];\r\n                for (var i = 0, len = requestSchemas.length; i < len; i++) {\r\n                    var rs = requestSchemas[i];\r\n                    var tml = rs.tileMatrixLimits[rs.tileMatrixLimits.length - 1];\r\n                    var unitsPerTile = tml.res * tml.tSize;\r\n                    intersectionExtent[0] = Math.min(intersectionExtent[0], tml.origin[0] + unitsPerTile * tml.cl);\r\n                    intersectionExtent[1] = Math.min(intersectionExtent[1], tml.origin[1] - unitsPerTile * (tml.rb + 1));\r\n                    intersectionExtent[2] = Math.max(intersectionExtent[2], tml.origin[0] + unitsPerTile * (tml.cr + 1));\r\n                    intersectionExtent[3] = Math.max(intersectionExtent[3], tml.origin[1] - unitsPerTile * tml.rt);\r\n                    rs.tileMatrixLimits = rs.tileMatrixLimits.map(trimTml);\r\n                }\r\n\r\n\r\n                // Redondeamos previamente para que por errores de redondeo no haya confusión al identificar un mapa\r\n                var precision = Math.pow(10, self.map.wrap.isGeo() ? TC.Consts.DEGREE_PRECISION : TC.Consts.METER_PRECISION);\r\n                intersectionExtent = intersectionExtent.map(function (elm, idx) {\r\n                    var round = (idx < 3) ? Math.ceil : Math.floor;\r\n                    return round(elm * precision) / precision;\r\n                });\r\n\r\n                var mapDefinition = {\r\n                    bBox: intersectionExtent,\r\n                    res: Math.floor(self.minResolution * 1000) / 1000, // Redondeamos previamente para que por errores de redondeo no haya confusión al identificar un mapa\r\n                    url: [],\r\n                    tms: [],\r\n                    format: [],\r\n                    layers: new Array(self.baseLayers.length)\r\n                };\r\n                for (var i = 0, len = self.baseLayers.length; i < len; i++) {\r\n                    var layer = self.baseLayers[i];\r\n                    var layerUrl = layer.url.indexOf('//') === 0 ? location.protocol + layer.url : layer.url;\r\n                    var urlIdx = mapDefinition.url.indexOf(layerUrl);\r\n                    if (urlIdx < 0) {\r\n                        urlIdx = mapDefinition.url.push(layerUrl) - 1;\r\n                    }\r\n                    var tmsIdx = mapDefinition.tms.indexOf(layer.matrixSet);\r\n                    if (tmsIdx < 0) {\r\n                        tmsIdx = mapDefinition.tms.push(layer.matrixSet) - 1;\r\n                    }\r\n                    var shortFormat = layer.format.substr(layer.format.indexOf('/') + 1);\r\n                    var formatIdx = mapDefinition.format.indexOf(shortFormat);\r\n                    if (formatIdx < 0) {\r\n                        formatIdx = mapDefinition.format.push(shortFormat) - 1;\r\n                    }\r\n                    mapDefinition.layers[i] = {\r\n                        urlIdx: urlIdx,\r\n                        id: layer.layerNames,\r\n                        tmsIdx: tmsIdx,\r\n                        formatIdx: formatIdx\r\n                    };\r\n                }\r\n\r\n                var params = TC.Util.getQueryStringParams();\r\n                var e = params[self.MAP_EXTENT_PARAM_NAME] = intersectionExtent.toString();\r\n                params[self.MAP_DEFINITION_PARAM_NAME] = btoa(JSON.stringify(mapDefinition));\r\n                if (self.serviceWorkerEnabled) {\r\n                    params[self.SERVICE_WORKER_FLAG] = 1;\r\n                }\r\n                var u = location.origin + location.pathname.substr(0, location.pathname.lastIndexOf('/') + 1) + '?' + TC.Util.getParamString(params);\r\n                self.currentMap = { name: opts.mapName, extent: e, url: u };\r\n                self.isDownloading = true;\r\n\r\n                // Guardado mediante service workers\r\n                if (self.serviceWorkerEnabled) {\r\n                    const urlList = [];\r\n                    for (var i = 0, len = requestSchemas.length; i < len; i++) {\r\n                        var schema = requestSchemas[i];\r\n                        var urlPattern = null;\r\n                        for (var j = 0, lenj = self.baseLayers.length; j < lenj; j++) {\r\n                            var l = self.baseLayers[j];\r\n                            if (l.id === schema.layerId) {\r\n                                urlPattern = self.wrap.getGetTilePattern(l);\r\n                                if (l.getFallbackLayer) {\r\n                                    // Esto se usa para meter en almacenamiento local el capabilities de la capa de fallback y evitar errores cuando no haya red\r\n                                    l.getFallbackLayer();\r\n                                }\r\n                                if (l.thumbnail) {\r\n                                    urlList.push(l.thumbnail);\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (urlPattern) {\r\n                            for (var k = 0, lenk = schema.tileMatrixLimits.length; k < lenk; k++) {\r\n                                var tml = schema.tileMatrixLimits[k];\r\n                                for (var r = tml.rt; r <= tml.rb; r++) {\r\n                                    for (var c = tml.cl; c <= tml.cr; c++) {\r\n                                        urlList.push(urlPattern.replace('{TileMatrix}', tml.mId).replace('{TileCol}', c).replace('{TileRow}', r));\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    urlList.push(u);\r\n                    self.cacheUrlList(urlList, { name: u });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    ctlProto.cancelCacheRequest = function () {\r\n        var self = this;\r\n        if (self.currentMap) {\r\n            self.deleteCache(self.currentMap.url).then(function (obj) {\r\n                if (!obj) {\r\n                    self.currentMap = null;\r\n                }\r\n            });\r\n        }\r\n        self.isDownloading = false;\r\n        self.setReadyState();\r\n    };\r\n\r\n    ctlProto.deleteMap = function (name) {\r\n        var self = this;\r\n\r\n        var map = self.findStoredMap({ name: name });\r\n        if (map) {\r\n            self.deleteCache(map.url);\r\n        }\r\n    };\r\n\r\n    ctlProto.startDeleteMap = function (name) {\r\n        const self = this;\r\n        if (navigator.onLine) {\r\n            if (name) {\r\n                var confirmText = self.getLocaleString('cb.delete.confirm', { mapName: name });\r\n                if (!self.serviceWorkerEnabled) {\r\n                    confirmText = confirmText + \" \" + self.getLocaleString('cb.delete.confirm.connect.warning');\r\n                }\r\n                if (confirm(confirmText)) {\r\n                    if (navigator.onLine) {\r\n                        setDeletingState(self);\r\n                        self.deleteMap(name);\r\n                    } else {\r\n                        TC.alert(self.getLocaleString('cb.delete.conn.alert'));\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            TC.alert(self.getLocaleString('cb.delete.conn.alert'));\r\n        }\r\n    };\r\n\r\n    ctlProto.findStoredMap = function (options) {\r\n        var self = this;\r\n        return self.storedMaps.filter(function (elm) {\r\n            var result = true;\r\n            if (options.name && options.name !== elm.name) {\r\n                result = false;\r\n            }\r\n            if (result && options.url && options.url !== elm.url) {\r\n                result = false;\r\n            }\r\n            return result;\r\n        })[0];\r\n    };\r\n\r\n    ctlProto.showDownloadProgress = function (current, total) {\r\n        const self = this;\r\n        const cs = self._classSelector;\r\n        const count = self.div.querySelector(cs + '-progress-count');\r\n        if (total) {\r\n            var percent = Math.min(Math.round(current * 100 / total), 100);\r\n            var percentString = percent + '%';\r\n            const pr = self.div.querySelector(cs + '-progress-ratio');\r\n            if (pr) {\r\n                pr.style.width = percentString;\r\n            }\r\n            if (count) {\r\n                count.innerHTML = percentString;\r\n            }\r\n        }\r\n        else {\r\n            const pb = self.div.querySelector(cs + '-progress-bar');\r\n            if (pb) {\r\n                pb.classList.add(TC.Consts.classes.HIDDEN);\r\n            }\r\n            if (count) {\r\n                count.innerHTML = self.getLocaleString('xFiles', { quantity: current });\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.updateRequestSchemas = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        opts.extent = opts.extent || self.extent;\r\n        opts.layers = opts.layers || self.baseLayers;\r\n        self.requestSchemas = self.wrap.getRequestSchemas(opts);\r\n        return self.requestSchemas;\r\n    };\r\n\r\n    ctlProto.getResolutions = function () {\r\n        const self = this;\r\n        var result = [];\r\n\r\n        const resolutionMapper = function (tml) {\r\n            return tml.res;\r\n        };\r\n        // Obtenemos un array de resoluciones por cada esquema de cada capa\r\n        const allResolutions = self.requestSchemas.map(function (schema) {\r\n            return schema.tileMatrixLimits.map(resolutionMapper);\r\n        });\r\n\r\n        // \"Hacemos la cremallera\" con los arrays de resoluciones de todas las capas y añadimos resoluciones al array de resultados\r\n        result = result.concat.apply(result, allResolutions);\r\n        result.sort(function (a, b) {\r\n            return b - a;\r\n        });\r\n        return result;\r\n    };\r\n\r\n})();\r\n"]}