{"version":3,"sources":["control/Modify.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Consts","event","BEFOREFEATUREMODIFY","FEATUREMODIFY","FEATURESSELECT","FEATURESUNSELECT","CHANGE","Modify","apply","this","arguments","browserFeatures","inputTypeColor","window","CP","loadCSS","styles","Util","extend","Cfg","selection","options","text","fontSize","line","fontColor","labelOutlineColor","labelOutlineWidth","_classSelector","CLASS","wrap","snapping","inherit","ctlProto","prototype","template","compiler","main","container","depth0","helpers","partials","data","alias1","nullContext","alias2","escapeExpression","alias3","lambda","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","name","hash","loc","start","column","end","useData","1","stack1","fn","program","inverse","noop","setFeatureSelectedState","ctl","features","_deleteBtn","disabled","length","_editAttrBtn","_joinBtn","_splitBtn","filter","complexGeometryFilter","displayLabelText","elm","result","feature","MultiPolygon","MultiPolyline","geometry","register","map","self","layer","setLayer","on","FEATUREADD","FEATURESADD","e","Promise","all","getLayer","renderPromise","then","objects","setSelectableState","FEATUREREMOVE","FEATURESCLEAR","unselectFeatures","getSelectedFeatures","setTextMode","LAYERUPDATE","selectedFeatures","indexOf","forEach","toggleSelectedStyle","getAttributeDisplayTarget","classList","contains","classes","HIDDEN","displayAttributes","closeAttributes","render","callback","renderCallback","_selectBtn","div","querySelector","addEventListener","CLICK","target","isActive","deactivate","activate","passive","deleteSelectedFeatures","_textBtn","textActive","toggleAttributes","_textInput","labelFeatures","value","_styleSection","_fontColorPicker","setFontColor","_fontSizeSelector","setFontSize","_attributesSection","isFunction","renderObject","_set1stRenderPromise","renderData","input","style","backgroundColor","color","picker","document","body","onclick","preventDefault","onfocus","blur","onchange","loaded","add","ACTIVE","mode","remove","clear","clearFatures","isExclusive","setMode","putLayerOnTop","resolve","_layerPromise","setSelectedFeatures","reject","objs","active","getActiveFeatures","push","feat","removeFeature","trigger","styleFunction","resolution","mapStyles","Polygon","polygon","Point","MultiPoint","point","getStyle","label","setFontColorWatch","outlineColor","undefined","colorArrayToString","getLabelOutlineColor","textShadow","setStyle","setFontSizeWatch","size","sizeValue","parseInt","Number","NaN","matchForShort","match","matchForLong","textStyle","labelOffset","getRenderedHtml","getData","html","attributesSection","innerHTML","_onAttrOK","modifyControl","toggle","querySelectorAll","getAttribute","setData","joinFeatures","geometryType","geom","MULTIPOLYLINE","MULTIPOLYGON","MULTIPOINT","_joinedFeatureAttributes","newGeometry","reduce","a","b","concat","newFeature","constructor","i","len","addFeature","showPopup","attributeEditor"],"mappings":"AAAAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAGnCJ,GAAGK,OAAOC,MAAMC,oBAAsB,yBACtCP,GAAGK,OAAOC,MAAME,cAAgB,mBAChCR,GAAGK,OAAOC,MAAMG,eAAiB,oBACjCT,GAAGK,OAAOC,MAAMI,iBAAmB,sBACnCV,GAAGK,OAAOC,MAAMK,OAAS,SAEzBX,GAAGC,QAAQW,OAAS,WAGhBZ,GAAGE,QAAQW,MAFEC,KAEUC,WAEvB,IAAKf,GAAGgB,gBAAgBC,mBAAqBC,OAAOC,GAAI,CACpDnB,GAAGoB,QAAQpB,GAAGI,YAAc,yCAC5BJ,GAAGG,WAAWH,GAAGI,YAAc,wCANtBU,KASRO,OAASrB,GAAGsB,KAAKC,QAAO,EAAMvB,GAAGwB,IAAIH,OAAOI,UATpCX,KASoDY,QAAQL,QAT5DP,KAURO,OAAOM,KAVCb,KAUWO,OAAOM,MAAQ,CACnCC,SAXSd,KAWMO,OAAOQ,KAAKD,SAC3BE,UAZShB,KAYOO,OAAOQ,KAAKC,UAC5BC,kBAbSjB,KAaeO,OAAOQ,KAAKE,kBACpCC,kBAdSlB,KAceO,OAAOQ,KAAKG,mBAd3BlB,KAiBRmB,eAAiB,IAjBTnB,KAiBoBoB,MAjBpBpB,KAmBRqB,KAAO,IAAInC,GAAGmC,KAAKlC,QAAQW,OAnBnBE,MAAAA,KAoBRsB,SAA6C,kBApBrCtB,KAoBgBY,QAAQU,UApBxBtB,KAoBuDY,QAAQU,UAGhFpC,GAAGqC,QAAQrC,GAAGC,QAAQW,OAAQZ,GAAGE,UAEjC,WAEI,IAAIoC,EAAWtC,GAAGC,QAAQW,OAAO2B,UAEjCD,EAASJ,MAAQ,aAEjBI,EAASE,SAAW,GACpBF,EAASE,SAASF,EAASJ,OAAS,CAACO,SAAW,CAAC,EAAE,YAAYC,KAAO,SAASC,EAAUC,EAAOC,EAAQC,EAASC,GAAW,IAAIC,EAAiB,MAAVJ,EAAiBA,EAAUD,EAAUM,aAAe,GAAKC,EAAOP,EAAUQ,iBAAkBC,EAAOT,EAAUU,OAAQC,EAAiBX,EAAUW,gBAAkB,SAASC,EAAQC,GAAuB,GAAIC,OAAOlB,UAAUmB,eAAeC,KAAKJ,EAAQC,GAA0B,OAAOD,EAAOC,IAAuD,MAAO,oEAA4EN,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,SAAS,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,QAAa,KAAWd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,SAAS,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,SAAc,iFAAyFd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,yBAAyB,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,QAAa,KAAWd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,yBAAyB,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,SAAc,+EAAuFd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,yBAAyB,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,QAAa,KAAWd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,iBAAiB,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,SAAc,gFAAwFd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,gBAAgB,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,QAAa,KAAWd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,gBAAgB,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,SAAc,+EAAuFd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,iBAAiB,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,QAAa,KAAWd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,iBAAiB,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,SAAc,sGAAgHd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,UAAU,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,QAAa,KAAWd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,UAAU,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,SAAc,kIAA8Id,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,qBAAqB,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,QAAa,sBAA6Bd,EAAOE,EAAkB,MAAVR,EAAiBU,EAAeV,EAAO,YAAcA,EAASA,IAAc,iBAAsBM,EAAOE,EAAkB,MAAVR,EAAiBU,EAAeV,EAAO,aAAeA,EAASA,IAAc,qBAA0BM,EAAOE,EAAkB,MAAVR,EAAiBU,EAAeV,EAAO,qBAAuBA,EAASA,IAAc,MAAWM,EAAOE,EAAkB,MAAVR,EAAiBU,EAAeV,EAAO,qBAAuBA,EAASA,IAAc,gBAAsBM,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,YAAY,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,GAAGC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,QAAa,+DAAyEd,EAAOE,EAAkB,MAAVR,EAAiBU,EAAeV,EAAO,aAAeA,EAASA,IAAc,eAAqBM,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,WAAW,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,GAAGmC,OAAS,GAAGC,IAAM,CAACpC,KAAO,GAAGmC,OAAS,QAAa,2EAAqFd,EAAOE,EAAkB,MAAVR,EAAiBU,EAAeV,EAAO,YAAcA,EAASA,IAAc,wFAAgGsB,SAAU,GACvxJ5B,EAASE,SAASF,EAASJ,MAAQ,SAAW,CAACiC,EAAI,SAASxB,EAAUC,EAAOC,EAAQC,EAASC,GAAW,IAAIC,EAAOL,EAAUU,OAAQH,EAAOP,EAAUQ,iBAAkBG,EAAiBX,EAAUW,gBAAkB,SAASC,EAAQC,GAAuB,GAAIC,OAAOlB,UAAUmB,eAAeC,KAAKJ,EAAQC,GAA0B,OAAOD,EAAOC,IAAuD,MAAO,mDAAwDN,EAAOF,EAAkB,MAAVJ,EAAiBU,EAAeV,EAAO,QAAUA,EAASA,IAAc,4GAAsHM,EAAOF,EAAkB,MAAVJ,EAAiBU,EAAeV,EAAO,QAAUA,EAASA,IAAc,YAAmBM,EAAOF,EAAkB,MAAVJ,EAAiBU,EAAeV,EAAO,SAAWA,EAASA,IAAc,kEAAoEH,SAAW,CAAC,EAAE,YAAYC,KAAO,SAASC,EAAUC,EAAOC,EAAQC,EAASC,GAAW,IAAIqB,EAAQpB,EAAiB,MAAVJ,EAAiBA,EAAUD,EAAUM,aAAe,GAAKC,EAAOP,EAAUQ,iBAAkBG,EAAiBX,EAAUW,gBAAkB,SAASC,EAAQC,GAAuB,GAAIC,OAAOlB,UAAUmB,eAAeC,KAAKJ,EAAQC,GAA0B,OAAOD,EAAOC,IAAuD,MAAO,4CAAmDN,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,gBAAgB,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,GAAGC,IAAM,CAACpC,KAAO,EAAEmC,OAAS,QAAa,iGAAmY,OAA1RI,EAASd,EAAeT,EAAQ,QAAQc,KAAKX,EAAkB,MAAVJ,EAAiBU,EAAeV,EAAO,QAAUA,EAAQ,CAACgB,KAAO,OAAOC,KAAO,GAAGQ,GAAK1B,EAAU2B,QAAQ,EAAGvB,EAAM,GAAGwB,QAAU5B,EAAU6B,KAAKzB,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,EAAEmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,GAAGmC,OAAS,QAAkBI,EAAS,IAAS,kKAA2KlB,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,KAAK,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,GAAGmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,GAAGmC,OAAS,QAAa,6EAAoFd,EAAOI,EAAeT,EAAQ,QAAQc,KAAKX,EAAO,SAAS,CAACY,KAAO,OAAOC,KAAO,GAAGd,KAAOA,EAAKe,IAAM,CAACC,MAAQ,CAAClC,KAAO,GAAGmC,OAAS,IAAIC,IAAM,CAACpC,KAAO,GAAGmC,OAAS,QAAa,yCAA0CE,SAAU,GAE9lF,MAAMO,EAA0B,SAAUC,EAAKC,GAC3CD,EAAIE,WAAWC,SAA+B,IAApBF,EAASG,OACnCJ,EAAIK,aAAaF,SAA+B,IAApBF,EAASG,OACrCJ,EAAIM,SAASH,SAAWF,EAASG,OAAS,EAC1CJ,EAAIO,UAAUJ,SAA6D,IAAlDF,EAASO,OAAOC,GAAuBL,OAChEJ,EAAIU,oBAuDFD,EAAwB,SAAUE,GACpC,IAAIC,GAAS,GACRtF,GAAGuF,QAAQC,cAAgBH,aAAerF,GAAGuF,QAAQC,cACrDxF,GAAGuF,QAAQE,eAAiBJ,aAAerF,GAAGuF,QAAQE,gBACnDJ,EAAIK,SAASZ,OAAS,IACtBQ,GAAS,GAGjB,OAAOA,GAGXhD,EAASqD,SAAW,SAAUC,GAC1B,MAAMC,EAAO/E,KACPwE,EAAStF,GAAGE,QAAQqC,UAAUoD,SAAShC,KAAKkC,EAAMD,GACpDC,EAAKnE,QAAQoE,OACbD,EAAKE,SAASF,EAAKnE,QAAQoE,OAG/BF,EACKI,GAAGhG,GAAGK,OAAOC,MAAM2F,WAAa,IAAMjG,GAAGK,OAAOC,MAAM4F,YAAa,SAAUC,GAC1EC,QAAQC,IAAI,CAACR,EAAKS,WAAYT,EAAKU,kBAAkBC,KAAK,SAAUC,GAChE,MAAMX,EAAQW,EAAQ,GAClBN,EAAEL,QAAUA,GACZD,EAAKa,oBAAmB,OAInCV,GAAGhG,GAAGK,OAAOC,MAAMqG,cAAgB,IAAM3G,GAAGK,OAAOC,MAAMsG,cAAe,SAAUT,GAC/E,MAAML,EAAQK,EAAEL,MACVP,EAAUY,EAAEZ,QAClBa,QAAQC,IAAI,CAACR,EAAKS,WAAYT,EAAKU,kBAAkBC,KAAK,SAAUC,GAChE,GAAIX,IAAUW,EAAQ,GAAI,CAClBlB,EACAM,EAAKgB,iBAAiB,CAACtB,IAGvBM,EAAKgB,mBAETpC,EAAwBoB,EAAMA,EAAKiB,uBACnC,GAAmC,IAA/BjB,EAAKC,MAAMnB,SAASG,OAAc,CAClCe,EAAKa,oBAAmB,GACxBb,EAAKkB,aAAY,SAKhCf,GAAGhG,GAAGK,OAAOC,MAAM0G,YAAa,SAAUb,GACvC,MAAML,EAAQK,EAAEL,MAChBM,QAAQC,IAAI,CAACR,EAAKS,WAAYT,EAAKU,kBAAkBC,KAAK,SAAUC,GAC5DX,IAAUW,EAAQ,IAClBhC,EAAwBoB,EAAMA,EAAKiB,2BAKnDjB,EAAKG,GAAGhG,GAAGK,OAAOC,MAAMG,eAAiB,IAAMT,GAAGK,OAAOC,MAAMI,iBAAkB,WAC7E,MAAMuG,EAAmBpB,EAAKiB,sBAC9BrC,EAAwBoB,EAAMoB,GACHpB,EAAKC,MAAMnB,SAASO,OAAO,SAAUK,GAC5D,OAAO0B,EAAiBC,QAAQ3B,GAAW,IAE5B4B,QAAQ,SAAU5B,GACjCA,EAAQ6B,qBAAoB,KAEhCH,EAAiBE,QAAQ,SAAU5B,GAC/BA,EAAQ6B,qBAAoB,KAG3BvB,EAAKwB,4BAA4BC,UAAUC,SAASvH,GAAGK,OAAOmH,QAAQC,SACvE5B,EAAK6B,oBAEJT,EAAiBnC,QAClBe,EAAK8B,oBAIb,OAAOrC,GAGXhD,EAASsF,OAAS,SAAUC,GACxB,MAAMhC,EAAO/E,KAEPgH,EAAiB,WACnBjC,EAAKkC,WAAalC,EAAKmC,IAAIC,cAAc,IAAMpC,EAAK3D,MAAQ,eAC5D2D,EAAKkC,WAAWG,iBAAiBlI,GAAGK,OAAOC,MAAM6H,MAAO,SAAUhC,GACzDA,EAAEiC,OAAOvD,WACNgB,EAAKwC,SACLxC,EAAKyC,aAGLzC,EAAK0C,aAGd,CAAEC,SAAS,IACd3C,EAAKjB,WAAaiB,EAAKmC,IAAIC,cAAc,IAAMpC,EAAK3D,MAAQ,eAC5D2D,EAAKjB,WAAWsD,iBAAiBlI,GAAGK,OAAOC,MAAM6H,MAAO,WACpDtC,EAAK4C,0BACN,CAAED,SAAS,IACd3C,EAAK6C,SAAW7C,EAAKmC,IAAIC,cAAc,IAAMpC,EAAK3D,MAAQ,aAC1D2D,EAAK6C,SAASR,iBAAiBlI,GAAGK,OAAOC,MAAM6H,MAAO,WAClDtC,EAAKkB,aAAalB,EAAK8C,aACxB,CAAEH,SAAS,IACd3C,EAAKb,SAAWa,EAAKmC,IAAIC,cAAc,IAAMpC,EAAK3D,MAAQ,aAC1D2D,EAAKZ,UAAYY,EAAKmC,IAAIC,cAAc,IAAMpC,EAAK3D,MAAQ,cAC3D2D,EAAKd,aAAec,EAAKmC,IAAIC,cAAc,IAAMpC,EAAK3D,MAAQ,aAC9D2D,EAAKd,aAAamD,iBAAiBlI,GAAGK,OAAOC,MAAM6H,MAAO,WACtDtC,EAAK+C,oBACN,CAAEJ,SAAS,IACd3C,EAAKgD,WAAahD,EAAKmC,IAAIC,cAAc,SAAWpC,EAAK3D,MAAQ,QACjE2D,EAAKgD,WAAWX,iBAAiB,QAAS,SAAU/B,GAChDN,EAAKiD,cAAc3C,EAAEiC,OAAOW,SAEhClD,EAAKmD,cAAgBnD,EAAKmC,IAAIC,cAAc,IAAMpC,EAAK3D,MAAQ,UAE/D2D,EAAKoD,iBAAmBpD,EAAKmC,IAAIC,cAAcpC,EAAK5D,eAAiB,UACrE4D,EAAKoD,iBAAiBf,iBAAiBlI,GAAGK,OAAOC,MAAMK,OAAQ,SAAUwF,GACrEN,EAAKqD,aAAa/C,EAAEiC,OAAOW,SAG/BlD,EAAKsD,kBAAoBtD,EAAKmC,IAAIC,cAAc,IAAMpC,EAAK3D,MAAQ,UACnE2D,EAAKsD,kBAAkBjB,iBAAiBlI,GAAGK,OAAOC,MAAMK,OAAQ,SAAUwF,GACtEN,EAAKuD,YAAYjD,EAAEiC,OAAOW,SAG9BlD,EAAKwD,mBAAqBxD,EAAKmC,IAAIC,cAAc,IAAMpC,EAAK3D,MAAQ,SAEhElC,GAAGsB,KAAKgI,WAAWzB,IACnBA,KAIF0B,EAAe,CACjB3H,SAAUiE,EAAKxE,OAAOM,KAAKC,SAC3BE,UAAW+D,EAAKxE,OAAOM,KAAKG,UAC5BC,kBAAmB8D,EAAKxE,OAAOM,KAAKI,kBACpCC,kBAAmB6D,EAAKxE,OAAOM,KAAKK,mBAoCxC,OAhCIhC,GAAGgB,gBAAgBC,iBACT4E,EAAK2D,qBAAqB3D,EAAK4D,WAAWF,EAAczB,IAIxDjC,EAAK2D,qBAAqB3D,EAAK4D,WAAWF,EAAc,WAC9D,MAAMG,EAAQ7D,EAAKmC,IAAIC,cAAc,qBACrCyB,EAAMC,MAAMC,gBAAkBF,EAAMX,MACpCW,EAAMC,MAAME,MAAQ,cACpB,MAAMC,EAAS,IAAI3I,GAAGuI,EAAO,QAASK,SAASC,MAE/CN,EAAMO,QAAU,SAAU9D,GACtBA,EAAE+D,kBAINR,EAAMS,QAAU,SAAUhE,GACtBrF,KAAKsJ,QAGTV,EAAMW,SAAW,SAAUlE,GACvBrF,KAAK6I,MAAMC,gBAAkB9I,KAAKiI,OAEtClD,EAAKD,IAAI0E,OAAO,WACZR,EAAO9D,GAAG,SAAU,SAAU6D,GAC1BhE,EAAKqD,aAAa,IAAMW,OAIhC/B,QAMZxF,EAASiG,SAAW,WACHzH,KACRiH,WAAWT,UAAUiD,IAAIvK,GAAGK,OAAOmH,QAAQgD,QAChDxK,GAAGE,QAAQqC,UAAUgG,SAAS5E,KAFjB7C,MAAAA,KAGRqB,KAAKoG,SAHGzH,KAGW2J,OAG5BnI,EAASgG,WAAa,WAClB,MAAMzC,EAAO/E,KACbd,GAAGE,QAAQqC,UAAU+F,WAAW3E,KAAKkC,GACjCA,EAAKkC,YACLtD,EAAwBoB,EAAM,IAE9BA,EAAK1D,MACL0D,EAAK1D,KAAKmG,aAGd,GAAIzC,EAAKkC,WAAY,CACjBlC,EAAKkC,WAAWT,UAAUoD,OAAO1K,GAAGK,OAAOmH,QAAQgD,QAC/C3E,EAAKC,OACLD,EAAKC,MAAMnB,SAASwC,QAAQ,SAAU5B,GAClCA,EAAQ6B,qBAAoB,OAO5C9E,EAASqI,MAAQ,WACb,MAAM9E,EAAO/E,KACT+E,EAAKC,OACLD,EAAKC,MAAM8E,eAEf,OAAO/E,GAGXvD,EAASuI,YAAc,WACnB,OAAO,GAGXvI,EAAS2B,IAAM,WACEnD,KACRqB,KAAK8B,MACV,OAFanD,MAKjBwB,EAASwI,QAAU,SAAUL,EAAMlC,GAC/B,MAAM1C,EAAO/E,KAET2J,IACA5E,EAAK4E,KAAOA,GAEhB,GAAIlC,GAAYkC,EAAM,CACd5E,EAAKC,OACLD,EAAKC,MAAMF,IAAImF,cAAclF,EAAKC,OAEtCD,EAAK0C,gBAGL1C,EAAKyC,aAET,OAAOzC,GAGXvD,EAASgE,SAAW,WAGhB,OAFWxF,KAEFY,SAAyC,kBAFvCZ,KAEqBY,QAAQoE,QAF7BhF,KAE0DY,QAAQoE,MAClEM,QAAQ4E,QAAQ,MAHhBlK,KAKFgF,MACEM,QAAQ4E,QANRlK,KAMqBgF,OANrBhF,KAQCmK,eAGhB3I,EAASyD,SAAW,SAAUD,GAC1B,MAAMD,EAAO/E,KACb,GAAI+E,EAAKD,IAAK,CACVC,EAAKqF,oBAAoB,IACzBrF,EAAKoF,cAAgB,IAAI7E,QAAQ,SAAU4E,EAASG,GAChD,GAAuB,iBAAZ,EACPtF,EAAKD,IAAI0E,OAAO,WACZzE,EAAKC,MAAQD,EAAKD,IAAIU,SAASR,GAC/BkF,EAAQnF,EAAKC,aAGhB,CACDD,EAAKC,MAAQA,EACbkF,EAAQnF,EAAKC,UAGrBM,QAAQC,IAAI,CAACR,EAAKoF,cAAepF,EAAKU,kBAAkBC,KAAK,SAAU4E,GACnE,MAAMtF,EAAQsF,EAAK,GACnBvF,EAAKa,mBAAmBZ,GAASA,EAAMnB,SAASG,OAAS,OAKrExC,EAASoE,mBAAqB,SAAU2E,GACvBvK,KACRiH,WAAWlD,UAAYwG,EADfvK,KAER4H,SAAS7D,UAAYwG,GAG9B/I,EAASwE,oBAAsB,WAC3B,OAAOhG,KAAKqB,KAAK2E,uBAGrBxE,EAAS4I,oBAAsB,SAAUvG,GACrC,MACMW,EADOxE,KACOqB,KAAK+I,oBAAoBvG,GADhC7D,KAERsE,mBACL,OAAOE,GAGXhD,EAASgJ,kBAAoB,WACzB,MAAMzF,EAAO/E,KACPwE,EAASO,EAAKiB,uBACfxB,EAAOR,QAAUe,EAAKC,MAAMnB,SAASG,QACtCQ,EAAOiG,KAAK1F,EAAKC,MAAMnB,SAASkB,EAAKC,MAAMnB,SAASG,OAAS,IAEjE,OAAOQ,GAGXhD,EAASuE,iBAAmB,SAAUlC,GAClCA,EAAWA,GAAY,GACvB7D,KAAKqB,KAAK0E,iBAAiBlC,EAASiB,IAAI,SAAU4F,GAC9C,OAAOA,EAAKrJ,KAAKoD,WAErB,OAAOzE,MAGXwB,EAASmG,uBAAyB,WAC9B,MAAM5C,EAAO/E,KACP6D,EAAWkB,EAAKiB,sBACtBjB,EAAK1D,KAAK0E,iBAAiBlC,GAC3BA,EAASwC,QAAQ,SAAU5B,GACvBM,EAAKC,MAAM2F,cAAclG,GACzBM,EAAK6F,QAAQ1L,GAAGK,OAAOC,MAAMqG,cAAe,CAAEpB,QAASA,MAE3D,OAAOM,GAGXvD,EAASqJ,cAAgB,SAAUpG,EAASqG,GAExC,IAAItG,EACJ,MAAMuG,EAFO/K,KAEU8E,IAAIlE,QAAQL,OAAOI,UAC1C,QAAQ,GACJ,KAAKzB,GAAGuF,QAAQuG,SAAWvG,aAAmBvF,GAAGuF,QAAQuG,QACzD,KAAK9L,GAAGuF,QAAQC,cAAgBD,aAAmBvF,GAAGuF,QAAQC,aAC1DF,EAAStF,GAAGsB,KAAKC,OAAO,GAAIsK,EAAUE,SACtC,MACJ,KAAK/L,GAAGuF,QAAQyG,OAASzG,aAAmBvF,GAAGuF,QAAQyG,MACvD,KAAKhM,GAAGuF,QAAQ0G,YAAc1G,aAAmBvF,GAAGuF,QAAQ0G,WACxD3G,EAAStF,GAAGsB,KAAKC,OAAO,GAAIsK,EAAUK,OACtC,MACJ,QACI5G,EAAStF,GAAGsB,KAAKC,OAAO,GAAIsK,EAAUhK,MAG9C,MAAM8H,EAAQpE,EAAQ4G,WACtB,GAAIxC,EAAMyC,MAAO,CACb9G,EAAO8G,MAAQzC,EAAMyC,MACrB9G,EAAO1D,SAAW+H,EAAM/H,SACxB0D,EAAOxD,UAAY6H,EAAM7H,UACzBwD,EAAOvD,kBAAoB4H,EAAM5H,kBACjCuD,EAAOtD,kBAAoB2H,EAAM3H,kBAErC,OAAOsD,GAGXhD,EAASyE,YAAc,SAAUsE,GAC7B,MAAMxF,EAAO/E,KACb+E,EAAK8C,WAAa0C,EAClB,GAAIA,EAAQ,CACRxF,EAAK6C,SAASpB,UAAUiD,IAAIvK,GAAGK,OAAOmH,QAAQgD,OAAQa,GACtDxF,EAAKmD,cAAc1B,UAAUoD,OAAO1K,GAAGK,OAAOmH,QAAQC,YAErD,CACD5B,EAAK6C,SAASpB,UAAUoD,OAAO1K,GAAGK,OAAOmH,QAAQgD,OAAQa,GACzDxF,EAAKmD,cAAc1B,UAAUiD,IAAIvK,GAAGK,OAAOmH,QAAQC,QAEvD5B,EAAKT,mBACL,OAAOS,GAGXvD,EAAS+J,kBAAoB,SAAUxC,EAAOyC,GAC1C,MAAMzG,EAAO/E,UACCyL,IAAV1C,IACAA,EAAQhE,EAAKxE,OAAOM,KAAKG,WAE7B+H,EAAQ7J,GAAGsB,KAAKkL,mBAAmB3C,GACnCyC,EAAeA,GAAgBzG,EAAK4G,qBAAqB5C,GACzDhE,EAAKU,gBAAgBC,KAAK,WACtBX,EAAKoD,iBAAiBF,MAAQc,EAC9BhE,EAAKgD,WAAWc,MAAME,MAAQA,EAC9BhE,EAAKgD,WAAWc,MAAM+C,WAAa,OAAS7G,EAAKxE,OAAOM,KAAKK,kBAAoB,MAAQsK,EACzF,IAAKtM,GAAGgB,gBAAgBC,iBAAkB,CACtC4E,EAAKoD,iBAAiBU,MAAMC,gBAAkBC,EAC9ChE,EAAKoD,iBAAiBmB,UAG9B,OAAOvE,GAGXvD,EAAS4G,aAAe,SAAUW,GAC9B,MAAMhE,EAAO/E,KACb+E,EAAKxE,OAAOM,KAAKG,UAAY+H,EAC7BhE,EAAKxE,OAAOM,KAAKI,kBAAoB8D,EAAK4G,qBAAqB5C,GAC/DhE,EAAKwG,kBAAkBxC,EAAOhE,EAAKxE,OAAOM,KAAKI,mBAC9B8D,EAAKyF,oBACbnE,QAAQ,SAAU5B,GACvB,MAAMoE,EAAQpE,EAAQ4G,WACtBxC,EAAM7H,UAAY+H,EAClBF,EAAM5H,kBAAoB8D,EAAKxE,OAAOM,KAAKI,kBAC3CwD,EAAQoH,SAAShD,KAErB,OAAO9D,GAGXvD,EAASsK,iBAAmB,SAAUC,GAClC,MAAMhH,EAAO/E,UACAyL,IAATM,IACAA,EAAOhH,EAAKxE,OAAOM,KAAKC,UAE5B,MAAMkL,EAAYC,SAASF,GACvBC,IAAcE,OAAOC,KACrBpH,EAAKU,gBAAgBC,KAAK,WACtBX,EAAKsD,kBAAkBJ,MAAQ+D,EAC/BjH,EAAKgD,WAAWc,MAAM/H,SAAWkL,EAAY,OAGrD,OAAOjH,GAGXvD,EAAS8G,YAAc,SAAUyD,GAC7B,MAAMhH,EAAO/E,KACPgM,EAAYC,SAASF,GAC3B,GAAIC,IAAcE,OAAOC,IAAK,CAC1BpH,EAAKxE,OAAOM,KAAKC,SAAWkL,EAC5BjH,EAAK+G,iBAAiBE,GACLjH,EAAKyF,oBACbnE,QAAQ,SAAU5B,GACvB,MAAMoE,EAAQpE,EAAQ4G,WACtBxC,EAAM/H,SAAWkL,EACjBvH,EAAQoH,SAAShD,KAGzB,OAAO9D,GAGXvD,EAASmK,qBAAuB,SAAU3K,GACtC,GAAIA,EAAW,CAEX,MAAMoL,GADNpL,EAAY9B,GAAGsB,KAAKkL,mBAAmB1K,IACPqL,MAAM,sCAClCD,GAAiBA,EAAcpI,SAC/BhD,EAAY,IAAMoL,EAAc,GAAKA,EAAc,GAAKA,EAAc,GAAKA,EAAc,GAAKA,EAAc,GAAKA,EAAc,IAEnI,MAAME,EAAetL,EAAUqL,MAAM,+CACrC,GAAIC,GAAgBA,EAAatI,OAAQ,CAIrC,OAHUiI,SAASK,EAAa,GAAI,IAC1BL,SAASK,EAAa,GAAI,IAC1BL,SAASK,EAAa,GAAI,KACf,EAAI,IAAM,UAAY,WAGnD,MAAO,WAGX9K,EAAS8C,iBAAmB,WACxB,MAAMS,EAAO/E,KACP6D,EAAWkB,EAAKiB,sBACtB,IAAInF,EACAkL,EACAhD,EACJ,GAAIhE,EAAKwC,UAAY1D,EAASG,OAAQ,CAClC,MACM6E,EADUhF,EAASA,EAASG,OAAS,GACrBqH,WACtBxK,EAAOgI,EAAMyC,MACbvC,EAAQF,EAAM7H,UACd+K,EAAOlD,EAAM/H,aAEZ,CACDD,EAAO,GACPkI,EAAQhE,EAAKxE,OAAOM,KAAKG,UACzB+K,EAAOhH,EAAKxE,OAAOM,KAAKC,SAE5BiE,EAAKU,gBAAgBC,KAAK,WACtBX,EACK+G,iBAAiBC,GACjBR,kBAAkBxC,GAClBhB,WAAWE,MAAQpH,GAAQ,KAEpC,OAAOkE,GAGXvD,EAASwG,cAAgB,SAAUnH,GAC/B,MAAMkE,EAAO/E,KACP6D,EAAWkB,EAAKyF,oBACtB,GAAI3G,EAASG,OAAQ,CACjB,MAAM6E,EAAQhF,EAAS,GAAGwH,WAC1BxH,EAASwC,QAAQ,SAAU5B,GACvB,MAAM8H,EAAYrN,GAAGsB,KAAKC,OAAO,GAAIsE,EAAKxE,OAAOM,KAAMgI,GACvDA,EAAMyC,MAAQzK,EACdgI,EAAM2D,YAAcD,EAAUC,YAC9B3D,EAAM7H,UAAYuL,EAAUvL,UAC5B6H,EAAM/H,SAAWyL,EAAUzL,SAC3B+H,EAAM5H,kBAAoBsL,EAAUtL,kBACpC4H,EAAM3H,kBAAoBqL,EAAUrL,kBACpCuD,EAAQoH,SAAShD,KAGzB,OAAO9D,GAGXvD,EAAS+E,0BAA4B,WACjC,OAAOvG,KAAKuI,oBAGhB/G,EAASoF,kBAAoB,WACzB,MAAM7B,EAAO/E,KACPmG,EAAmBpB,EAAKiB,sBACxBvB,EAAU0B,EAAiBA,EAAiBnC,OAAS,GACvDS,GACAM,EAAK0H,gBAAgB1H,EAAK3D,MAAQ,QAAS,CAAEa,KAAMwC,EAAQiI,WAAa,SAAUC,GAC9E,MAAMC,EAAoB7H,EAAKwB,4BAC/BqG,EAAkBC,UAAYF,EAC9BC,EAAkBpG,UAAUoD,OAAO1K,GAAGK,OAAOmH,QAAQC,QACrD5B,EAAKd,aAAauC,UAAUiD,IAAIvK,GAAGK,OAAOmH,QAAQgD,QAElDkD,EAAkBzF,iBAAiBpC,EAAK3D,qBAAqBgG,iBAAiBlI,GAAGK,OAAOC,MAAM6H,MAAO,SAAUhC,GAC3GN,EAAK+H,aACN,CAAEpF,SAAS,IAEdkF,EAAkBzF,kBAAkBpC,EAAKgI,cAAc3L,yBAAyBgG,iBAAiBlI,GAAGK,OAAOC,MAAM6H,MAAO,WACpHtC,EAAK8B,mBACN,CAAEa,SAAS,OAK1BlG,EAASqF,gBAAkB,WACV7G,KACRuI,mBAAmB/B,UAAUiD,IAAIvK,GAAGK,OAAOmH,QAAQC,QAD3C3G,KAERiE,aAAauC,UAAUoD,OAAO1K,GAAGK,OAAOmH,QAAQgD,SAGzDlI,EAASsG,iBAAmB,WACxB,MAAM/C,EAAO/E,KACT+E,EAAKd,aAAauC,UAAUwG,OAAO9N,GAAGK,OAAOmH,QAAQgD,QACrD3E,EAAK6B,oBAGL7B,EAAK8B,mBAIbrF,EAASsL,UAAY,WACjB,MAAM/H,EAAO/E,KACPyE,EAAUM,EAAKiB,sBAAsB,GAC3C,GAAIvB,EAAS,CACT,MAAMxC,EAAO,GACb8C,EAAKwB,4BAA4B0G,iBAAiB,SAAS5G,QAAQ,SAAUuC,GACzE3G,EAAK2G,EAAMsE,aAAa,SAAWtE,EAAMX,QAE7CxD,EAAQ0I,QAAQlL,GAChB8C,EAAK6F,QAAQ1L,GAAGK,OAAOC,MAAME,cAAe,CAAE+E,QAASA,EAASO,MAAOD,EAAKC,QAC5ED,EAAK8B,oBAIbrF,EAAS4L,aAAe,SAAUvJ,GAC9B,MAAMkB,EAAO/E,KACb,GAAI+E,EAAKsI,eAAiBnO,GAAGK,OAAO+N,KAAKC,eACrCxI,EAAKsI,eAAiBnO,GAAGK,OAAO+N,KAAKE,cACrCzI,EAAKsI,eAAiBnO,GAAGK,OAAO+N,KAAKG,WAAY,CACjD1I,EAAK2I,yBAA2B,GAChC,GAAI7J,EAASG,OAAS,EAAG,CASrB,IARA,IAII2J,EAJa9J,EAASiB,IAAI,SAAUP,GACpCQ,EAAK2I,yBAAyBjD,KAAKlG,EAAImI,WACvC,OAAOnI,EAAIK,WAEcgJ,OAAO,SAAUC,EAAGC,GAC7C,OAAOD,EAAEE,OAAOD,KAEhBE,EAAa,IAAInK,EAAS,GAAGoK,YAAYN,GACpCO,EAAI,EAAGC,EAAMtK,EAASG,OAAQkK,EAAIC,EAAKD,IAAK,CACjD,IAAIzJ,EAAUZ,EAASqK,GACvBnJ,EAAKC,MAAM2F,cAAclG,GACzBM,EAAK6F,QAAQ1L,GAAGK,OAAOC,MAAMqG,cAAe,CAAEpB,QAASA,IAE3DM,EAAKC,MAAMoJ,WAAWJ,GAAYtI,KAAK,SAAUgF,GAC7C3F,EAAKqF,oBAAoB,CAAC4D,IAC1BjJ,EAAK6F,QAAQ1L,GAAGK,OAAOC,MAAM2F,WAAY,CAAEV,QAASiG,IACpDA,EAAK2D,UAAUtJ,EAAKuJ,mBAG5B3K,EAAwBoB,EAAM,CAACiJ,MAloB3C","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.Consts.event.BEFOREFEATUREMODIFY = \"beforefeaturemodify.tc\";\r\nTC.Consts.event.FEATUREMODIFY = \"featuremodify.tc\";\r\nTC.Consts.event.FEATURESSELECT = \"featuresselect.tc\";\r\nTC.Consts.event.FEATURESUNSELECT = \"featuresunselect.tc\";\r\nTC.Consts.event.CHANGE = 'change';\r\n\r\nTC.control.Modify = function () {\r\n    const self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    if (!TC.browserFeatures.inputTypeColor() && !window.CP) {\r\n        TC.loadCSS(TC.apiLocation + 'lib/color-picker/color-picker.min.css');\r\n        TC.syncLoadJS(TC.apiLocation + 'lib/color-picker/color-picker.min.js');\r\n    }\r\n\r\n    self.styles = TC.Util.extend(true, TC.Cfg.styles.selection, self.options.styles);\r\n    self.styles.text = self.styles.text || {\r\n        fontSize: self.styles.line.fontSize,\r\n        fontColor: self.styles.line.fontColor,\r\n        labelOutlineColor: self.styles.line.labelOutlineColor,\r\n        labelOutlineWidth: self.styles.line.labelOutlineWidth\r\n    };\r\n\r\n    self._classSelector = '.' + self.CLASS;\r\n\r\n    self.wrap = new TC.wrap.control.Modify(self);\r\n    self.snapping = (typeof self.options.snapping === 'boolean') ? self.options.snapping : true;\r\n};\r\n\r\nTC.inherit(TC.control.Modify, TC.Control);\r\n\r\n(function () {\r\n\r\n    var ctlProto = TC.control.Modify.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-mod';\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/tc-ctl-mod.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-attr'] = TC.apiLocation + \"TC/templates/tc-ctl-mod-attr.hbs\";\r\n\r\n    const setFeatureSelectedState = function (ctl, features) {\r\n        ctl._deleteBtn.disabled = features.length === 0;\r\n        ctl._editAttrBtn.disabled = features.length !== 1;\r\n        ctl._joinBtn.disabled = features.length < 2;\r\n        ctl._splitBtn.disabled = features.filter(complexGeometryFilter).length === 0;\r\n        ctl.displayLabelText();\r\n    };\r\n\r\n    //const styleFunction = function (feature, mapStyles) {\r\n    //    var result;\r\n    //    switch (true) {\r\n    //        case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n    //        case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n    //            result = TC.Util.extend({}, mapStyles.polygon);\r\n    //            break;\r\n    //        case TC.feature.Point && feature instanceof TC.feature.Point:\r\n    //        case TC.feature.MultiPoint && feature instanceof TC.feature.MultiPoint:\r\n    //            result = TC.Util.extend({}, mapStyles.point);\r\n    //            break;\r\n    //        default:\r\n    //            result = TC.Util.extend({}, mapStyles.line);\r\n    //            break;\r\n    //    }\r\n    //    const style = feature.getStyle();\r\n    //    if (style.label) {\r\n    //        result.label = style.label;\r\n    //        result.fontSize = style.fontSize;\r\n    //        result.fontColor = style.fontColor;\r\n    //        result.labelOutlineColor = style.labelOutlineColor;\r\n    //        result.labelOutlineWidth = style.labelOutlineWidth;\r\n    //    }\r\n    //    return result;\r\n    //};\r\n\r\n    //const setFeatureSelectedStyle = function (ctl, features) {\r\n    //    const mapStyles = ctl.map.options.styles.selection;\r\n    //    features.forEach(function (feature) {\r\n    //        feature._originalStyle = TC.Util.extend({}, feature.getStyle());\r\n    //        feature.setStyle(ctl.styleFunction(feature));\r\n    //    });\r\n    //};\r\n\r\n    //const setFeatureUnselectedStyle = function (ctl, features) {\r\n    //    features.forEach(function (feature) {\r\n    //        if (feature._originalStyle) {\r\n    //            const style = feature.getStyle();\r\n    //            if (style.label) {\r\n    //                const originalStyle = feature._originalStyle;\r\n    //                originalStyle.label = style.label;\r\n    //                originalStyle.fontSize = style.fontSize;\r\n    //                originalStyle.fontColor = style.fontColor;\r\n    //                originalStyle.labelOutlineColor = style.labelOutlineColor;\r\n    //                originalStyle.labelOutlineWidth = style.labelOutlineWidth;\r\n    //            }\r\n    //            feature.setStyle(feature._originalStyle);\r\n    //            feature._originalStyle = undefined;\r\n    //        }\r\n    //    })\r\n    //};\r\n\r\n    const complexGeometryFilter = function (elm) {\r\n        var result = false;\r\n        if ((TC.feature.MultiPolygon && elm instanceof TC.feature.MultiPolygon) ||\r\n            (TC.feature.MultiPolyline && elm instanceof TC.feature.MultiPolyline)) {\r\n            if (elm.geometry.length > 1) {\r\n                result = true;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n        if (self.options.layer) {\r\n            self.setLayer(self.options.layer);\r\n        }\r\n\r\n        map\r\n            .on(TC.Consts.event.FEATUREADD + ' ' + TC.Consts.event.FEATURESADD, function (e) {\r\n                Promise.all([self.getLayer(), self.renderPromise()]).then(function (objects) {\r\n                    const layer = objects[0];\r\n                    if (e.layer === layer) {\r\n                        self.setSelectableState(true);\r\n                    }\r\n                });\r\n            })\r\n            .on(TC.Consts.event.FEATUREREMOVE + ' ' + TC.Consts.event.FEATURESCLEAR, function (e) {\r\n                const layer = e.layer;\r\n                const feature = e.feature;\r\n                Promise.all([self.getLayer(), self.renderPromise()]).then(function (objects) {\r\n                    if (layer === objects[0]) {\r\n                        if (feature) {\r\n                            self.unselectFeatures([feature]);\r\n                        }\r\n                        else {\r\n                            self.unselectFeatures();\r\n                        }\r\n                        setFeatureSelectedState(self, self.getSelectedFeatures());\r\n                        if (self.layer.features.length === 0) {\r\n                            self.setSelectableState(false);\r\n                            self.setTextMode(false);\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .on(TC.Consts.event.LAYERUPDATE, function (e) {\r\n                const layer = e.layer;\r\n                Promise.all([self.getLayer(), self.renderPromise()]).then(function (objects) {\r\n                    if (layer === objects[0]) {\r\n                        setFeatureSelectedState(self, self.getSelectedFeatures());\r\n                    }\r\n                });\r\n            });\r\n\r\n        self.on(TC.Consts.event.FEATURESSELECT + ' ' + TC.Consts.event.FEATURESUNSELECT, function () {\r\n            const selectedFeatures = self.getSelectedFeatures();\r\n            setFeatureSelectedState(self, selectedFeatures);\r\n            const unselectedFeatures = self.layer.features.filter(function (feature) {\r\n                return selectedFeatures.indexOf(feature) < 0;\r\n            });\r\n            unselectedFeatures.forEach(function (feature) {\r\n                feature.toggleSelectedStyle(false);\r\n            });\r\n            selectedFeatures.forEach(function (feature) {\r\n                feature.toggleSelectedStyle(true);\r\n            });\r\n\r\n            if (!self.getAttributeDisplayTarget().classList.contains(TC.Consts.classes.HIDDEN)) {\r\n                self.displayAttributes();\r\n            }\r\n            if (!selectedFeatures.length) {\r\n                self.closeAttributes();\r\n            }\r\n        });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n\r\n        const renderCallback = function () {\r\n            self._selectBtn = self.div.querySelector('.' + self.CLASS + '-btn-select');\r\n            self._selectBtn.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                if (!e.target.disabled) {\r\n                    if (self.isActive) {\r\n                        self.deactivate();\r\n                    }\r\n                    else {\r\n                        self.activate();\r\n                    }\r\n                }\r\n            }, { passive: true });\r\n            self._deleteBtn = self.div.querySelector('.' + self.CLASS + '-btn-delete');\r\n            self._deleteBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.deleteSelectedFeatures();\r\n            }, { passive: true });\r\n            self._textBtn = self.div.querySelector('.' + self.CLASS + '-btn-text');\r\n            self._textBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.setTextMode(!self.textActive);\r\n            }, { passive: true });\r\n            self._joinBtn = self.div.querySelector('.' + self.CLASS + '-btn-join');\r\n            self._splitBtn = self.div.querySelector('.' + self.CLASS + '-btn-split');\r\n            self._editAttrBtn = self.div.querySelector('.' + self.CLASS + '-btn-attr');\r\n            self._editAttrBtn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.toggleAttributes();\r\n            }, { passive: true });\r\n            self._textInput = self.div.querySelector('input.' + self.CLASS + '-txt');\r\n            self._textInput.addEventListener('input', function (e) {\r\n                self.labelFeatures(e.target.value);\r\n            });\r\n            self._styleSection = self.div.querySelector('.' + self.CLASS + '-style');\r\n\r\n            self._fontColorPicker = self.div.querySelector(self._classSelector + '-fnt-c');\r\n            self._fontColorPicker.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                self.setFontColor(e.target.value);\r\n            });\r\n\r\n            self._fontSizeSelector = self.div.querySelector('.' + self.CLASS + '-fnt-s');\r\n            self._fontSizeSelector.addEventListener(TC.Consts.event.CHANGE, function (e) {\r\n                self.setFontSize(e.target.value);\r\n            });\r\n\r\n            self._attributesSection = self.div.querySelector('.' + self.CLASS + '-attr');\r\n\r\n            if (TC.Util.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        };\r\n\r\n        const renderObject = {\r\n            fontSize: self.styles.text.fontSize,\r\n            fontColor: self.styles.text.fontColor,\r\n            labelOutlineColor: self.styles.text.labelOutlineColor,\r\n            labelOutlineWidth: self.styles.text.labelOutlineWidth\r\n        };\r\n\r\n        var promise;\r\n        if (TC.browserFeatures.inputTypeColor()) {\r\n            promise = self._set1stRenderPromise(self.renderData(renderObject, renderCallback));\r\n        }\r\n        else {\r\n            // El navegador no soporta input[type=color], usamos polyfill\r\n            promise = self._set1stRenderPromise(self.renderData(renderObject, function () {\r\n                const input = self.div.querySelector('input[type=color]');\r\n                input.style.backgroundColor = input.value;\r\n                input.style.color = 'transparent';\r\n                const picker = new CP(input, 'click', document.body);\r\n\r\n                input.onclick = function (e) {\r\n                    e.preventDefault();\r\n                };\r\n\r\n                // Evitamos que salga el teclado virtual en iOS\r\n                input.onfocus = function (e) {\r\n                    this.blur();\r\n                };\r\n\r\n                input.onchange = function (e) {\r\n                    this.style.backgroundColor = this.value;\r\n                };\r\n                self.map.loaded(function () {\r\n                    picker.on(\"change\", function (color) {\r\n                        self.setFontColor('#' + color);\r\n                    });\r\n                });\r\n\r\n                renderCallback();\r\n            }));\r\n        }\r\n        return promise;\r\n    };\r\n\r\n    ctlProto.activate = function () {\r\n        const self = this;\r\n        self._selectBtn.classList.add(TC.Consts.classes.ACTIVE);\r\n        TC.Control.prototype.activate.call(self);\r\n        self.wrap.activate(self.mode);\r\n    };\r\n\r\n    ctlProto.deactivate = function () {\r\n        const self = this;\r\n        TC.Control.prototype.deactivate.call(self);\r\n        if (self._selectBtn) {\r\n            setFeatureSelectedState(self, []);\r\n        }\r\n        if (self.wrap) {\r\n            self.wrap.deactivate();\r\n        }\r\n        //self.trigger(TC.Consts.event.DRAWCANCEL, { ctrl: self });\r\n        if (self._selectBtn) {\r\n            self._selectBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n            if (self.layer) {\r\n                self.layer.features.forEach(function (feature) {\r\n                    feature.toggleSelectedStyle(false);\r\n                });\r\n            }\r\n            //setFeatureUnselectedStyle(self, self.getSelectedFeatures());\r\n        }\r\n    };\r\n\r\n    ctlProto.clear = function () {\r\n        const self = this;\r\n        if (self.layer) {\r\n            self.layer.clearFatures();\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.isExclusive = function () {\r\n        return true;\r\n    };\r\n\r\n    ctlProto.end = function () {\r\n        const self = this;\r\n        self.wrap.end();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setMode = function (mode, activate) {\r\n        const self = this;\r\n\r\n        if (mode)\r\n            self.mode = mode;\r\n\r\n        if (activate && mode) {\r\n            if (self.layer) {\r\n                self.layer.map.putLayerOnTop(self.layer);\r\n            }\r\n            self.activate();\r\n        }\r\n        else {\r\n            self.deactivate();\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getLayer = function () {\r\n        var self = this;\r\n        // Se ha instanciado un control sin capa asociada\r\n        if (self.options && typeof self.options.layer === 'boolean' && !self.options.layer) {\r\n            return Promise.resolve(null);\r\n        }\r\n        if (self.layer) {\r\n            return Promise.resolve(self.layer);\r\n        }\r\n        return self._layerPromise;\r\n    };\r\n\r\n    ctlProto.setLayer = function (layer) {\r\n        const self = this;\r\n        if (self.map) {\r\n            self.setSelectedFeatures([]);\r\n            self._layerPromise = new Promise(function (resolve, reject) {\r\n                if (typeof (layer) === \"string\") {\r\n                    self.map.loaded(function () {\r\n                        self.layer = self.map.getLayer(layer);\r\n                        resolve(self.layer);\r\n                    });\r\n                }\r\n                else {\r\n                    self.layer = layer;\r\n                    resolve(self.layer);\r\n                }\r\n            });\r\n            Promise.all([self._layerPromise, self.renderPromise()]).then(function (objs) {\r\n                const layer = objs[0];\r\n                self.setSelectableState(layer && layer.features.length > 0);\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.setSelectableState = function (active) {\r\n        const self = this;\r\n        self._selectBtn.disabled = !active;\r\n        self._textBtn.disabled = !active;\r\n    };\r\n\r\n    ctlProto.getSelectedFeatures = function () {\r\n        return this.wrap.getSelectedFeatures();\r\n    };\r\n\r\n    ctlProto.setSelectedFeatures = function (features) {\r\n        const self = this;\r\n        const result = self.wrap.setSelectedFeatures(features);\r\n        self.displayLabelText();\r\n        return result;\r\n    };\r\n\r\n    ctlProto.getActiveFeatures = function () {\r\n        const self = this;\r\n        const result = self.getSelectedFeatures();\r\n        if (!result.length && self.layer.features.length) {\r\n            result.push(self.layer.features[self.layer.features.length - 1]);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.unselectFeatures = function (features) {\r\n        features = features || [];\r\n        this.wrap.unselectFeatures(features.map(function (feat) {\r\n            return feat.wrap.feature;\r\n        }));\r\n        return this;\r\n    };\r\n\r\n    ctlProto.deleteSelectedFeatures = function () {\r\n        const self = this;\r\n        const features = self.getSelectedFeatures();\r\n        self.wrap.unselectFeatures(features);\r\n        features.forEach(function (feature) {\r\n            self.layer.removeFeature(feature);\r\n            self.trigger(TC.Consts.event.FEATUREREMOVE, { feature: feature });\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.styleFunction = function (feature, resolution) {\r\n        const self = this;\r\n        var result;\r\n        const mapStyles = self.map.options.styles.selection;\r\n        switch (true) {\r\n            case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n            case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n                result = TC.Util.extend({}, mapStyles.polygon);\r\n                break;\r\n            case TC.feature.Point && feature instanceof TC.feature.Point:\r\n            case TC.feature.MultiPoint && feature instanceof TC.feature.MultiPoint:\r\n                result = TC.Util.extend({}, mapStyles.point);\r\n                break;\r\n            default:\r\n                result = TC.Util.extend({}, mapStyles.line);\r\n                break;\r\n        }\r\n        const style = feature.getStyle();\r\n        if (style.label) {\r\n            result.label = style.label;\r\n            result.fontSize = style.fontSize;\r\n            result.fontColor = style.fontColor;\r\n            result.labelOutlineColor = style.labelOutlineColor;\r\n            result.labelOutlineWidth = style.labelOutlineWidth;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.setTextMode = function (active) {\r\n        const self = this;\r\n        self.textActive = active;\r\n        if (active) {\r\n            self._textBtn.classList.add(TC.Consts.classes.ACTIVE, active);\r\n            self._styleSection.classList.remove(TC.Consts.classes.HIDDEN);\r\n        }\r\n        else {\r\n            self._textBtn.classList.remove(TC.Consts.classes.ACTIVE, active);\r\n            self._styleSection.classList.add(TC.Consts.classes.HIDDEN);\r\n        }\r\n        self.displayLabelText();\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontColorWatch = function (color, outlineColor) {\r\n        const self = this;\r\n        if (color === undefined) {\r\n            color = self.styles.text.fontColor;\r\n        }\r\n        color = TC.Util.colorArrayToString(color);\r\n        outlineColor = outlineColor || self.getLabelOutlineColor(color);\r\n        self.renderPromise().then(function () {\r\n            self._fontColorPicker.value = color;\r\n            self._textInput.style.color = color;\r\n            self._textInput.style.textShadow = '0 0 ' + self.styles.text.labelOutlineWidth + 'px ' + outlineColor;\r\n            if (!TC.browserFeatures.inputTypeColor()) {\r\n                self._fontColorPicker.style.backgroundColor = color;\r\n                self._fontColorPicker.blur();\r\n            }\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontColor = function (color) {\r\n        const self = this;\r\n        self.styles.text.fontColor = color;\r\n        self.styles.text.labelOutlineColor = self.getLabelOutlineColor(color);\r\n        self.setFontColorWatch(color, self.styles.text.labelOutlineColor);\r\n        const features = self.getActiveFeatures();\r\n        features.forEach(function (feature) {\r\n            const style = feature.getStyle();\r\n            style.fontColor = color;\r\n            style.labelOutlineColor = self.styles.text.labelOutlineColor;\r\n            feature.setStyle(style);\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontSizeWatch = function (size) {\r\n        const self = this;\r\n        if (size === undefined) {\r\n            size = self.styles.text.fontSize;\r\n        }\r\n        const sizeValue = parseInt(size);\r\n        if (sizeValue !== Number.NaN) {\r\n            self.renderPromise().then(function () {\r\n                self._fontSizeSelector.value = sizeValue;\r\n                self._textInput.style.fontSize = sizeValue + 'pt';\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.setFontSize = function (size) {\r\n        const self = this;\r\n        const sizeValue = parseInt(size);\r\n        if (sizeValue !== Number.NaN) {\r\n            self.styles.text.fontSize = sizeValue;\r\n            self.setFontSizeWatch(sizeValue);\r\n            const features = self.getActiveFeatures();\r\n            features.forEach(function (feature) {\r\n                const style = feature.getStyle();\r\n                style.fontSize = sizeValue;\r\n                feature.setStyle(style);\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getLabelOutlineColor = function (fontColor) {\r\n        if (fontColor) {\r\n            fontColor = TC.Util.colorArrayToString(fontColor);\r\n            const matchForShort = fontColor.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i);\r\n            if (matchForShort && matchForShort.length) {\r\n                fontColor = '#' + matchForShort[1] + matchForShort[1] + matchForShort[2] + matchForShort[2] + matchForShort[3] + matchForShort[3];\r\n            }\r\n            const matchForLong = fontColor.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i);\r\n            if (matchForLong && matchForLong.length) {\r\n                const r = parseInt(matchForLong[1], 16);\r\n                const g = parseInt(matchForLong[2], 16);\r\n                const b = parseInt(matchForLong[3], 16);\r\n                return (r + g + b) / 3 < 128 ? '#ffffff' : '#000000';\r\n            }\r\n        }\r\n        return '#ffffff';\r\n    };\r\n\r\n    ctlProto.displayLabelText = function () {\r\n        const self = this;\r\n        const features = self.getSelectedFeatures();\r\n        var text;\r\n        var size;\r\n        var color;\r\n        if (self.isActive && features.length) {\r\n            const feature = features[features.length - 1];\r\n            const style = feature.getStyle();\r\n            text = style.label;\r\n            color = style.fontColor;\r\n            size = style.fontSize;\r\n        }\r\n        else {\r\n            text = '';\r\n            color = self.styles.text.fontColor;\r\n            size = self.styles.text.fontSize;\r\n        }\r\n        self.renderPromise().then(function () {\r\n            self\r\n                .setFontSizeWatch(size)\r\n                .setFontColorWatch(color)\r\n                ._textInput.value = text || '';\r\n        });\r\n        return self;\r\n    };\r\n\r\n    ctlProto.labelFeatures = function (text) {\r\n        const self = this;\r\n        const features = self.getActiveFeatures();\r\n        if (features.length) {\r\n            const style = features[0].getStyle();\r\n            features.forEach(function (feature) {\r\n                const textStyle = TC.Util.extend({}, self.styles.text, style);\r\n                style.label = text;\r\n                style.labelOffset = textStyle.labelOffset;\r\n                style.fontColor = textStyle.fontColor;\r\n                style.fontSize = textStyle.fontSize;\r\n                style.labelOutlineColor = textStyle.labelOutlineColor;\r\n                style.labelOutlineWidth = textStyle.labelOutlineWidth;\r\n                feature.setStyle(style);\r\n            });\r\n        }\r\n        return self;\r\n    };\r\n\r\n    ctlProto.getAttributeDisplayTarget = function () {\r\n        return this._attributesSection;\r\n    };\r\n\r\n    ctlProto.displayAttributes = function () {\r\n        const self = this;\r\n        const selectedFeatures = self.getSelectedFeatures();\r\n        const feature = selectedFeatures[selectedFeatures.length - 1];\r\n        if (feature) {\r\n            self.getRenderedHtml(self.CLASS + '-attr', { data: feature.getData() }, function (html) {\r\n                const attributesSection = self.getAttributeDisplayTarget();\r\n                attributesSection.innerHTML = html;\r\n                attributesSection.classList.remove(TC.Consts.classes.HIDDEN);\r\n                self._editAttrBtn.classList.add(TC.Consts.classes.ACTIVE);\r\n\r\n                attributesSection.querySelector(`${self.CLASS}-btn-attr-ok`).addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                    self._onAttrOK();\r\n                }, { passive: true });\r\n\r\n                attributesSection.querySelector(`.${self.modifyControl.CLASS}-btn-attr-cancel`).addEventListener(TC.Consts.event.CLICK, function () {\r\n                    self.closeAttributes();\r\n                }, { passive: true });\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.closeAttributes = function () {\r\n        const self = this;\r\n        self._attributesSection.classList.add(TC.Consts.classes.HIDDEN);\r\n        self._editAttrBtn.classList.remove(TC.Consts.classes.ACTIVE);\r\n    };\r\n\r\n    ctlProto.toggleAttributes = function () {\r\n        const self = this;\r\n        if (self._editAttrBtn.classList.toggle(TC.Consts.classes.ACTIVE)) {\r\n            self.displayAttributes();\r\n        }\r\n        else {\r\n            self.closeAttributes();\r\n        }\r\n    };\r\n\r\n    ctlProto._onAttrOK = function () {\r\n        const self = this;\r\n        const feature = self.getSelectedFeatures()[0];\r\n        if (feature) {\r\n            const data = {};\r\n            self.getAttributeDisplayTarget().querySelectorAll('input').forEach(function (input) {\r\n                data[input.getAttribute('name')] = input.value;\r\n            });\r\n            feature.setData(data);\r\n            self.trigger(TC.Consts.event.FEATUREMODIFY, { feature: feature, layer: self.layer });\r\n            self.closeAttributes();\r\n        }\r\n    };\r\n\r\n    ctlProto.joinFeatures = function (features) {\r\n        const self = this;\r\n        if (self.geometryType === TC.Consts.geom.MULTIPOLYLINE ||\r\n            self.geometryType === TC.Consts.geom.MULTIPOLYGON ||\r\n            self.geometryType === TC.Consts.geom.MULTIPOINT) {\r\n            self._joinedFeatureAttributes = [];\r\n            if (features.length > 1) {\r\n                var geometries = features.map(function (elm) {\r\n                    self._joinedFeatureAttributes.push(elm.getData());\r\n                    return elm.geometry;\r\n                });\r\n                var newGeometry = geometries.reduce(function (a, b) {\r\n                    return a.concat(b);\r\n                });\r\n                var newFeature = new features[0].constructor(newGeometry);\r\n                for (var i = 0, len = features.length; i < len; i++) {\r\n                    var feature = features[i];\r\n                    self.layer.removeFeature(feature);\r\n                    self.trigger(TC.Consts.event.FEATUREREMOVE, { feature: feature });\r\n                }\r\n                self.layer.addFeature(newFeature).then(function (feat) {\r\n                    self.setSelectedFeatures([newFeature]);\r\n                    self.trigger(TC.Consts.event.FEATUREADD, { feature: feat });\r\n                    feat.showPopup(self.attributeEditor);\r\n                });\r\n            }\r\n            setFeatureSelectedState(self, [newFeature]);\r\n        }\r\n    };\r\n\r\n})();\r\n"]}