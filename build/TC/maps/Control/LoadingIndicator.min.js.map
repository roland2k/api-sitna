{"version":3,"sources":["control/LoadingIndicator.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","LoadingIndicator","self","this","apply","arguments","_waits","window","addEventListener","reset","inherit","ctlProto","prototype","CLASS","template","compiler","main","container","depth0","helpers","partials","data","useData","startWait","e","layerId","layer","id","undefined","show","map","trigger","Consts","event","STARTLOADING","stopWait","wait","count","key","hide","STOPLOADING","endWait","register","result","call","on","BEFORELAYERADD","BEFORELAYERUPDATE","BEFOREFEATURESADD","LAYERADD","LAYERERROR","LAYERUPDATE","FEATURESADD","BEFOREFEATUREINFO","addWait","FEATUREINFO","NOFEATUREINFO","FEATUREINFOERROR","removeWait","LAYERREMOVE","isDebug","msg","url","line","col","error","uid","getUID"],"mappings":"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","sourcesContent":["TC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.control.LoadingIndicator = function () {\r\n    const self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self._waits = {};\r\n\r\n    window.addEventListener('error', function () {\r\n        self.reset();\r\n        // Tell browser to run its own error handler as well\r\n        return false;\r\n    }, false);\r\n};\r\n\r\nTC.inherit(TC.control.LoadingIndicator, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.LoadingIndicator.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-load';\r\n\r\n    ctlProto.template = TC.apiLocation + \"TC/templates/tc-ctl-load.hbs\";\r\n\r\n    //var ctlProto.waits = {};\r\n    \r\n    ctlProto.startWait = function (e) {\r\n        const self = this;\r\n        const layerId = e.layer.id;\r\n        if (self._waits[layerId] === undefined) {\r\n            self._waits[layerId] = 0;\r\n        }\r\n        self._waits[layerId] = self._waits[layerId] + 1;\r\n        self.show();\r\n\r\n        self.map.trigger(TC.Consts.event.STARTLOADING);\r\n    };\r\n\r\n    ctlProto.stopWait = function (e) {\r\n        const self = this;\r\n        const layerId = e.layer.id;\r\n        var wait = self._waits[layerId];\r\n        if (wait > 0) {\r\n            wait = self._waits[layerId] = wait - 1;\r\n        }\r\n        if (!wait) {\r\n            delete self._waits[layerId];\r\n        }\r\n        var count = 0;\r\n        for (var key in self._waits) {\r\n            count++;\r\n        }\r\n        if (!count) {\r\n            self.hide();\r\n            self.map.trigger(TC.Consts.event.STOPLOADING);\r\n        }\r\n    };\r\n\r\n    ctlProto.endWait = function (e) {\r\n        const self = this;\r\n        const layerId = e.layer.id;\r\n        var wait = self._waits[layerId];\r\n        if (wait > 0) {\r\n            delete self._waits[layerId];\r\n        }\r\n        var count = 0;\r\n        for (var key in self._waits) {\r\n            count++;\r\n        }\r\n        if (!count) {\r\n            self.hide();\r\n            self.map.trigger(TC.Consts.event.STOPLOADING);\r\n        }\r\n    };\r\n\r\n    ctlProto.reset = function (e) {\r\n        var self = this;\r\n        self._waits = {};\r\n        self.hide();\r\n        self.map.trigger(TC.Consts.event.STOPLOADING);\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n        map\r\n            .on(TC.Consts.event.BEFORELAYERADD + ' ' +\r\n                TC.Consts.event.BEFORELAYERUPDATE + ' ' +\r\n                TC.Consts.event.BEFOREFEATURESADD, function (e) {\r\n                    self.startWait(e);\r\n                })\r\n            .on(TC.Consts.event.LAYERADD + ' ' +\r\n                TC.Consts.event.LAYERERROR + ' ' +\r\n                TC.Consts.event.LAYERUPDATE + ' ' +\r\n                TC.Consts.event.FEATURESADD, function (e) {\r\n                    self.stopWait(e);\r\n                })\r\n            .on(TC.Consts.event.BEFOREFEATUREINFO, function () {\r\n                self.addWait(TC.Consts.event.FEATUREINFO);\r\n            })\r\n            .on(TC.Consts.event.FEATUREINFO + ' ' +\r\n                TC.Consts.event.NOFEATUREINFO + ' ' +\r\n                TC.Consts.event.FEATUREINFOERROR, function () {\r\n                    self.removeWait(TC.Consts.event.FEATUREINFO);\r\n                })\r\n            .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                self.endWait(e);\r\n            });\r\n        if (!TC.isDebug) {\r\n            //Para evitar que se quede el indicador indefinidamente activo cuando hay un error en la p√°gina\r\n            window.addEventListener('error', function (msg, url, line, col, error) {\r\n                self.reset();\r\n                return false;\r\n            });\r\n\r\n            //$(document).ajaxError(function (event, request, settings) {\r\n            //    self.reset();\r\n            //});\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.addWait = function (uid) {\r\n        const self = this;\r\n        const result = uid || TC.getUID();\r\n        self.startWait({ layer: { id: result } });\r\n        return result;\r\n    };\r\n\r\n    ctlProto.removeWait = function (uid) {\r\n        this.stopWait({ layer: { id: uid } });\r\n    };\r\n\r\n})();\r\n"]}