{"version":3,"sources":["control/Search.js"],"names":["window","performance","now","offset","Date","this","TC","control","Control","syncLoadJS","apiLocation","SearchType","type","options","parent","self","_featureTypes","Util","extend","typeName","_throwConfigError","Error","getFeatureTypes","toFilter","featureType","Array","length","type_featureType","type_renderFeatureType","renderFeatureType","concat","isFeatureOfThisType","id","indexOf","getStyleByFeatureType","styles","getColor","css","geomType","getValue","style","hasOwnProperty","i","color","getSuggestionListHead","headerData","label","suggestionListHead","title","getLocaleString","call","featureTypes","map","elm","liHTML","join","getSuggestionListElements","data","results","areSame","a","b","isNaN","trim","getUnique","inputArray","outputArray","push","parseFeatures","forEach","feature","attributes","ids","valueToAdd","properties","outputProperties","dataIdProperties","dataIdProperty","strFormat","outputFormatLabel","dataLayer","split","slice","shift","j","compareData","p","tcFormat","text","toCamelCase","r","isThere","property","filter","dataRole","outputFormat","Consts","format","JSON","wrap","parser","WFS","featureNS","featurePrefix","read","getPattern","pattern","bindRootFilterNode","filtersArr","dataT","rootFilters","rootCfg","active","root","limit","item","getFilterNode","filterNode","queryProperties","firstQueryWord","queryWord","index","_LIKE_PATTERN","getPropertyValue","role","propertyName","getSearchTypeByRole","getIsLikeNode","name","value","toEscape","test","replace","toString","toLowerCase","toUpperCase","getFunctionStrMatches","propertyValue","fn","filterByMatch","regex","RegExp","_MATCH_PATTERN","f","key","propName","getFilter","multiL","searchType","NUMBER","_f","exec","t","s","secondQueryWord","match","substring","thirdQueryWord","STREET","LOCALITY","getParams","filters","params","REQUEST","SERVICE","MAXFEATURES","VERSION","version","OUTPUTFORMAT","ft","TYPENAME","_getProperties","Object","prop","_properties","_ids","removeDuplicates","toCheck","arr","PROPERTYNAME","FILTER","getParamString","getGoToFilter","props","_id","source","src","transformFilter","equalTo","comparison","EQUAL_TO","and","apply","Search","arguments","exportsState","event","TOOLSCLOSE","url","UTMX","UTMY","LON","LAT","UTMX_LABEL","UTMY_LABEL","LON_LABEL","LAT_LABEL","MUN","POL","PAR","MUN_LABEL","POL_LABEL","PAR_LABEL","availableSearchTypes","CADASTRAL","suggestionRoot","geometryName","searchWeight","municipality","labelProperty","idProperty","CATAST_Pol_ParcelaUrba","CATAST_Pol_ParcelaRusti","CATAST_Pol_ParcelaMixta","polygon","fillColor","fillOpacity","strokeColor","strokeWidth","strokeOpacity","getCadastralRef","goTo","goToCadastralRef","goToIdFormat","idPropertiesIdentifier","COORDINATES","getCoordinates","goToCoordinates","QUERYWORD","FIRST","SECOND","THIRD","MUNICIPALITY","getStringPattern","bind","stringPatternToCheck","stringPatternsValidators","s_or_t","goToStringPattern","COUNCIL","line","strokeLinecap","strokeDashstyle","point","angle","fontColor","fontSize","fontWeight","labelOutlineColor","labelOutlineWidth","radius","URBAN","PLACENAME","PLACENAMEMUNICIPALITY","ts","st","COMMONWEALTH","ROAD","getRoad","goToRoad","ROADPK","getPK","goToPK","getRootLabel","Promise","resolve","reject","rootLabel","CQL_FILTER","elem","ajax","method","responseType","mimeType","then","response","totalFeatures","features","catch","allowedSearchTypes","allowed","isEmptyObject","rootType","addAllowedSearchType","queryableFeatures","UTMX_LEN","UTMY_LEN","interval","NORMAL_PATTERNS","ROMAN_NUMBER","ABSOLUTE_NOT_DOT","ABSOLUTE","inherit","ctlProto","prototype","CLASS","SEARCHQUERYEMPTY","template","compiler","main","container","depth0","helpers","partials","alias1","nullContext","alias2","escapeExpression","lookupProperty","hash","loc","start","column","end","useData","register","result","_search","layerStyleFN","getFeatureType","idFeature","getStyle","getSearchTypeByFeature","Cfg","extractValue","Feature","trigger","FEATURESADD","layer","geom","values","getData","styleFN","layerPromise","addLayer","getUID","owner","stealth","declutter","layerType","VECTOR","marker","anchor","Defaults","height","width","EMPTY_RESULTS_LABEL","EMPTY_RESULTS_TITLE","OUTBBX_LABEL","WFS_TYPE_ATTRS","highlighting","strReg","lastPattern","textInput","normalizedLastPattern","querys","separatorChar","q","_strReg","rex","selectionCallback","e","_target","target","tagName","el","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","parentElement","querySelector","textContent","_goToResult","unescape","getAttribute","parentNode","UI","autocomplete","sortAlphaNum","reA","reN","AInt","parseInt","BInt","aA","bA","aN","bN","buildHTML","html","dataRoles","sort","sort_","aRoot","bRoot","first","encodeURIComponent","resultsList","querySelectorAll","liDataRoles","includes","renderData","callback","search","list","classList","add","classes","HIDDEN","_research","div","placeHolder","setAttribute","button","addEventListener","CLICK","getLayer","l","zoomToFeatures","dispatchEvent","Event","passive","instructions","EventTarget","listenerBySelector","focus","which","preventDefault","stopPropagation","remove","retryTimeout","loadJS","searchDelay","link","minLength","ctx","lastpress","requestAnimationFrame","step","criteria","cancelAnimationFrame","undefined","onKeydown","ctrlKey","altKey","shiftKey","keyCode","document","activeElement","selector","sibling","nextElementSibling","getNextSibling","previousElementSibling","getPreviousSibling","isFunction","getElementOnSuggestionList","searchRequestsResults","getFeatures","cleanMap","clearFeatures","FEATUREREMOVE","getMunicipalities","cache","_municipalitiesPromise","municipalities","coords","parseCoords","xValue","yValue","xLabel","UTM","yLabel","getPoint","insideLimit","crs","getLabel","_pattern","matcher","getItem","mun","munLabel","pol","par","removePunctuation","tsp","getPortal","formatStreetNumber","bindRoot","spt","tnsp","reverse","getStreet","revS","fs","si","_criteria","isPortal","c","x","_cr","h","inPortal","criteriaRev","chs","sp","snp","isCheck","check","m","ch","addRoot","indicatedRoot","newResult","splice","getObjectsFromStringToQuery","allowedRoles","charAt","tests","flat","ex","error","msgErrorMode","EMAIL","requestToWFS","signal","doneCallback","fetch","headers","Content-Type","body","ok","err","console","log","toQuery","requestsQuery","combinedCriteria","toQueryCombined","pendingSuggestionLstHead","filterRoles","dataToQuery","keys","pendingHeaderRoles","roles","responseToSuggestionLstElmt","searchRequestsAbortController","innerHTML","CustomEvent","all","some","outputProperty","abort","isAborted","onAbort","removeEventListener","AbortController","toRender","renderingEnd","renderResultsOnSuggestionList","_a","_b","manageLoadingByDataRole","loadingElemOfDataRole","indexLoadingElemOfDataRole","childNodes","headerElemOfDataRole","removeChild","toConcat","findIndex","srrElm","loading","getControlsByClass","wait","addWait","matchMedia","blur","customSearchType","keepOnLooping","dr","removeWait","on","showsPopup","one","LAYERUPDATE","getSource","bounds","getExtent","pointBoundsRadius","setExtent","ZOOMTO","extent","inner","emptyResultHTML","newData","refresh","goToResult","alert","promise","addMarker","group","feat","maxFeatures","isMapGeo","isGeo","parseFloat","reproject","utmCrs","geoCrs","getIntersectsBounds","maxExtent","locale","getMapLocale","toLocaleString","localeDecimalSeparator","Number","isInteger","á","à","Á","À","é","è","É","È","í","ì","Í","Ì","ó","ò","Ó","Ò","ú","ù","ü","Ú","Ù","Ü","len","exportState","searchText","exportStyles","importState","state","setStyle","String","args","number","splitRemoveWhiteSpaces","separator","_arr","_value","defineProperty","enumerable","writable","endsWith","searchString","position","subjectString","isFinite","Math","floor","lastIndex"],"mappings":"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","sourcesContent":["(function () {\r\n    // Polyfill window.performance.now\r\n    if (!window.performance) {\r\n        window.performance = {\r\n            offset: Date.now(),\r\n            now: function () {\r\n                return Date.now() - this.offset;\r\n            }\r\n        };\r\n    } else if (window.performance && !window.performance.now) {\r\n        window.performance.offset = Date.now();\r\n        window.performance.now = function () {\r\n            return Date.now() - window.performance.offset;\r\n        };\r\n    }\r\n}());\r\n\r\nTC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\n\r\nvar SearchType = function (type, options, parent) {\r\n    var self = this;\r\n\r\n    self.parent = parent;\r\n\r\n    self._featureTypes = [];\r\n\r\n    TC.Util.extend(self, options);\r\n\r\n    self.typeName = type;\r\n\r\n    self._throwConfigError = function () {\r\n        var self = this;\r\n\r\n        throw new Error('Error en la configuración de la búsqueda: ' + self.typeName);\r\n    };\r\n\r\n    self.getFeatureTypes = function (toFilter) {\r\n        var self = this;\r\n\r\n        if (toFilter) {\r\n            return self.featureType instanceof Array ? self.featureType : [self.featureType];\r\n        }\r\n\r\n        if (self._featureTypes.length === 0) {\r\n            var type_featureType = self.featureType instanceof Array ? self.featureType : [self.featureType];\r\n            var type_renderFeatureType = self.renderFeatureType ? self.renderFeatureType instanceof Array ? self.renderFeatureType : [self.renderFeatureType] : [];\r\n            self._featureTypes = type_featureType.concat(type_renderFeatureType);\r\n        }\r\n\r\n        return self._featureTypes;\r\n    };\r\n\r\n    self.isFeatureOfThisType = function (id) {\r\n        var self = this;\r\n\r\n        return self.getFeatureTypes().indexOf(id) > -1;\r\n    };\r\n\r\n    self.getStyleByFeatureType = function (featureType) {\r\n        var self = this;\r\n\r\n        if (self.getFeatureTypes().indexOf(featureType) > -1) {\r\n            return self.styles[self.getFeatureTypes().indexOf(featureType)];\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    var getColor = function (css, geomType, featureType) {\r\n        var self = this;\r\n\r\n        var getValue = function (style, geomType, css) {\r\n            if (geomType) {\r\n                if (style.hasOwnProperty(geomType) && style[geomType].hasOwnProperty(css)) {\r\n                    return style[geomType][css];\r\n                }\r\n            } else {\r\n                for (var geomType in style) {\r\n                    if (style[geomType].hasOwnProperty(css)) {\r\n                        return style[geomType][css];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        if (featureType) {\r\n            var style = self.getStyleByFeatureType(featureType);\r\n            return getValue(style, geomType, css);\r\n        } else {\r\n            for (var i = 0; i < self.styles.length; i++) {\r\n                var style = self.styles[i];\r\n                var color = getValue(style, geomType, css);\r\n                if (color) {\r\n                    return color;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    self.getSuggestionListHead = function () {\r\n        var self = this;\r\n\r\n        var headerData, label, color;\r\n\r\n        if (typeof self.suggestionListHead === \"function\") {\r\n            headerData = self.suggestionListHead();\r\n            label = headerData.label;\r\n            color = [{\r\n                color: headerData.color,\r\n                title: headerData.label\r\n            }];\r\n        } else {\r\n            headerData = self.suggestionListHead;\r\n            label = self.parent.getLocaleString(headerData.label);\r\n\r\n            // color es string que es el atributo CSS. El valor se obtiene de la 1º coincidencia encontrada en styles\r\n            if (typeof headerData.color === \"string\") {\r\n                color = [{\r\n                    color: getColor.call(self, headerData.color),\r\n                    title: label\r\n                }];\r\n            } else if (headerData.color instanceof Array) { // color es un array de objetos, con nombre de featureType como clave\r\n                var featureTypes = self.getFeatureTypes();\r\n                if (headerData.color.length === featureTypes.length) {\r\n                    color = headerData.color.map(function (elm, i) {\r\n                        return {\r\n                            color: getColor.call(self, elm[featureTypes[i]].color.css, elm[featureTypes[i]].color.geomType, featureTypes[i]),\r\n                            title: self.parent.getLocaleString(elm[featureTypes[i]].title) || label\r\n                        }\r\n                    });\r\n                } else {\r\n                    self._throwConfigError();\r\n                }\r\n            } else if (typeof headerData.color === \"object\") { // color es un objeto con atributo css y tipo de geometría\r\n                color = [{\r\n                    color: getColor.call(self, headerData.color.css, headerData.color.geomType),\r\n                    title: label\r\n                }];\r\n            }\r\n        }\r\n\r\n        if (label && color) {\r\n            var liHTML = '<li header><span class=\"header\">' + label + '</span>';\r\n\r\n            liHTML += color.map(function (elm) {\r\n                if (elm.color) {\r\n                    return '<span class=\"header-color\" title=\"' + elm.title + '\" style=\"color: ' + elm.color + ';\"></span>';\r\n                }\r\n            }).join('') + '</li>';\r\n\r\n            return liHTML;\r\n\r\n        } else {\r\n            self._throwConfigError();\r\n        }\r\n    };\r\n\r\n    self.getSuggestionListElements = function (data) {\r\n        var self = this;\r\n        var results = [];\r\n\r\n        var areSame = function (a, b) {\r\n            switch (true) {\r\n                case typeof (a) === \"number\":\r\n                    if (a === b) {\r\n                        return true;\r\n                    }\r\n                    break;\r\n                case typeof (a) === \"string\":\r\n                    if (!isNaN(a) || !isNaN(b)) {\r\n                        if (a === b) {\r\n                            return true;\r\n                        }\r\n                    } else {\r\n                        if (a.trim() === b.trim()) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            return false;\r\n        };\r\n        var getUnique = function (inputArray) {\r\n            var outputArray = [];\r\n            for (var i = 0; i < inputArray.length; i++) {\r\n                if (outputArray.indexOf(inputArray[i]) === -1) {\r\n                    outputArray.push(inputArray[i]);\r\n                }\r\n            }\r\n\r\n            return outputArray;\r\n        };\r\n        var intoResults = function (compareData) {\r\n            for (var r = 0; r < results.length; r++) {\r\n                var length = 0;\r\n                var isThere = [];\r\n                for (var property in compareData) {\r\n                    isThere.push(areSame(compareData[property], results[r].properties[property]));\r\n                    length++;\r\n                }\r\n                if (isThere.filter(function (i) { return i; }).length === length) {\r\n                    return true;\r\n                }\r\n\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        var features = self.parseFeatures(data);\r\n\r\n        features.forEach(function (feature) {\r\n            var attributes = [], ids = [];\r\n            var valueToAdd = '';\r\n\r\n            var properties = self.outputProperties;\r\n            var dataIdProperties = self.dataIdProperty;\r\n\r\n            var strFormat = self.outputFormatLabel;\r\n            var dataLayer = feature.id.split('.').slice(0, 1).shift();\r\n\r\n            if (!(self.outputProperties instanceof Array)) {\r\n                properties = self.outputProperties[dataLayer];\r\n                dataIdProperties = self.dataIdProperty[dataLayer];\r\n                strFormat = strFormat[dataLayer];\r\n            }\r\n\r\n            for (var j = 0; j < properties.length; j++) {\r\n                attributes.push(feature.data[properties[j]]);\r\n            }\r\n\r\n            for (var j = 0; j < dataIdProperties.length; j++) {\r\n                ids.push(feature.data[dataIdProperties[j]]);\r\n            }\r\n\r\n            var compareData = {};\r\n            for (var p = 0; p < self.outputProperties.length; p++) {\r\n                compareData[self.outputProperties[p]] = attributes[p];\r\n            }\r\n\r\n            if (attributes instanceof Array && strFormat && getUnique(attributes).length > 1) {\r\n                valueToAdd = strFormat.tcFormat(attributes);\r\n            }\r\n            else if (attributes instanceof Array && getUnique(attributes).length == 1) {\r\n                valueToAdd = attributes[0];\r\n            }\r\n\r\n            var text = valueToAdd.toCamelCase();\r\n\r\n            if (!(intoResults(compareData))) {\r\n\r\n                results.push({\r\n                    text: text,\r\n                    label: text,\r\n                    id: ids.join('#'),\r\n                    dataRole: self.typeName,\r\n                    dataLayer: dataLayer,\r\n                    properties: compareData\r\n                });\r\n            }\r\n        });\r\n\r\n        return results;\r\n    };\r\n\r\n    self.parseFeatures = function (data) {\r\n        var parser;\r\n        if (self.outputFormat === TC.Consts.format.JSON) {\r\n            parser = new TC.wrap.parser.JSON();\r\n        }\r\n        else {\r\n            parser = new TC.wrap.parser.WFS({\r\n                featureNS: self.featurePrefix,\r\n                featureType: self.featureType\r\n            });\r\n        }\r\n        return parser.read(data);\r\n    };\r\n\r\n    self.getPattern = function () {\r\n        var self = this;\r\n\r\n        if (typeof self.pattern === \"function\") {\r\n            return self.pattern();\r\n        } else {\r\n            return self.pattern;\r\n        }\r\n    };\r\n\r\n    self.filter = (function (self) {\r\n\r\n        const bindRootFilterNode = function (filtersArr, dataT) {\r\n            var rootFilters = [];\r\n\r\n            if (dataT != self.parent.rootCfg.active.root) {\r\n                // GLS: Si llego aquí, significa que el usuario está indicando la población\r\n                if (dataT.indexOf('#') === -1 && !self.parent.rootCfg.active.limit) { // si no está limitada la búsqueda, indico la población\r\n\r\n                    var filterNode = self.parent.rootCfg.active.queryProperties.firstQueryWord.map(function (queryWord, index) {\r\n                        return self.filter.getFilterNode(queryWord, self.parent._LIKE_PATTERN + dataT + self.parent._LIKE_PATTERN);\r\n                    });\r\n\r\n                    if (filterNode.length > 1) {\r\n                        rootFilters.push('<ogc:And>');\r\n                        rootFilters = rootFilters.concat(filterNode);\r\n                        rootFilters.push('</ogc:And>');\r\n                    } else {\r\n                        rootFilters = rootFilters.concat(filterNode);\r\n                    }\r\n\r\n                } else { // por tanto no añado todas las raíces posibles, añado la población que ha indicado (validando antes contra rootLabel)                     \r\n                    var item = dataT.split('#');\r\n\r\n                    for (var j = 0; j < self.parent.rootCfg.active.dataIdProperty.length; j++) {\r\n\r\n                        if (j == 0 && self.parent.rootCfg.active.dataIdProperty.length > 1) {\r\n                            rootFilters.push('<ogc:And>');\r\n                        }\r\n\r\n                        rootFilters.push(self.filter.getFilterNode(self.parent.rootCfg.active.dataIdProperty[j], item.length > j ? item[j] : item[0]));\r\n\r\n                        if (j == self.parent.rootCfg.active.dataIdProperty.length - 1 && self.parent.rootCfg.active.dataIdProperty.length > 1) {\r\n                            rootFilters.push('</ogc:And>');\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                for (var i = 0; i < self.parent.rootCfg.active.root.length; i++) {\r\n                    var item = self.parent.rootCfg.active.root[i];\r\n\r\n                    if (i == 0 && self.parent.rootCfg.active.root.length > 1) {\r\n                        rootFilters.push('<ogc:Or>');\r\n                    }\r\n\r\n                    for (var j = 0; j < self.parent.rootCfg.active.dataIdProperty.length; j++) {\r\n\r\n                        if (j == 0 && self.parent.rootCfg.active.dataIdProperty.length > 1) {\r\n                            rootFilters.push('<ogc:And>');\r\n                        }\r\n\r\n                        rootFilters.push(self.filter.getFilterNode(self.parent.rootCfg.active.dataIdProperty[j], item.length > j ? item[j] : item[0]));\r\n\r\n                        if (j == self.parent.rootCfg.active.dataIdProperty.length - 1 && self.parent.rootCfg.active.dataIdProperty.length > 1) {\r\n                            rootFilters.push('</ogc:And>');\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (self.parent.rootCfg.active.root.length > 1) {\r\n                    rootFilters.push('</ogc:Or>');\r\n                }\r\n            }\r\n\r\n            return filtersArr.concat(rootFilters);\r\n        };\r\n\r\n        return {\r\n            getPropertyValue: function (role, propertyName) {\r\n                return self.getSearchTypeByRole(role)[propertyName];\r\n            },\r\n            getIsLikeNode: function (name, value) {\r\n                var toEscape = /([\\-\\\"\\.\\xba\\(\\)\\/])/g;\r\n                if (toEscape.test(value)) {\r\n                    value = value.replace(toEscape, \"\\\\$1\");\r\n                }\r\n\r\n                if (value.toString().indexOf(self.parent._LIKE_PATTERN) > -1)\r\n                    return '<Or><PropertyIsLike escape=\"\\\\\" singleChar=\"_\" wildCard=\"*\" matchCase=\"false\">' +\r\n                        '<PropertyName>' + name + '</PropertyName>' +\r\n                        '<Literal>' + value.toLowerCase().replace(/\\</gi, \"&lt;\").replace(/\\>/gi, \"&gt;\") + '</Literal>' +\r\n                        '</PropertyIsLike>' +\r\n                        '<PropertyIsLike escape=\"\\\\\" singleChar=\"_\" wildCard=\"*\" matchCase=\"false\">' +\r\n                        '<PropertyName>' + name + '</PropertyName>' +\r\n                        '<Literal>' + value.toUpperCase().replace(/\\</gi, \"&lt;\").replace(/\\>/gi, \"&gt;\") + '</Literal>' +\r\n                        '</PropertyIsLike></Or>';\r\n                else\r\n                    return '<PropertyIsEqualTo>' +\r\n                        '<PropertyName>' + name + '</PropertyName>' +\r\n                        '<Literal>' + value.replace(/\\</gi, \"&lt;\").replace(/\\>/gi, \"&gt;\") + '</Literal>' +\r\n                        '</PropertyIsEqualTo>';\r\n            },\r\n            getFunctionStrMatches: function (name, value) {\r\n                var toEscape = /([\\-\\\"\\xba\\(\\)\\/])/g;\r\n                if (toEscape.test(value)) {\r\n                    value = value.replace(toEscape, \"\\\\$1\");\r\n                }\r\n\r\n                if (value.toString().indexOf(self.parent._LIKE_PATTERN) > -1) {\r\n\r\n                    var pattern = value;\r\n                    pattern = pattern.replace(/a/gi, \"[aáà]\");\r\n                    pattern = pattern.replace(/e/gi, \"[eéè]\");\r\n                    pattern = pattern.replace(/i/gi, \"[iíì]\");\r\n                    pattern = pattern.replace(/o/gi, \"[oóò]\");\r\n                    pattern = pattern.replace(/u/gi, \"[uúüù]\");\r\n\r\n                    return '<ogc:PropertyIsEqualTo> ' +\r\n                        '<ogc:Function name=\"strMatches\"> ' +\r\n                        '<ogc:PropertyName>' + name + '</ogc:PropertyName> ' +\r\n                        '<ogc:Literal>' + '(?i)' + pattern.replace(/\\</gi, \"&lt;\").replace(/\\>/gi, \"&gt;\") + '</ogc:Literal> ' +\r\n                        '</ogc:Function> ' +\r\n                        '<ogc:Literal>true</ogc:Literal> ' +\r\n                        '</ogc:PropertyIsEqualTo>';\r\n                }\r\n                else {\r\n                    return '<PropertyIsEqualTo>' +\r\n                        '<PropertyName>' + name + '</PropertyName>' +\r\n                        '<Literal>' + value.replace(/\\</gi, \"&lt;\").replace(/\\>/gi, \"&gt;\") + '</Literal>' +\r\n                        '</PropertyIsEqualTo>';\r\n                }\r\n            },\r\n            getFilterNode: function (propertyName, propertyValue) {\r\n                var r;\r\n\r\n                var fn = self.filter.getIsLikeNode;\r\n\r\n                if (self.filterByMatch) {\r\n\r\n                    fn = self.filter.getFunctionStrMatches;\r\n\r\n                    var regex = new RegExp('\\\\' + self.parent._LIKE_PATTERN, 'gi');\r\n                    propertyValue = propertyValue.replace(regex, self.parent._MATCH_PATTERN);\r\n                }\r\n\r\n                if (!(propertyName instanceof Array) && (typeof propertyName !== 'string')) {\r\n                    var f = [];\r\n                    for (var key in propertyName) {\r\n                        if ((propertyName[key] instanceof Array) && propertyName[key].length > 1) {\r\n                            r = '<Or>';\r\n                            for (var i = 0; i < propertyName[key].length; i++) {\r\n                                r += fn(propertyName[key][i].trim(), propertyValue);\r\n                            }\r\n\r\n                            r += '</Or>';\r\n                            f.push('(<Filter xmlns=\"http://www.opengis.net/ogc\">' + r + '</Filter>)');\r\n                        } else {\r\n                            var propName = propertyName[key];\r\n                            if ((propertyName[key] instanceof Array) && propertyName[key].length == 1)\r\n                                propName = propertyName[key][0];\r\n\r\n                            f.push('(<Filter xmlns=\"http://www.opengis.net/ogc\">' +\r\n                                '<Or>' + fn(propName.trim(), propertyValue) + '</Or>' +\r\n                                '</Filter>)');\r\n                        }\r\n                    }\r\n\r\n                    return f.join('');\r\n\r\n                } else if (propertyName instanceof Array && propertyName.length > 1) {\r\n                    r = '<ogc:Or>';\r\n                    for (var i = 0; i < propertyName.length; i++) {\r\n                        r += fn(propertyName[i].trim(), propertyValue);\r\n                    }\r\n\r\n                    return r += '</ogc:Or>';\r\n                } else\r\n                    return fn((propertyName instanceof Array && propertyName.length === 1 ? propertyName[0].trim() : propertyName.trim()), propertyValue);\r\n            },\r\n            getFilter: function (data) {\r\n                var r = {};\r\n                r.multiL = false;\r\n                r.f = '';\r\n\r\n                var _f;\r\n\r\n                switch (true) {\r\n                    case self.typeName === TC.Consts.searchType.NUMBER:\r\n                        _f = [];\r\n                        if (!(self.parent.rootCfg.active) && (/(\\<|\\>|\\<\\>)/gi.exec(data.t) || /(\\<|\\>|\\<\\>)/gi.exec(data.s))) {\r\n                            var match = /(\\<|\\>|\\<\\>)/gi.exec(data.t);\r\n                            if (match)\r\n\r\n                                _f.push(self.filter.getFilterNode(self.queryProperties.firstQueryWord, self.parent._LIKE_PATTERN + data.t.substring(0, data.t.indexOf(match[0])).trim() + self.parent._LIKE_PATTERN));\r\n                            else {\r\n                                if (self.parent.rootCfg.active) {\r\n                                    _f = bindRootFilterNode(_f, data.t);\r\n                                }\r\n                                else {\r\n                                    _f.push(self.filter.getFilterNode(self.queryProperties.firstQueryWord, self.parent._LIKE_PATTERN + data.t + self.parent._LIKE_PATTERN));\r\n                                }\r\n                            }\r\n\r\n                            match = /(\\<|\\>|\\<\\>)/gi.exec(data.s);\r\n                            if (match)\r\n                                _f.push(self.filter.getFilterNode(self.queryProperties.secondQueryWord, self.parent._LIKE_PATTERN + data.s.substring(0, data.s.indexOf(match[0])).trim() + self.parent._LIKE_PATTERN));\r\n                            else _f.push(self.filter.getFilterNode(self.queryProperties.secondQueryWord, self.parent._LIKE_PATTERN + data.s + self.parent._LIKE_PATTERN));\r\n                        }\r\n                        else {\r\n                            if (self.parent.rootCfg.active) {\r\n                                _f = bindRootFilterNode(_f, data.t);\r\n                            } else {\r\n                                _f.push(self.filter.getFilterNode(self.queryProperties.firstQueryWord, self.parent._LIKE_PATTERN + data.t + self.parent._LIKE_PATTERN));\r\n                            }\r\n                            _f.push(self.filter.getFilterNode(self.queryProperties.secondQueryWord, self.parent._LIKE_PATTERN + data.s + self.parent._LIKE_PATTERN));\r\n                        }\r\n\r\n                        _f.push(self.filter.getFilterNode(self.queryProperties.thirdQueryWord, data.p + self.parent._LIKE_PATTERN));\r\n\r\n                        r.f = '<ogc:Filter xmlns:ogc=\"http://www.opengis.net/ogc\">' + '<ogc:And>' + _f.join('') + '</ogc:And>' + '</ogc:Filter>';\r\n\r\n                        break;\r\n                    case self.typeName === TC.Consts.searchType.STREET:\r\n                        _f = [];\r\n\r\n                        if (!(self.parent.rootCfg.active) && (/(\\<|\\>|\\<\\>)/gi.exec(data.t) || /(\\<|\\>|\\<\\>)/gi.exec(data.s))) {\r\n                            var match = /(\\<|\\>|\\<\\>)/gi.exec(data.t);\r\n                            if (match)\r\n                                _f.push(self.filter.getFilterNode(self.queryProperties.firstQueryWord, self.parent._LIKE_PATTERN + data.t.substring(0, data.t.indexOf(match[0])).trim() + self.parent._LIKE_PATTERN));\r\n                            else {\r\n                                if (self.parent.rootCfg.active) {\r\n                                    _f = bindRootFilterNode(_f, data.t);\r\n                                }\r\n                                else {\r\n                                    _f.push(self.filter.getFilterNode(self.queryProperties.firstQueryWord, self.parent._LIKE_PATTERN + data.t + self.parent._LIKE_PATTERN));\r\n                                }\r\n                            }\r\n\r\n                            match = /(\\<|\\>|\\<\\>)/gi.exec(data.s);\r\n                            if (match)\r\n                                _f.push(self.filter.getFilterNode(self.queryProperties.secondQueryWord, self.parent._LIKE_PATTERN + data.s.substring(0, data.s.indexOf(match[0])).trim() + self.parent._LIKE_PATTERN));\r\n                            else _f.push(self.filter.getFilterNode(self.queryProperties.secondQueryWord, self.parent._LIKE_PATTERN + data.s + self.parent._LIKE_PATTERN));\r\n                        } else {\r\n\r\n                            if (self.parent.rootCfg.active) {\r\n                                _f = bindRootFilterNode(_f, data.t);\r\n                            }\r\n                            else {\r\n                                _f.push(self.filter.getFilterNode(self.queryProperties.firstQueryWord, self.parent._LIKE_PATTERN + data.t + self.parent._LIKE_PATTERN));\r\n                            }\r\n                            _f.push(self.filter.getFilterNode(self.queryProperties.secondQueryWord, self.parent._LIKE_PATTERN + data.s + self.parent._LIKE_PATTERN));\r\n                        }\r\n                        r.f = '<ogc:Filter xmlns:ogc=\"http://www.opengis.net/ogc\">' + '<ogc:And>' + _f.join('') + '</ogc:And>' + '</ogc:Filter>';\r\n                        break;\r\n                    case self.typeName === TC.Consts.searchType.LOCALITY:\r\n                        r.f = self.filter.getFilterNode(self.queryProperties.firstQueryWord, self.parent._LIKE_PATTERN + data.t + self.parent._LIKE_PATTERN);\r\n                        r.multiL = true;\r\n                        break;                                            // GLS: consulta de 2 niveles (carretera con pk / topónimo con municipio)\r\n                    case self.queryProperties.hasOwnProperty('secondQueryWord'):\r\n                        var _f = [];\r\n                        _f.push(self.filter.getFilterNode(self.queryProperties.firstQueryWord, self.parent._LIKE_PATTERN + data.t + self.parent._LIKE_PATTERN));\r\n                        _f.push(self.filter.getFilterNode(self.queryProperties.secondQueryWord, self.parent._LIKE_PATTERN + data.s + self.parent._LIKE_PATTERN));\r\n                        r.f = '<ogc:Filter xmlns:ogc=\"http://www.opengis.net/ogc\">' + '<ogc:And>' + _f.join('') + '</ogc:And>' + '</ogc:Filter>';\r\n                        break;\r\n                    default: // GLS: consulta de 1 único nivel (municipio, casco urbano, carretera)\r\n                        r.f = '<ogc:Filter xmlns:ogc=\"http://www.opengis.net/ogc\">' + self.filter.getFilterNode(self.queryProperties.firstQueryWord, self.parent._LIKE_PATTERN + data.t + self.parent._LIKE_PATTERN) + '</ogc:Filter>';\r\n                        break;\r\n                }\r\n\r\n                return r;\r\n            },\r\n            getParams: function (data) {\r\n                var filters = self.filter.getFilter(data);\r\n\r\n                var params = {\r\n                    REQUEST: 'GetFeature',\r\n                    SERVICE: 'WFS',\r\n                    MAXFEATURES: 500,\r\n                    VERSION: self.version,\r\n                    OUTPUTFORMAT: self.outputFormat\r\n                };\r\n\r\n                var featureTypes = self.getFeatureTypes(true);\r\n                if (!(featureTypes instanceof Array))\r\n                    params.TYPENAME = self.featurePrefix ? self.featurePrefix + ':' + featureTypes.trim() : featureTypes.trim();\r\n                else {\r\n                    var ft = [];\r\n                    for (var i = 0; i < featureTypes.length; i++) {\r\n                        ft.push(self.featurePrefix ?\r\n                            self.featurePrefix + ':' + featureTypes[i].trim() :\r\n                            featureTypes[i].trim());\r\n                    }\r\n\r\n                    params.TYPENAME = ft.join(',');\r\n                }\r\n\r\n                var _getProperties = function (properties) {\r\n                    if ((properties || '') !== '') {\r\n                        if (!(properties instanceof Array)) {\r\n                            var p = [];\r\n                            if (properties instanceof Object) {\r\n                                for (var key in properties) {\r\n                                    var prop = properties[key][0];\r\n                                    if (properties[key].length > 1)\r\n                                        prop = properties[key].join(',');\r\n\r\n                                    p.push(prop);\r\n                                }\r\n                            }\r\n                            return p;\r\n                        }\r\n                        else\r\n                            return properties.join(',');\r\n                    }\r\n                };\r\n                var _properties = _getProperties(self.outputProperties);\r\n                var _ids = _getProperties(self.dataIdProperty);\r\n\r\n                const removeDuplicates = (toCheck) => {\r\n                    const arr = toCheck.split(',');\r\n                    return arr.filter((item, i) => {\r\n                        return (arr.indexOf(item) === i);\r\n                    }).join(',');\r\n                };\r\n\r\n                if (_properties instanceof Array && _ids instanceof Array) {\r\n                    params.PROPERTYNAME = '';\r\n                    for (var i = 0; i < _properties.length; i++) {\r\n                        params.PROPERTYNAME += '(' + removeDuplicates(_properties[i] + ',' + _ids[i]) + ')';\r\n                    }\r\n                } else {\r\n                    params.PROPERTYNAME = removeDuplicates(_properties + ',' + _ids);\r\n                }\r\n\r\n                params.FILTER = filters.f;\r\n\r\n                return TC.Util.getParamString(params);\r\n            },\r\n            getGoToFilter: function (id) {\r\n                var props = [];\r\n                var _id = id.split('#');\r\n\r\n                var source = self.dataIdProperty;\r\n                var dataLayer = self.getFeatureTypes();\r\n\r\n                if (source && dataLayer) {\r\n\r\n                    if (id.indexOf('#') > -1 && dataLayer instanceof Array && dataLayer.length > 1) {\r\n                        for (var i = 0; i < dataLayer.length; i++) {\r\n\r\n                            for (var j = 0; j < source[dataLayer[i]].length; j++) {\r\n                                props.push({ name: source[dataLayer[i]][j], value: _id[j] });\r\n                            }\r\n                        }\r\n                    } else if (id.indexOf('#') == -1 && dataLayer instanceof Array) {\r\n                        var src = source;\r\n\r\n                        for (var i = 0; i < dataLayer.length; i++) {\r\n                            if (!props.hasOwnProperty(dataLayer[i])) {\r\n\r\n                                if (src instanceof Object && source.hasOwnProperty(dataLayer[i]))\r\n                                    src = source[dataLayer[i]];\r\n\r\n                                for (var j = 0; j < src.length; j++) {\r\n                                    if (j < _id.length)\r\n                                        props.push({ name: src[j], value: _id[j] });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (source instanceof Object && source.hasOwnProperty(dataLayer)) {\r\n                            source = source[dataLayer];\r\n                        }\r\n\r\n                        for (var i = 0; i < source.length; i++) {\r\n                            props.push({ name: source[i], value: _id[i] });\r\n                        }\r\n                    }\r\n                }\r\n\r\n                return self.filter.transformFilter(props);\r\n            },\r\n            transformFilter: function (properties) {\r\n                var self = this;\r\n\r\n                if (!TC.filter) {\r\n                    TC.syncLoadJS(TC.apiLocation + 'TC/Filter');\r\n                }\r\n\r\n                if (properties && properties instanceof Array) {\r\n                    var filters = properties.map(function (elm) {\r\n                        if (elm.hasOwnProperty(\"type\")) {\r\n                            switch (true) {\r\n                                case elm.type == TC.Consts.comparison.EQUAL_TO: {\r\n                                    return new TC.filter.equalTo(elm.name, elm.value);\r\n                                }\r\n                            }\r\n                        } else {\r\n                            return new TC.filter.equalTo(elm.name, elm.value);\r\n                        }\r\n                    });\r\n\r\n                    if (filters.length > 1) {\r\n                        return TC.filter.and.apply(null, filters);\r\n                    } else {\r\n                        return filters[0];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    })(self);\r\n};\r\n\r\nTC.control.Search = function () {\r\n    var self = this;\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self.exportsState = true;\r\n\r\n    TC.Consts.event.TOOLSCLOSE = TC.Consts.event.TOOLSCLOSE || 'toolsclose.tc';\r\n\r\n    self.url = '//idena.navarra.es/ogc/wfs';\r\n    self.version = '1.1.0';\r\n    self.featurePrefix = 'IDENA';\r\n\r\n    if (self.options && self.options.url) {\r\n        self.url = self.options.url;\r\n    }\r\n\r\n    self._LIKE_PATTERN = '*';\r\n    self._MATCH_PATTERN = '.*';\r\n\r\n    self.UTMX = 'X';\r\n    self.UTMY = 'Y';\r\n    self.LON = 'Lon';\r\n    self.LAT = 'Lat';\r\n\r\n    self.UTMX_LABEL = 'X: ';\r\n    self.UTMY_LABEL = 'Y: ';\r\n    self.LON_LABEL = 'Lon: ';\r\n    self.LAT_LABEL = 'Lat: ';\r\n\r\n    self.MUN = 'Mun';\r\n    self.POL = 'Pol';\r\n    self.PAR = 'Par';\r\n\r\n    self.MUN_LABEL = 'Mun: ';\r\n    self.POL_LABEL = 'Pol: ';\r\n    self.PAR_LABEL = 'Par: ';\r\n\r\n    self.availableSearchTypes = {};\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.CADASTRAL] = {\r\n        suggestionRoot: null,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        searchWeight: 3,\r\n        featureType: ['CATAST_Pol_ParcelaUrba', 'CATAST_Pol_ParcelaRusti', 'CATAST_Pol_ParcelaMixta'],\r\n        municipality: {\r\n            featureType: 'CATAST_Pol_Municipio',\r\n            labelProperty: 'MUNICIPIO',\r\n            idProperty: 'CMUNICIPIO'\r\n        },\r\n        queryProperties: {\r\n            firstQueryWord: 'CMUNICIPIO',\r\n            secondQueryWord: 'POLIGONO',\r\n            thirdQueryWord: 'PARCELA'\r\n        },\r\n        suggestionListHead: {\r\n            label: \"search.list.cadastral\",\r\n            color: [\r\n                {\r\n                    CATAST_Pol_ParcelaUrba: {\r\n                        title: \"search.list.cadastral.urban\",\r\n                        color: {\r\n                            geomType: \"polygon\",\r\n                            css: \"strokeColor\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    CATAST_Pol_ParcelaRusti: {\r\n                        title: \"search.list.cadastral.rustic\",\r\n                        color: {\r\n                            geomType: \"polygon\",\r\n                            css: \"strokeColor\"\r\n                        }\r\n                    }\r\n                },\r\n                {\r\n                    CATAST_Pol_ParcelaMixta: {\r\n                        title: \"search.list.cadastral.mixed\",\r\n                        color: {\r\n                            geomType: \"polygon\",\r\n                            css: \"strokeColor\"\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        styles: [\r\n            {\r\n                polygon: {\r\n                    fillColor: '#000000',\r\n                    fillOpacity: 0.1,\r\n                    strokeColor: '#136278',\r\n                    strokeWidth: 2,\r\n                    strokeOpacity: 1\r\n                }\r\n            },\r\n            {\r\n                polygon: {\r\n                    fillColor: '#000000',\r\n                    fillOpacity: 0.1,\r\n                    strokeColor: '#0c8b3d',\r\n                    strokeWidth: 2,\r\n                    strokeOpacity: 1\r\n                }\r\n            },\r\n            {\r\n                polygon: {\r\n                    fillColor: '#000000',\r\n                    fillOpacity: 0.1,\r\n                    strokeColor: '#e5475f',\r\n                    strokeWidth: 2,\r\n                    strokeOpacity: 1\r\n                },\r\n            }\r\n        ],\r\n        parser: self.getCadastralRef,\r\n        goTo: self.goToCadastralRef,\r\n        goToIdFormat: self.MUN + '{0}' + self.POL + '{1}' + self.PAR + '{2}',\r\n        idPropertiesIdentifier: '#'\r\n    };\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.COORDINATES] = {\r\n        parser: self.getCoordinates,\r\n        goTo: self.goToCoordinates,\r\n        searchWeight: 4,\r\n        label: null,\r\n        suggestionListHead: function (text) {\r\n            return {\r\n                label: self.availableSearchTypes[TC.Consts.searchType.COORDINATES].label || self.getLocaleString('search.list.coordinates')\r\n            };\r\n        }\r\n    };\r\n\r\n    self.queryProperties = {\r\n        QUERYWORD: 'QueryWord',\r\n        FIRST: 'first',\r\n        SECOND: 'second',\r\n        THIRD: 'third'\r\n    };\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.MUNICIPALITY] = {\r\n        root: null,\r\n        limit: false,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        url: '//idena.navarra.es/ogc/wfs',\r\n        featurePrefix: 'IDENA',\r\n        geometryName: 'the_geom',\r\n        featureType: 'CATAST_Pol_Municipio',\r\n        dataIdProperty: ['CMUNICIPIO'],\r\n        queryProperties: {\r\n            firstQueryWord: ['MUNINOAC', 'MUNICIPIO']\r\n        },\r\n        suggestionListHead: {\r\n            label: \"search.list.municipality\",\r\n            color: \"strokeColor\"\r\n        },\r\n        outputProperties: ['MUNICIPIO'],\r\n        outputFormatLabel: '{0}',\r\n        searchWeight: 1,\r\n        styles: [\r\n            {\r\n                polygon: {\r\n                    fillColor: '#000000',\r\n                    fillOpacity: 0.1,\r\n                    strokeColor: '#fe06a5',\r\n                    strokeWidth: 2,\r\n                    strokeOpacity: 1\r\n                }\r\n            }\r\n        ],\r\n        parser: self.getStringPattern.bind(this, [TC.Consts.searchType.MUNICIPALITY]),\r\n        stringPatternToCheck: self.stringPatternsValidators.s_or_t,\r\n        goTo: self.goToStringPattern\r\n    };\r\n\r\n    //self.availableSearchTypes[TC.Consts.searchType.LOCALITY] = {\r\n    //    root: null,\r\n    //    limit: false,\r\n    //    url: self.url || '//idena.navarra.es/ogc/wfs',\r\n    //    version: self.version || '1.1.0',\r\n    //    outputFormat: TC.Consts.format.JSON,\r\n    //    featurePrefix: self.featurePrefix || 'IDENA',\r\n    //    geometryName: 'the_geom',\r\n    //    featureType: ['CATAST_Pol_Municipio', 'ESTADI_Pol_EntidadPob'],\r\n    //    renderFeatureType: ['CATAST_Pol_Municipio'],\r\n    //    dataIdProperty: {\r\n    //        CATAST_Pol_Municipio: ['CMUNICIPIO'],\r\n    //        ESTADI_Pol_EntidadPob: ['CMUNICIPIO', 'CENTIDAD']\r\n    //    },\r\n    //    queryProperties: {\r\n    //        firstQueryWord: {\r\n    //            CATAST_Pol_Municipio: ['MUNINOAC', 'MUNICIPIO'],\r\n    //            ESTADI_Pol_EntidadPob: ['ENTINOAC', 'ENTIDAD']\r\n    //        }\r\n    //    },\r\n    //    suggestionListHead: {\r\n    //        label: \"search.list.locality\",\r\n    //        color: \"strokeColor\"\r\n    //    },\r\n    //    outputProperties: {\r\n    //        CATAST_Pol_Municipio: ['MUNICIPIO'],\r\n    //        ESTADI_Pol_EntidadPob: ['MUNICIPIO', 'ENTIDAD']\r\n    //    },\r\n    //    outputFormatLabel: {\r\n    //        CATAST_Pol_Municipio: '{0}',\r\n    //        ESTADI_Pol_EntidadPob: '{1} ({0})'\r\n    //    },\r\n    //    searchWeight: 1,\r\n    //    styles: [\r\n    //        {\r\n    //            polygon: {\r\n    //                fillColor: '#000000',\r\n    //                fillOpacity: 0,\r\n    //                strokeColor: '#ffffff',\r\n    //                strokeWidth: 5,\r\n    //                strokeOpacity: 1\r\n    //            }\r\n    //        },\r\n    //        {\r\n    //            polygon: {\r\n    //                fillColor: '#000000',\r\n    //                fillOpacity: 0.1,\r\n    //                strokeColor: '#feba1e',\r\n    //                strokeWidth: 2,\r\n    //                strokeOpacity: 1\r\n    //            }\r\n    //        }\r\n    //    ],\r\n    //    parser: self.getStringPattern.bind(this, [TC.Consts.searchType.LOCALITY]),\r\n    //    goTo: self.goToStringPattern\r\n    //};\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.COUNCIL] = {\r\n        root: null,\r\n        limit: false,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        featureType: 'CATAST_Pol_Concejo',\r\n        renderFeatureType: '',\r\n        dataIdProperty: ['CMUNICIPIO', 'CCONCEJO'],\r\n        queryProperties: {\r\n            firstQueryWord: ['CONCEJO']\r\n        },\r\n        outputProperties: ['MUNICIPIO', 'CONCEJO'],\r\n        outputFormatLabel: '{1} ({0})',\r\n        searchWeight: 4,\r\n        parser: self.getStringPattern.bind(this, [TC.Consts.searchType.COUNCIL]),\r\n        stringPatternToCheck: self.stringPatternsValidators.s_or_t,\r\n        goTo: self.goToStringPattern,\r\n        idPropertiesIdentifier: '#',\r\n        suggestionListHead: {\r\n            label: \"search.list.council\",\r\n            color: \"strokeColor\"\r\n        },\r\n        styles: [\r\n            {\r\n                polygon: {\r\n                    fillColor: '#000000',\r\n                    fillOpacity: 0.1,\r\n                    strokeColor: '#49006a',\r\n                    strokeWidth: 2,\r\n                    strokeOpacity: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.STREET] = {\r\n        root: null,\r\n        limit: null,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        renderFeatureType: 'CATAST_Txt_Calle',\r\n        featureType: 'CATAST_Lin_CalleEje',\r\n        dataIdProperty: ['CVIA'],\r\n        searchWeight: 5,\r\n        queryProperties: {\r\n            firstQueryWord: ['ENTINOAC', 'ENTIDADC'],\r\n            secondQueryWord: ['VIA', 'VIANOAC']\r\n        },\r\n        suggestionListHead: {\r\n            label: \"search.list.street\",\r\n            color: \"strokeColor\"\r\n        },\r\n        outputProperties: ['ENTIDADC', 'VIA', 'CVIA', 'CENTIDADC', 'CMUNICIPIO'],\r\n        outputFormatLabel: '{1}, {0}',\r\n        styles: [\r\n            {\r\n                line: {\r\n                    strokeColor: \"#CB0000\",\r\n                    strokeOpacity: 1,\r\n                    strokeWidth: 2,\r\n                    strokeLinecap: \"round\",\r\n                    strokeDashstyle: \"solid\"\r\n                }\r\n            },\r\n            {\r\n                point: {\r\n                    label: \"VIA\",\r\n                    angle: \"CADANGLE\",\r\n                    fontColor: \"#000000\",\r\n                    fontSize: 10,\r\n                    fontWeight: \"bold\",\r\n                    labelOutlineColor: \"#FFFFFF\",\r\n                    labelOutlineWidth: 4\r\n                }\r\n            }\r\n        ],\r\n        parser: self.getStringPattern.bind(this, [TC.Consts.searchType.STREET]),\r\n        goTo: self.goToStringPattern\r\n    };\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.NUMBER] = {\r\n        root: null,\r\n        limit: null,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        featureType: 'CATAST_Txt_Portal',\r\n        renderFeatureType: '',\r\n        searchWeight: 6,\r\n        dataIdProperty: ['CMUNICIPIO', 'CENTIDADC', 'CVIA', 'PORTAL'],\r\n        queryProperties: {\r\n            firstQueryWord: ['ENTIDADC', 'ENTINOAC'],\r\n            secondQueryWord: ['VIA', 'VIANOAC'],\r\n            thirdQueryWord: ['PORTAL']\r\n        },\r\n        suggestionListHead: {\r\n            label: \"search.list.number\",\r\n            color: \"fontColor\"\r\n        },\r\n        outputProperties: ['ENTIDADC', 'VIA', 'PORTAL', 'CVIA', 'CENTIDADC', 'CMUNICIPIO'],\r\n        outputFormatLabel: '{1} {2}, {0}',\r\n        styles: [\r\n            {\r\n                point: {\r\n                    radius: 0,\r\n                    label: \"PORTAL\",\r\n                    angle: \"CADANGLE\",\r\n                    fontColor: \"#CB0000\",\r\n                    fontSize: 14,\r\n                    labelOutlineColor: \"#FFFFFF\",\r\n                    labelOutlineWidth: 4\r\n                }\r\n            }\r\n        ],\r\n        parser: self.getStringPattern.bind(this, [TC.Consts.searchType.NUMBER]),\r\n        goTo: self.goToStringPattern\r\n    };\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.URBAN] = {\r\n        root: null,\r\n        limit: false,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        featureType: 'ESTADI_Pol_EntidadPob',\r\n        renderFeatureType: '',\r\n        dataIdProperty: ['CMUNICIPIO', 'CENTIDAD'],\r\n        idPropertiesIdentifier: '#',\r\n        queryProperties: {\r\n            firstQueryWord: ['ENTINOAC', 'ENTIDAD']\r\n        },\r\n        suggestionListHead: {\r\n            label: \"search.list.urban\",\r\n            color: \"strokeColor\"\r\n        },\r\n        outputProperties: ['MUNICIPIO', 'ENTIDAD'],\r\n        outputFormatLabel: '{1} ({0})',\r\n        searchWeight: 2,\r\n        styles: [\r\n            {\r\n                polygon: {\r\n                    fillColor: '#000000',\r\n                    fillOpacity: 0.1,\r\n                    strokeColor: '#feba1e',\r\n                    strokeWidth: 2,\r\n                    strokeOpacity: 1\r\n                }\r\n            }\r\n        ],\r\n        parser: self.getStringPattern.bind(this, [TC.Consts.searchType.URBAN]),\r\n        stringPatternToCheck: self.stringPatternsValidators.s_or_t,\r\n        goTo: self.goToStringPattern\r\n    };\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.PLACENAME] = {\r\n        root: null,\r\n        limit: false,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        featureType: 'TOPONI_Txt_Toponimos',\r\n        renderFeatureType: '',\r\n        dataIdProperty: ['CMUNICIPIO', 'CTOPONIMO'],\r\n        idPropertiesIdentifier: '#',\r\n        queryProperties: {\r\n            firstQueryWord: ['TOPONIMO', 'TOPONINOAC']\r\n        },\r\n        suggestionListHead: {\r\n            label: \"search.list.placeName\",\r\n            color: \"fontColor\"\r\n        },\r\n        outputProperties: ['MUNICIPIO', 'TOPONIMO', 'CMUNICIPIO', 'CTOPONIMO'],\r\n        outputFormatLabel: '{1} ({0})',\r\n        searchWeight: 7,\r\n        /*filterByMatch: true, // si queremos que filtre por expresión regular */\r\n        styles: [\r\n            {\r\n                point: {\r\n                    radius: 0,\r\n                    label: \"TOPONIMO\",\r\n                    angle: \"CADANGLE\",\r\n                    fontColor: \"#ff5722\",\r\n                    fontSize: 14,\r\n                    labelOutlineColor: \"#FFFFFF\",\r\n                    labelOutlineWidth: 4\r\n                }\r\n            }\r\n        ],\r\n        parser: self.getStringPattern.bind(this, [TC.Consts.searchType.PLACENAME]),\r\n        stringPatternToCheck: self.stringPatternsValidators.s_or_t,\r\n        goTo: self.goToStringPattern\r\n    };\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.PLACENAMEMUNICIPALITY] = {\r\n        root: null,\r\n        limit: false,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        featureType: 'TOPONI_Txt_Toponimos',\r\n        renderFeatureType: '',\r\n        dataIdProperty: ['CMUNICIPIO', 'CTOPONIMO'],\r\n        idPropertiesIdentifier: '#',\r\n        queryProperties: {\r\n            firstQueryWord: ['MUNICIPIO', 'MUNINOAC'],\r\n            secondQueryWord: ['TOPONIMO', 'TOPONINOAC']\r\n        },\r\n        suggestionListHead: {\r\n            label: \"search.list.placeName\",\r\n            color: \"fontColor\"\r\n        },\r\n        outputProperties: ['MUNICIPIO', 'TOPONIMO', 'CMUNICIPIO', 'CTOPONIMO'],\r\n        outputFormatLabel: '{1} ({0})',\r\n        searchWeight: 8,\r\n        /*filterByMatch: true, si queremos que filtre por expresión regular */\r\n        styles: [\r\n            {\r\n                point: {\r\n                    radius: 0,\r\n                    label: \"TOPONIMO\",\r\n                    angle: \"CADANGLE\",\r\n                    fontColor: \"#ff5722\",\r\n                    fontSize: 14,\r\n                    labelOutlineColor: \"#FFFFFF\",\r\n                    labelOutlineWidth: 4\r\n                }\r\n            }\r\n        ],\r\n        parser: self.getStringPattern.bind(this, [TC.Consts.searchType.PLACENAMEMUNICIPALITY]),\r\n        stringPatternToCheck: [self.stringPatternsValidators.ts, self.stringPatternsValidators.st],\r\n        goTo: self.goToStringPattern\r\n    };\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.COMMONWEALTH] = {\r\n        root: null,\r\n        limit: false,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        featureType: ['POLUCI_Pol_MancoRSUg'],\r\n        renderFeatureType: '',\r\n        dataIdProperty: ['CMANCOMUNI'],\r\n        queryProperties: {\r\n            firstQueryWord: ['MANCOMUNID']\r\n        },\r\n        outputProperties: ['MANCOMUNID'],\r\n        outputFormatLabel: '{0}',\r\n        searchWeight: 9,\r\n        styles: [\r\n            {\r\n                polygon: {\r\n                    fillColor: '#000000',\r\n                    fillOpacity: 0.1,\r\n                    strokeColor: '#fc4e2a',\r\n                    strokeWidth: 2,\r\n                    strokeOpacity: 1\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.ROAD] = {\r\n        root: null,\r\n        limit: false,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        featureType: 'INFRAE_Lin_CtraEje',\r\n        dataIdProperty: ['DCARRETERA'],\r\n        queryProperties: {\r\n            firstQueryWord: ['DCARRETERA']\r\n        },\r\n        suggestionListHead: {\r\n            label: \"search.list.road\",\r\n            color: \"strokeColor\"\r\n        },\r\n        outputProperties: ['DCARRETERA'],\r\n        outputFormatLabel: self.getLocaleString('search.list.road.shorter') + ': ' + '{0}',\r\n        searchWeight: 10,\r\n        styles: [\r\n            {\r\n                polygon: {\r\n                    strokeColor: \"#00b2fc\",\r\n                    strokeOpacity: 1,\r\n                    strokeWidth: 5\r\n                },\r\n                line: {\r\n                    strokeColor: \"#00b2fc\",\r\n                    strokeOpacity: 1,\r\n                    strokeWidth: 5,\r\n                    strokeLinecap: \"round\",\r\n                    strokeDashstyle: \"solid\"\r\n                }\r\n            }\r\n        ],\r\n        parser: self.getRoad,\r\n        goTo: self.goToRoad,\r\n        pattern: function () {\r\n            return new RegExp(\"^(?:(?:\" + self.getLocaleString(\"search.list.road\") + \"|\" + self.getLocaleString(\"search.list.road.shorter\") + \")\\\\:?)?\\\\s*((A?|AP?|N?|R?|E?|[A-Z]{2}?|[A-Z]{1}?)\\\\s*\\\\-?\\\\s*(\\\\d{1,4})\\\\s*\\\\-?\\\\s*(A?|B?|C?|R?))$\", \"i\")\r\n        }\r\n    };\r\n\r\n    self.availableSearchTypes[TC.Consts.searchType.ROADPK] = {\r\n        root: null,\r\n        limit: false,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        featureType: 'INFRAE_Sym_CtraPK',\r\n        dataIdProperty: ['DCARRETERA', 'CPK'],\r\n        queryProperties: {\r\n            firstQueryWord: ['DCARRETERA'],\r\n            secondQueryWord: ['PK']\r\n        },\r\n        suggestionListHead: {\r\n            label: \"search.list.pk.larger\",\r\n            color: \"fontColor\"\r\n        },\r\n        outputProperties: ['DCARRETERA', 'PK'],\r\n        outputFormatLabel: self.getLocaleString('search.list.road.shorter') + ': {0} ' + self.getLocaleString('search.list.pk') + ': {1}',\r\n        searchWeight: 11,\r\n        styles: [\r\n            {\r\n                point: {\r\n                    label: [\"DCARRETERA\", \"PK\"],\r\n                    fontColor: \"#00b2fc\",\r\n                    fontSize: 14,\r\n                    labelOutlineColor: \"#ffffff\",\r\n                    labelOutlineWidth: 2\r\n                }\r\n            }\r\n        ],\r\n        parser: self.getPK,\r\n        goTo: self.goToPK,\r\n        pattern: function () {\r\n            return new RegExp(\"^(?:(?:\" + self.getLocaleString(\"search.list.road\") + \"|\" + self.getLocaleString(\"search.list.road.shorter\") + \")\\\\:?)?\\\\s*((A?|AP?|N?|R?|E?|[A-Z]{2}?|[A-Z]{1}?)\\\\s*\\\\-?\\\\s*(\\\\d{1,4})\\\\s*\\\\-?\\\\s*(A?|B?|C?|R?))\\\\s*\\\\,*\\\\s*(?:(?:\" + self.getLocaleString(\"search.list.pk\") + \"\\\\:?)|(?:P\\\\:?)|(?:K\\\\:?)|(?:KM\\\\:?)|(?:\\\\s+|\\\\,+))\\\\s*(\\\\d{1,4})$\", \"i\")\r\n        }\r\n    };\r\n\r\n    self.rootCfg = {};\r\n    self.rootCfg[TC.Consts.searchType.MUNICIPALITY] = {\r\n        root: null,\r\n        limit: false,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        featureType: 'CATAST_Pol_Municipio',\r\n        dataIdProperty: ['CMUNICIPIO'],\r\n        queryProperties: {\r\n            firstQueryWord: ['MUNICIPIO']\r\n        },\r\n        outputProperties: ['MUNICIPIO'],\r\n        outputFormatLabel: '{0}',\r\n        getRootLabel: function () {\r\n            return new Promise(function (resolve, reject) {\r\n\r\n                if (self.rootCfg.active && !self.rootCfg[TC.Consts.searchType.MUNICIPALITY].rootLabel) {\r\n\r\n                    var params = {};\r\n                    params.SERVICE = 'WFS';\r\n                    params.VERSION = self.rootCfg[TC.Consts.searchType.MUNICIPALITY].version;\r\n                    params.REQUEST = 'GetFeature';\r\n                    params.TYPENAME = self.rootCfg[TC.Consts.searchType.MUNICIPALITY].featurePrefix + ':' + self.rootCfg[TC.Consts.searchType.MUNICIPALITY].featureType;\r\n                    params.OUTPUTFORMAT = self.rootCfg[TC.Consts.searchType.MUNICIPALITY].outputFormat;\r\n                    params.PROPERTYNAME = ['CMUNICIPIO'].concat(self.rootCfg[TC.Consts.searchType.MUNICIPALITY].outputProperties).join(',');\r\n\r\n                    params.CQL_FILTER = self.rootCfg[TC.Consts.searchType.MUNICIPALITY].root.map(function (elem) {\r\n                        return ['CMUNICIPIO'].map(function (id, index) {\r\n                            return id + '=' + elem[index];\r\n                        }).join(' AND ');\r\n                    });\r\n\r\n                    params.CQL_FILTER = params.CQL_FILTER.join(' OR ');\r\n\r\n                    TC.ajax({\r\n                        url: self.rootCfg[TC.Consts.searchType.MUNICIPALITY].url + '?' + TC.Util.getParamString(params),\r\n                        method: 'GET',\r\n                        responseType: TC.Consts.mimeType.JSON\r\n                    }).then(function (response) {\r\n                        const data = response.data;\r\n                        if (data.totalFeatures > 0) {\r\n\r\n                            self.rootCfg[TC.Consts.searchType.MUNICIPALITY].rootLabel = data.features.map(function (feature) {\r\n                                return {\r\n                                    id: ['CMUNICIPIO'].map(function (elem) {\r\n                                        return feature.properties[elem];\r\n                                    }).join('#'),\r\n                                    label: feature.properties[self.rootCfg[TC.Consts.searchType.MUNICIPALITY].outputProperties[0]].toLowerCase()\r\n                                };\r\n                            });\r\n\r\n                            resolve(self.rootCfg[TC.Consts.searchType.MUNICIPALITY].rootLabel);\r\n\r\n                        } else {\r\n                            self.rootCfg[TC.Consts.searchType.MUNICIPALITY].rootLabel = [];\r\n                            resolve(self.rootCfg[TC.Consts.searchType.MUNICIPALITY].rootLabel);\r\n                        }\r\n                    }).catch(function () {\r\n                        resolve([]);\r\n                    });\r\n                }\r\n                else {\r\n                    resolve(self.rootCfg[TC.Consts.searchType.MUNICIPALITY].rootLabel);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    self.rootCfg[TC.Consts.searchType.LOCALITY] = {\r\n        root: null,\r\n        limit: false,\r\n        url: self.url || '//idena.navarra.es/ogc/wfs',\r\n        version: self.version || '1.1.0',\r\n        outputFormat: TC.Consts.format.JSON,\r\n        featurePrefix: self.featurePrefix || 'IDENA',\r\n        geometryName: 'the_geom',\r\n        featureType: ['ESTADI_Pol_EntidadPob'],\r\n        renderFeatureType: '',\r\n        dataIdProperty: ['CMUNICIPIO', 'CENTIDADC'],\r\n        queryProperties: {\r\n            firstQueryWord: ['ENTINOAC']\r\n        },\r\n        outputProperties: ['ENTINOAC'],\r\n        getRootLabel: function () {\r\n            return new Promise(function (resolve, reject) {\r\n                if (self.rootCfg.active && !self.rootCfg[TC.Consts.searchType.LOCALITY].rootLabel) {\r\n\r\n                    var params = {};\r\n                    params.SERVICE = 'WFS';\r\n                    params.VERSION = self.rootCfg[TC.Consts.searchType.LOCALITY].version;\r\n                    params.REQUEST = 'GetFeature';\r\n                    params.TYPENAME = self.rootCfg[TC.Consts.searchType.LOCALITY].featurePrefix + ':' + self.rootCfg[TC.Consts.searchType.LOCALITY].featureType;\r\n                    params.OUTPUTFORMAT = self.rootCfg[TC.Consts.searchType.LOCALITY].outputFormat;\r\n                    params.PROPERTYNAME = ['CMUNICIPIO', 'CENTIDAD'].concat(self.rootCfg[TC.Consts.searchType.LOCALITY].outputProperties).join(',');\r\n\r\n                    params.CQL_FILTER = self.rootCfg[TC.Consts.searchType.LOCALITY].root.map(function (elem) {\r\n                        return ['CMUNICIPIO', 'CENTIDAD'].map(function (id, index) {\r\n                            return id + '=' + elem[index];\r\n                        }).join(' AND ');\r\n                    });\r\n\r\n                    params.CQL_FILTER = params.CQL_FILTER.join(' OR ');\r\n\r\n                    TC.ajax({\r\n                        url: self.rootCfg[TC.Consts.searchType.LOCALITY].url + '?' + TC.Util.getParamString(params),\r\n                        method: 'GET',\r\n                        responseType: TC.Consts.mimeType.JSON\r\n                    }).then(function (response) {\r\n                        const data = response.data;\r\n                        if (data.totalFeatures > 0) {\r\n\r\n                            self.rootCfg[TC.Consts.searchType.LOCALITY].rootLabel = data.features.map(function (feature) {\r\n                                return {\r\n                                    id: ['CMUNICIPIO', 'CENTIDAD'].map(function (elem) {\r\n                                        return feature.properties[elem];\r\n                                    }).join('#'),\r\n                                    label: feature.properties[self.rootCfg[TC.Consts.searchType.LOCALITY].outputProperties[0]].toLowerCase()\r\n                                };\r\n                            });\r\n\r\n                            resolve(self.rootCfg[TC.Consts.searchType.LOCALITY].rootLabel);\r\n\r\n                        } else {\r\n                            self.rootCfg[TC.Consts.searchType.LOCALITY].rootLabel = [];\r\n                            resolve(self.rootCfg[TC.Consts.searchType.LOCALITY].rootLabel);\r\n                        }\r\n                    }).catch(function () {\r\n                        resolve([]);\r\n                    });\r\n                }\r\n                else {\r\n                    resolve(self.rootCfg[TC.Consts.searchType.LOCALITY].rootLabel);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    self.allowedSearchTypes = [];\r\n\r\n    if (self.options.allowedSearchTypes) {\r\n        for (var allowed in self.options.allowedSearchTypes) {\r\n\r\n            if (self.availableSearchTypes[allowed] && !TC.Util.isEmptyObject(self.options.allowedSearchTypes[allowed])) {\r\n\r\n                // GLS: gestionamos el override de featureType y renderFeatureType.\r\n                // Si por defecto cuenta con renderFeatureType y sobrescribe featureType y no renderFeatureType, \r\n                // elimino la propiedad renderFeatureType y elimino el último estilo definido, que se corresponde con el de renderFeatureType.\r\n                if (self.availableSearchTypes[allowed].renderFeatureType && self.availableSearchTypes[allowed].renderFeatureType.length > 0 &&\r\n                    self.options.allowedSearchTypes[allowed].featureType && !self.options.allowedSearchTypes[allowed].renderFeatureType) {\r\n\r\n                    delete self.availableSearchTypes[allowed].renderFeatureType;\r\n                    self.availableSearchTypes[allowed].styles = self.availableSearchTypes[allowed].styles.slice(0, self.availableSearchTypes[allowed].styles.length - 1);\r\n                }\r\n\r\n                // GLS: override de la configuración por defecto con la del config.JSON\r\n                TC.Util.extend(self.availableSearchTypes[allowed], self.options.allowedSearchTypes[allowed]);\r\n\r\n\r\n                // GLS: Limitamos la búsqueda en portales y calles cuando así se establezca en la configuración de las búsquedas\r\n                if (self.options.allowedSearchTypes[allowed].root &&\r\n                    (allowed != TC.Consts.searchType.MUNICIPALITY && self.options.allowedSearchTypes[allowed].rootType == TC.Consts.searchType.MUNICIPALITY) ||\r\n                    (allowed != TC.Consts.searchType.LOCALITY && self.options.allowedSearchTypes[allowed].rootType == TC.Consts.searchType.LOCALITY)) {\r\n\r\n                    self.rootCfg.active = self.rootCfg[self.options.allowedSearchTypes[allowed].rootType];\r\n                    self.rootCfg.active.root = self.options.allowedSearchTypes[allowed].root;\r\n                    self.rootCfg.active.limit = self.options.allowedSearchTypes[allowed].limit;\r\n\r\n                    self.availableSearchTypes[TC.Consts.searchType.STREET].queryProperties.firstQueryWord =\r\n                        self.availableSearchTypes[TC.Consts.searchType.NUMBER].queryProperties.firstQueryWord =\r\n                        self.rootCfg.active.dataIdProperty;\r\n                }\r\n            }\r\n\r\n            // Si esta a false lo borramos de las disponibles\r\n            if (!self.options.allowedSearchTypes[allowed]) {\r\n                delete self.options.allowedSearchTypes[allowed];\r\n            } else {\r\n                self.addAllowedSearchType(allowed, self.availableSearchTypes[allowed] ? self.availableSearchTypes[allowed] : self.options.allowedSearchTypes[allowed], self);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (self.rootCfg.active) {\r\n        self.rootCfg.active.getRootLabel();\r\n    }\r\n\r\n    self.queryableFeatures = self.options.queryableFeatures || false;\r\n\r\n    self.UTMX_LEN = 6;\r\n    self.UTMY_LEN = 7;\r\n\r\n    self.wrap = new TC.wrap.control.Search(self);\r\n\r\n    self.interval = 500;\r\n\r\n    self.NORMAL_PATTERNS = {\r\n        ROMAN_NUMBER: /M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3}){1,}?\\S?\\./i,\r\n        ABSOLUTE_NOT_DOT: /[`~!@#$%^&*_|+\\=?;:'\"\\{\\}\\[\\]\\\\]/gi,\r\n        ABSOLUTE: /[`~!@#$%^&*_|+\\=?;:'.\\{\\}\\[\\]\\\\]/gi\r\n    };\r\n};\r\n\r\nTC.inherit(TC.control.Search, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.Search.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-search';\r\n\r\n    TC.Consts.event.SEARCHQUERYEMPTY = TC.Consts.event.SEARCHQUERYEMPTY || 'searchqueryempty.tc';\r\n\r\n    ctlProto.template = TC.apiLocation + \"TC/templates/tc-ctl-search.hbs\";\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        self._search = {\r\n            data: []\r\n        };\r\n\r\n        self.layerStyleFN = (function () {\r\n            function getFeatureType(idFeature) {\r\n                return idFeature.indexOf('.') > -1 ? idFeature.split('.')[0] : idFeature;\r\n            };\r\n            function getStyle(property, geomType, id) {\r\n\r\n                var type = self.getSearchTypeByFeature(id);\r\n                if (type) {\r\n                    var style = type.getStyleByFeatureType(getFeatureType(id));\r\n\r\n                    if (style && style.hasOwnProperty(geomType)) {\r\n                        return style[geomType][property];\r\n                    }\r\n                }\r\n\r\n                return TC.Cfg.styles[geomType][property];\r\n            };\r\n\r\n            return function (geomType, property, extractValue, f) {\r\n                var self = this;\r\n\r\n                if (TC.Feature && !(f instanceof TC.Feature)) {\r\n                    self.map.trigger(TC.Consts.event.FEATURESADD, { layer: self.layer, geom: f.geom });\r\n                }\r\n\r\n                var prop = getStyle(property, geomType, getFeatureType(f.id));\r\n                if (extractValue) {\r\n                    if (prop instanceof Array) {\r\n                        var values = prop.map(function (p) {\r\n                            return f.getData().hasOwnProperty(p) ? f.getData()[p] : '';\r\n                        });\r\n                        var searchType = this.getSearchTypeByFeature(getFeatureType(f.id));\r\n                        if (searchType) {\r\n                            return searchType.outputFormatLabel.tcFormat(values);\r\n                        } else {\r\n                            return values.join(' ');\r\n                        }\r\n                    } else {\r\n                        return f.getData().hasOwnProperty(prop) ? f.getData()[prop] : '';\r\n                    }\r\n                }\r\n                else {\r\n                    return prop;\r\n                }\r\n            };\r\n        }());\r\n\r\n        var styleFN = self.layerStyleFN;\r\n\r\n        self.layerPromise = map.addLayer({\r\n            id: self.getUID(),\r\n            title: 'Búsquedas',\r\n            owner: self,\r\n            stealth: true,\r\n            declutter: true,\r\n            type: TC.Consts.layerType.VECTOR,\r\n            styles: {\r\n                polygon: {\r\n                    fillColor: styleFN.bind(self, 'polygon', 'fillColor', false),\r\n                    fillOpacity: styleFN.bind(self, 'polygon', 'fillOpacity', false),\r\n                    strokeColor: styleFN.bind(self, 'polygon', 'strokeColor', false),\r\n                    strokeOpacity: styleFN.bind(self, 'polygon', 'strokeOpacity', false),\r\n                    strokeWidth: styleFN.bind(self, 'polygon', 'strokeWidth', false)\r\n                },\r\n                line: {\r\n                    strokeColor: styleFN.bind(self, 'line', 'strokeColor', false),\r\n                    strokeOpacity: styleFN.bind(self, 'line', 'strokeOpacity', false),\r\n                    strokeWidth: styleFN.bind(self, 'line', 'strokeWidth', false)\r\n                },\r\n                marker: {\r\n                    anchor: TC.Defaults.styles.marker.anchor,\r\n                    height: TC.Defaults.styles.marker.height,\r\n                    width: TC.Defaults.styles.marker.width\r\n                },\r\n                point: {\r\n                    radius: styleFN.bind(self, 'point', 'radius', false),\r\n                    height: styleFN.bind(self, 'point', 'height', false),\r\n                    width: styleFN.bind(self, 'point', 'width', false),\r\n                    fillColor: styleFN.bind(self, 'point', 'fillColor', false),\r\n                    fillOpacity: styleFN.bind(self, 'point', 'fillOpacity', false),\r\n                    strokeColor: styleFN.bind(self, 'point', 'strokeColor', false),\r\n                    strokeWidth: styleFN.bind(self, 'point', 'strokeWidth', false),\r\n                    fontSize: styleFN.bind(self, 'point', 'fontSize', false),\r\n                    fontColor: styleFN.bind(self, 'point', 'fontColor', false),\r\n                    labelOutlineColor: styleFN.bind(self, 'point', 'labelOutlineColor', false),\r\n                    labelOutlineWidth: styleFN.bind(self, 'point', 'labelOutlineWidth', false),\r\n                    label: styleFN.bind(self, 'point', 'label', true),\r\n                    angle: styleFN.bind(self, 'point', 'angle', true)\r\n                }\r\n            }\r\n        })\r\n            .then(function (layer) {\r\n                self.layer = layer;\r\n                return layer;\r\n            });\r\n\r\n        self.EMPTY_RESULTS_LABEL = self.getLocaleString('noResults');\r\n        self.EMPTY_RESULTS_TITLE = self.getLocaleString('checkCriterion');\r\n        self.OUTBBX_LABEL = self.getLocaleString('outsideOfLimits');\r\n\r\n        self.WFS_TYPE_ATTRS = [\"url\", \"version\", \"geometryName\", \"featurePrefix\", \"featureType\", \"properties\", \"outputFormat\"];\r\n\r\n        return result;\r\n    };\r\n\r\n    const highlighting = function (elm) {\r\n        const self = this;\r\n\r\n        var highlighted = elm.label;\r\n        var strReg = [];\r\n\r\n        // eliminamos caracteres extraños del patrón ya analizado\r\n\r\n        if (self.lastPattern.trim().length === 0 && self.textInput.value.trim().length > 0) {\r\n            self.lastPattern = self.textInput.value.trim();\r\n        }\r\n\r\n        var normalizedLastPattern = self.lastPattern;\r\n        if (self.NORMAL_PATTERNS.ROMAN_NUMBER.test(normalizedLastPattern))\r\n            normalizedLastPattern = normalizedLastPattern.replace(self.NORMAL_PATTERNS.ABSOLUTE_NOT_DOT, '');\r\n        else\r\n            normalizedLastPattern = normalizedLastPattern.replace(self.NORMAL_PATTERNS.ABSOLUTE, '');\r\n\r\n\r\n        var querys = [];\r\n        var separatorChar = ',';\r\n        if (normalizedLastPattern.indexOf(separatorChar) == -1) {\r\n            separatorChar = ' ';\r\n        }\r\n\r\n        querys = normalizedLastPattern.trim().split(separatorChar);\r\n\r\n        // si estamos tratando con coordenadas el separador es el espacio, no la coma\r\n        if ((elm.label.indexOf(self.LAT_LABEL) > -1 && elm.label.indexOf(self.LON_LABEL) > -1) ||\r\n            (elm.label.indexOf(self.UTMX_LABEL) > -1 && elm.label.indexOf(self.UTMY_LABEL) > -1)) {\r\n            querys = self.lastPattern.split(' ');\r\n\r\n            for (var t = 0; t < querys.length; t++) {\r\n                if (querys[t].trim().slice(-1) == ',')\r\n                    querys[t] = querys[t].slice(0, -1);\r\n            }\r\n        }\r\n\r\n        for (var q = 0; q < querys.length; q++) {\r\n            if (querys[q].trim().length > 0) {\r\n                strReg.push('(' + querys[q].trim().replace(/\\(/gi, \"\").replace(/\\)/gi, \"\") + ')');\r\n                var match = /((\\<)|(\\>)|(\\<\\>))/gi.exec(querys[q].trim());\r\n                if (match) {\r\n                    var _strReg = querys[q].trim().replace(/((\\<)|(\\>)|(\\<\\>))/gi, '').split(' ');\r\n                    for (var st = 0; st < _strReg.length; st++) {\r\n                        if (_strReg[st].trim().length > 0)\r\n                            strReg.push('(' + _strReg[st].trim().replace(/\\(/gi, \"\\\\(\").replace(/\\)/gi, \"\\\\)\") + ')');\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (elm.dataRole == TC.Consts.searchType.ROAD || elm.dataRole == TC.Consts.searchType.ROADPK) {\r\n            var rPattern = self.getSearchTypeByRole(elm.dataRole).getPattern();\r\n            var match = rPattern.exec(self.lastPattern);\r\n\r\n            if (match) {\r\n                strReg = [];\r\n\r\n                if (match[2] && match[3] && match[4]) {\r\n                    strReg.push('(' + match[2] + \"-\" + match[3] + \"-\" + match[4] + ')');\r\n                } else if (match[2] && match[3]) {\r\n                    strReg.push('(' + match[2] + \"-\" + match[3] + ')');\r\n                } else if (match[3] && match[4]) {\r\n                    strReg.push('(' + match[3] + \"-\" + match[4] + ')');\r\n                } else if (match[2] || match[3]) {\r\n                    strReg.push('(' + (match[2] || match[3]) + ')');\r\n                }\r\n\r\n                if (match[5]) {\r\n                    strReg.push(\"(?:\" + self.getLocaleString(\"search.list.pk\") + \"\\\\:\\\\s\\\\d*)\" + \"(\" + match[5] + \")\" + \"\\\\d*\");\r\n                }\r\n            } else if (match && match[5]) {\r\n                strReg = [];\r\n\r\n                strReg.push(\"(?:\" + self.getLocaleString(\"search.list.pk\") + \"\\\\:\\\\s\\\\d*)\" + \"(\" + match[5] + \")\" + \"\\\\d*\");\r\n            }\r\n        }\r\n\r\n        var pattern = '(' + strReg.join('|') + ')';\r\n\r\n        pattern = pattern.replace(/á|à/gi, \"a\");\r\n        pattern = pattern.replace(/é|è/gi, \"e\");\r\n        pattern = pattern.replace(/í|ì/gi, \"i\");\r\n        pattern = pattern.replace(/ó|ò/gi, \"o\");\r\n        pattern = pattern.replace(/ú|ù/gi, \"u\");\r\n        pattern = pattern.replace(/ü/gi, \"u\");\r\n\r\n        pattern = pattern.replace(/a/gi, \"[a|á|à]\");\r\n        pattern = pattern.replace(/e/gi, \"[e|é|è]\");\r\n        pattern = pattern.replace(/i/gi, \"[i|í|ì]\");\r\n        pattern = pattern.replace(/o/gi, \"[o|ó|ò]\");\r\n        pattern = pattern.replace(/u/gi, \"[u|ú|ü|ù]\");\r\n        var rex = new RegExp(pattern, \"gi\");\r\n\r\n        var label = elm.label;\r\n\r\n        if (elm.dataRole !== TC.Consts.searchType.ROAD || elm.dataRole !== TC.Consts.searchType.ROADPK) {\r\n            highlighted = label.replace(rex,\r\n                function () {\r\n                    var params = Array.prototype.slice.call(arguments, 0);\r\n\r\n                    if (params[params.length - 3]) {\r\n                        return params[0].replace(params[params.length - 3], \"<b>\" + params[params.length - 3] + \"</b>\");\r\n                    } else {\r\n                        return \"<b>\" + params[0] + \"</b>\";\r\n                    }\r\n                });\r\n        } else {\r\n            highlighted = label.replace(rex, \"<b>$1</b>\");\r\n        }\r\n\r\n        return highlighted;\r\n    };\r\n\r\n    const selectionCallback = function (e) {\r\n        const self = this;\r\n        var _target = e.target;\r\n\r\n        if (_target.tagName.toLowerCase() !== 'a') {\r\n            let el = e.target;\r\n            const matchesSelector = el.matches || el.webkitMatchesSelector || el.mozMatchesSelector || el.msMatchesSelector;\r\n\r\n            while (el) {\r\n                if (matchesSelector.call(el, 'a')) {\r\n                    _target = el;\r\n                    break;\r\n                } else {\r\n                    el = el.parentElement;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (_target.querySelector('span[hidden]')) {\r\n            self.textInput.value = _target.querySelector('span[hidden]').textContent;\r\n            self.lastPattern = self.textInput.value;\r\n            self._goToResult(unescape(_target.getAttribute('href')).substring(1), _target.parentNode.getAttribute('dataRole'));\r\n            TC.UI.autocomplete.call(self.textInput, 'clear');\r\n        }\r\n    };\r\n\r\n    const sortAlphaNum = function (a, b) {\r\n        const reA = /[^a-zA-Z]/g;\r\n        const reN = /[^0-9]/g;\r\n\r\n        var AInt = parseInt(a, 10);\r\n        var BInt = parseInt(b, 10);\r\n\r\n        if (isNaN(AInt) && isNaN(BInt)) {\r\n            var aA = a.replace(reA, \"\");\r\n            var bA = b.replace(reA, \"\");\r\n            if (aA === bA) {\r\n                var aN = parseInt(a.replace(reN, \"\"), 10);\r\n                var bN = parseInt(b.replace(reN, \"\"), 10);\r\n                return aN === bN ? 0 : aN > bN ? 1 : -1;\r\n            } else {\r\n                return aA > bA ? 1 : -1;\r\n            }\r\n        } else if (isNaN(AInt)) {//A is not an Int\r\n            return 1;//to make alphanumeric sort first return -1 here\r\n        } else if (isNaN(BInt)) {//B is not an Int\r\n            return -1;//to make alphanumeric sort first return 1 here\r\n        } else {\r\n            return AInt > BInt ? 1 : -1;\r\n        }\r\n    };\r\n\r\n    const sortByRoleAndAlphabet = function (a, b) {\r\n        const self = this;\r\n\r\n        if (self.getSearchTypeByRole(a.dataRole).searchWeight && self.getSearchTypeByRole(b.dataRole).searchWeight) {\r\n            if ((self.getSearchTypeByRole(a.dataRole).searchWeight || 0) > (self.getSearchTypeByRole(b.dataRole).searchWeight || 0)) {\r\n                return 1;\r\n            } else if ((self.getSearchTypeByRole(a.dataRole).searchWeight || 0) < (self.getSearchTypeByRole(b.dataRole).searchWeight || 0)) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return sortAlphaNum(a.label, b.label);\r\n            }\r\n        } else {\r\n            if (a.dataRole > b.dataRole) {\r\n                return 1;\r\n            }\r\n            else if (a.dataRole < b.dataRole)\r\n                return -1;\r\n            else {\r\n                return sortAlphaNum(a.label, b.label);\r\n            }\r\n        }\r\n    };\r\n\r\n    const sortByRoot = function (a, b) {\r\n        const self = this;\r\n\r\n        const sort_ = function () {\r\n            var first = self.rootCfg.active.root[0] instanceof Array ? self.rootCfg.active.root[0].join('-') : self.rootCfg.active.root[0];\r\n\r\n            var aRoot, bRoot;\r\n            if (a.properties && a.properties.length > 0 && b.properties && b.properties.length > 0) {\r\n                aRoot = self.rootCfg.active.dataIdProperty.map(function (elem) { return a.properties[elem].toString(); }).join('-');\r\n                bRoot = self.rootCfg.active.dataIdProperty.map(function (elem) { return b.properties[elem].toString(); }).join('-');\r\n            } else {\r\n                aRoot = a.id;\r\n                bRoot = b.id;\r\n            }\r\n\r\n            if (aRoot !== first && bRoot === first) {\r\n                return 1;\r\n            } else if (aRoot === first && bRoot !== first) {\r\n                return -1;\r\n            } else {\r\n                return sortAlphaNum(a.label, b.label);\r\n            }\r\n        }.bind(this);\r\n\r\n        if (self.getSearchTypeByRole(a.dataRole).searchWeight && self.getSearchTypeByRole(b.dataRole).searchWeight) {\r\n            if ((self.getSearchTypeByRole(a.dataRole).searchWeight || 0) > (self.getSearchTypeByRole(b.dataRole).searchWeight || 0)) {\r\n                return 1;\r\n            } else if ((self.getSearchTypeByRole(a.dataRole).searchWeight || 0) < (self.getSearchTypeByRole(b.dataRole).searchWeight || 0)) {\r\n                return -1;\r\n            }\r\n            else {\r\n                return sort_();\r\n            }\r\n        }\r\n        else {\r\n            return sort_();\r\n        }\r\n    };\r\n\r\n    const buildHTML = function (results) {\r\n        const self = this;\r\n\r\n        var html = [];\r\n        var dataRoles = [];\r\n\r\n        // ordenamos por roles y alfabéticamente\r\n        var data = results.results.sort(sortByRoleAndAlphabet.bind(self));\r\n\r\n        if (self.rootCfg.active) {// si hay root, aplicamos el orden por entidades \r\n            data = data.sort(sortByRoot.bind(self));\r\n        }\r\n\r\n        for (var i = 0; i < data.length; i++) {\r\n            var elm = data[i];\r\n\r\n            if (dataRoles.indexOf(elm.dataRole) == -1) {\r\n                html.push(self.getSearchTypeByRole(elm.dataRole).getSuggestionListHead());\r\n                dataRoles.push(elm.dataRole);\r\n            }\r\n\r\n            html.push(`<li dataRole=\"${elm.dataRole}\"><a href=\"#${encodeURIComponent(elm.id)}\"><span hidden>${elm.label}</span>${highlighting.call(self, elm)}</a></li>`);\r\n        }\r\n\r\n        Array.prototype.map.call(self.resultsList.querySelectorAll('li[dataRole]'), (elm) => {\r\n            return elm.getAttribute('dataRole');\r\n        }).filter((dataRole, i, liDataRoles) => {\r\n            return liDataRoles.indexOf(dataRole) === i && !dataRoles.includes(dataRole);\r\n        }).forEach(dataRole => {\r\n            html.push(self.getSearchTypeByRole(dataRole).getSuggestionListHead());\r\n            html.push(`<li dataRole=\"${dataRole}\"><a class=\"tc-ctl-search-li-loading\" href=\"#\">${self.getLocaleString('searching')}<span class=\"tc-ctl-search-loading-spinner tc-ctl-search-loading\"></span></a></li>`);\r\n        });\r\n        \r\n        return html.join('');\r\n    };\r\n\r\n    ctlProto.renderData = function (data, callback) {\r\n        var self = this;\r\n\r\n        self._search = self._search || {};\r\n\r\n        var _search = function () {\r\n            self.search(self.textInput.value, function (list) {\r\n                if (list.length === 1) {\r\n                    self.textInput.value = list[0].label;\r\n                    self._goToResult(list[0].id, self.resultsList.querySelector('li:not([header])').getAttribute('dataRole'));\r\n                    self.resultsList.classList.add(TC.Consts.classes.HIDDEN);\r\n                }\r\n                else if (list.length === 0) {\r\n                    self.resultsList.classList.add(TC.Consts.classes.HIDDEN);\r\n                }\r\n            });\r\n        };\r\n\r\n        return TC.Control.prototype.renderData.call(self, data, function () {\r\n\r\n            // desde keypress y desde la lupa\r\n            var _research = function () {\r\n                self.textInput.value = self.resultsList.label || self.resultsList.querySelector('li:not([header]) > a > span').textContent;\r\n                self.lastPattern = self.textInput.value;\r\n                self._goToResult(self.resultsList.id || unescape(self.resultsList.querySelector('li:not([header]) > a').getAttribute('href')).substring(1), self.resultsList.querySelector('li:not([header])').getAttribute('dataRole'));\r\n                self.resultsList.classList.add(TC.Consts.classes.HIDDEN);\r\n            };\r\n\r\n            self.textInput = self.div.querySelector('input.tc-ctl-search-txt');\r\n            if (self.options && self.options.placeHolder) {\r\n                self.textInput.setAttribute('placeHolder', self.options.placeHolder.trim());\r\n            }\r\n\r\n            self.resultsList = self.div.querySelector('.tc-ctl-search-list');\r\n            self.button = self.div.querySelector('.tc-ctl-search-btn');\r\n            self.button.addEventListener(TC.Consts.event.CLICK, function () {\r\n                self.getLayer().then(function (l) {\r\n                    if (self.resultsList.querySelectorAll('li > a:not(.tc-ctl-search-li-loading):not(.tc-ctl-search-li-empty)').length > 1) { }\r\n                    else if (l.features.length > 0) {\r\n                        l.map.zoomToFeatures(l.features);\r\n                    }\r\n                    else if (self.resultsList.querySelectorAll('li > a:not(.tc-ctl-search-li-loading):not(.tc-ctl-search-li-empty)').length === 1) {\r\n                        _research();\r\n                    }\r\n                    else {\r\n                        self.textInput.dispatchEvent(new Event(\"keyup\"));\r\n                    }\r\n                });\r\n            }, { passive: true });\r\n            if (self.options.instructions) {\r\n                self.textInput.setAttribute('title', self.options.instructions.trim());\r\n                self.button.setAttribute('title', self.options.instructions.trim());\r\n            }\r\n\r\n            // GLS: añadimos la funcionalidad al mensaje de \"No hay resultados\", al hacer click repliega el mensaje.\r\n            self.resultsList.addEventListener(TC.Consts.event.CLICK, TC.EventTarget.listenerBySelector('a.tc-ctl-search-li-empty', function () {\r\n                self.resultsList.classList.add(TC.Consts.classes.HIDDEN);\r\n                self.textInput.focus();\r\n            }), { passive: true });\r\n\r\n            self.textInput.addEventListener('keypress', function (e) {\r\n                if (e.which == 13) {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n\r\n                    self.lastPattern = \"\";\r\n\r\n                    if (self.resultsList.querySelectorAll('li > a:not(.tc-ctl-search-li-loading):not(.tc-ctl-search-li-empty)').length === 1) {\r\n                        _research();\r\n                    } else {\r\n                        _search();\r\n                    }\r\n                    return false;\r\n                }\r\n            });\r\n            self.textInput.addEventListener(\"search\", function () {\r\n                if (self.textInput.value.length === 0) {\r\n                    self.resultsList.classList.add(TC.Consts.classes.HIDDEN);\r\n                    _search();\r\n                }\r\n            });\r\n            self.textInput.addEventListener(\"input\", function () {\r\n                if (self.textInput.value.length === 0) {\r\n                    self.resultsList.classList.add(TC.Consts.classes.HIDDEN);\r\n                    _search();\r\n                }\r\n            });\r\n            self.textInput.addEventListener(\"targetCleared.autocomplete\", function () {\r\n                self.resultsList.classList.add(TC.Consts.classes.HIDDEN);\r\n            })\r\n            self.textInput.addEventListener(\"targetUpdated.autocomplete\", function () {\r\n                if (self.resultsList.querySelectorAll('li').length > 0) {\r\n                    self.resultsList.classList.remove(TC.Consts.classes.HIDDEN);\r\n                }\r\n            });\r\n\r\n            self.lastPattern = '';\r\n            self.retryTimeout = null;\r\n            TC.loadJS(\r\n                !TC.UI || !TC.UI.autocomplete,\r\n                [TC.apiLocation + 'TC/ui/autocomplete.js'],\r\n                function () {\r\n                    var searchDelay;\r\n\r\n                    const source = function (text, callback) {\r\n                        self.lastpress = performance.now();\r\n\r\n                        if (!searchDelay) {\r\n                            function step() {\r\n                                var criteria = self.textInput.value.trim();\r\n\r\n                                if (criteria.length > 0 &&\r\n                                    (!self.lastPattern || criteria != self.lastPattern) &&\r\n                                    performance.now() - self.lastpress > self.interval) {\r\n\r\n                                    window.cancelAnimationFrame(searchDelay);\r\n                                    searchDelay = undefined;\r\n\r\n                                    self.resultsList.classList.add(TC.Consts.classes.HIDDEN);\r\n\r\n                                    // Pendiente de afinar\r\n                                    //if (self.lastPattern && criteria.substring(0, criteria.lastIndexOf(' ')) == self.lastPattern) {                                            \r\n\r\n                                    //    // Si el patrón de búsqueda anterior y actual es el mismo más algo nuevo (típico en la búsqueda de un portal), lo nuevo lo separo por coma\r\n                                    //    // self.lastPattern: \"Calle Cataluña/Katalunia Kalea, Pamplona\"\r\n                                    //    // text: \"Calle Cataluña/Katalunia Kalea, Pamplona 18\"\r\n\r\n                                    //    criteria = criteria.substring(0, criteria.lastIndexOf(' ')) + (self.lastPattern.trim().endsWith(',') ? \"\" : \",\") + criteria.substring(criteria.lastIndexOf(' '));\r\n                                    //}\r\n\r\n                                    self.lastPattern = criteria;\r\n\r\n                                    self.search(criteria, callback);\r\n                                } else {\r\n                                    searchDelay = requestAnimationFrame(step);\r\n                                }\r\n                            }\r\n\r\n                            searchDelay = requestAnimationFrame(step);\r\n                        }\r\n                    };\r\n\r\n                    TC.UI.autocomplete.call(self.textInput, {\r\n                        link: '#',\r\n                        target: self.resultsList,\r\n                        minLength: 2,\r\n                        ctx: self,\r\n                        source: source,\r\n                        callback: selectionCallback.bind(self),\r\n                        buildHTML: buildHTML.bind(self)\r\n                    });\r\n\r\n                    const getNextSibling = function (elem, selector) {\r\n                        // Get the next sibling element\r\n                        var sibling = elem.nextElementSibling;\r\n                        // If there's no selector, return the first sibling\r\n                        if (!selector) return sibling;\r\n                        // If the sibling matches our selector, use it\r\n                        // If not, jump to the next sibling and continue the loop\r\n                        while (sibling) {\r\n                            if (sibling.matches(selector)) return sibling;\r\n                            sibling = sibling.nextElementSibling\r\n                        }\r\n                    };\r\n\r\n                    const getPreviousSibling = function (elem, selector) {\r\n                        // Get the next sibling element\r\n                        var sibling = elem.previousElementSibling;\r\n                        // If there's no selector, return the first sibling\r\n                        if (!selector) return sibling;\r\n                        // If the sibling matches our selector, use it\r\n                        // If not, jump to the next sibling and continue the loop\r\n                        while (sibling) {\r\n                            if (sibling.matches(selector)) return sibling;\r\n                            sibling = sibling.previousElementSibling;\r\n                        }\r\n                    };\r\n\r\n                    // Detect up/down arrow\r\n                    const onKeydown = function (e) {\r\n                        if (!e.ctrlKey && !e.altKey && !e.shiftKey) {\r\n                            if (e.keyCode === 40) { // down arrow\r\n                                if (self.textInput == document.activeElement && self.resultsList.querySelector('li:not([header]) a')) {\r\n                                    // Scenario 1: We're focused on the search input; move down to the first li\r\n                                    self.resultsList.querySelector('li:not([header]) a').focus();\r\n                                } else if (self.resultsList.querySelector('li:not([header]):last-child a') === document.activeElement) { //} else if (self.resultsList.querySelector('li:not([header]):last a').is(':focus')) {\r\n                                    // Scenario 2: We're focused on the last li; move up to search input\r\n                                    self.textInput.focus();\r\n                                } else {\r\n                                    // Scenario 3: We're in the list but not on the last element, simply move down\r\n                                    getNextSibling(document.activeElement.parentElement, 'li:not([header])')\r\n                                        .querySelector('a').focus();\r\n                                }\r\n                                e.preventDefault(); // Stop page from scrolling\r\n                                e.stopPropagation();\r\n                            } else if (e.keyCode === 38) { // up arrow\r\n                                if (self.textInput == document.activeElement) {\r\n                                    // Scenario 1: We're focused on the search input; move down to the last li\r\n                                    self.resultsList.querySelector('li:not([header]):last-child a').focus();\r\n                                } else if (document.activeElement == self.resultsList.querySelector('li:not([header]) a')) {\r\n                                    self.resultsList.querySelector('li:not([header]):last-child a').focus();\r\n                                } else {\r\n                                    // Scenario 3: We're in the list but not on the first element, simply move up\r\n                                    getPreviousSibling(document.activeElement.parentElement, 'li:not([header])')\r\n                                        .querySelector('a').focus();\r\n                                }\r\n                                e.preventDefault(); // Stop page from scrolling\r\n                                e.stopPropagation();\r\n                            }\r\n                        }\r\n                        e.stopPropagation();\r\n                    };\r\n\r\n                    self.textInput.addEventListener('keydown', onKeydown);\r\n                    self.resultsList.addEventListener('keydown', onKeydown);\r\n                }\r\n            );\r\n\r\n            if (TC.Util.isFunction(callback)) {\r\n                callback();\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.addAllowedSearchType = function (name, options) {\r\n        var self = this;\r\n\r\n        self.allowedSearchTypes.push(new SearchType(name, options, self));\r\n    };\r\n\r\n    ctlProto.getSearchTypeByRole = function (type) {\r\n        var self = this;\r\n\r\n        return self.allowedSearchTypes.filter(function (allowed) {\r\n            return allowed.typeName == type;\r\n        })[0];\r\n    };\r\n\r\n    ctlProto.getSearchTypeByFeature = function (id) {\r\n        var self = this;\r\n\r\n        var type = self.allowedSearchTypes.filter(function (allowed) {\r\n            return allowed.isFeatureOfThisType(id);\r\n        });\r\n\r\n        if (type.length > 0) {\r\n            return type[0];\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    ctlProto.getElementOnSuggestionList = function (id, dataRole) {\r\n        const self = this;\r\n\r\n        for (var i = 0; i < self.searchRequestsResults.length; i++) {\r\n            if (self.searchRequestsResults[i].id == id && (!dataRole || (dataRole && self.searchRequestsResults[i].dataRole === dataRole)))\r\n                return self.searchRequestsResults[i];\r\n        }\r\n    };\r\n\r\n    ctlProto.getLayer = function () {\r\n        const self = this;\r\n        return self.layerPromise;\r\n    };\r\n\r\n    ctlProto.getFeatures = function () {\r\n        const self = this;\r\n        return self.layer.features;\r\n    };\r\n\r\n    ctlProto.cleanMap = function () {\r\n        const self = this;\r\n\r\n        if (self.layer) {\r\n            const l = self.layer;\r\n            var features = l.features.slice();\r\n            l.clearFeatures();\r\n\r\n            self.map.trigger(TC.Consts.event.FEATUREREMOVE, { layer: l, feature: features });\r\n\r\n            for (var i = 0; i < self.WFS_TYPE_ATTRS.length; i++) {\r\n                if (l.hasOwnProperty(self.WFS_TYPE_ATTRS[i]))\r\n                    delete l[self.WFS_TYPE_ATTRS[i]];\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.getMunicipalities = function () {\r\n        var self = this;\r\n\r\n        TC.cache.search = TC.cache.search || {};\r\n        self._municipalitiesPromise = new Promise(function (resolve, reject) {\r\n            if (TC.cache.search.municipalities) {\r\n                resolve(TC.cache.search.municipalities);\r\n            }\r\n            else {\r\n                var type = self.getSearchTypeByRole(TC.Consts.searchType.CADASTRAL);\r\n\r\n                if (type.municipality && type.municipality.featureType && type.municipality.labelProperty && type.municipality.idProperty) {\r\n                    var params = {\r\n                        REQUEST: 'GetFeature',\r\n                        SERVICE: 'WFS',\r\n                        TYPENAME: type.municipality.featureType,\r\n                        VERSION: type.version,\r\n                        PROPERTYNAME: type.municipality.labelProperty + \",\" + type.municipality.idProperty,\r\n                        OUTPUTFORMAT: type.outputFormat\r\n                    };\r\n                    if (type.featurePrefix) {\r\n                        params.TYPENAME = type.featurePrefix + ':' + params.TYPENAME;\r\n                    }\r\n                    var url = type.url + '?' + TC.Util.getParamString(params);\r\n                    TC.ajax({\r\n                        url: url,\r\n                        method: 'GET',\r\n                        responseType: 'text'\r\n                    }).then(function (response) {\r\n                        const data = response.data;\r\n                        var parser;\r\n                        if (type.outputFormat === TC.Consts.format.JSON) {\r\n                            parser = new TC.wrap.parser.JSON();\r\n                        }\r\n                        else {\r\n                            parser = new TC.wrap.parser.WFS({\r\n                                featureNS: type.municipality.featurePrefix,\r\n                                featureType: type.municipality.featureType\r\n                            });\r\n                        }\r\n                        var features = parser.read(data);\r\n                        TC.cache.search.municipalities = [];\r\n                        for (var i = 0; i < features.length; i++) {\r\n                            var feature = features[i];\r\n                            TC.cache.search.municipalities.push({ label: feature.data[type.municipality.labelProperty], id: feature.data[type.municipality.idProperty] });\r\n                        }\r\n\r\n                        TC.cache.search.municipalities.sort(function (a, b) {\r\n                            var result;\r\n                            if (a.label < b.label) {\r\n                                result = -1;\r\n                            }\r\n                            else if (a.label > b.label) {\r\n                                result = 1;\r\n                            }\r\n                            else {\r\n                                result = 0;\r\n                            }\r\n                            return result;\r\n                        });\r\n\r\n                        resolve(TC.cache.search.municipalities);\r\n                    }).catch(function () {\r\n                        resolve();\r\n                    });\r\n                } else {\r\n                    throw new Error(\"Error en la configuración de la búsqueda: \" + type.typeName + \". Error en el objeto municipality\");\r\n                }\r\n            }\r\n        });\r\n        return self._municipalitiesPromise;\r\n    };\r\n\r\n    ctlProto.getCoordinates = function (pattern) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var match = pattern.match(new RegExp('^' + self.UTMX_LABEL.trim().toLowerCase() + '*\\\\s*([-+]?[0-9]{' + self.UTMX_LEN + '}(?:[.,]\\\\d+)?)\\\\s*\\\\,?\\\\s*' + self.UTMY_LABEL.trim().toLowerCase() + '*\\\\s*([-+]?[0-9]{' + self.UTMY_LEN + '}(?:[.,]\\\\d+)?)$'));\r\n            if (match) {\r\n                pattern = match[1] + ' ' + match[2];\r\n            }\r\n\r\n            match = pattern.match(new RegExp('^' + self.LAT_LABEL.trim().toLowerCase() + '*\\\\s*([-+]?\\\\d{1,3}([.,]\\\\d+)?)\\\\,?\\\\s*' + self.LON_LABEL.trim().toLowerCase() + '*\\\\s*([-+]?\\\\d{1,2}([.,]\\\\d+)?)$'));\r\n            if (match) {\r\n                pattern = match[1] + ' ' + match[3];\r\n            }\r\n\r\n            if (/\\d/.test(pattern) && (new RegExp('^([-+]?[0-9]{' + self.UTMX_LEN + '}(?:[.,]\\\\d+)?)\\\\s*\\\\,?\\\\s*([-+]?[0-9]{' + self.UTMY_LEN + '}(?:[.,]\\\\d+)?)$').test(pattern) || /^([-+]?\\d{1,3}([.,]\\d+)?)\\,?\\s*([-+]?\\d{1,2}([.,]\\d+)?)$/.test(pattern))) {\r\n                match = /^([-+]?\\d{1,3}([.,]\\d+)?)\\,?\\s*([-+]?\\d{1,2}([.,]\\d+)?)$/.exec(pattern);\r\n                if (match && (match[1].indexOf(',') > -1 || match[3].indexOf(',') > -1)) {\r\n                    match[1] = match[1].replace(',', '.');\r\n                    match[3] = match[3].replace(',', '.');\r\n\r\n                    pattern = match[1] + ' ' + match[3];\r\n                }\r\n\r\n                if (!match || match && ((match[1].indexOf(',') > -1 ? match[1].replace(',', '.') : match[1]) <= 180) && ((match[3].indexOf(',') > -1 ? match[3].replace(',', '.') : match[3]) <= 90)) {\r\n\r\n                    match = new RegExp('^([-+]?[0-9]{' + self.UTMX_LEN + '}(?:[.,]\\\\d+)?)\\\\s*\\\\,?\\\\s*([-+]?[0-9]{' + self.UTMY_LEN + '}(?:[.,]\\\\d+)?)$').exec(pattern);\r\n                    if (match && (match[1].indexOf(',') > -1 || match[2].indexOf(',') > -1)) {\r\n                        match[1] = match[1].replace(',', '.');\r\n                        match[2] = match[2].replace(',', '.');\r\n\r\n                        pattern = match[1] + ' ' + match[2];\r\n                    }\r\n\r\n                    // parse coordinates\r\n                    pattern = pattern.replace(self.UTMX_LABEL, '').replace(self.UTMY_LABEL, '').replace(self.LON_LABEL, '').replace(self.LAT_LABEL, '');\r\n                    var coords = TC.Util.parseCoords(pattern);\r\n                    if (coords) {\r\n                        var xValue = coords[0].value;\r\n                        var yValue = coords[1].value;\r\n                        var xLabel = (coords[0].type === TC.Consts.UTM) ? self.UTMX : self.LAT;\r\n                        var yLabel = (coords[1].type === TC.Consts.UTM) ? self.UTMY : self.LON;\r\n                        var id = xLabel + xValue + yLabel + yValue;\r\n\r\n                        var point = self.getPoint(id);\r\n                        if (point && !self.insideLimit(point)) {\r\n                            xValue = coords[1].value;\r\n                            yValue = coords[0].value;\r\n                            xLabel = (coords[1].type === TC.Consts.UTM) ? self.UTMX : self.LAT;\r\n                            yLabel = (coords[0].type === TC.Consts.UTM) ? self.UTMY : self.LON;\r\n                            id = xLabel + xValue + yLabel + yValue;\r\n                            point = self.getPoint(id);\r\n                        }\r\n\r\n                        if (point) {\r\n                            self.availableSearchTypes[TC.Consts.searchType.COORDINATES].label = /^X([-+]?\\d+(?:\\.\\d+)?)Y([-+]?\\d+(?:\\.\\d+)?)$/.test(id) ? self.getLocaleString('search.list.coordinates.utm') + self.map.crs : self.getLocaleString('search.list.coordinates.geo');\r\n\r\n                            //console.log('getCoordinates promise resuelta');\r\n                            resolve([{\r\n                                id: id, label: self.getLabel(id), dataRole: TC.Consts.searchType.COORDINATES\r\n                            }]);\r\n                        }\r\n                        else {\r\n                            //console.log('getCoordinates promise resuelta');\r\n                            reject();\r\n                        }\r\n                    } else {\r\n                        //console.log('getCoordinates promise resuelta');\r\n                        reject();\r\n                    }\r\n                } else {\r\n                    //console.log('getCoordinates promise resuelta');\r\n                    reject();\r\n                }\r\n            } else {\r\n                //console.log('getCoordinates promise resuelta');\r\n                reject();\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.getCadastralRef = function (pattern) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var match = pattern.match(new RegExp(self.MUN_LABEL.trim().toLowerCase() + '?\\\\s(.*)\\\\,\\\\s?' + self.POL_LABEL.trim().toLowerCase() + '?\\\\s(\\\\d{1,2})\\\\,\\\\s?' + self.PAR_LABEL.trim().toLowerCase() + '?\\\\s(\\\\d{1,4})'));\r\n            if (match) {\r\n                pattern = match[1] + ', ' + match[2] + ', ' + match[3];\r\n            }\r\n\r\n            var _pattern = pattern;\r\n            if (!(/^(.*)\\,(\\s*\\d{1,2}\\s*)\\,(\\s*\\d{1,4}\\s*)$/.test(pattern)) && self.getSearchTypeByRole(TC.Consts.searchType.CADASTRAL).suggestionRoot)\r\n                _pattern = self.getSearchTypeByRole(TC.Consts.searchType.CADASTRAL).suggestionRoot + ', ' + pattern;\r\n\r\n            if (/^(.*)\\,(\\s*\\d{1,2}\\s*)\\,(\\s*\\d{1,4}\\s*)$/.test(_pattern) && !(new RegExp('^([-+]?[0-9]{' + self.UTMX_LEN + '})\\\\s*\\\\,\\\\s*([-+]?[0-9]{' + self.UTMY_LEN + '})$').test(pattern))) {\r\n                self.getMunicipalities().then(function (list) {\r\n                    var match = /^(.*)\\,(\\s*\\d{1,2}\\s*)\\,(\\s*\\d{1,4}\\s*)$/.exec(_pattern);\r\n                    if (match) {\r\n                        var matcher = new RegExp(match[1].trim().replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\"), \"i\");\r\n                        var results = [];\r\n\r\n                        const getItem = function (mun, munLabel, pol, par) {\r\n                            var properties = [];\r\n\r\n                            properties.push[self.MUN] = mun;\r\n                            properties.push[self.POL] = pol;\r\n                            properties.push[self.PAR] = par;\r\n\r\n                            return {\r\n                                id: self.MUN + mun + self.POL + pol + self.PAR + par,\r\n                                label: self.getLabel(self.MUN + munLabel + self.POL + pol + self.PAR + par),\r\n                                dataRole: TC.Consts.searchType.CADASTRAL,\r\n                                properties: properties\r\n                            };\r\n                        };\r\n\r\n                        results = list.filter(function (value) {\r\n                            value = value.label || value.id || value;\r\n                            return matcher.test(value) || matcher.test(self.removePunctuation(value));\r\n                        });\r\n\r\n                        if (results.length > 0) {\r\n                            for (var i = 0; i < results.length; i++) {\r\n                                results[i] = getItem(results[i].id, results[i].label, match[2].trim(), match[3].trim());\r\n                            }\r\n                        }\r\n\r\n                        if (/^[0-9]*$/g.test(match[1])) {\r\n\r\n                            if (match[1].trim() === self.getSearchTypeByRole(TC.Consts.searchType.CADASTRAL).suggestionRoot) {\r\n\r\n                                var suggestionRoot = list.filter(function (elm) {\r\n                                    return parseInt(elm.id) === parseInt(self.getSearchTypeByRole(TC.Consts.searchType.CADASTRAL).suggestionRoot);\r\n                                })[0];\r\n\r\n                                if (suggestionRoot) {\r\n                                    resolve([getItem(suggestionRoot.id, suggestionRoot.label, match[2].trim(), match[3].trim())]);\r\n                                }\r\n                            }\r\n\r\n                            results.push(getItem(match[1].trim(), match[1].trim(), match[2].trim(), match[3].trim()));\r\n                        }\r\n\r\n                        //console.log('getCadastralRef promise resuelta');\r\n                        resolve(results);\r\n                    }\r\n                });\r\n            } else {\r\n                //console.log('getCadastralRef promise resuelta - no es ref catastral');\r\n                reject();\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.stringPatternsValidators = {\r\n        tsp: function (text, result, root, limit) {\r\n            // town, street, portal - street, town, portal\r\n            var match = /^([^0-9\\,]+)(?:\\s*\\,\\s*)(?:([^\\,][a-zñáéíóúüàèìòù\\s*\\-\\.\\(\\)\\/0-9]+))(?:\\s*\\,\\s*)(?:(\\d{1,3}\\s?\\-?\\s?[a-z]{0,4}\\s?\\-?\\s?[a-z]{0,4})|([a-z]{1,4}\\s?\\-?\\s?\\d{1,3})|(sn|S\\/N|s\\/n|s\\-n)|([a-z]{1,4}\\s?\\+\\s?[a-z]{1,4}))$/i.exec(text);\r\n            if (match && match[1] && match[2]) {\r\n\r\n                var getPortal = function () {\r\n                    return formatStreetNumber((match[3] || match[4] || match[5] || match[6]).trim());\r\n                };\r\n                // ninguno contiene número duplicamos búsqueda\r\n                if (/^([^0-9]+)$/i.test(match[1].trim()) && /^([^0-9]+)$/i.test(match[2].trim())) {\r\n                    result.push({\r\n                        t: match[1].trim(), s: match[2].trim(), p: getPortal()\r\n                    });\r\n                    result.push({\r\n                        t: match[2].trim(), s: match[1].trim(), p: getPortal()\r\n                    });\r\n                }\r\n                else {  // indicamos como calle el criterio que contiene números, ya que no existen municipios con números pero sí calles\r\n                    if (/^([^0-9]+)$/i.test(match[1].trim())) result.push({\r\n                        t: match[1].trim(), s: match[2].trim(), p: getPortal()\r\n                    });\r\n                    else result.push({\r\n                        s: match[1].trim(), t: match[2].trim(), p: getPortal()\r\n                    });\r\n                }\r\n                bindRoot.call(this, result, root, limit);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        spt: function (text, result, root, limit) {\r\n            // street, portal, town\r\n            var match = /^(?:([^\\,][a-zñáéíóúüàèìòù\\s*\\-\\.\\(\\)\\/0-9]+))(?:\\s*\\,\\s*)(?:(\\d{1,3}\\s?\\-?\\s?[a-z]{0,4}\\s?\\-?\\s?[a-z]{0,4})|([a-z]{1,4}\\s?\\-?\\s?\\d{1,3})|(sn|S\\/N|s\\/n|s\\-n)|([a-z]{1,4}\\s?\\+\\s?[a-z]{1,4}))(?:\\s*\\,\\s*)([^0-9\\,]+)$/i.exec(text);\r\n            if (match && match[6] && match[1]) {\r\n\r\n                var getPortal = function () {\r\n                    return formatStreetNumber((match[2] || match[3] || match[4] || match[5]).trim());\r\n                };\r\n                // ninguno contiene número duplicamos búsqueda\r\n                if (/^([^0-9]+)$/i.test(match[6].trim()) && /^([^0-9]+)$/i.test(match[1].trim())) {\r\n                    result.push({\r\n                        t: match[6].trim(), s: match[1].trim(), p: getPortal()\r\n                    });\r\n                    result.push({\r\n                        t: match[1].trim(), s: match[6].trim(), p: getPortal()\r\n                    });\r\n                }\r\n                else {  // indicamos como calle el criterio que contiene números, ya que no existen municipios con números pero sí calles\r\n                    if (/^([^0-9]+)$/i.test(match[6].trim())) result.push({\r\n                        t: match[6].trim(), s: match[1].trim(), p: getPortal()\r\n                    });\r\n                    else result.push({\r\n                        s: match[6].trim(), t: match[1].trim(), p: getPortal()\r\n                    });\r\n                }\r\n                bindRoot.call(this, result, root, limit);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        tnsp: function (text, result, root, limit) {\r\n            // town, numbers street, portal\r\n            var match = /^(?:([^\\,][a-zñáéíóúüàèìòù\\s*\\-\\.\\(\\)\\/0-9]+))(?:\\s*\\,\\s*)([^0-9\\,]+)(?:\\s*\\,\\s*)(?:(\\d{1,3}\\s?\\-?\\s?[a-z]{0,4}\\s?\\-?\\s?[a-z]{0,4})|([a-z]{1,4}\\s?\\-?\\s?\\d{1,3})|(sn|S\\/N|s\\/n|s\\-n)|([a-z]{1,4}\\s?\\+\\s?[a-z]{1,4}))$/i.exec(text);\r\n\r\n            if (match && match[1] && match[2]) {\r\n                result.push({\r\n                    t: match[2].trim(), s: match[1].trim(), p: formatStreetNumber((match[3] || match[4] || match[5] || match[6]).trim())\r\n                });\r\n                bindRoot.call(this, result, root, limit);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        ts: function (text, result, root, limit) {\r\n            // town, street\r\n            var match = /^([^0-9\\,]+)(?:\\s*\\,\\s*)(?:([^\\,][a-zñáéíóúüàèìòù\"\\s*\\-\\.\\(\\)\\/0-9]+))$/i.exec(text);\r\n\r\n            // topónimo, municipio\r\n            if (!match && /^[^0-9]*$/i.test(text.trim())) { // si no hay números reviso dándole la vuelta, si hay números que lo trate la función st\r\n                var criteria = text.split(',').reverse();\r\n                match = /^([^0-9\\,]+)(?:\\s*\\,\\s*)(?:([^\\,][a-zñáéíóúüàèìòù\"\\s*\\-\\.\\(\\)\\/0-9]+))$/i.exec(criteria.join(','));\r\n            }\r\n\r\n            if (match && match[1] && match[2]) {\r\n                // ninguno contiene número duplicamos búsqueda\r\n                if (/^([^0-9]+)$/i.test(match[1].trim()) && /^([^0-9]+)$/i.test(match[2].trim())) {\r\n                    result.push({\r\n                        t: match[1].trim(), s: match[2].trim()\r\n                    });\r\n                    result.push({\r\n                        s: match[1].trim(), t: match[2].trim()\r\n                    });\r\n\r\n                    bindRoot.call(this, result, root, limit);\r\n                }\r\n                else {  // indicamos como calle el criterio que contiene números, ya que no existen municipios con números pero sí calles\r\n\r\n                    var getStreet = function (s) {\r\n                        var revS = s.split(' ').reverse();\r\n                        // validamos si el criterio es compuesto \r\n                        var fs = [];\r\n                        for (var si = 0; si < revS.length; si++) {\r\n                            if (revS[si].length == 1) {\r\n                                fs.push(revS[si]);\r\n                                revS[si] = '';\r\n                            }\r\n                        }\r\n\r\n                        return fs.length > 0 ? revS.reverse().join(' ').trim() + self._LIKE_PATTERN + fs.reverse().join(self._LIKE_PATTERN) : revS.reverse().join(' ').trim();\r\n                    };\r\n\r\n                    if (/^([^0-9]+)$/i.test(match[1].trim()))\r\n                        result.push({\r\n                            t: match[1].trim(), s: getStreet(match[2].trim())\r\n                        });\r\n                    else result.push({\r\n                        s: getStreet(match[1].trim()), t: match[2].trim()\r\n                    });\r\n\r\n                    bindRoot.call(this, result, root, limit, true);\r\n                }\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        st: function (text, result, root, limit) {\r\n            // street, town\r\n            var match = /^(?:([^\\,][a-zñáéíóúüàèìòù\\s*\\-\\.\\(\\)\\/0-9]+))(?:\\s*\\,\\s*)([^0-9\\,]+)$/i.exec(text);\r\n\r\n            if (!match) {\r\n                var criteria = text.split(',').reverse();\r\n                match = /^([^0-9\\,]+)(?:\\s*\\,\\s*)(?:([^\\,][a-zñáéíóúüàèìòù\"\\s*\\-\\.\\(\\)\\/0-9]+))$/i.exec(criteria.join(','));\r\n            }\r\n\r\n            if (match) { // puede generar falsos positivos cuando el portal llega seguido de la calle -> calle mayor 14, pamplona\r\n                var data = {\r\n                };\r\n                var criteria = text.split(',').reverse();\r\n                for (var i = 0; i < criteria.length; i++) {\r\n                    if (/^([^0-9\\,]+)$/i.test(criteria[i].trim())) { // si no hay números se trata de municipio\r\n                        data.t = criteria[i].trim();\r\n                    }\r\n                    else if (/(\\s*\\d+)/i.test(criteria[i].trim())) { // si contiene número, puede ser calle o calle + portal\r\n                        if (criteria[i].trim().indexOf(' ') == -1) { // si no contiene espacios se trata de calle compuesta por números\r\n                            data.s = criteria[i].trim();\r\n                        } else { // si contiene espacio puede contener calle + portal\r\n                            var _criteria = criteria[i].trim().split(' ').reverse();\r\n\r\n                            var isPortal = function (c) {\r\n                                var m = /^(?:(\\d{1,3}\\s?\\-?\\s?[a-z]{0,4}\\s?\\-?\\s?[a-z]{0,4})|([a-z]{1,4}\\s?\\-?\\s?\\d{1,3})|(sn|S\\/N|s\\/n|s\\-n)|([a-z]{1,4}\\s?\\+\\s?[a-z]{1,4}))$/i.exec(c.trim());\r\n                                if (m) {\r\n                                    data.p = formatStreetNumber(c.trim());\r\n                                    return true;\r\n                                }\r\n                                return false;\r\n                            };\r\n\r\n                            var x = 0;\r\n                            var p = _criteria[x].trim();\r\n                            while (x < _criteria.length && !isPortal(p)) {\r\n                                x++;\r\n                                if (x < _criteria.length)\r\n                                    p = p + _criteria[x];\r\n\r\n                            }\r\n\r\n                            if (data.p) {\r\n                                var _cr = _criteria;\r\n                                for (var h = 0; h < _cr.length; h++) {\r\n                                    // validamos que lo que hemos deducido como portal, está en portal para no añadirlo a calle\r\n                                    var inPortal = false;\r\n                                    for (var c = 0; c < _cr[h].split('').length; c++) {\r\n                                        if (data.p.indexOf(_cr[h][c]) > -1)\r\n                                            inPortal = true;\r\n                                    }\r\n\r\n                                    if (inPortal) {\r\n                                        var _p = _cr[h];\r\n\r\n                                        _cr[h] = '';\r\n                                        if (data.p == formatStreetNumber(p))\r\n                                            break;\r\n                                    }\r\n                                }\r\n\r\n                                if (/^([^\\,][a-zñáéíóúüàèìòù\\s*\\-\\.\\(\\)\\/0-9]+)$/i.test(_criteria.reverse().join(' ').trim())) {\r\n                                    var fs = [];\r\n                                    var criteriaRev = _criteria.reverse();\r\n                                    for (var chs = 0; chs < criteriaRev.length; chs++) {\r\n                                        if (criteriaRev[chs].trim().length == 1) {\r\n                                            fs.push(criteriaRev[chs].trim());\r\n                                            criteriaRev[chs] = '';\r\n                                        }\r\n                                    }\r\n\r\n                                    data.s = fs.length > 0 ? criteriaRev.reverse().join(' ').trim() + self._LIKE_PATTERN + fs.reverse().join(self._LIKE_PATTERN) : criteriaRev.reverse().join(' ').trim();\r\n                                }\r\n\r\n\r\n                                // nombre_de_calle = 137, 1, 20...\r\n                                // duplico la búsqueda para el caso de [Calle nombre_de_calle], municipio\r\n                                result.push({\r\n                                    t: data.t,\r\n                                    s: data.s + ' ' + data.p\r\n                                });\r\n                            } else {\r\n                                data.s = criteria[i].trim();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                result.push(data);\r\n                bindRoot.call(this, result, root, limit);\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        s_or_t: function (text, result, root, limit) {\r\n            var match = /^([^\\,][a-zñáéíóúüàèìòù\\s*\\-\\.\\(\\)\\/0-9\\<\\>]+)$/i.exec(text);\r\n            if (match && match[1]) {\r\n                if (root) {\r\n                    result.push({\r\n                        t: match[1].trim()\r\n                    });\r\n\r\n                    result.push({\r\n                        t: root,\r\n                        s: match[1].trim()\r\n                    });\r\n                }\r\n                else result.push({\r\n                    t: match[1].trim()\r\n                });\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        sp: function (text, result, root, limit) {\r\n            var match = /^([^\\,][a-zñáéíóúüàèìòù\\s*\\-\\.\\(\\)\\/]+)\\s*\\,?\\s*((\\d{1,3}\\s?\\-?\\s?[a-z]{0,4}\\s?\\-?\\s?[a-z]{0,4})|([a-z]{1,4}\\s?\\-?\\s?\\d{1,3})|(sn|S\\/N|s\\/n|s\\-n)|([a-z]{1,4}\\s?\\+\\s?[a-z]{1,4}))$/i.exec(text);\r\n            if (match && match[1] && match[2]) { // && text.indexOf(',') > -1 && text.split(',').length < 3) {\r\n                if (root)\r\n                    result.push({\r\n                        t: root,\r\n                        s: match[1].trim(),\r\n                        p: formatStreetNumber(match[2].trim())\r\n                    });\r\n                else\r\n                    result.push({\r\n                        t: match[1].trim(),\r\n                        s: match[2].trim()\r\n                    });\r\n\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        snp: function (text, result, root, limit) { // calle puede contener números con portal (cuando exista un municipio root establecido)\r\n            var match = /^([^\\,][0-9\\s*\\-\\.\\(\\)\\/]+)\\s*\\,?\\s*(\\d{1,3}\\s?\\-?\\s?[a-z]{0,4}\\s?\\-?\\s?[a-z]{0,4})|([a-z]{1,4}\\s?\\-?\\s?\\d{1,3})|(sn|S\\/N|s\\/n|s\\-n)|([a-z]{1,4}\\s?\\+\\s?[a-z]{1,4})$/i.exec(text);\r\n            if (match && match[1] && match[2] && root) {\r\n                result.push({\r\n                    t: root,\r\n                    s: match[1].trim(),\r\n                    p: formatStreetNumber(match[2].trim())\r\n                });\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        }\r\n    };\r\n\r\n    /* métodos auxiliares de getStringPattern */\r\n\r\n    const normalizedCriteria = function (value) {\r\n        const self = this;\r\n\r\n        var _value = '';\r\n\r\n        value = self.removePunctuation(value);\r\n\r\n        // elimino los caracteres especiales\r\n        if (self.NORMAL_PATTERNS.ROMAN_NUMBER.test(value))\r\n            value = value.replace(self.NORMAL_PATTERNS.ABSOLUTE_NOT_DOT, '');\r\n        else\r\n            value = value.replace(self.NORMAL_PATTERNS.ABSOLUTE, '');\r\n        return value.toLowerCase();\r\n    };\r\n\r\n    const formatStreetNumber = function (value) {\r\n        var result = value;\r\n\r\n        var is_nc_c = function (value) {\r\n            return /^(\\d{1,3})\\s?\\-?\\s?([a-z]{0,4})\\s?\\-?\\s?([a-z]{0,4})$/i.test(value);\r\n        }\r\n        var nc_c = function (value) {\r\n            var f = [];\r\n            var m = /^(\\d{1,3})\\s?\\-?\\s?([a-z]{0,4})\\s?\\-?\\s?([a-z]{0,4})$/i.exec(value);\r\n            if (m) {\r\n                for (var i = 1; i < m.length; i++) {\r\n                    if (m[i].trim().length > 0)\r\n                        f.push(m[i].trim());\r\n                }\r\n\r\n                return f.join(self._LIKE_PATTERN);\r\n            }\r\n            return value;\r\n        };\r\n\r\n        var is_cn = function (value) {\r\n            return /^([a-z]{1,4})\\s?\\-?\\s?(\\d{1,3})$/i.test(value);\r\n        };\r\n        var cn = function (value) {\r\n            var f = [];\r\n            var m = /^([a-z]{1,4})\\s?\\-?\\s?(\\d{1,3})$/i.exec(value);\r\n            if (m) {\r\n                for (var i = 1; i < m.length; i++) {\r\n                    if (m[i].trim().length > 0)\r\n                        f.push(m[i].trim());\r\n                }\r\n\r\n                return f.join(self._LIKE_PATTERN);\r\n            }\r\n            return value;\r\n        };\r\n\r\n        var is_sn = function (value) {\r\n            return /^(sn|S\\/N|s\\/n|s\\-n)$/i.test(value);\r\n        };\r\n        var sn = function (value) {\r\n            var m = /^(sn|S\\/N|s\\/n|s\\-n)$/i.exec(value);\r\n            if (m) {\r\n                return 's*n';\r\n            }\r\n            return value;\r\n        };\r\n\r\n\r\n        var is_cmc = function (value) {\r\n            return /^([a-z]{1,4}\\s?\\+\\s?[a-z]{1,4})$/i.test(value);\r\n        };\r\n        var cmc = function (value) {\r\n            var m = /^([a-z]{1,4}\\s?\\+\\s?[a-z]{1,4})$/i.exec(value);\r\n            if (m) {\r\n                return value;\r\n            }\r\n            return value;\r\n        };\r\n\r\n        var isCheck = [is_nc_c, is_cn, is_sn, is_cmc];\r\n        var check = [nc_c, cn, sn, cmc];\r\n        var ch = 0;\r\n        while (ch < check.length && !isCheck[ch].call(self, value)) {\r\n            ch++;\r\n        }\r\n\r\n        if (ch < check.length)\r\n            return check[ch].call(self, value);\r\n        else return value;\r\n    };\r\n\r\n    const bindRoot = function (result, root, limit, addRoot) {\r\n        const self = this;\r\n\r\n        if (root) {\r\n            var i = result.length;\r\n            while (i--) {\r\n                if (!addRoot) {\r\n                    if (result[i].t) {\r\n                        var indicatedRoot = self.rootCfg.active.rootLabel.filter(function (elem) {\r\n                            return elem.label.indexOf(self.removePunctuation(result[i].t).toLowerCase()) > -1;\r\n                        }.bind(self));\r\n\r\n                        if (indicatedRoot.length == 1) {\r\n                            result[i].t = indicatedRoot[0].id;\r\n                        } else if (indicatedRoot.length > 1) {\r\n\r\n                            indicatedRoot.map(function (elem) {\r\n                                var newResult = TC.Util.extend({\r\n                                }, result[i]);\r\n                                newResult.t = elem.id;\r\n\r\n                                result.push(newResult);\r\n                            });\r\n\r\n                        } else if (indicatedRoot.length == 0 && limit) {\r\n                            result.splice(i, 1);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    result.push(TC.Util.extend({}, result[i], { t: root }));\r\n                };\r\n            }\r\n        }\r\n    };\r\n\r\n    const getObjectsFromStringToQuery = function (allowedRoles, text) {\r\n        const self = this;\r\n        const root = self.rootCfg.active && self.rootCfg.active.root || '';\r\n        const limit = self.rootCfg.active && self.rootCfg.active.limit || false;\r\n\r\n        var result = [];\r\n\r\n        const test = function () {\r\n            var tests = [function (text) {\r\n                return text.length >= 3;\r\n            },\r\n            function (text) {\r\n                return /^\\d+$/.test(text) ? false : (/^\\d+\\,\\s*\\d+$/.test(text) ? false : true);\r\n            }];\r\n\r\n            for (var i = 0; i < tests.length; i++) {\r\n                if (!tests[i].call(self, text))\r\n                    return false;\r\n            }\r\n\r\n            return true;\r\n        };\r\n\r\n        // eliminamos espacios en blanco\r\n        text = text.trim();\r\n\r\n        // comprobamos si acaba con coma, si es así, la eliminamos\r\n        if (text.charAt(text.length - 1) == ',') {\r\n            text = text.substring(0, text.length - 1);\r\n        }\r\n\r\n        if (test(text)) {\r\n            var check = [];\r\n\r\n            check = allowedRoles.map(function (dataRole) {\r\n                return self.getSearchTypeByRole(dataRole);\r\n            }).filter(function (searchType) {\r\n                return searchType.stringPatternToCheck;\r\n                }).map(function (searchType) {\r\n                return searchType.stringPatternToCheck;\r\n            }).flat();\r\n\r\n            if (check.length === 0) {\r\n                check = [self.stringPatternsValidators.tsp, self.stringPatternsValidators.spt, self.stringPatternsValidators.tnsp, self.stringPatternsValidators.ts, self.stringPatternsValidators.st];\r\n                if (root && text.split(',').length < 3) {\r\n                    check = [self.stringPatternsValidators.sp, self.stringPatternsValidators.snp, self.stringPatternsValidators.s_or_t].concat(check);\r\n                }\r\n                else {\r\n                    check = check.concat([self.stringPatternsValidators.sp, self.stringPatternsValidators.snp, self.stringPatternsValidators.s_or_t]);\r\n                }\r\n            }\r\n\r\n            var ch = 0;\r\n            try {\r\n                while (ch < check.length && !check[ch].call(self, text, result, root, limit)) {\r\n                    ch++;\r\n                }\r\n            }\r\n            catch (ex) {\r\n                TC.error(\"Error según el patrón: \" + text, TC.Consts.msgErrorMode.EMAIL, \"Error en la búsqueda del callejero\");\r\n            }\r\n\r\n            return result;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    const requestToWFS = function (type, signal, doneCallback, data) {\r\n        const self = this;\r\n\r\n        return fetch(type.url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'\r\n            },\r\n            body: type.filter.getParams(data),\r\n            signal: signal\r\n        })\r\n            .then(function (response) {\r\n                if (response.ok) {\r\n                    return response.text();\r\n                } else {\r\n                    throw \"Search: error requestToWFS\";\r\n                }\r\n            })\r\n            .then(doneCallback)\r\n            .catch(function (err) {\r\n                if (err.name === 'AbortError') {\r\n                    console.log('Search: petición abortada');\r\n                } else {\r\n                    TC.error(err);\r\n                }\r\n\r\n                throw err;\r\n\r\n                //console.log('getStringPattern promise resuelta - data.statusText: ' + data.statusText);\r\n            });\r\n    };\r\n\r\n    ctlProto.getStringPattern = function (allowedRoles, pattern) {\r\n        const self = this;\r\n\r\n        return new Promise((resolve, reject) => {\r\n            let toQuery = [];\r\n            let requestsQuery = [];\r\n\r\n            pattern = normalizedCriteria.call(self, pattern);            \r\n\r\n            /* gestionamos:\r\n                Entidad de población: Irisarri Auzoa (Igantzi)\r\n                Topónimo: Aldabeko Bidea (Arbizu)\r\n            */\r\n            let combinedCriteria = /(.*)\\((.*)\\)?/.exec(pattern);            \r\n            if (combinedCriteria && combinedCriteria.length > 2) {\r\n                // búsqueda de entidad de población\r\n                toQuery = getObjectsFromStringToQuery.call(self, allowedRoles, combinedCriteria[1]) || [];\r\n                // búsqueda de topónimo\r\n                let toQueryCombined = getObjectsFromStringToQuery.call(self, allowedRoles, combinedCriteria[1] + ',' + combinedCriteria[2]) || [];\r\n\r\n                toQuery = toQuery.concat(toQueryCombined);\r\n            } else {\r\n                toQuery = getObjectsFromStringToQuery.call(self, allowedRoles, pattern) || [];\r\n            }\r\n\r\n            if (toQuery.length > 0) {\r\n                let pendingSuggestionLstHead = [];\r\n                let filterRoles = (dataToQuery) => {\r\n                    return allowedRoles.filter(function (elm) {\r\n                        return Object.keys(self.getSearchTypeByRole(elm).queryProperties).length === Object.keys(dataToQuery).length;\r\n                    });\r\n                };\r\n                let pendingHeaderRoles = [];\r\n\r\n                for (var i = 0; i < toQuery.length; i++) {\r\n                    let dataToQuery = toQuery[i];\r\n                    let roles = filterRoles(dataToQuery);\r\n\r\n                    for (var r = 0; r < roles.length; r++) {\r\n                        let type = self.getSearchTypeByRole(roles[r]);\r\n\r\n                        if (pendingHeaderRoles.indexOf(type.typeName) < 0) {\r\n                            pendingSuggestionLstHead.push(type.getSuggestionListHead());\r\n                            pendingSuggestionLstHead.push('<li dataRole=\"' + type.typeName + '\"><a class=\"tc-ctl-search-li-loading\" href=\"#\">' + self.getLocaleString('searching') + '<span class=\"tc-ctl-search-loading-spinner tc-ctl-search-loading\"></span></a></li>');\r\n\r\n                            pendingHeaderRoles.push(type.typeName);\r\n                        }\r\n\r\n                        let responseToSuggestionLstElmt = (response) => {\r\n                            return type.getSuggestionListElements(response);\r\n                        };\r\n\r\n                        requestsQuery.push(requestToWFS.call(self, type, self.searchRequestsAbortController.signal, responseToSuggestionLstElmt, dataToQuery));\r\n                    }\r\n                }\r\n\r\n                if (requestsQuery.length > 0) {\r\n                    self.resultsList.innerHTML += pendingSuggestionLstHead.join('');\r\n                    self.textInput.dispatchEvent(new CustomEvent(\"targetUpdated.autocomplete\"));\r\n\r\n                    Promise.all(requestsQuery)\r\n                        .then((results) => {                            \r\n                            //console.log('getStringPattern promise resuelta');                                  \r\n                            resolve([].concat.apply([], results));\r\n                        }).catch((error) => {                            \r\n                            reject();\r\n                        });\r\n                } else {\r\n                    reject();\r\n                }\r\n            } else {\r\n                reject();\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.getRoad = function (pattern) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            pattern = pattern.trim();\r\n            if (pattern.length < 2) {\r\n                resolve([]);\r\n            } else {\r\n                var type = self.getSearchTypeByRole(TC.Consts.searchType.ROAD);\r\n\r\n                var roadPattern = type.getPattern();\r\n                var match = roadPattern.exec(pattern);\r\n                if (match && match[3]) {\r\n\r\n                    var _pattern = match[2] ? match[2].trim() + \"-\" + match[3].trim() : match[3].trim();\r\n                    if (match[4] && match[4].length > 0) {\r\n                        _pattern = _pattern + \"-\" + match[4].trim();\r\n                    }\r\n\r\n                    self.resultsList.innerHTML = type.getSuggestionListHead() +\r\n                        '<li dataRole=\"' + type.typeName + '\"><a class=\"tc-ctl-search-li-loading\" href=\"#\">' + self.getLocaleString('searching') + '<span class=\"tc-ctl-search-loading-spinner tc-ctl-search-loading\"></span></a></li>';\r\n                    self.textInput.dispatchEvent(new CustomEvent(\"targetUpdated.autocomplete\"));\r\n\r\n                    //console.log('getRoad new');\r\n                    fetch(type.url + '?' + type.filter.getParams({ t: _pattern }), {\r\n                        signal: self.searchRequestsAbortController.signal\r\n                    }).then((response) => {\r\n                        if (response.ok) {\r\n                            return response.text();\r\n                        } else {\r\n                            throw \"Search: error getRoad\";\r\n                        }\r\n                    }).then((response) => {\r\n                        let result = [];\r\n                        let data = type.parseFeatures(response);\r\n                        if (data.length > 0) {\r\n                            data.map(function (feature) {\r\n                                var properties = type.outputProperties;\r\n                                if (!result.some(function (elem) {\r\n                                    return (elem.text == feature.data[properties[0]]);\r\n                                })) {\r\n                                    var label = type.outputFormatLabel.tcFormat(type.outputProperties.map(function (outputProperty) {\r\n                                        return feature.data[outputProperty];\r\n                                    }));\r\n\r\n                                    var text = type.outputProperties.map(function (outputProperty) {\r\n                                        return feature.data[outputProperty];\r\n                                    }).join('-');\r\n\r\n                                    result.push({\r\n                                        id: type.dataIdProperty.map(function (elem) {\r\n                                            return feature.data[elem];\r\n                                        }).join('#'),\r\n                                        label: label,\r\n                                        text: text,\r\n                                        dataLayer: feature.id.split('.')[0],\r\n                                        dataRole: type.typeName\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                            //console.log('getRoad promise resuelta');\r\n                            resolve(result);\r\n                        } else {\r\n                            //console.log('getRoad promise resuelta');\r\n                            reject();\r\n                        }\r\n                    }).catch(function (data) {\r\n                        //console.log('getRoad promise resuelta - xhr fail');\r\n                        reject();\r\n                    });\r\n                } else {\r\n                    //console.log('getRoad promise resuelta - no encaja en road');\r\n                    reject();\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.getPK = function (pattern) {\r\n        var self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            pattern = pattern.trim();\r\n            if (pattern.length < 3) {\r\n                resolve([]);\r\n            } else {\r\n\r\n                var type = self.getSearchTypeByRole(TC.Consts.searchType.ROADPK);\r\n\r\n                var roadPKPattern = type.getPattern();\r\n                var match = roadPKPattern.exec(pattern);\r\n                if (match && match[3] && match[5]) {\r\n\r\n                    var _pattern = match[2] ? match[2].trim() + \"-\" + match[3].trim() : match[3].trim();\r\n                    if (match[4] && match[4].length > 0) {\r\n                        _pattern = _pattern + \"-\" + match[4].trim();\r\n                    }\r\n\r\n                    self.resultsList.innerHTML = type.getSuggestionListHead() +\r\n                        '<li dataRole=\"' + type.typeName + '\"><a class=\"tc-ctl-search-li-loading\" href=\"#\">' + self.getLocaleString('searching') + '<span class=\"tc-ctl-search-loading-spinner tc-ctl-search-loading\"></span></a></li>';\r\n                    self.textInput.dispatchEvent(new CustomEvent(\"targetUpdated.autocomplete\"));\r\n\r\n                    //console.log('getRoadPK new');\r\n\r\n                    fetch(type.url + '?' + type.filter.getParams({ t: _pattern, s: match[5].trim() }), {\r\n                        signal: self.searchRequestsAbortController.signal\r\n                    }).then((response) => {\r\n                        if (response.ok) {\r\n                            return response.text();\r\n                        } else {\r\n                            throw \"Search: error getRoadPK\";\r\n                        }\r\n                    }).then(function (response) {\r\n                        let result = [];\r\n                        let data = type.parseFeatures(response);\r\n                        if (data.length > 0) {\r\n                            data.map(function (feature) {\r\n                                var properties = type.outputProperties;\r\n                                if (!result.some(function (elem) {\r\n                                    return (elem.label == feature.data[properties[0]]);\r\n                                })) {\r\n                                    var text = type.outputFormatLabel.tcFormat(type.outputProperties.map(function (outputProperty) {\r\n                                        return feature.data[outputProperty];\r\n                                    }));\r\n                                    result.push({\r\n                                        id: type.dataIdProperty.map(function (elem) {\r\n                                            return feature.data[elem];\r\n                                        }).join('#'),\r\n                                        label: text,\r\n                                        text: text,\r\n                                        dataLayer: feature.id.split('.')[0],\r\n                                        dataRole: type.typeName\r\n                                    });\r\n                                }\r\n                            });\r\n                            //console.log('getRoadPK promise resuelta');\r\n                            resolve(result);\r\n                        } else {\r\n                            //console.log('getRoadPK promise resuelta');\r\n                            reject();\r\n                        }\r\n                    }).catch(function (data) {\r\n                        //console.log('getRoadPK promise resuelta - xhr fail');\r\n                        reject();\r\n                    });\r\n                } else {\r\n                    //console.log('getRoadPK promise resuelta - no encaja en pk');\r\n                    reject();\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.search = function (pattern, callback) {\r\n        var self = this;\r\n\r\n        pattern = pattern.trim();\r\n        if (pattern.length > 0) {\r\n            pattern = pattern.toLowerCase();            \r\n\r\n            if (self.searchRequestsAbortController) {\r\n                self.searchRequestsAbortController.abort();\r\n            }\r\n\r\n            self.resultsList.innerHTML = '';\r\n            self.textInput.dispatchEvent(new CustomEvent(\"targetUpdated.autocomplete\"));\r\n\r\n            self.searchRequestsResults = [];\r\n\r\n            let isAborted = false;\r\n            let onAbort = () => {                \r\n                isAborted = true;\r\n                self.searchRequestsAbortController.signal.removeEventListener('abort', onAbort);\r\n            }\r\n\r\n            self.searchRequestsAbortController = new AbortController();\r\n            self.searchRequestsAbortController.signal.addEventListener('abort', onAbort);\r\n\r\n            let toRender = 0;\r\n            let renderingEnd = () => {\r\n                toRender--;\r\n                if (toRender === 0) {\r\n                    // si al término de las peticiones ya estamos con otro patrón no hacemos nada\r\n                    if (pattern !== self.textInput.value.trim().toLowerCase()) {\r\n                        return;\r\n                    }\r\n                    else {                        \r\n                        if (self.searchRequestsResults.length === 0) {\r\n                            self.cleanMap();\r\n\r\n                            if (!self.layer ||\r\n                                (self.layer && self.layer.features.length === 0)) {\r\n\r\n                                self.resultsList.innerHTML = '<li><a title=\"' + self.EMPTY_RESULTS_TITLE + '\" class=\"tc-ctl-search-li-empty\">' + self.EMPTY_RESULTS_LABEL + '</a></li>';\r\n                                self.textInput.dispatchEvent(new CustomEvent(\"targetUpdated.autocomplete\"));\r\n                            }\r\n                        }\r\n\r\n                        self.lastPattern = \"\";\r\n                    }\r\n                }\r\n            };\r\n\r\n            let renderResultsOnSuggestionList = () => {\r\n                if (self.searchRequestsResults) {\r\n                    self.searchRequestsResults = self.searchRequestsResults.sort(function (a, b) {\r\n                        var pattern = /(\\d+)/;\r\n                        var _a, _b = '';\r\n                        if (pattern.test(a.label) && pattern.test(b.label)) {\r\n                            _a = a.label.match(pattern)[1];\r\n                            _b = b.label.match(pattern)[1];\r\n                        } else {\r\n                            _a = a.label;\r\n                            _b = b.label;\r\n                        }\r\n\r\n                        if (_a > _b)\r\n                            return 1;\r\n                        else\r\n                            if (_a < _b)\r\n                                return -1;\r\n                            else\r\n                                return 0;\r\n                    });\r\n\r\n                    // compatibilidad hacia atrás\r\n                    self._search.data = self.searchRequestsResults;\r\n\r\n                    if (callback) {\r\n                        callback(self.searchRequestsResults);\r\n                    }\r\n                }\r\n            };\r\n\r\n            self.allowedSearchTypes.forEach(function (allowed) {\r\n                if (allowed.parser) {\r\n                    toRender++;\r\n\r\n                    //console.log('registramos promesa: ' + allowed.typeName);\r\n\r\n                    allowed.parser.call(self, pattern)\r\n                        .then(function (dataRole, result) {\r\n\r\n                            let manageLoadingByDataRole = () => {\r\n                                let loadingElemOfDataRole = self.resultsList.querySelector('li[dataRole=\"' + dataRole + '\"]');\r\n                                if (loadingElemOfDataRole) {\r\n                                    let indexLoadingElemOfDataRole = Array.prototype.indexOf.call(loadingElemOfDataRole.parentElement.childNodes, loadingElemOfDataRole);\r\n                                    let headerElemOfDataRole = self.resultsList.childNodes[indexLoadingElemOfDataRole - 1];\r\n\r\n                                    self.resultsList.removeChild(headerElemOfDataRole);\r\n                                    self.resultsList.removeChild(loadingElemOfDataRole);\r\n                                }\r\n                            };\r\n\r\n                            //console.log('resulta promesa: ' + dataRole);\r\n\r\n                            if (result && result.length > 0) {\r\n\r\n                                // caso topónimo con y sin municipio Irisarri Auzoa (Igantzi)\r\n                                let toConcat = result.filter((elm, i) => self.searchRequestsResults.findIndex((srrElm) => srrElm.id === elm.id) === -1);\r\n                                if (toConcat.length === result.length) {\r\n                                    self.searchRequestsResults = self.searchRequestsResults.concat(toConcat);\r\n\r\n                                    renderResultsOnSuggestionList();\r\n                                } else if (result.length === 1) {\r\n                                    manageLoadingByDataRole();\r\n                                }                                \r\n                            } else {\r\n                                manageLoadingByDataRole();\r\n                            }\r\n\r\n                            renderingEnd();\r\n\r\n                            //resolve(result);\r\n                        }.bind(self, allowed.typeName)).catch(function (dataRole) {\r\n                            //reject();\r\n                            //console.log('reject promesa: ' + dataRole);\r\n                            renderingEnd();\r\n                        }.bind(self, allowed.typeName));\r\n                } else {\r\n                    console.log('Falta implementación del método parser');\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            self.lastPattern = \"\";\r\n\r\n            self.cleanMap();\r\n        }\r\n    };\r\n\r\n    var setQueryableFeatures = function (features) {\r\n        var self = this;\r\n\r\n        if (features && features.length > 0) {\r\n            for (var i = 0; i < features.length; i++) {\r\n                if (features[i].showsPopup != self.queryableFeatures)\r\n                    features[i].showsPopup = self.queryableFeatures;\r\n            }\r\n        }\r\n    };\r\n    ctlProto._goToResult = function (id, dataRole) {\r\n        var self = this;\r\n        var goTo = null;\r\n\r\n        //02/03/2020 cuando selecciona un elemento abortamos peticiones pendientes\r\n        if (self.searchRequestsAbortController) {\r\n            self.searchRequestsAbortController.abort();\r\n        }\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            if (!self.loading)\r\n                self.loading = self.map.getControlsByClass(\"TC.control.LoadingIndicator\")[0];\r\n\r\n            var wait;\r\n            wait = self.loading.addWait();\r\n\r\n            // en pantallas pequeñas, colapsamos el panel de herramientas\r\n            if (matchMedia('(max-width: 30em)').matches) {\r\n                self.textInput.blur();\r\n                self.map.trigger(TC.Consts.event.TOOLSCLOSE);\r\n            }\r\n\r\n            self.cleanMap();\r\n\r\n            var customSearchType = false;\r\n            var keepOnLooping = true;\r\n\r\n            self.allowedSearchTypes.forEach(function (allowed) {\r\n                if (keepOnLooping) {\r\n\r\n                    if (!self.availableSearchTypes[allowed.typeName]) {\r\n\r\n                        if (allowed.goTo) {\r\n                            customSearchType = true;\r\n\r\n                            goTo = allowed.goTo.call(self, id);\r\n                            if (goTo !== null) {\r\n                                keepOnLooping = false;\r\n                            }\r\n                        } else console.log('Falta implementación del método goTo');\r\n\r\n                    } else {\r\n\r\n                        var dr = dataRole || self.getElementOnSuggestionList.call(self, id).dataRole;\r\n                        if (dr) {\r\n\r\n                            var searchType = self.getSearchTypeByRole(dr);\r\n\r\n                            if (self.availableSearchTypes[dr] && searchType && searchType.goTo) {\r\n                                goTo = searchType.goTo.call(self, id, dr);\r\n                                if (goTo !== null) {\r\n                                    keepOnLooping = false;\r\n                                }\r\n                            } else if (!self.availableSearchTypes[dr] && searchType && searchType.goTo) {\r\n                                customSearchType = true;\r\n\r\n                                goTo = searchType.goTo.call(self, id, dr);\r\n                                if (goTo !== null) {\r\n                                    keepOnLooping = false;\r\n                                }\r\n                            } else console.log('Falta implementación del método goTo');\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            self.loading.removeWait(wait);\r\n\r\n            if (goTo) {\r\n\r\n                self.getLayer().then(function (layer) {\r\n                    switch (true) {\r\n                        case goTo.params.type == TC.Consts.layerType.VECTOR:\r\n                            for (var i = 0; i < self.WFS_TYPE_ATTRS.length; i++) {\r\n                                if (layer.hasOwnProperty(self.WFS_TYPE_ATTRS[i]))\r\n                                    delete layer[self.WFS_TYPE_ATTRS[i]];\r\n                            }\r\n                            break;\r\n                        case goTo.params.type == TC.Consts.layerType.WFS:\r\n                            for (var i = 0; i < self.WFS_TYPE_ATTRS.length; i++) {\r\n                                layer[self.WFS_TYPE_ATTRS[i]] = goTo.params[self.WFS_TYPE_ATTRS[i]];\r\n                            }\r\n\r\n                            wait = self.loading.addWait();\r\n                            break;\r\n                        default:\r\n                    }\r\n\r\n                    layer.type = goTo.params.type;\r\n\r\n                    self.map.on(TC.Consts.event.FEATURESADD, function (e) {\r\n                        if (e.layer === self.layer) {\r\n                            setQueryableFeatures.call(self, e.features);\r\n                        }\r\n                    });\r\n\r\n\r\n                    const layerEventHandler = function (e) {\r\n                        if (e.layer == layer) {\r\n                            // Salta cuando se pinta una feature que no es de tipo API porque la gestión de estilos salta antes (no es controlable)\r\n                            self.map.one(TC.Consts.event.FEATURESADD, function (e) {\r\n                                if (e.layer == layer) {\r\n                                    if (!e.layer.features || e.layer.features.length == 0 && e.layer.wrap.layer.getSource().getFeatures()) {\r\n                                        self.resultsList.classList.add(TC.Consts.classes.HIDDEN);\r\n                                        var bounds = e.layer.wrap.layer.getSource().getExtent();\r\n                                        var radius = e.layer.map.options.pointBoundsRadius;\r\n\r\n                                        if (bounds[2] - bounds[0] === 0) {\r\n                                            bounds[0] = bounds[0] - radius;\r\n                                            bounds[2] = bounds[2] + radius;\r\n                                        }\r\n                                        if (bounds[3] - bounds[1] === 0) {\r\n                                            bounds[1] = bounds[1] - radius;\r\n                                            bounds[3] = bounds[3] + radius;\r\n                                        }\r\n                                        e.layer.map.setExtent(bounds);\r\n\r\n                                        // GLS: Necesito diferenciar un zoom programático de un zoom del usuario para la gestión del zoom en 3D\r\n                                        self.map.trigger(TC.Consts.event.ZOOMTO, {\r\n                                            extent: bounds, layer: e.layer\r\n                                        });\r\n                                    }\r\n                                    else if (e.layer.features && e.layer.features.length > 0) {\r\n                                        self.resultsList.classList.add(TC.Consts.classes.HIDDEN);\r\n                                        self.layer.map.zoomToFeatures(e.layer.features);\r\n\r\n                                        self.map.trigger(TC.Consts.event.FEATURESADD, { layer: self.layer, features: self.layer.features });\r\n\r\n                                    } else if (e.layer.features && e.layer.features.length == 0 && goTo.params.type == TC.Consts.layerType.WFS) {\r\n                                        self.resultsList.inner = goTo.emptyResultHTML;\r\n                                        self.textInput.dispatchEvent(new CustomEvent(\"targetUpdated.autocomplete\"));\r\n\r\n                                        self.map.trigger(TC.Consts.event.SEARCHQUERYEMPTY);\r\n                                    }\r\n\r\n                                    self.loading.removeWait(wait);\r\n                                }\r\n                            });\r\n\r\n                            if (e.layer.features && e.layer.features.length > 0) {\r\n                                self.resultsList.classList.add(TC.Consts.classes.HIDDEN);\r\n                                self.layer.map.zoomToFeatures(self.layer.features);\r\n\r\n                                self.map.trigger(TC.Consts.event.FEATURESADD, { layer: self.layer, features: self.layer.features });\r\n\r\n                                self.loading.removeWait(wait);\r\n                            } else if (e.layer.features && e.layer.features.length == 0 && goTo.params.type == TC.Consts.layerType.WFS) {\r\n                                self.resultsList.innerHTML = goTo.emptyResultHTML;\r\n                                self.textInput.dispatchEvent(new CustomEvent(\"targetUpdated.autocomplete\"));\r\n\r\n                                if (!(e.newData && e.newData.features && e.newData.features.length > 0)) {\r\n                                    self.map.trigger(TC.Consts.event.SEARCHQUERYEMPTY);\r\n                                }\r\n\r\n                                self.loading.removeWait(wait);\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    self.map.one(TC.Consts.event.LAYERUPDATE, layerEventHandler);\r\n\r\n                    layer.refresh();\r\n                });\r\n\r\n                resolve(goTo);\r\n            } else {\r\n                reject(Error('Method goTo has no implementation'));\r\n                if (!customSearchType) {\r\n                    self.map.trigger(TC.Consts.event.SEARCHQUERYEMPTY);\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.goToResult = function (id, dataRole) {\r\n        var self = this;\r\n        // si está habilitada\r\n        if (self.getSearchTypeByRole(dataRole)) {\r\n            return self._goToResult(id, dataRole);\r\n            // si no está habilitada pero está disponible\r\n        } else if (self.availableSearchTypes[dataRole]) {\r\n            self.addAllowedSearchType(dataRole, self.availableSearchTypes[dataRole], self);\r\n            return self._goToResult(id, dataRole);\r\n        } else {\r\n            alert('No se reconoce el tipo de búsqueda: ' + dataRole);\r\n        }\r\n    };\r\n\r\n    var drawPoint = function (id) {\r\n        var self = this;\r\n\r\n        wait = self.loading.addWait();\r\n\r\n        var point = self.getPoint(id);\r\n        var delta;\r\n        var title;\r\n        var promise;\r\n\r\n        if (point) {\r\n            title = self.getLabel(id);\r\n            promise = self.layer.addMarker(point, TC.Util.extend({}, self.map.options.styles.point, { title: title, group: title }));\r\n        } else {\r\n            var match = /^Lat((?:[+-]?)\\d+(?:\\.\\d+)?)Lon((?:[+-]?)\\d+(?:\\.\\d+)?)$/.exec(id);\r\n            id = self.LAT + match[2] + self.LON + match[1];\r\n            point = self.getPoint(id);\r\n\r\n            if (point) {\r\n                title = self.getLabel(id);\r\n                promise = self.layer.addMarker(point, TC.Util.extend({}, self.map.options.styles.point, { title: title, group: title }));\r\n\r\n                self.textInput.value = title;\r\n            }\r\n        }\r\n\r\n        promise.then(function (feat) {\r\n            self.map.trigger(TC.Consts.event.FEATURESADD, {\r\n                layer: self.layer, features: [feat]\r\n            });\r\n\r\n            self.map.zoomToFeatures([feat]);\r\n\r\n            self.loading.removeWait(wait);\r\n        });\r\n\r\n    };\r\n    ctlProto.goToCoordinates = function (id) {\r\n        var self = this;\r\n        var goTo = {};\r\n        if (/^X([-+]?\\d+(?:[\\.\\,]\\d+)?)Y([-+]?\\d+(?:[\\.\\,]\\d+)?)$/.test(id) || /^Lat((?:[+-]?)\\d+(?:[.,]\\d+)?)Lon((?:[+-]?)\\d+(?:[.,]\\d+)?)$/.test(id)) {\r\n\r\n            goTo.params = {\r\n                type: TC.Consts.layerType.VECTOR,\r\n                styles: {\r\n                    marker: {\r\n                        url: self.layerStyleFN.bind(self, 'marker', 'url', true)\r\n                    }\r\n                }\r\n            };\r\n\r\n            goTo.emptyResultHTML = '<li><a class=\"tc-ctl-search-li-empty\">' + self.OUTBBX_LABEL + '</a></li>';\r\n\r\n            drawPoint.call(self, id);\r\n\r\n            return goTo;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    ctlProto.goToCadastralRef = function (id) {\r\n        var self = this;\r\n        var goTo = {};\r\n\r\n        var regex = new RegExp(\"^\" + self.MUN + \"(\\\\d+)\" + self.POL + \"(\\\\d{1,2})\" + self.PAR + \"{1}(\\\\d{1,4})\");\r\n        if (regex.test(id)) {\r\n            var match = regex.exec(id);\r\n\r\n            if (!TC.filter) {\r\n                TC.syncLoadJS(TC.apiLocation + 'TC/Filter');\r\n            }\r\n\r\n            var type = self.getSearchTypeByRole(TC.Consts.searchType.CADASTRAL);\r\n\r\n            goTo.params = {\r\n                type: TC.Consts.layerType.WFS,\r\n                url: type.url,\r\n                version: type.version,\r\n                geometryName: type.geometryName,\r\n                featurePrefix: type.featurePrefix,\r\n                featureType: type.featureType,\r\n                properties: new TC.filter.and(\r\n                    new TC.filter.equalTo(type.queryProperties.firstQueryWord, match[1].trim()),\r\n                    new TC.filter.equalTo(type.queryProperties.secondQueryWord, match[2].trim()),\r\n                    new TC.filter.equalTo(type.queryProperties.thirdQueryWord, match[3].trim())),\r\n                outputFormat: type.outputFormat,\r\n                styles: type.styles\r\n            };\r\n\r\n            goTo.emptyResultHTML = '<li><a title=\"' + self.EMPTY_RESULTS_TITLE + '\" class=\"tc-ctl-search-li-empty\">' + self.EMPTY_RESULTS_LABEL + '</a></li>';\r\n\r\n            return goTo;\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    ctlProto.goToRoad = function (id) {\r\n        var self = this;\r\n        var goTo = {};\r\n\r\n        var type = self.getSearchTypeByRole(TC.Consts.searchType.ROAD);\r\n\r\n        goTo.params = {\r\n            type: TC.Consts.layerType.WFS,\r\n            url: type.url,\r\n            version: type.version,\r\n            geometryName: type.geometryName,\r\n            featurePrefix: type.featurePrefix,\r\n            featureType: type.getFeatureTypes(),\r\n            maxFeatures: 3000,\r\n            properties: type.filter.getGoToFilter(id),\r\n            outputFormat: type.outputFormat,\r\n            styles: type.styles\r\n        };\r\n\r\n        goTo.emptyResultHTML = '<li><a title=\"' + self.EMPTY_RESULTS_TITLE + '\" class=\"tc-ctl-search-li-empty\">' + self.EMPTY_RESULTS_LABEL + '</a></li>';\r\n\r\n        return goTo;\r\n    };\r\n\r\n    ctlProto.goToPK = function (id) {\r\n        var self = this;\r\n        var goTo = {};\r\n\r\n        var type = self.getSearchTypeByRole(TC.Consts.searchType.ROADPK);\r\n\r\n        goTo.params = {\r\n            type: TC.Consts.layerType.WFS,\r\n            url: type.url,\r\n            version: type.version,\r\n            geometryName: type.geometryName,\r\n            featurePrefix: type.featurePrefix,\r\n            featureType: type.getFeatureTypes(),\r\n            maxFeatures: 3000,\r\n            properties: type.filter.getGoToFilter(id),\r\n            outputFormat: type.outputFormat,\r\n            styles: type.styles\r\n        };\r\n\r\n        goTo.emptyResultHTML = '<li><a title=\"' + self.EMPTY_RESULTS_TITLE + '\" class=\"tc-ctl-search-li-empty\">' + self.EMPTY_RESULTS_LABEL + '</a></li>';\r\n\r\n        return goTo;\r\n    };\r\n\r\n    ctlProto.goToStringPattern = function (id, dataRole) {\r\n        var self = this;\r\n        var goTo = {};\r\n\r\n        var type = self.getSearchTypeByRole(dataRole);\r\n\r\n        goTo.params = {\r\n            type: TC.Consts.layerType.WFS,\r\n            url: type.url,\r\n            version: type.version,\r\n            geometryName: type.geometryName,\r\n            featurePrefix: type.featurePrefix,\r\n            featureType: type.getFeatureTypes(),\r\n            maxFeatures: 3000,\r\n            properties: type.filter.getGoToFilter(id),\r\n            outputFormat: type.outputFormat,\r\n            styles: type.styles\r\n        };\r\n\r\n        return goTo;\r\n    };\r\n\r\n    ctlProto.getPoint = function (pattern) {\r\n        var self = this;\r\n        var isMapGeo = self.map.wrap.isGeo();\r\n        var point;\r\n        var match = /^X([-+]?\\d+(?:\\.\\d+)?)Y([-+]?\\d+(?:\\.\\d+)?)$/.exec(pattern);\r\n        if (match && match.length === 3) {\r\n            point = [parseFloat(match[1]), parseFloat(match[2])];\r\n            if (isMapGeo) {\r\n                point = TC.Util.reproject(point, self.map.options.utmCrs, self.map.crs);\r\n            }\r\n        }\r\n        else {\r\n            match = /^Lat((?:[+-]?)\\d+(?:[.,]\\d+)?)Lon((?:[+-]?)\\d+(?:[.,]\\d+)?)$/.exec(pattern);\r\n            if (match && match.length === 3) {\r\n                point = [parseFloat(match[2]), parseFloat(match[1])];\r\n                if (!isMapGeo) {\r\n                    return TC.Util.reproject(point, self.map.options.geoCrs, self.map.crs);\r\n                }\r\n            }\r\n\r\n            match = /^Lon((?:[+-]?)\\d+(?:[.,]\\d+)?)Lat((?:[+-]?)\\d+(?:[.,]\\d+)?)$/.exec(pattern);\r\n            if (match && match.length === 3) {\r\n                point = [parseFloat(match[2]), parseFloat(match[1])];\r\n                if (!isMapGeo) {\r\n                    return TC.Util.reproject(point, self.map.options.geoCrs, self.map.crs);\r\n                }\r\n            }\r\n        }\r\n\r\n        return point;\r\n    };\r\n\r\n    ctlProto.insideLimit = function (point) {\r\n        var self = this;\r\n        var getIntersectsBounds = function (extent, point) {\r\n            if (extent instanceof Array)\r\n                return point[0] >= extent[0] && point[0] <= extent[2] && point[1] >= extent[1] && point[1] <= extent[3];\r\n            else return true;\r\n        };\r\n\r\n        if (getIntersectsBounds(self.map.options.maxExtent, point)) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    ctlProto.getPattern = function () {\r\n        var self = this;\r\n        return self.textInput.value;\r\n    };\r\n\r\n    ctlProto.getLabel = function (id) {\r\n        var self = this;\r\n        var result = id;\r\n        var locale = TC.Util.getMapLocale(self.map);\r\n\r\n        if (id.match(new RegExp('^(?:' + self.LAT + '[-\\\\d])|(?:' + self.UTMX + '[-+]?[\\\\d])'))) {\r\n            result = result.replace(self.LAT, self.LAT_LABEL).replace(self.LON, ' ' + self.LON_LABEL).replace(self.UTMX, self.UTMX_LABEL).replace(self.UTMY, ' ' + self.UTMY_LABEL);\r\n            var match = result.match(new RegExp('^' + self.LAT_LABEL.trim() + '*\\\\s*([-+]?\\\\d{1,3}([.,]\\\\d+)?)\\\\,?\\\\s*' + self.LON_LABEL.trim() + '*\\\\s*([-+]?\\\\d{1,2}([.,]\\\\d+)?)$'));\r\n            if (match) {\r\n                result = result.replace(match[1], parseFloat(match[1]).toLocaleString(locale));\r\n                result = result.replace(match[3], parseFloat(match[3]).toLocaleString(locale));\r\n            }\r\n\r\n            var localeDecimalSeparator = 1.1.toLocaleString(locale).substring(1, 2);\r\n            var match = result.match(new RegExp('^' + self.UTMX_LABEL.trim() + '*\\\\s*([-+]?[0-9]{' + self.UTMX_LEN + '}(?:[.,]\\\\d+)?)\\\\s*\\\\,?\\\\s*' + self.UTMY_LABEL.trim() + '*\\\\s*([-+]?[0-9]{' + self.UTMY_LEN + '}(?:[.,]\\\\d+)?)$'));\r\n            if (match) {\r\n                if (!Number.isInteger(parseFloat(match[1])))\r\n                    result = result.replace(match[1], match[1].replace('.', localeDecimalSeparator));\r\n                if (!Number.isInteger(parseFloat(match[2])))\r\n                    result = result.replace(match[2], match[2].replace('.', localeDecimalSeparator));\r\n            }\r\n\r\n        } else if (id.match(new RegExp('^(?:' + self.LON + '[-\\\\d])'))) {\r\n            result = result.replace(self.LON, self.LON_LABEL).replace(self.LAT, ' ' + self.LAT_LABEL);\r\n\r\n            var match = result.match(new RegExp('^' + self.LON_LABEL.trim() + '*\\\\s*([-+]?\\\\d{1,3}([.,]\\\\d+)?)\\\\,?\\\\s*' + self.LAT_LABEL.trim() + '*\\\\s*([-+]?\\\\d{1,2}([.,]\\\\d+)?)$'));\r\n            if (match) {\r\n                result = result.replace(match[1], parseFloat(match[1]).toLocaleString(locale));\r\n                result = result.replace(match[3], parseFloat(match[3]).toLocaleString(locale));\r\n            }\r\n\r\n        } else if (id.match(new RegExp('^(?:(\\\\' + self.MUN + '{1})(.*)' + '(\\\\' + self.POL + '{1})' + '(\\\\d{1,2})' + '(\\\\' + self.PAR + '{1})' + '(\\\\d{1,4}))'))) {\r\n            var match = id.match(new RegExp('^(?:(\\\\' + self.MUN + '{1})(.*)' + '(\\\\' + self.POL + '{1})' + '(\\\\d{1,2})' + '(\\\\' + self.PAR + '{1})' + '(\\\\d{1,4}))'));\r\n            result = self.MUN_LABEL + match[2] + ', ' + self.POL_LABEL + match[4] + ', ' + self.PAR_LABEL + match[6];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    ctlProto.removePunctuation = function (text) {\r\n        text = text || '';\r\n        var result = new Array(text.length);\r\n        var map = {\r\n            'á': 'a',\r\n            'à': 'a',\r\n            'Á': 'A',\r\n            'À': 'A',\r\n            'é': 'e',\r\n            'è': 'e',\r\n            'É': 'E',\r\n            'È': 'E',\r\n            'í': 'i',\r\n            'ì': 'i',\r\n            'Í': 'I',\r\n            'Ì': 'I',\r\n            'ó': 'o',\r\n            'ò': 'o',\r\n            'Ó': 'O',\r\n            'Ò': 'O',\r\n            'ú': 'u',\r\n            'ù': 'u',\r\n            'ü': 'u',\r\n            'Ú': 'U',\r\n            'Ù': 'U',\r\n            'Ü': 'U'\r\n        };\r\n        for (var i = 0, len = text.length; i < len; i++) {\r\n            result[i] = map[text.charAt(i)] || text.charAt(i);\r\n        }\r\n        return result.join('');\r\n    };\r\n\r\n    ctlProto.exportState = function () {\r\n        const self = this;\r\n        if (self.exportsState && self.layer) {\r\n            return {\r\n                id: self.id,\r\n                searchText: self.textInput && self.textInput.value,\r\n                layer: self.layer.exportState({\r\n                    exportStyles: false\r\n                })\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importState = function (state) {\r\n        const self = this;\r\n        self.textInput.value = state.searchText;\r\n        self.layer.importState(state.layer).then(function () {\r\n            self.layer.features.forEach(function (f) {\r\n                f.setStyle(null); // Los estilos vienen dados exclusivamente por la capa, borramos estilos propios de la feature\r\n            });\r\n        });\r\n    };\r\n\r\n})();\r\n\r\n\r\nif (!String.prototype.tcFormat) {\r\n    String.prototype.tcFormat = function () {\r\n        var args = (arguments || [\"\"])[0];\r\n        return this.replace(/{(\\d+)}/g, function (match, number) {\r\n            return typeof args[number] != 'undefined' ?\r\n                args[number]\r\n                : match\r\n                ;\r\n        });\r\n    };\r\n}\r\n\r\n\r\nif (!String.prototype.splitRemoveWhiteSpaces) {\r\n    String.prototype.splitRemoveWhiteSpaces = function (separator) {\r\n        var _arr = [];\r\n        var arr = this.split(separator);\r\n        for (var i = 0; i < arr.length; i++)\r\n            if (arr[i].trim().length > 0)\r\n                _arr.push(arr[i].trim());\r\n\r\n        return _arr;\r\n    };\r\n}\r\n\r\n\r\nif (!String.prototype.toCamelCase) {\r\n    String.prototype.toCamelCase = function () {\r\n        var _value = this.toLowerCase();\r\n        var match = this.toLowerCase().match(/[^A-ZÁÉÍÓÚÜÀÈÌÒÙáéíóúüàèìòùa-z0-9_]+(.)/g);\r\n        if (match) {\r\n            for (var i = 0; i < match.length; i++) {\r\n                if (/[-;:.<>\\{\\}\\[\\]\\/\\s()]/g.test(match[i]))\r\n                    _value = _value.replace(match[i], match[i].toUpperCase());\r\n            }\r\n        }\r\n\r\n        return _value.charAt(0).toUpperCase() + _value.substring(1);\r\n    };\r\n}\r\n\r\n\r\nif (!Array.prototype.hasOwnProperty('findByProperty')) {\r\n    Object.defineProperty(Array.prototype, \"findByProperty\", {\r\n        enumerable: false,\r\n        writable: true,\r\n        value: function (propertyName, value) {\r\n            for (var i = 0; i < this.length; i++) {\r\n                if (this[i][propertyName] == value)\r\n                    return this[i];\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nif (!String.prototype.endsWith) {\r\n    String.prototype.endsWith = function (searchString, position) {\r\n        var subjectString = this.toString();\r\n        if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {\r\n            position = subjectString.length;\r\n        }\r\n        position -= searchString.length;\r\n        var lastIndex = subjectString.indexOf(searchString, position);\r\n        return lastIndex !== -1 && lastIndex === position;\r\n    };\r\n}\r\n"]}