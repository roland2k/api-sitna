{"version":3,"sources":["control/ResultsPanel.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Consts","event","DRAWCHART","DRAWTABLE","RESULTSPANELMIN","RESULTSPANELMAX","RESULTSPANELCLOSE","RESULTSPANELRESIZE","ResultsPanel","apply","this","arguments","wrap","data","classes","FA","SHOW_IN","SHOW_OUT","RESIZABLE","content","contentType","TABLE","Util","isEmptyObject","options","toUpperCase","chart","table","save","share","inherit","ctlProto","prototype","CLASS","COLLIDING_PRIORITY","IGNORE","LOW","MEDIUM","HIGH","CHART_SIZE","MIN_HEIGHT","MAX_HEIGHT","MIN_WIDTH","MEDIUM_WIDTH","MAX_WIDTH","template","compiler","main","container","depth0","helpers","partials","alias1","nullContext","alias2","escapeExpression","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","name","hash","loc","start","line","column","end","useData","1","blockParams","depths","stack1","lambda","alias3","fn","program","inverse","noop","2","4","5","useDepths","3","6","isElementVisible","elm","computedStyle","getComputedStyle","hidden","display","visibility","isVisible","bodyElm","div","querySelector","maximizeElm","isMinimized","manageClassList","classElement","toAdd","toRemove","classList","add","remove","show","style","hide","doVisible","HIDDEN","render","callback","self","mainTitleElm","minimizeButton","addEventListener","minimize","closeButton","close","resizedTarget","removeProperty","dataset","chartSizeWidth","chartSizeHeight","panelSizeWidth","panelSizeHeight","maximizeButton","maximize","saveButton","exportToExcel","removeAttribute","download","downloadButton","isFunction","shareButton","caller","showShareDialog","titles","setAttribute","innerHTML","max","getLocaleString","collapsedClass","infoDiv","tableDiv","menuDiv","browserFeatures","touch","swipe","left","hideResizeHandlers","document","querySelectorAll","forEach","el","detectMobile","doResizable","resize","isResizable","childElementCount","map","on","e","renderPanelResizable","target","preserveAspectRatio","loadJS","window","interact","url","INTERACTJS","targetNode","isSet","closest","svg","parentElement","maxHeight","resizable","edges","right","bottom","[object Object]","action","interactable","element","interacting","cursor","handler","value","indexOf","listeners","onResize","assign","width","rect","height","getBoundingClientRect","LOADING","modifiers","restrict","restriction","getResizableChartSize","chartWrapperBounding","getResultsPanelFromElement","resultsPanels","getControlsByClass","i","length","newSize","resultsPanel","trigger","size","collapsedElm","chartBounding","parseInt","destroy","body","getContainerElement","openChart","filter","ctl","msg","toast","elevationProfileChartData","renderElevationProfileChart","formatYAxis","d","locale","toFixed","toLocaleString","c3","D3C3","ele","val","getMapLocale","templateData","upHill","downHill","hasSecondaryElevationProfileChartData","secondaryElevationProfileChartData","Array","isArray","min","secondChart","getRenderedHtml","out","titleElm","legendOptions","position","inset","anchor","x","y","step","chartOptions","extend","bindto","padding","top","legend","createChartOptions","tooltip","chartOffsetX","graphOffsetX","tooltipWidth","clientWidth","d3","mouse","Math","floor","xAxisHeight","onBottom","contents","getFnFromString","eval","ctx","onmouseout","onrendered","_onrendered","_isOverriden","internal","generateDrawLine","lineIndices","isSub","$$","config","getPoints","generateGetLinePoints","yScaleGetter","getSubYScale","getYScale","xValue","subxx","xx","yValue","data_groups","id","axis_rotated","line_connectNull","defined","path","values","filterRemoveNull","subX","x0","y0","isLineType","data_regions","lineWithRegions","isStepType","convertValuesToStep","interpolate","generateDrawArea","areaIndices","area","generateGetAreaPoints","value0","value1","x1","y1","isAreaType","generate","closeOpenedTableResultsPanel","openTable","css","columns","k","push","tableData","results","sort","scrollPosition","_sort","field","order","sortedDataTable","mappedArr","index","properties","a","b","valorA","valorB","then","html","removeChild","appendChild","th","offsetParent","scrollLeft","innerText","open","toCheck","requestIsRendered","requestAnimationFrame","clientRect","cancelAnimationFrame","bind","chartElm","tableElm","infoElm","getTableContainer","collapsed","loadDataOnChart","endFn","unload","done","result","chartType","getChartSize","panelStyle","docWidth","documentElement","r","minHeight","parseFloat","maxWidth","mediumWidth","minWidth","gradIds","getUID","maxy","Number","NEGATIVE_INFINITY","miny","POSITIVE_INFINITY","xColumn","eleColumn","concat","types","colors","point","axis","tick","outer","count","format","dist","measure","round","onresize","api","names","ele2","axes","every","time","h","slice","m","s","rendered","item","title","createElementNS","textContent","CLICK","contains","toggle","passive","svgDefsElement","getElementsByTagName","xmlns","createLinearGradient","grad","setAttributeNS","stop0","stop50","stop100","d3Node","select","node","parentNode","selectAll","stopPropagation","coords","feature","Point","zoomToFeatures","empty","pattern","attr","exec","replace","svgRect","chartSize","setMultilineLabels","scale","ordinal","rangeRoundBands","textNode","each","d3text","childNodes","clone","cloneNode","words","text","split","dy","getAttribute","rangeBand","elevationChartLabelsRAF","undefined","hasSize","getTime","timeFrom","timeTo","diff","daysDifference","hoursDifference","minutesDifference","toString","getElevationChartTooltip","getElevationByDataElem","dataElem","p","doneTime","distance","distanceFormatted","elem","join","getInfoContainer","getMenuElement","register","openOn","one","args","fnOpen","closeOn","FEATUREREMOVE","currentFeature","FEATURESCLEAR","LAYERREMOVE","layer","_ctl","rows","row","_fncSave","exporter","fileName","Save","ExcelExport","CHART"],"mappings":"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","sourcesContent":["\r\nTC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.Consts.event.DRAWCHART = 'drawchart.tc';\r\nTC.Consts.event.DRAWTABLE = 'drawtable.tc';\r\nTC.Consts.event.RESULTSPANELMIN = 'resultspanelmin.tc';\r\nTC.Consts.event.RESULTSPANELMAX = 'resultspanelmax.tc';\r\nTC.Consts.event.RESULTSPANELCLOSE = 'resultspanelclose.tc';\r\nTC.Consts.event.RESULTSPANELRESIZE = 'resultspanelresize.tc';\r\n\r\nTC.control.ResultsPanel = function () {\r\n    var self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self.wrap = new TC.wrap.control.ResultsPanel(self);\r\n\r\n    self.data = {};\r\n    self.classes = {\r\n        FA: 'fa',\r\n        SHOW_IN: 'showIn',\r\n        SHOW_OUT: 'showOut',\r\n        RESIZABLE: 'tc-resizable'\r\n    };\r\n\r\n    self.content = self.contentType.TABLE;\r\n\r\n    if (TC.Util.isEmptyObject(self.options)) {\r\n        self.options = { content: \"table\" };\r\n    }\r\n\r\n    if (self.options || { content: \"table\" }) {\r\n        if (self.options.content)\r\n            self.content = self.contentType[self.options.content.toUpperCase()];\r\n\r\n        if (self.options.chart)\r\n            self.chart = self.options.chart;\r\n\r\n        if (self.options.table)\r\n            self.table = self.options.table;\r\n\r\n        if (self.options.save)\r\n            self.save = self.options.save;\r\n\r\n        if (self.options.share)\r\n            self.share = self.options.share;\r\n\r\n    }\r\n};\r\n\r\nTC.inherit(TC.control.ResultsPanel, TC.Control);\r\n\r\n(function () {\r\n\r\n    const ctlProto = TC.control.ResultsPanel.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-p-results';\r\n\r\n    ctlProto.COLLIDING_PRIORITY = {\r\n        IGNORE: 0,\r\n        LOW: 1,\r\n        MEDIUM: 2,\r\n        HIGH: 3\r\n    };\r\n\r\n    ctlProto.CHART_SIZE = {\r\n        MIN_HEIGHT: 75,\r\n        MAX_HEIGHT: 128,\r\n\r\n        MIN_WIDTH: 215,\r\n        MEDIUM_WIDTH: 310,\r\n        MAX_WIDTH: 445\r\n    };\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/tc-ctl-p-results.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-table'] = TC.apiLocation + \"TC/templates/tc-ctl-p-results-table.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-chart'] = TC.apiLocation + \"TC/templates/tc-ctl-p-results-chart.hbs\";\r\n\r\n    const isElementVisible = function (elm) {\r\n        const computedStyle = getComputedStyle(elm);\r\n        return (elm && !elm.hidden && computedStyle.display !== 'none' && computedStyle.visibility !== 'hidden');\r\n    };\r\n\r\n    ctlProto.isVisible = function () {\r\n        const self = this;\r\n        const bodyElm = self.div.querySelector('.prsidebar-body');\r\n        const maximizeElm = self.div.querySelector('.prcollapsed-max');\r\n        return isElementVisible(bodyElm) || isElementVisible(maximizeElm);\r\n    };\r\n\r\n    ctlProto.isMinimized = function () {\r\n        const self = this;\r\n        const bodyElm = self.div.querySelector('.prsidebar-body');\r\n        const maximizeElm = self.div.querySelector('.prcollapsed-max');\r\n        return isElementVisible(maximizeElm) && !isElementVisible(bodyElm);\r\n    };\r\n\r\n    const manageClassList = function (classElement, toAdd, toRemove) {\r\n        const self = this;\r\n\r\n        const elm = self.div.querySelector('.' + classElement);\r\n        if (elm) {\r\n            elm.classList.add(toAdd);\r\n            elm.classList.remove(toRemove);\r\n        }\r\n    };\r\n\r\n    ctlProto.show = function (classElement) {\r\n        const self = this;\r\n\r\n        const elm = self.div.querySelector('.' + classElement);\r\n        if (elm && elm.style.display === 'none') {\r\n            elm.style.display = '';\r\n        }\r\n\r\n        manageClassList.call(self, classElement, self.classes.SHOW_IN, self.classes.SHOW_OUT);\r\n    };\r\n\r\n    ctlProto.hide = function (classElement) {\r\n        const self = this;\r\n\r\n        manageClassList.call(self, classElement, self.classes.SHOW_OUT, self.classes.SHOW_IN);\r\n\r\n        const elm = self.div.querySelector('.' + classElement);\r\n        if (elm) {\r\n            elm.style.display = 'none';\r\n        }\r\n    };\r\n\r\n    ctlProto.doVisible = function () {\r\n        const self = this;\r\n\r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.show('prsidebar-body');\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n\r\n        self.div.classList.add(TC.Consts.classes.HIDDEN);\r\n\r\n        return TC.Control.prototype.render.call(self, function () {\r\n\r\n            self.mainTitleElm = self.div.querySelector('.prpanel-title-text');\r\n\r\n            self.minimizeButton = self.div.querySelector('.prcollapsed-slide-submenu-min');\r\n            self.minimizeButton.addEventListener('click', function () {\r\n                self.minimize();\r\n            });\r\n\r\n            self.closeButton = self.div.querySelector('.prcollapsed-slide-submenu-close');\r\n            self.closeButton.addEventListener('click', function () {\r\n                self.close();\r\n                const resizedTarget = self.div.querySelector('.' + self.classes.RESIZABLE + '.prpanel-default');\r\n                if (resizedTarget) {\r\n                    // si el usuario cierra el panel desde el aspa, eliminamos el rastro del redimensionado para empezar de cero\r\n                    delete resizedTarget.style.removeProperty(\"width\");\r\n                    delete resizedTarget.style.removeProperty(\"height\");\r\n                    delete resizedTarget.dataset.chartSizeWidth;\r\n                    delete resizedTarget.dataset.chartSizeHeight;\r\n                    delete resizedTarget.dataset.panelSizeWidth;\r\n                    delete resizedTarget.dataset.panelSizeHeight;\r\n                }\r\n            });\r\n\r\n            self.maximizeButton = self.div.querySelector('.prcollapsed-max');\r\n            self.maximizeButton.addEventListener('click', function () {\r\n                self.maximize();\r\n            });\r\n\r\n            if (self.save) {\r\n                self.saveButton = self.div.querySelector('.prcollapsed-slide-submenu-csv');\r\n                self.saveButton.addEventListener('click', function () {\r\n                    self.exportToExcel();\r\n                });\r\n                self.saveButton.removeAttribute('hidden');\r\n            }\r\n            if (self.options.download && self.options.content === \"table\") {\r\n                self.downloadButton = self.div.querySelector('.prcollapsed-slide-submenu-dwn');\r\n                self.downloadButton.addEventListener('click', function () {\r\n                    if (TC.Util.isFunction(self.options.download)) {\r\n                        self.options.download.apply(self, []);\r\n                    }\r\n                });\r\n                self.downloadButton.removeAttribute('hidden');\r\n            }\r\n            if (self.options.share) {\r\n                self.shareButton = self.div.querySelector('.' + self.CLASS + \"-share-btn\");\r\n                self.shareButton.addEventListener('click', function () {\r\n                    if (self.caller) {\r\n                        self.caller.showShareDialog();\r\n                    }\r\n                });\r\n                self.shareButton.removeAttribute('hidden');\r\n            }\r\n            if (self.content) {\r\n                self.content = self.content;\r\n\r\n                if (self.options.titles) {\r\n\r\n                    if (self.options.titles.main) {\r\n                        self.mainTitleElm.setAttribute('title', self.options.titles.main);\r\n                        self.mainTitleElm.innerHTML = self.options.titles.main;\r\n                    }\r\n\r\n                    if (self.options.titles.max) {\r\n                        self.maximizeButton.setAttribute('title', self.options.titles.max);\r\n                    }\r\n                } else {\r\n                    self.mainTitleElm.setAttribute('title', self.getLocaleString(\"rsp.title\"));\r\n                    self.mainTitleElm.innerHTML = self.getLocaleString(\"rsp.title\");\r\n                }\r\n            }\r\n\r\n            const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n            //collapsedElm.hidden = false;\r\n            collapsedElm.classList.add(self.classes.FA);\r\n\r\n            self.infoDiv = self.div.querySelector('.' + self.CLASS + '-info');\r\n            self.tableDiv = self.div.querySelector('.' + self.CLASS + '-table');\r\n            //self.$divChart = self._$div.find('.' + self.CLASS + '-chart');\r\n            self.menuDiv = self.div.querySelector('.' + self.CLASS + '-menu');\r\n\r\n            if (TC.browserFeatures.touch()) {\r\n                TC.Util.swipe(self.div, {\r\n                    left: function () {\r\n                        self.minimize();\r\n                    }\r\n                });\r\n            }\r\n            const hideResizeHandlers = function () {\r\n                document.querySelectorAll('.' + self.CLASS + '-resize-handler').forEach((el) => {\r\n                    el.classList.add(TC.Consts.classes.HIDDEN);\r\n                });\r\n            };\r\n            if (!TC.Util.detectMobile()) {\r\n                const doResizable = !(self.options.hasOwnProperty(\"resize\") && !self.options.resize);\r\n                let isResizable;\r\n                switch (true) {\r\n                    case self.options.content === \"chart\" && doResizable: // si es un perfil de elevación\r\n                    case self.options.resize: // si está configurado a true\r\n                    case self.options.content === \"table\" && self.infoDiv && self.infoDiv.childElementCount > 0 && doResizable: // si es una tabla y es el renderizado de GFI\r\n                        isResizable = true;\r\n                        self.div.classList.add(self.classes.RESIZABLE);\r\n                        break;\r\n                    default:\r\n                        isResizable = false;\r\n                        break;\r\n                }\r\n                self.map.on(TC.Consts.event.DRAWCHART + ' ' + TC.Consts.event.DRAWTABLE, function (e) {\r\n                    if (e.control === self) {\r\n                        if (isResizable) {\r\n                            self.renderPanelResizable({ target: self.div, preserveAspectRatio: true });\r\n                        }\r\n                        else {\r\n                            hideResizeHandlers();\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                hideResizeHandlers();\r\n            }\r\n\r\n            if (callback && typeof (callback) === \"function\")\r\n                callback.call();\r\n        });\r\n    };\r\n\r\n    ctlProto.renderPanelResizable = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        TC.loadJS(\r\n            !window.interact,\r\n            [TC.apiLocation + TC.Consts.url.INTERACTJS],\r\n            function () {\r\n                const target = \".\" + self.classes.RESIZABLE;\r\n                const targetNode = options.target && options.target.querySelector(\".prpanel.prpanel-default\") || document.querySelector(\".prpanel.prpanel-default\");\r\n                if (!interact.isSet(target)) {\r\n                    targetNode.classList.add(self.classes.RESIZABLE);\r\n                    targetNode.closest('.' + self.CLASS).classList.add(self.classes.RESIZABLE);\r\n                    const svg = document.querySelector('.tc-chart.c3 svg');\r\n                    if (svg) {\r\n                        svg.parentElement.style.maxHeight = 'unset';\r\n                        svg.removeAttribute('max-height');\r\n                        svg.removeAttribute('max-width');\r\n                        svg.removeAttribute('min-height');\r\n                        svg.removeAttribute('min-width');\r\n                    }\r\n                    const interactable = interact(target)\r\n                        .resizable({\r\n                            preserveAspectRatio: options.preserveAspectRatio || true,\r\n                            edges: {\r\n                                right: '.tc-ctl-p-results-resize-handler',\r\n                                bottom: '.tc-ctl-p-results-resize-handler'\r\n                            },\r\n                            cursorChecker(action, interactable, element, interacting) {\r\n                                let cursor = \"\";\r\n                                let currentHandlers = element.querySelectorAll(':hover');\r\n                                currentHandlers.forEach(function (handler) {\r\n                                    switch (true) {\r\n                                        case handler.classList.value.indexOf(\"tc-resizable-grid-handlerRight\") > -1:\r\n                                            cursor = 'w-resize';\r\n                                            break;\r\n                                        case handler.classList.value.indexOf(\"tc-resizable-grid-handlerBottom\") > -1:\r\n                                            cursor = 'n-resize';\r\n                                            break;\r\n                                        case handler.classList.value.indexOf(\"tc-resizable-grid-handlerDiagonal\") > -1:\r\n                                            cursor = 'nw-resize';\r\n                                            break;\r\n                                        default:\r\n                                            cursor = 'pointer';\r\n                                    }\r\n                                });\r\n                                return cursor;\r\n                            },\r\n                            listeners: {\r\n                                end: function (event) {\r\n                                    self.onResize(event);\r\n                                },\r\n                                move(event) {\r\n                                    switch (true) {\r\n                                        case event.target.style.cursor === 'w-resize':\r\n                                            Object.assign(event.target.style, {\r\n                                                width: `${event.rect.width}px`,\r\n                                                height: `${event.target.getBoundingClientRect().height}px`\r\n                                            });\r\n                                            break;\r\n                                        case event.target.style.cursor === 'nw-resize':\r\n                                            Object.assign(event.target.style, {\r\n                                                width: `${event.rect.width}px`,\r\n                                                height: `${event.rect.height}px`\r\n                                            });\r\n                                            break;\r\n                                        case event.target.style.cursor === 'n-resize':\r\n                                            Object.assign(event.target.style, {\r\n                                                width: `${event.target.getBoundingClientRect().width}px`,\r\n                                                height: `${event.rect.height}px`\r\n                                            });\r\n                                        default:\r\n                                            break;\r\n                                    }\r\n\r\n                                    if (event.target.querySelector('.tc-chart.c3')) {\r\n                                        event.target.classList.add(TC.Consts.classes.LOADING);\r\n                                    }\r\n                                }\r\n                            },\r\n                            modifiers: [\r\n                                interact.modifiers.restrict({\r\n                                    restriction: 'body'\r\n                                })\r\n                            ]\r\n                        });\r\n\r\n                    if (options.callback && TC.Util.isFunction(options.callback)) {\r\n                        options.callback();\r\n                    }\r\n                }\r\n            });\r\n    };\r\n\r\n    ctlProto.getResizableChartSize = function (target) {\r\n        if (target) {\r\n            let chartWrapperBounding = target.querySelector('.tc-chart.c3').getBoundingClientRect();\r\n            const newSize = {\r\n                width: chartWrapperBounding.width,\r\n                height: chartWrapperBounding.height\r\n            }\r\n            return newSize;\r\n        }\r\n    };\r\n\r\n    ctlProto.getResultsPanelFromElement = function (element) {\r\n        const self = this;\r\n\r\n        let resultsPanels = self.map.getControlsByClass(TC.control.ResultsPanel);\r\n        for (var i = 0; i < resultsPanels.length; i++) {\r\n            if (resultsPanels[i].div.querySelector('.' + self.classes.RESIZABLE + '.prpanel-default') === element) {\r\n                return resultsPanels[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    };\r\n\r\n    ctlProto.onResize = function (e) {\r\n        const self = this;\r\n        const target = e.target;\r\n        if (target.querySelector('.tc-chart.c3')) {\r\n            target.classList.remove(TC.Consts.classes.LOADING);\r\n            const newSize = self.getResizableChartSize(target);\r\n            if (newSize) {\r\n                let resultsPanel = self.getResultsPanelFromElement(target);\r\n                if (resultsPanel) {\r\n                    resultsPanel.chart.chart.resize(newSize);\r\n                }\r\n            }\r\n        }\r\n        self.map.trigger(TC.Consts.event.RESULTSPANELRESIZE, {\r\n            control: self, size: {\r\n                width: target.getBoundingClientRect().width,\r\n                height: target.getBoundingClientRect().height\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.minimize = function () {\r\n        const self = this;\r\n\r\n        const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n        if (!isElementVisible(collapsedElm)) { // ya está minimizado\r\n            collapsedElm.classList.add(self.classes.FA);\r\n            collapsedElm.hidden = false;\r\n\r\n            self.hide('prsidebar-body');\r\n            self.show('prcollapsed-max');\r\n\r\n            self.map.trigger(TC.Consts.event.RESULTSPANELMIN, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.maximize = function () {\r\n        const self = this;\r\n\r\n        const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n        if (isElementVisible(collapsedElm)) { // ya está maximizado\r\n            collapsedElm.hidden = true;\r\n\r\n            self.show('prsidebar-body');\r\n            self.hide('prcollapsed-max');\r\n\r\n            self.map.trigger(TC.Consts.event.RESULTSPANELMAX, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.close = function () {\r\n        const self = this;\r\n\r\n        self.div.classList.add(TC.Consts.classes.HIDDEN);\r\n\r\n        if (self.chart && self.chart.chart) {\r\n            // preservamos el tamaño redimensionado por el usuario\r\n            const resizedTarget = self.div.querySelector('.' + self.classes.RESIZABLE + '.prpanel-default');\r\n            if (resizedTarget && resizedTarget.style && resizedTarget.style.width && resizedTarget.style.height) {\r\n                const chartElement = resizedTarget.querySelector('.tc-chart');\r\n                const chartBounding = chartElement.getBoundingClientRect();\r\n                // cuando el panel está colapsado no tenemos disponible el tamaño del perfil\r\n                if (parseInt(chartBounding.width) > 0 && parseInt(chartBounding.height) > 0) {\r\n                    resizedTarget.dataset.chartSizeWidth = chartBounding.width;\r\n                    resizedTarget.dataset.chartSizeHeight = chartBounding.height;\r\n                }\r\n                resizedTarget.dataset.panelSizeWidth = resizedTarget.style.width;\r\n                resizedTarget.dataset.panelSizeHeight = resizedTarget.style.height;\r\n            }\r\n            self.chart.chart = self.chart.chart.destroy();\r\n        }\r\n\r\n        const body = self.getContainerElement();\r\n        if (body) {\r\n            body.style.display = 'none';\r\n            self.div.querySelector('.prcollapsed-max').style.display = 'none';\r\n            body.querySelectorAll('video,audio,iframe').forEach(elm => elm.remove());\r\n\r\n            const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n            collapsedElm.hidden = true;\r\n            collapsedElm.classList.remove(self.classes.FA);\r\n\r\n            let resizable = document.querySelector(\".\" + self.classes.RESIZABLE);\r\n            if (resizable) {\r\n                resizable.style = \"\";\r\n            }\r\n\r\n            self.map.trigger(TC.Consts.event.RESULTSPANELCLOSE, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.openChart = function (data) {\r\n        const self = this;\r\n\r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        // Cerramos el resto de los perfiles\r\n        self.map.getControlsByClass(TC.control.ResultsPanel)\r\n            .filter(function (ctl) {\r\n                return ctl !== self;\r\n            })\r\n            .filter(function (ctl) {\r\n                return ctl.options.content === 'chart';\r\n            })\r\n            .forEach(function (ctl) {\r\n                ctl.close();\r\n            });\r\n\r\n        if (data) {\r\n\r\n            if (data.msg) {\r\n                self.map.toast(data.msg);\r\n                if (self.isVisible()) {\r\n                    self.hide('prsidebar-body');\r\n                }\r\n            }\r\n            else {\r\n                self.elevationProfileChartData = data;\r\n                self.renderElevationProfileChart({\r\n                    data: data,\r\n                    div: self.div.querySelector('.' + ctlProto.CLASS + '-chart')\r\n                });\r\n            }\r\n        } else {\r\n            self.map.toast(options.msg);\r\n        }\r\n    };\r\n\r\n    const formatYAxis = function (d, locale) {\r\n        let y = (parseInt(d.toFixed(0)) || 0);\r\n        return y.toLocaleString(locale) + ' m';\r\n    };\r\n\r\n    ctlProto.renderElevationProfileChart = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        TC.loadJS(!window.c3,\r\n            TC.Consts.url.D3C3 || TC.apiLocation + 'lib/d3c3/d3c3.min.js',\r\n            function () {\r\n                const data = options.data;\r\n                data.ele = data.ele.map(val => val === null ? 0 : val);\r\n                const div = options.div;\r\n                let locale = TC.Util.getMapLocale(self.map);\r\n\r\n                var templateData = {\r\n                    upHill: data.upHill ? data.upHill.toLocaleString(locale) : '0',\r\n                    downHill: data.downHill ? data.downHill.toLocaleString(locale) : '0'\r\n                };\r\n\r\n                const hasSecondaryElevationProfileChartData = data.secondaryElevationProfileChartData &&\r\n                    Array.isArray(data.secondaryElevationProfileChartData) &&\r\n                    data.secondaryElevationProfileChartData.length > 0 && data.secondaryElevationProfileChartData[0];\r\n\r\n                if (hasSecondaryElevationProfileChartData) {\r\n                    templateData.min = formatYAxis(data.min, locale);\r\n                    templateData.max = formatYAxis(data.max, locale);\r\n\r\n                    templateData.secondChart = {\r\n                        upHill: data.secondaryElevationProfileChartData[0].upHill ? data.secondaryElevationProfileChartData[0].upHill.toLocaleString(locale) : '0',\r\n                        downHill: data.secondaryElevationProfileChartData[0].downHill ? data.secondaryElevationProfileChartData[0].downHill.toLocaleString(locale) : '0',\r\n                        min: formatYAxis(data.secondaryElevationProfileChartData[0].min, locale),\r\n                        max: formatYAxis(data.secondaryElevationProfileChartData[0].max, locale)\r\n                    };\r\n                }\r\n                self.getRenderedHtml(ctlProto.CLASS + '-chart', templateData, function (out) {\r\n\r\n                    div.innerHTML = out;\r\n                    div.style.display = '';\r\n\r\n                    if (self.options.titles) {\r\n\r\n                        if (self.options.titles.main) {\r\n                            const titleElm = self.div.querySelector('.prpanel-title-text');\r\n                            titleElm.setAttribute('title', self.options.titles.main);\r\n                            titleElm.innerHTML = self.options.titles.main;\r\n                        }\r\n\r\n                        if (self.options.titles.max) {\r\n                            self.div.querySelector('.prcollapsed-max').setAttribute('title', self.options.titles.max);\r\n                        }\r\n                    }\r\n\r\n                    var legendOptions = { show: false };\r\n                    if (hasSecondaryElevationProfileChartData) {\r\n                        legendOptions = {\r\n                            position: 'inset',\r\n                            inset: {\r\n                                anchor: \"bottom-left\",\r\n                                x: -55,\r\n                                y: -30,\r\n                                step: 1\r\n                            }\r\n                        };\r\n                    }\r\n                    let chartOptions = TC.Util.extend({\r\n                        bindto: div.querySelector('.tc-chart'),\r\n                        padding: {\r\n                            top: 13, // por el nuevo diseño del tooltip añado 13  //data.secondaryElevationProfileChartData[0] ? 10 : 0,\r\n                            right: 15,\r\n                            bottom: 0,\r\n                            left: 45,\r\n                        },\r\n                        legend: legendOptions\r\n                    }, self.createChartOptions(data));\r\n\r\n                    // preservamos el tamaño redimensionado por el usuario\r\n                    const resizedTarget = self.div.querySelector('.' + self.classes.RESIZABLE + '.prpanel-default');\r\n                    if (resizedTarget &&\r\n                        resizedTarget.dataset.chartSizeWidth && parseInt(resizedTarget.dataset.chartSizeWidth) > 0 &&\r\n                        resizedTarget.dataset.chartSizeHeight && parseInt(resizedTarget.dataset.chartSizeHeight) > 0) {\r\n                        TC.Util.extend(chartOptions.size, { width: resizedTarget.dataset.chartSizeWidth, height: resizedTarget.dataset.chartSizeHeight });\r\n\r\n                        if (resizedTarget.dataset.panelSizeWidth && parseInt(resizedTarget.dataset.panelSizeWidth) > 0 &&\r\n                            resizedTarget.dataset.panelSizeHeight && parseInt(resizedTarget.dataset.panelSizeHeight) > 0) {\r\n                            resizedTarget.style.width = resizedTarget.dataset.panelSizeWidth;\r\n                            resizedTarget.style.height = resizedTarget.dataset.panelSizeHeight;\r\n                        }\r\n                    }\r\n                    if (self.chart.tooltip) {\r\n                        chartOptions.tooltip = {\r\n                            position: function (data, width, height, element) {\r\n                                let container = document.querySelector('.c3-tooltip-container');\r\n                                let chartOffsetX = document.querySelector(\".c3\").getBoundingClientRect().left;\r\n                                let graphOffsetX = document.querySelector(\".c3 g.c3-axis-y\").getBoundingClientRect().right;\r\n                                let tooltipWidth = container.clientWidth;\r\n                                let x = (parseInt(d3.mouse(element)[0])) + graphOffsetX - chartOffsetX - Math.floor(tooltipWidth / 2);\r\n\r\n                                // alto del tooltipOnBottom\r\n                                let xAxisHeight = document.querySelector(\".c3 g.c3-axis-x\").getBoundingClientRect().height + 2;\r\n                                let onBottom = container.querySelector(\".onBottom\");\r\n                                if (onBottom && xAxisHeight) {\r\n                                    onBottom.style.height = xAxisHeight + 'px';\r\n                                }\r\n                                return { top: 0, left: x };\r\n                            },\r\n                            contents: function (d) {\r\n                                var fn = self.chart.tooltip;\r\n                                if (typeof (fn) !== \"function\")\r\n                                    fn = TC.Util.getFnFromString(self.chart.tooltip);\r\n                                return fn.call(eval(self.chart.ctx), d);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self.chart && self.chart.onmouseout) {\r\n                        chartOptions.onmouseout = function () {\r\n                            var fn = self.chart.onmouseout;\r\n                            if (typeof (fn) !== \"function\")\r\n                                fn = TC.Util.getFnFromString(self.chart.onmouseout);\r\n                            fn.call(eval(self.chart.ctx));\r\n                        };\r\n                    }\r\n\r\n                    chartOptions.onrendered = function () {\r\n                        if (TC.Util.isFunction(chartOptions._onrendered)) {\r\n                            chartOptions._onrendered.call(this);\r\n                        }\r\n                        self.map.trigger(TC.Consts.event.DRAWCHART, { control: self, svg: this.svg[0][0], chart: this });\r\n                    };\r\n\r\n                    if (window.c3) {\r\n\r\n                        if (!c3._isOverriden) {\r\n                            // GLS: Override de la función generateDrawLine y generateDrawArea para establecer otro tipo de interpolación en la línea\r\n                            window.c3.chart.internal.fn.generateDrawLine = function (lineIndices, isSub) {\r\n                                var $$ = this, config = $$.config,\r\n                                    line = $$.d3.svg.line(),\r\n                                    getPoints = $$.generateGetLinePoints(lineIndices, isSub),\r\n                                    yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\r\n                                    xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\r\n                                    yValue = function (d, i) {\r\n                                        return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\r\n                                    };\r\n                                line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\r\n                                if (!config.line_connectNull) { line = line.defined(function (d) { return d.value != null; }); }\r\n                                return function (d) {\r\n                                    var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\r\n                                        x = isSub ? $$.x : $$.subX, y = yScaleGetter.call($$, d.id), x0 = 0, y0 = 0, path;\r\n                                    if ($$.isLineType(d)) {\r\n                                        if (config.data_regions[d.id]) {\r\n                                            path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\r\n                                        } else {\r\n                                            if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\r\n                                            path = line.interpolate('linear')(values);\r\n                                        }\r\n                                    } else {\r\n                                        if (values[0]) {\r\n                                            x0 = x(values[0].x);\r\n                                            y0 = y(values[0].value);\r\n                                        }\r\n                                        path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\r\n                                    }\r\n                                    return path ? path : \"M 0 0\";\r\n                                };\r\n                            };\r\n                            window.c3.chart.internal.fn.generateDrawArea = function (areaIndices, isSub) {\r\n                                var $$ = this, config = $$.config, area = $$.d3.svg.area(),\r\n                                    getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\r\n                                    yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\r\n                                    xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\r\n                                    value0 = function (d, i) {\r\n                                        return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(0);\r\n                                    },\r\n                                    value1 = function (d, i) {\r\n                                        return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\r\n                                    };\r\n                                area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(value0).y1(value1);\r\n                                if (!config.line_connectNull) {\r\n                                    area = area.defined(function (d) { return d.value !== null; });\r\n                                }\r\n                                return function (d) {\r\n                                    var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\r\n                                        x0 = 0, y0 = 0, path;\r\n                                    if ($$.isAreaType(d)) {\r\n                                        if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\r\n                                        path = area.interpolate('linear')(values);\r\n                                    } else {\r\n                                        if (values[0]) {\r\n                                            x0 = $$.x(values[0].x);\r\n                                            y0 = $$.getYScale(d.id)(values[0].value);\r\n                                        }\r\n                                        path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\r\n                                    }\r\n                                    return path ? path : \"M 0 0\";\r\n                                };\r\n                            };\r\n                            c3._isOverriden = true;\r\n                        }\r\n\r\n                        self.chart.chart = c3.generate(chartOptions);\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    const closeOpenedTableResultsPanel = function () {\r\n        const self = this;\r\n\r\n        self.map.getControlsByClass(TC.control.ResultsPanel)\r\n            .filter(function (ctl) {\r\n                return ctl !== self && ctl.isVisible();\r\n            })\r\n            .filter(function (ctl) {\r\n                return ctl.options.content !== 'chart';\r\n            })\r\n            .forEach(function (ctl) {\r\n                ctl.close();\r\n            });\r\n    };\r\n\r\n    ctlProto.openTable = function () {\r\n        var self = this;\r\n\r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        var data = arguments[0];\r\n        if (data) {\r\n\r\n            var css;\r\n            if (data.css) {\r\n                css = data.css;\r\n            }\r\n            var callback = data.callback;\r\n            var columns = data.columns, data = data.data;\r\n\r\n            if (data && data.length > 0) {\r\n                //Si no recibe columnas, las extrae de las claves del primer objeto de la colección de datos\r\n                if (!columns) {\r\n                    columns = [];\r\n                    for (var k in data[0]) {\r\n                        columns.push(k);\r\n                    }\r\n                }\r\n\r\n                //deleteColumns();\r\n                \r\n                self.tableData = {\r\n                    columns: columns,\r\n                    results: data,\r\n                    css: css,\r\n                    callback: callback,\r\n                    sort: data.sort ? {} : null\r\n                }\r\n                var scrollPosition = null;\r\n                const _sort = (tableData, field, order) => {\r\n                    var sortedDataTable = tableData;\r\n                    if (field) {\r\n                        const mappedArr = self.tableData.results.map(function (el, i) {\r\n                            return { index: i, properties: el };\r\n                        });\n                        mappedArr.sort((a, b) => {\r\n                            const valorA = a.properties[field] || \"\";\n                            const valorB = b.properties[field] || \"\";\n                            if (order)\n                                return valorA < valorB ? -1 : (valorA == valorB ? 0 : 1);\n                            else\n                                return valorA < valorB ? 1 : (valorA == valorB ? 0 : -1);\r\n                        });\n\t\t\t\t\t\t\n                        sortedDataTable =Object.assign({},tableData,{results: mappedArr.map(function (el, i) {\n                            return Object.assign({}, el.properties, { index:el.index});\n                        })}); \n                        sortedDataTable.sort = { field: field, order: order }; \n                    }\r\n                    self.getRenderedHtml(self.CLASS + '-table', sortedDataTable).then(function (html) {\r\n                        const table = self.div.querySelector('.' + self.CLASS + '-table');\r\n                        const parent = table.parentElement;\r\n                        parent.removeChild(table);\r\n                        table.innerHTML = html;\r\n                        parent.appendChild(table);\r\n                        if (tableData.callback) {\r\n                            tableData.callback(table);\r\n                        }\r\n                        table.querySelectorAll(\"thead th\").forEach((th) => {\r\n                            th.addEventListener(\"click\", (e) => {\n                                scrollPosition = e.target.offsetParent.scrollLeft;\r\n                                if (sortedDataTable.sort) {\r\n                                    if (sortedDataTable.sort.field === e.target.innerText && sortedDataTable.sort.order)\r\n                                        _sort(tableData, e.target.innerText, false);\r\n                                    else if (sortedDataTable.sort.field === e.target.innerText && !sortedDataTable.sort.order) {\n                                        _sort(tableData, e.target.innerText, true);\n                                    } else {\n                                        _sort(tableData, e.target.innerText, true);\n                                    }\r\n\r\n                                } else _sort(tableData, e.target.innerText, true);\r\n                            })\r\n                        })\r\n                        closeOpenedTableResultsPanel.call(self);\r\n\r\n                        self.map.trigger(TC.Consts.event.DRAWTABLE, { control: self });\n                        if (scrollPosition) {\n                            table.scrollLeft = scrollPosition;\n                        }\r\n                    });\r\n                }\r\n                _sort(self.tableData);                \r\n\r\n                self.div.querySelector('.' + self.CLASS + '-chart').style.display = 'none';\r\n                self.div.querySelector('.' + self.CLASS + '-info').style.display = 'none';\r\n\r\n                self.show('prsidebar-body');\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.open = function (html, container) {\r\n        const self = this;\r\n        \r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        const toCheck = container || self.div.querySelector('.' + self.CLASS + '-table');\r\n        var checkIsRendered = function () {\r\n            var clientRect = toCheck.getBoundingClientRect();\r\n            if (clientRect && clientRect.width > 100) {\r\n                window.cancelAnimationFrame(this.requestIsRendered);\r\n\r\n                //closeOpenedTableResultsPanel.call(self);\r\n                this.map.trigger(TC.Consts.event.DRAWTABLE, { control: self });\r\n            }\r\n        };\r\n\r\n        self.requestIsRendered = window.requestAnimationFrame(checkIsRendered.bind(self));\r\n\r\n        const chartElm = self.div.querySelector('.' + self.CLASS + '-chart');\r\n        chartElm.style.display = 'none';\r\n        const tableElm = self.div.querySelector('.' + self.CLASS + '-table');\r\n        tableElm.style.display = 'none';\r\n        const infoElm = self.div.querySelector('.' + self.CLASS + '-info');\r\n        infoElm.style.display = 'none';\r\n\r\n        if (html) {\r\n            if (container) {\r\n                self.getTableContainer = function () {\r\n                    return container;\r\n                };\r\n                container.innerHTML = html;\r\n                container.style.display = '';\r\n            } else {\r\n                tableElm.innerHTML = html;\r\n                tableElm.style.display = '';\r\n            }\r\n        }\r\n        else {\r\n            if (chartElm.childElementCount) {\r\n                chartElm.style.display = '';\r\n            }\r\n            else if (tableElm.childElementCount) {\r\n                tableElm.style.display = '';\r\n            }\r\n            else if (infoElm.childElementCount) {\r\n                infoElm.style.display = '';\r\n            }\r\n        }\r\n\r\n        const maximizeElm = self.div.querySelector('.prcollapsed-max');\r\n\r\n        if (self.options.titles) {\r\n\r\n            if (self.options.titles.main) {\r\n                const titleElm = self.div.querySelector('.prpanel-title-text');\r\n                titleElm.setAttribute('title', self.options.titles.main);\r\n                titleElm.innerHTML = self.options.titles.main;\r\n            }\r\n\r\n            if (self.options.titles.max) {\r\n                maximizeElm.setAttribute('title', self.options.titles.max);\r\n            }\r\n        }\r\n\r\n        if (self.options.classes) {\r\n            if (self.options.classes.collapsed) {\r\n                maximizeElm.querySelector('i.fa-list-alt').classList.add(self.options.classes.collapsed);\r\n            }\r\n        }\r\n\r\n        // si está minimizado\r\n        const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n        if (isElementVisible(collapsedElm)) {\r\n            self.maximize();\r\n        }\r\n\r\n        self.show('prsidebar-body');\r\n        self.hide('prcollapsed-max');\r\n    };\r\n\r\n    ctlProto.loadDataOnChart = function (data) {\r\n        const self = this;\r\n        const endFn = function () {\r\n            self.elevationProfileChartData = data;\r\n            self.renderElevationProfileChart({\r\n                data: data,\r\n                div: self.div.querySelector('.' + ctlProto.CLASS + '-chart')\r\n            });\r\n        };\r\n        // puede llegar aquí después de borrar un track.\r\n        if (self.chart && self.chart.chart) {\r\n            self.chart.chart.unload({\r\n                done: endFn\r\n            });\r\n        }\r\n        else {\r\n            endFn();\r\n        }\r\n    };\r\n\r\n    ctlProto.createChartOptions = function (options) {\r\n        const self = this;\r\n        var result = {};\r\n        options = options || {};\r\n        const locale = options.locale || TC.Util.getMapLocale(self.map);\r\n        switch (options.chartType) {\r\n            default:\r\n                if (options.ele != null) {\r\n                    const getChartSize = function () {\r\n                        const panelStyle = getComputedStyle(self.getContainerElement());\r\n                        const docWidth = document.documentElement.clientWidth / 100 * 40; // css panel contendor\r\n                        const r = {\r\n                            height: docWidth > 445 ? options.maxHeight || self.CHART_SIZE.MAX_HEIGHT : options.minHeight || self.CHART_SIZE.MIN_HEIGHT\r\n                        };\r\n                        // Si el panel ocupa el ancho del mapa dejamos el ancho del perfil que ocupe todo, en cualquier otro caso tenemos tres anchos predefinidos.\r\n                        if (panelStyle.width === getComputedStyle(self.map.div).width) {\r\n                            r.width = parseFloat(panelStyle.width) * 0.95;\r\n                        }\r\n                        else {\r\n                            r.width = docWidth > 445 ? options.maxWidth || self.CHART_SIZE.MAX_WIDTH : docWidth > 310 ? options.mediumWidth || self.CHART_SIZE.MEDIUM_WIDTH : options.minWidth || self.CHART_SIZE.MIN_WIDTH\r\n                        }\r\n                        return r;\r\n                    };\r\n                    const gradIds = ['grad' + TC.getUID()];\r\n\r\n                    let maxy = Number.NEGATIVE_INFINITY;\r\n                    let miny = Number.POSITIVE_INFINITY;\r\n                    options.ele.forEach(function (y) {\r\n                        if (typeof y === 'number') {\r\n                            maxy = Math.max(y, maxy);\r\n                            miny = Math.min(y, miny);\r\n                        }\r\n                    });\r\n\r\n                    let xColumn = [...options.x];\r\n                    let eleColumn = [...options.ele];\r\n\r\n                    result = {\r\n                        data: {\r\n                            x: 'x',\r\n                            columns: [\r\n                                ['x'].concat(xColumn),\r\n                                ['ele'].concat(eleColumn)\r\n                            ],\r\n                            types: {\r\n                                'ele': 'area-spline'\r\n                            },\r\n                            colors: {\r\n                                \"ele\": 'url(#' + gradIds[0] + ')'\r\n                            }\r\n                        },\r\n                        size: getChartSize(),\r\n                        point: {\r\n                            show: false\r\n                        },\r\n                        axis: {\r\n                            x: {\r\n                                tick: {\r\n                                    outer: false,\r\n                                    count: 5, format: function (d) {\r\n                                        d = d / 1000;\r\n                                        var dist;\r\n                                        var measure;\r\n                                        if (d < 1) {\r\n                                            dist = Math.round(d * 1000);\r\n                                            measure = ' m';\r\n                                        } else {\r\n                                            dist = Math.round(d * 100) / 100;\r\n                                            measure = ' km';\r\n                                        }\r\n\r\n                                        dist = dist.toLocaleString(locale);\r\n                                        return dist + measure;\r\n                                    }\r\n                                }\r\n                            },\r\n                            y: {\r\n                                padding: {\r\n                                    top: 0, bottom: 0\r\n                                },\r\n                                max: maxy,\r\n                                min: miny,\r\n                                tick: {\r\n                                    count: 2,\r\n                                    format: function (d) {\r\n                                        return formatYAxis(d, locale);\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        onresize: function () {\r\n                            let size;\r\n                            let targetNode = this.config.bindto.closest('.' + self.classes.RESIZABLE + '.prpanel-default');\r\n                            if (targetNode) {\r\n                                size = self.getResizableChartSize(targetNode);\r\n                            } else {\r\n                                size = getChartSize();\r\n                            }\r\n                            if (size) {\r\n                                this.api.resize(size);\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    const hasSecondaryElevationProfileChartData = options.secondaryElevationProfileChartData &&\r\n                        Array.isArray(options.secondaryElevationProfileChartData) &&\r\n                        options.secondaryElevationProfileChartData.length > 0 && options.secondaryElevationProfileChartData[0];\r\n\r\n                    if (hasSecondaryElevationProfileChartData) {\r\n                        result.data.names = {\r\n                            ele: self.getLocaleString(\"geo.profile.fromTrack\"),\r\n                            ele2: self.getLocaleString(\"mdt\")\r\n                        };\r\n                        result.data.columns.push(['ele2'].concat(options.secondaryElevationProfileChartData[0].ele));\r\n\r\n                        result.data.types.ele2 = result.data.types.ele;\r\n                        gradIds.push('grad' + TC.getUID());\r\n                        result.data.colors.ele2 = 'url(#' + gradIds[gradIds.length - 1] + ')';\r\n                        result.data.axes = {\r\n                            ele: 'y'\r\n                        };                        \r\n\r\n                        if (eleColumn.every((val) => val === 0)) {\r\n                            result.axis.y.min = options.secondaryElevationProfileChartData[0].min;\r\n                            result.axis.y.max = options.secondaryElevationProfileChartData[0].max;\r\n                        } else if (options.secondaryElevationProfileChartData[0].ele.every((val) => val === 0)) {\r\n                            result.axis.y.min = Math.min(...eleColumn);\r\n                            result.axis.y.max = Math.max(...eleColumn);\r\n                        } else {\r\n                            result.axis.y.min = Math.min(...eleColumn.concat(options.secondaryElevationProfileChartData[0].min));\r\n                            result.axis.y.max = Math.max(...eleColumn.concat(options.secondaryElevationProfileChartData[0].max));\r\n                        }\r\n                    }\r\n\r\n                    if (options.time) result.time = (\"00000\" + options.time.h).slice(-2) + ':' + (\"00000\" + options.time.m).slice(-2) + ':' + (\"00000\" + options.time.s).slice(-2);\r\n\r\n                    var rendered = false;\r\n                    result._onrendered = function () {\r\n                        if (!rendered) {\r\n                            rendered = true;\r\n\r\n                            if (hasSecondaryElevationProfileChartData) {\r\n                                // redondeamos los cuadritos de la leyenda.\r\n                                document.querySelectorAll('.c3-legend-item-tile').forEach((item) => {\r\n                                    item.setAttribute('rx', 5);\r\n                                    item.setAttribute('ry', 1);\r\n                                });\r\n                                // añdimos title a los elementos de la leyenda\r\n                                document.querySelectorAll('.c3-legend-item').forEach((item) => {\r\n                                    var title = document.createElementNS('http://www.w3.org/2000/svg', 'title');\r\n                                    title.textContent = self.getLocaleString(\"hide\");\r\n                                    item.appendChild(title);\r\n\r\n                                    item.addEventListener(TC.Consts.event.CLICK, function () {\r\n                                        if (item.classList.contains(TC.Consts.classes.HIDDEN)) {\r\n                                            item.querySelector('title').textContent = self.getLocaleString(\"hide\");\r\n                                        } else {\r\n                                            item.querySelector('title').textContent = self.getLocaleString(\"show\");\r\n                                        }\r\n\r\n                                        item.classList.toggle(TC.Consts.classes.HIDDEN);\r\n                                    }, { passive: true });\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        if (!this.svg) {\r\n                            return; // es posible que lleguemos aquí y el usuario justo haya deseleccionado el track de la lista.\r\n                        }\r\n\r\n                        const svg = this.svg[0][0];\r\n                        var svgDefsElement = svg.getElementsByTagName('defs')[0];\r\n                        var xmlns = \"http://www.w3.org/2000/svg\";\r\n\r\n                        const createLinearGradient = function (id, colors) {\r\n                            var grad = document.createElementNS(xmlns, \"linearGradient\");\r\n                            grad.setAttributeNS(null, \"id\", id);\r\n                            grad.setAttributeNS(null, \"x1\", \"0%\");\r\n                            grad.setAttributeNS(null, \"x2\", \"0%\");\r\n                            grad.setAttributeNS(null, \"y1\", \"0%\");\r\n                            grad.setAttributeNS(null, \"y2\", \"100%\");\r\n                            grad.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\r\n\r\n                            const stop0 = document.createElementNS(xmlns, \"stop\");\r\n                            stop0.setAttributeNS(null, \"offset\", \"0%\");\r\n                            stop0.setAttributeNS(null, \"stop-color\", colors[0]);\r\n                            stop0.setAttributeNS(null, \"stop-opacity\", \"0.7\");\r\n                            grad.appendChild(stop0);\r\n\r\n                            const stop50 = document.createElementNS(xmlns, \"stop\");\r\n                            stop50.setAttributeNS(null, \"offset\", \"50%\");\r\n                            stop50.setAttributeNS(null, \"stop-color\", colors[1]);\r\n                            stop50.setAttributeNS(null, \"stop-opacity\", \"0.9\");\r\n                            grad.appendChild(stop50);\r\n\r\n                            const stop100 = document.createElementNS(xmlns, \"stop\");\r\n                            stop100.setAttributeNS(null, \"offset\", \"100%\");\r\n                            stop100.setAttributeNS(null, \"stop-color\", colors[2]);\r\n                            stop100.setAttributeNS(null, \"stop-opacity\", \"1\");\r\n                            grad.appendChild(stop100);\r\n\r\n                            svgDefsElement.appendChild(grad);\r\n                        };\r\n\r\n                        createLinearGradient(gradIds[0], [\"red\", \"orange\", \"green\"]);\r\n                        if (options.secondaryElevationProfileChartData) {\r\n                            createLinearGradient(gradIds[gradIds.length - 1], [\"blue\", \"cian\", \"green\"]);\r\n                        }\r\n\r\n                        const d3Node = d3.select(\".c3-brush\").node();\r\n                        if (d3Node) {\r\n                            d3Node.parentNode.removeChild(d3Node);\r\n                        }\r\n\r\n                        d3.select(\".c3-event-rects,.c3-event-rects-single\")\r\n                            .selectAll(\"rect\")\r\n                            .style(\"cursor\", \"pointer\")\r\n                            .on(\"click\", function (e) {\r\n                                d3.event.stopPropagation();\r\n                                let point = self.elevationProfileChartData.coords[e.index];\r\n                                if (point) {\r\n                                    point = point.slice(0, 2);\r\n                                    TC.loadJS(!TC.feature || (TC.feature && !TC.feature.Point),\r\n                                        [TC.apiLocation + 'TC/feature/Point'],\r\n                                        function () {\r\n                                            self.map.zoomToFeatures([new TC.feature.Point(point, {})]);\r\n                                        }\r\n                                    );\r\n                                }\r\n                            });\r\n\r\n                        const path = d3.select('.c3-axis.c3-axis-x').select('path');\r\n                        if (!path.empty()) {\r\n                            let pattern = path.attr('d');\r\n                            let match = /^M\\d\\,(\\d)V\\dH\\d{3}V(\\d)$/i.exec(pattern);\r\n                            if (match) { // quitamos las barritas de los extremos del axis-x\r\n                                pattern = pattern.replace(/(M\\d\\,)\\d/i, \"$10\").replace(/(H\\d{3}V)(\\d)/i, \"$10\");\r\n                                path.attr('d', pattern);\r\n                            } else {\r\n                                let match = /^M\\s\\d\\s(\\d)\\sV\\s\\d\\sH\\s\\d{3}\\sV\\s(\\d)$/i.exec(pattern);\r\n                                if (match) { // quitamos las barritas de los extremos del axis-x\r\n                                    pattern = pattern.replace(/(M\\s\\d\\s)\\d/i, \"$10\").replace(/(H\\s\\d{3}\\sV\\s)(\\d)/i, \"$10\");\r\n                                    path.attr('d', pattern);\r\n                                }\r\n                            }\r\n                        }\r\n                        \r\n\r\n\r\n                        const svgRect = svg.getBoundingClientRect();\r\n                        const chartSize = {\r\n                            width: svgRect.width,\r\n                            height: svgRect.height\r\n                        };\r\n\r\n                        // revisar\r\n                        //svg.removeAttribute('height');\n                        //svg.removeAttribute('width');\n\n                        //svg.setAttribute('viewbox', '0 0 ' + chartSize.width + ' ' + chartSize.height);\n\r\n                        // ¿es necesario pasar los labels a multiline?\r\n                        var setMultilineLabels = function () {\r\n                            var x = d3.scale.ordinal().rangeRoundBands([0, chartSize.width], .1, .3);\r\n                            d3.select('.c3-axis-x').selectAll('text:not(.c3-axis-x-label)')\r\n                                .call(function (textNode, width) {\r\n                                    textNode.each(function () {\r\n                                        textNode.each(function (d, i) {\r\n                                            if (i == 0) return;\r\n\r\n                                            d3text = d3.select(this);\r\n\r\n                                            if (d3text.node().childNodes.length === 1) {\r\n                                                var clone = d3text.select('tspan').node().cloneNode();\r\n                                                var words = d3text.text().split(' ');\r\n\r\n                                                d3text.select('tspan').text(words[0]);\r\n                                                clone.textContent = words[1];\r\n                                                var dy = clone.getAttribute('dy');\r\n                                                dy = dy ? parseFloat(clone.getAttribute('dy')) : .71;\r\n                                                dy = dy + 0.18 + 'em';\r\n                                                clone.setAttribute('dy', dy);\r\n                                                d3text.node().appendChild(clone);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }, x.rangeBand());\r\n                        };\r\n                        if (!d3.select('.c3-axis-x').node().getBoundingClientRect().width) {\r\n\r\n                            if (self.elevationChartLabelsRAF) {\r\n                                window.cancelAnimationFrame(self.elevationChartLabelsRAF);\r\n                                self.elevationChartLabelsRAF = undefined;\r\n                            }\r\n\r\n                            function hasSize() {\r\n                                if (d3.select('.c3-axis-x').length && !(d3.select('.c3-axis-x').node())) {\r\n                                    self.elevationChartLabelsRAF = requestAnimationFrame(hasSize);\r\n                                }\r\n                                else if (d3.select('.c3-axis-x').length && d3.select('.c3-axis-x').node() &&\r\n                                    !d3.select('.c3-axis-x').node().getBoundingClientRect().width) {\r\n                                    self.elevationChartLabelsRAF = requestAnimationFrame(hasSize);\r\n                                } else {\r\n                                    window.cancelAnimationFrame(self.elevationChartLabelsRAF);\r\n                                    self.elevationChartLabelsRAF = undefined;\r\n\r\n                                    if (((d3.select('.c3-axis-x').node().getBoundingClientRect().width >= chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) ||\r\n                                        (d3.select('.c3-axis-x').node().getBoundingClientRect().width * 100 / (chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) > 90))) {\r\n                                        setMultilineLabels();\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            self.elevationChartLabelsRAF = requestAnimationFrame(hasSize);\r\n                        }\r\n                        else if (((d3.select('.c3-axis-x').node().getBoundingClientRect().width >= chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) ||\r\n                            (d3.select('.c3-axis-x').node().getBoundingClientRect().width * 100 / (chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) > 90))) {\r\n                            setMultilineLabels();\r\n                        }\r\n\r\n                        // pasamos el perfil original adelante si no no se aprecian bien las diferencias por el color y si lo gestionamos antes afecta a la leyenda\r\n                        d3.select('svg').select(\".c3-chart-lines\").selectAll(\".c3-target-ele\").each(function () {\r\n                            this.parentNode.appendChild(this);\r\n                        });\r\n\r\n                        if (!self.isMinimized()) {\r\n                            self.show('prsidebar-body');\r\n                            self.hide('prcollapsed-max');\r\n                        }\r\n\r\n\r\n                        self.div.querySelector('.' + self.CLASS + '-table').style.display = '';\r\n                        self.div.querySelector('.' + self.CLASS + '-info').style.display = '';\r\n                    }\r\n                }\r\n                else {\r\n                    result = {\r\n                        msg: self.getLocaleString(\"geo.trk.chart.chpe.empty\")\r\n                    };\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const getTime = function (timeFrom, timeTo) {\r\n        var diff = timeTo - timeFrom;\r\n        var d = {};\r\n        var daysDifference = Math.floor(diff / 1000 / 60 / 60 / 24);\r\n        diff -= daysDifference * 1000 * 60 * 60 * 24;\r\n\r\n        var hoursDifference = Math.floor(diff / 1000 / 60 / 60);\r\n        diff -= hoursDifference * 1000 * 60 * 60;\r\n\r\n        d.h = hoursDifference + (daysDifference * 24);\r\n\r\n        var minutesDifference = Math.floor(diff / 1000 / 60);\r\n        diff -= minutesDifference * 1000 * 60;\r\n\r\n        d.m = minutesDifference;\r\n\r\n        d.s = Math.floor(diff / 1000);\r\n\r\n        return TC.Util.extend({}, d, { toString: (\"00000\" + d.h).slice(-2) + ':' + (\"00000\" + d.m).slice(-2) + ':' + (\"00000\" + d.s).slice(-2) });\r\n    };\r\n\r\n    ctlProto.getElevationChartTooltip = function (data) {\r\n        const self = this;\r\n\r\n        const locale = self.map.options.locale && self.map.options.locale.replace('_', '-') || undefined;\r\n        const coords = self.elevationProfileChartData.coords;\r\n        const getElevationByDataElem = function (dataElem) {\r\n            return dataElem.value ? parseInt(dataElem.value.toFixed(0)).toLocaleString(locale) : \"0\";\r\n        };\r\n        const p = coords[data[0].index];\r\n        let doneTime;\r\n        if (coords[0].length == 4 && coords[0][3] > 0 && p) {\r\n            doneTime = getTime(coords[0][3], p[3]);\r\n        }\r\n        let distance = data[0].x / 1000;\r\n        let distanceFormatted = (distance < 1 ? Math.round(distance * 1000) : Math.round(distance * 100) / 100).toLocaleString(locale) + (distance < 1 ? ' m' : ' km');\r\n\r\n        let elevationDiv = '<div class=\"onTop\">' +\r\n            '<span>' +\r\n            data.map((elem, index) => {\r\n                if (elem) {\r\n                    return (index === 0 ? '<span data-isNumber class=\"' + (elem.id === \"ele\" ? \"original\" : \"mdt\") + '\">' + getElevationByDataElem(elem) + ' m' + '</span>' :\r\n                        '<span data-isNumber class=\"' + (elem.id === \"ele\" ? \"original\" : \"mdt\") + '\">' + getElevationByDataElem(elem) + ' m ' + '</span>');\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            }).join('') +\r\n            '</span >' +\r\n            '</div>';\r\n\r\n        let distanceAndTimeDiv = '<div class=\"onBottom\">' +\r\n            '<span>' + distanceFormatted + ' </span>' +\r\n            (doneTime ? '<span>' + doneTime.toString + '</span>' + '<div/>' : '<div/>');\r\n\r\n\r\n        return elevationDiv + distanceAndTimeDiv;\r\n    };\r\n\r\n    ctlProto.getTableContainer = function () {\r\n        return this.tableDiv;\r\n    };\r\n\r\n    ctlProto.getInfoContainer = function () {\r\n        return this.infoDiv;\r\n    };\r\n\r\n    ctlProto.getMenuElement = function () {\r\n        return this.menuDiv;\r\n    };\r\n\r\n    ctlProto.getContainerElement = function () {\r\n        return this.div.querySelector('.prsidebar-body');\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        self.wrap.register(map);\r\n\r\n        if (self.openOn) {\r\n            self.map.one(self.openOn, function (e, args) {\r\n                self.content.fnOpen.call(self, e.data);\r\n            });\r\n        }\r\n\r\n        if (self.closeOn) {\r\n            self.map.one(self.closeOn, function (e, args) {\r\n                self.close();\r\n            });\r\n        }\r\n\r\n        if (self.options.openOn) {\r\n            self.map.on(self.options.openOn, function (e, args) {\r\n                self.content.fnOpen.call(self, e.data);\r\n            });\r\n        }\r\n\r\n        if (self.options.closeOn) {\r\n            self.map.on(self.options.closeOn, function (e, args) {\r\n                self.close();\r\n            });\r\n        }\r\n\r\n        map\r\n            .on(TC.Consts.event.FEATUREREMOVE, function (e) {\r\n                if (self.currentFeature === e.feature && self.isVisible()) {\r\n                    self.close();\r\n                }\r\n            })\r\n            .on(TC.Consts.event.FEATURESCLEAR + ' ' + TC.Consts.event.LAYERREMOVE, function (e) {\r\n                if (self.currentFeature && self.currentFeature.layer === e.layer && self.isVisible()) {\r\n                    self.close();\r\n                }\r\n            });\r\n\r\n        //map.on(TC.Consts.event.VIEWCHANGE, function () {\r\n\r\n        //    map.getControlsByClass(TC.control.ResultsPanel).filter(function (ctl) {\r\n        //        return ctl.options.content !== \"chart\" && ($(ctl.div).find('.' + ctl.CLASS + '-info:visible').length === 1 || $(ctl.div).find('.' + ctl.CLASS + '-table:visible').length === 1);\r\n        //    }).forEach(function (ctl) {\r\n        //        ctl.close();\r\n        //    });\r\n        //});\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.exportToExcel = function () {\r\n        var _ctl = this;\r\n\r\n        var rows = [_ctl.tableData.columns];\r\n\r\n        _ctl.tableData.results.forEach(function (value) {\r\n            var row = [];\r\n            for (var k in value) {\r\n                if (value.hasOwnProperty(k) && k !== \"Id\" && k !== \"Geom\") { //Las columnas ID y Geom no aparece en la exportaci\\u00f3n\r\n                    row.push(value[k]);\r\n                }\r\n            }\r\n            rows.push(row);\r\n        });\r\n        var _fncSave = function (exporter) {\r\n            var fileName = _ctl.save.fileName ? _ctl.save.fileName : 'resultados.xls';\r\n            var title = (_ctl.options.titles && _ctl.options.titles.main ? _ctl.options.titles.main : null);\r\n            exporter.Save(fileName, rows, title);\r\n        }\r\n        if (!TC.Util.ExcelExport) {\r\n            TC.loadJS(true, TC.apiLocation + 'TC/Util.ExcelExport', function () {\r\n                _fncSave(new TC.Util.ExcelExport());\r\n            });\r\n        }\r\n        else {\r\n            _fncSave(new TC.Util.ExcelExport());\r\n        }\r\n    };\r\n\r\n    ctlProto.contentType = {\r\n        TABLE: {\r\n            fnOpen: ctlProto.openTable,\r\n            collapsedClass: '.fa-list-alt'\r\n        },\r\n        CHART: {\r\n            fnOpen: ctlProto.openChart,\r\n            collapsedClass: '.fa-area-chart'\r\n        }\r\n    };\r\n})();"]}