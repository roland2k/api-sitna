{"version":3,"sources":["control/ResultsPanel.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Consts","event","DRAWCHART","DRAWTABLE","RESULTSPANELMIN","RESULTSPANELMAX","RESULTSPANELCLOSE","ResultsPanel","apply","this","arguments","wrap","data","classes","FA","SHOW_IN","SHOW_OUT","content","contentType","TABLE","Util","isEmptyObject","options","toUpperCase","chart","table","save","inherit","ctlProto","prototype","CLASS","CHART_SIZE","MIN_HEIGHT","MAX_HEIGHT","MIN_WIDTH","MEDIUM_WIDTH","MAX_WIDTH","template","compiler","main","container","depth0","helpers","partials","alias1","nullContext","alias2","escapeExpression","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","name","hash","loc","start","line","column","end","useData","1","blockParams","depths","stack1","lambda","alias3","fn","program","inverse","noop","2","4","5","useDepths","3","6","isElementVisible","elm","computedStyle","getComputedStyle","hidden","display","visibility","isVisible","bodyElm","div","querySelector","maximizeElm","isMinimized","manageClassList","classElement","toAdd","toRemove","classList","add","remove","show","style","hide","doVisible","HIDDEN","render","callback","self","mainTitleElm","minimizeButton","addEventListener","minimize","closeButton","close","maximizeButton","maximize","saveButton","exportToExcel","removeAttribute","download","downloadButton","isFunction","titles","setAttribute","innerHTML","max","getLocaleString","collapsedClass","infoDiv","tableDiv","menuDiv","browserFeatures","touch","swipe","left","collapsedElm","map","trigger","destroy","body","openChart","getControlsByClass","filter","ctl","forEach","msg","toast","elevationProfileChartData","renderElevationProfileChart","formatYAxis","d","locale","parseInt","toFixed","toLocaleString","loadJS","window","c3","url","D3C3","ele","val","getMapLocale","templateData","upHill","downHill","elevationFromServiceChartData","min","secondChart","getRenderedHtml","out","titleElm","legendOptions","position","inset","anchor","x","y","step","chartOptions","extend","bindto","padding","top","right","bottom","legend","createChartOptions","tooltip","width","height","element","document","chartOffsetX","getBoundingClientRect","graphOffsetX","tooltipWidth","clientWidth","getAttribute","Math","floor","xAxisHeight","onBottom","contents","getFnFromString","eval","ctx","onmouseout","onrendered","_onrendered","svg","_isOverriden","internal","generateDrawLine","lineIndices","isSub","$$","config","d3","getPoints","generateGetLinePoints","yScaleGetter","getSubYScale","getYScale","xValue","subxx","xx","yValue","i","data_groups","length","id","value","axis_rotated","line_connectNull","defined","path","values","filterRemoveNull","subX","x0","y0","isLineType","data_regions","lineWithRegions","isStepType","convertValuesToStep","interpolate","generateDrawArea","areaIndices","area","generateGetAreaPoints","value0","value1","x1","y1","isAreaType","generate","closeOpenedTableResultsPanel","openTable","css","columns","k","push","tableData","results","then","html","parentElement","removeChild","appendChild","open","toCheck","requestIsRendered","requestAnimationFrame","clientRect","cancelAnimationFrame","bind","chartElm","tableElm","infoElm","getTableContainer","childElementCount","collapsed","loadDataOnChart","unload","done","result","chartType","getChartSize","panelStyle","getContainerElement","docWidth","documentElement","r","maxHeight","minHeight","parseFloat","maxWidth","mediumWidth","minWidth","gradIds","getUID","maxy","Number","NEGATIVE_INFINITY","miny","POSITIVE_INFINITY","xColumn","eleColumn","concat","types","colors","size","point","axis","tick","outer","count","format","dist","measure","round","onresize","api","resize","names","ele2","type","axes","every","time","h","slice","m","s","rendered","querySelectorAll","item","title","createElementNS","textContent","CLICK","contains","toggle","passive","svgDefsElement","getElementsByTagName","xmlns","createLinearGradient","grad","setAttributeNS","stop0","stop50","stop100","d3Node","select","node","parentNode","selectAll","on","e","stopPropagation","coords","index","feature","Point","zoomToFeatures","empty","pattern","attr","exec","replace","svgRect","chartSize","setMultilineLabels","scale","ordinal","rangeRoundBands","textNode","each","d3text","childNodes","clone","cloneNode","words","text","split","dy","rangeBand","elevationChartLabelsRAF","undefined","hasSize","getTime","timeFrom","timeTo","diff","daysDifference","hoursDifference","minutesDifference","toString","getElevationChartTooltip","getElevationByDataElem","dataElem","p","doneTime","distance","distanceFormatted","elem","join","getInfoContainer","getMenuElement","register","openOn","one","args","fnOpen","closeOn","_ctl","rows","row","_fncSave","exporter","fileName","Save","ExcelExport","CHART"],"mappings":"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","sourcesContent":["\r\nTC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.Consts.event.DRAWCHART = 'drawchart.tc';\r\nTC.Consts.event.DRAWTABLE = 'drawtable.tc';\r\nTC.Consts.event.RESULTSPANELMIN = 'resultspanelmin.tc';\r\nTC.Consts.event.RESULTSPANELMAX = 'resultspanelmax.tc';\r\nTC.Consts.event.RESULTSPANELCLOSE = 'resultspanelclose.tc';\r\n\r\nTC.control.ResultsPanel = function () {\r\n    var self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    self.wrap = new TC.wrap.control.ResultsPanel(self);\r\n\r\n    self.data = {};\r\n    self.classes = {\r\n        FA: 'fa',\r\n        SHOW_IN: 'showIn',\r\n        SHOW_OUT: 'showOut'\r\n    };\r\n\r\n    self.content = self.contentType.TABLE;\r\n\r\n    if (TC.Util.isEmptyObject(self.options)) {\r\n        self.options = { content: \"table\" };\r\n    }\r\n\r\n    if (self.options || { content: \"table\" }) {\r\n        if (self.options.content)\r\n            self.content = self.contentType[self.options.content.toUpperCase()];\r\n\r\n        if (self.options.chart)\r\n            self.chart = self.options.chart;\r\n\r\n        if (self.options.table)\r\n            self.table = self.options.table;\r\n\r\n        if (self.options.save)\r\n            self.save = self.options.save;\r\n\r\n    }\r\n};\r\n\r\nTC.inherit(TC.control.ResultsPanel, TC.Control);\r\n\r\n(function () {\r\n\r\n    const ctlProto = TC.control.ResultsPanel.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-p-results';\r\n\r\n    ctlProto.CHART_SIZE = {\r\n        MIN_HEIGHT: 75,\r\n        MAX_HEIGHT: 128,\r\n\r\n        MIN_WIDTH: 215,\r\n        MEDIUM_WIDTH: 310,\r\n        MAX_WIDTH: 445\r\n    };\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/tc-ctl-p-results.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-table'] = TC.apiLocation + \"TC/templates/tc-ctl-p-results-table.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-chart'] = TC.apiLocation + \"TC/templates/tc-ctl-p-results-chart.hbs\";\r\n\r\n    const isElementVisible = function (elm) {\r\n        const computedStyle = getComputedStyle(elm);\r\n        return (elm && !elm.hidden && computedStyle.display !== 'none' && computedStyle.visibility !== 'hidden');\r\n    };\r\n\r\n    ctlProto.isVisible = function () {\r\n        const self = this;\r\n        const bodyElm = self.div.querySelector('.prsidebar-body');\r\n        const maximizeElm = self.div.querySelector('.prcollapsed-max');\r\n        return isElementVisible(bodyElm) || isElementVisible(maximizeElm);\r\n    };\r\n\r\n    ctlProto.isMinimized = function () {\r\n        const self = this;\r\n        const bodyElm = self.div.querySelector('.prsidebar-body');\r\n        const maximizeElm = self.div.querySelector('.prcollapsed-max');\r\n        return isElementVisible(maximizeElm) && !isElementVisible(bodyElm);\r\n    };\r\n\r\n    const manageClassList = function (classElement, toAdd, toRemove) {\r\n        const self = this;\r\n\r\n        const elm = self.div.querySelector('.' + classElement);\r\n        if (elm) {\r\n            elm.classList.add(toAdd);\r\n            elm.classList.remove(toRemove);\r\n        }\r\n    };\r\n\r\n    ctlProto.show = function (classElement) {\r\n        const self = this;\r\n\r\n        const elm = self.div.querySelector('.' + classElement);\r\n        if (elm && elm.style.display === 'none') {\r\n            elm.style.display = '';\r\n        }\r\n\r\n        manageClassList.call(self, classElement, self.classes.SHOW_IN, self.classes.SHOW_OUT);\r\n    };\r\n\r\n    ctlProto.hide = function (classElement) {\r\n        const self = this;\r\n\r\n        manageClassList.call(self, classElement, self.classes.SHOW_OUT, self.classes.SHOW_IN);\r\n\r\n        const elm = self.div.querySelector('.' + classElement);\r\n        if (elm) {\r\n            elm.style.display = 'none';\r\n        }\r\n    };\r\n\r\n    ctlProto.doVisible = function () {\r\n        const self = this;\r\n\r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n        self.show('prsidebar-body');\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n\r\n        self.div.classList.add(TC.Consts.classes.HIDDEN);\r\n\r\n        return TC.Control.prototype.render.call(self, function () {\r\n\r\n            self.mainTitleElm = self.div.querySelector('.prpanel-title-text');\r\n\r\n            self.minimizeButton = self.div.querySelector('.prcollapsed-slide-submenu-min');\r\n            self.minimizeButton.addEventListener('click', function () {\r\n                self.minimize();\r\n            });\r\n\r\n            self.closeButton = self.div.querySelector('.prcollapsed-slide-submenu-close');\r\n            self.closeButton.addEventListener('click', function () {\r\n                self.close();\r\n            });\r\n\r\n            self.maximizeButton = self.div.querySelector('.prcollapsed-max');\r\n            self.maximizeButton.addEventListener('click', function () {\r\n                self.maximize();\r\n            });                     \r\n\r\n            if (self.save) {\r\n                self.saveButton = self.div.querySelector('.prcollapsed-slide-submenu-csv');\r\n                self.saveButton.addEventListener('click', function () {\r\n                    self.exportToExcel();\r\n                });\r\n                self.saveButton.removeAttribute('hidden');\r\n            }\r\n            if (self.options.download && self.options.content === \"table\") {\r\n                self.downloadButton = self.div.querySelector('.prcollapsed-slide-submenu-dwn');\r\n                self.downloadButton.addEventListener('click', function () {\r\n                    if (TC.Util.isFunction(self.options.download)) {\r\n                        self.options.download.apply(self, []);\r\n                    }\r\n                });\r\n                self.downloadButton.removeAttribute('hidden');\r\n            }\r\n\r\n\r\n            if (self.content) {\r\n                self.content = self.content;\r\n\r\n                if (self.options.titles) {\r\n\r\n                    if (self.options.titles.main) {\r\n                        self.mainTitleElm.setAttribute('title', self.options.titles.main);\r\n                        self.mainTitleElm.innerHTML = self.options.titles.main;\r\n                    }\r\n\r\n                    if (self.options.titles.max) {\r\n                        self.maximizeButton.setAttribute('title', self.options.titles.max);\r\n                    }                    \r\n                } else {\r\n                    self.mainTitleElm.setAttribute('title', self.getLocaleString(\"rsp.title\"));\r\n                    self.mainTitleElm.innerHTML = self.getLocaleString(\"rsp.title\");\r\n                }\r\n            }\r\n\r\n            const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n            //collapsedElm.hidden = false;\r\n            collapsedElm.classList.add(self.classes.FA);\r\n\r\n            self.infoDiv = self.div.querySelector('.' + self.CLASS + '-info');\r\n            self.tableDiv = self.div.querySelector('.' + self.CLASS + '-table');\r\n            //self.$divChart = self._$div.find('.' + self.CLASS + '-chart');\r\n            self.menuDiv = self.div.querySelector('.' + self.CLASS + '-menu');\r\n\r\n            if (TC.browserFeatures.touch()) {\r\n                TC.Util.swipe(self.div, {\r\n                    left: function () {\r\n                        self.minimize();\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (callback && typeof (callback) === \"function\")\r\n                callback.call();\r\n        });\r\n    };\r\n\r\n    ctlProto.minimize = function () {\r\n        const self = this;\r\n\r\n        const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n        if (!isElementVisible(collapsedElm)) { // ya está minimizado\r\n            collapsedElm.classList.add(self.classes.FA);\r\n            collapsedElm.hidden = false;\r\n\r\n            self.hide('prsidebar-body');\r\n            self.show('prcollapsed-max');\r\n\r\n            self.map.trigger(TC.Consts.event.RESULTSPANELMIN, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.maximize = function () {\r\n        const self = this;\r\n\r\n        const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n        if (isElementVisible(collapsedElm)) { // ya está maximizado\r\n            collapsedElm.hidden = true;\r\n\r\n            self.show('prsidebar-body');\r\n            self.hide('prcollapsed-max');\r\n\r\n            self.map.trigger(TC.Consts.event.RESULTSPANELMAX, { control: self });\r\n        }\r\n    };    \r\n\r\n    ctlProto.close = function () {\r\n        const self = this;\r\n\r\n        self.div.classList.add(TC.Consts.classes.HIDDEN);\r\n\r\n        if (self.chart && self.chart.chart) {\r\n            self.chart.chart = self.chart.chart.destroy();\r\n        }\r\n\r\n        const body = self.div.querySelector('.prsidebar-body');\r\n        if (body) {\r\n            body.style.display = 'none';\r\n            self.div.querySelector('.prcollapsed-max').style.display = 'none';\r\n\r\n            const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n            collapsedElm.hidden = true;\r\n            collapsedElm.classList.remove(self.classes.FA);\r\n\r\n            self.map.trigger(TC.Consts.event.RESULTSPANELCLOSE, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.openChart = function (data) {\r\n        const self = this;\r\n\r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        // Cerramos el resto de los perfiles\r\n        self.map.getControlsByClass(TC.control.ResultsPanel)\r\n            .filter(function (ctl) {\r\n                return ctl !== self;\r\n            })\r\n            .filter(function (ctl) {\r\n                return ctl.options.content === 'chart';\r\n            })\r\n            .forEach(function (ctl) {\r\n                ctl.close();\r\n            });\r\n\r\n        if (data) {\r\n\r\n            if (data.msg) {\r\n                self.map.toast(data.msg);\r\n                if (self.isVisible()) {\r\n                    self.hide('prsidebar-body');\r\n                }\r\n            }\r\n            else {\r\n                self.elevationProfileChartData = data;\r\n                self.renderElevationProfileChart({\r\n                    data: data,\r\n                    div: self.div.querySelector('.' + ctlProto.CLASS + '-chart')\r\n                });\r\n            }\r\n        } else {\r\n            self.map.toast(options.msg);\r\n        }\r\n    };\r\n\r\n    const formatYAxis = function (d, locale) {\r\n        let y = (parseInt(d.toFixed(0)) || 0);\r\n        return y.toLocaleString(locale) + ' m';\r\n    };\r\n\r\n    ctlProto.renderElevationProfileChart = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        TC.loadJS(!window.c3,\r\n            TC.Consts.url.D3C3 || TC.apiLocation + 'lib/d3c3/d3c3.min.js',\r\n            function () {\r\n                const data = options.data;\r\n                data.ele = data.ele.map(val => val === null ? 0 : val);\r\n                const div = options.div;\r\n                let locale = TC.Util.getMapLocale(self.map);\r\n\r\n                var templateData = {\r\n                    upHill: data.upHill ? data.upHill.toLocaleString(locale) : '0',\r\n                    downHill: data.downHill ? data.downHill.toLocaleString(locale) : '0'\r\n                };\r\n\r\n                if (data.elevationFromServiceChartData) {\r\n                    templateData.min = formatYAxis(data.min, locale);\r\n                    templateData.max = formatYAxis(data.max, locale);\r\n\r\n                    templateData.secondChart = {\r\n                        upHill: data.elevationFromServiceChartData.upHill ? data.elevationFromServiceChartData.upHill.toLocaleString(locale) : '0',\r\n                        downHill: data.elevationFromServiceChartData.downHill ? data.elevationFromServiceChartData.downHill.toLocaleString(locale) : '0',\r\n                        min: formatYAxis(data.elevationFromServiceChartData.min, locale),\r\n                        max: formatYAxis(data.elevationFromServiceChartData.max, locale)\r\n                    };\r\n                }\r\n\r\n                self.getRenderedHtml(ctlProto.CLASS + '-chart', templateData, function (out) {\r\n\r\n                    div.innerHTML = out;\r\n                    div.style.display = '';\r\n\r\n                    if (self.options.titles) {\r\n\r\n                        if (self.options.titles.main) {\r\n                            const titleElm = self.div.querySelector('.prpanel-title-text');\r\n                            titleElm.setAttribute('title', self.options.titles.main);\r\n                            titleElm.innerHTML = self.options.titles.main;\r\n                        }\r\n\r\n                        if (self.options.titles.max) {\r\n                            self.div.querySelector('.prcollapsed-max').setAttribute('title', self.options.titles.max);\r\n                        }\r\n                    }\r\n\r\n                    var legendOptions = { show: false };\r\n                    if (data.elevationFromServiceChartData) {\r\n                        legendOptions = {\r\n                            position: 'inset',\r\n                            inset: {\r\n                                anchor: \"bottom-left\",\r\n                                x: -55,\r\n                                y: -30,\r\n                                step: 1\r\n                            }\r\n                        };\r\n                    }\r\n\r\n                    var chartOptions = TC.Util.extend({\r\n                        bindto: div.querySelector('.tc-chart'),\r\n                        padding: {\r\n                            top: 13, // por el nuevo diseño del tooltip añado 13  //data.elevationFromServiceChartData ? 10 : 0,\r\n                            right: 15,\r\n                            bottom: 0,\r\n                            left: 45,\r\n                        },\r\n                        legend: legendOptions\r\n                    }, self.createChartOptions(data));\r\n\r\n                    if (self.chart.tooltip) {\r\n                        chartOptions.tooltip = {\r\n                            position: function (data, width, height, element) {\r\n                                let container = document.querySelector('.c3-tooltip-container');\r\n                                let chartOffsetX = document.querySelector(\".c3\").getBoundingClientRect().left;\r\n                                let graphOffsetX = document.querySelector(\".c3 g.c3-axis-y\").getBoundingClientRect().right;\r\n                                let tooltipWidth = container.clientWidth;\r\n                                let x = (parseInt(element.getAttribute('x'))) + graphOffsetX - chartOffsetX - Math.floor(tooltipWidth / 2);                                \r\n\r\n                                // alto del tooltipOnBottom\r\n                                let xAxisHeight = document.querySelector(\".c3 g.c3-axis-x\").getBoundingClientRect().height + 2;\r\n                                let onBottom = container.querySelector(\".onBottom\");\r\n                                if (onBottom && xAxisHeight) {\r\n                                    onBottom.style.height = xAxisHeight + 'px';\r\n                                }\r\n                                return { top: 0, left: x };\r\n                            },\r\n                            contents: function (d) {\r\n                                var fn = self.chart.tooltip;\r\n                                if (typeof (fn) !== \"function\")\r\n                                    fn = TC.Util.getFnFromString(self.chart.tooltip);\r\n                                return fn.call(eval(self.chart.ctx), d);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (self.chart && self.chart.onmouseout) {\r\n                        chartOptions.onmouseout = function () {\r\n                            var fn = self.chart.onmouseout;\r\n                            if (typeof (fn) !== \"function\")\r\n                                fn = TC.Util.getFnFromString(self.chart.onmouseout);\r\n                            fn.call(eval(self.chart.ctx));\r\n                        };\r\n                    }\r\n\r\n                    chartOptions.onrendered = function () {\r\n                        if (TC.Util.isFunction(chartOptions._onrendered)) {\r\n                            chartOptions._onrendered.call(this);\r\n                        }\r\n                        self.map.trigger(TC.Consts.event.DRAWCHART, { control: self, svg: this.svg[0][0], chart: this });\r\n                    };\r\n\r\n                    if (window.c3) {\r\n\r\n                        if (!c3._isOverriden) {\r\n                            // GLS: Override de la función generateDrawLine y generateDrawArea para establecer otro tipo de interpolación en la línea\r\n                            window.c3.chart.internal.fn.generateDrawLine = function (lineIndices, isSub) {\r\n                                var $$ = this, config = $$.config,\r\n                                    line = $$.d3.svg.line(),\r\n                                    getPoints = $$.generateGetLinePoints(lineIndices, isSub),\r\n                                    yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\r\n                                    xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\r\n                                    yValue = function (d, i) {\r\n                                        return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\r\n                                    };\r\n                                line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\r\n                                if (!config.line_connectNull) { line = line.defined(function (d) { return d.value != null; }); }\r\n                                return function (d) {\r\n                                    var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\r\n                                        x = isSub ? $$.x : $$.subX, y = yScaleGetter.call($$, d.id), x0 = 0, y0 = 0, path;\r\n                                    if ($$.isLineType(d)) {\r\n                                        if (config.data_regions[d.id]) {\r\n                                            path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\r\n                                        } else {\r\n                                            if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\r\n                                            path = line.interpolate('linear')(values);\r\n                                        }\r\n                                    } else {\r\n                                        if (values[0]) {\r\n                                            x0 = x(values[0].x);\r\n                                            y0 = y(values[0].value);\r\n                                        }\r\n                                        path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\r\n                                    }\r\n                                    return path ? path : \"M 0 0\";\r\n                                };\r\n                            };\r\n                            window.c3.chart.internal.fn.generateDrawArea = function (areaIndices, isSub) {\r\n                                var $$ = this, config = $$.config, area = $$.d3.svg.area(),\r\n                                    getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\r\n                                    yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\r\n                                    xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\r\n                                    value0 = function (d, i) {\r\n                                        return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(0);\r\n                                    },\r\n                                    value1 = function (d, i) {\r\n                                        return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\r\n                                    };\r\n                                area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(value0).y1(value1);\r\n                                if (!config.line_connectNull) {\r\n                                    area = area.defined(function (d) { return d.value !== null; });\r\n                                }\r\n                                return function (d) {\r\n                                    var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\r\n                                        x0 = 0, y0 = 0, path;\r\n                                    if ($$.isAreaType(d)) {\r\n                                        if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\r\n                                        path = area.interpolate('linear')(values);\r\n                                    } else {\r\n                                        if (values[0]) {\r\n                                            x0 = $$.x(values[0].x);\r\n                                            y0 = $$.getYScale(d.id)(values[0].value);\r\n                                        }\r\n                                        path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\r\n                                    }\r\n                                    return path ? path : \"M 0 0\";\r\n                                };\r\n                            };\r\n                            c3._isOverriden = true;\r\n                        }\r\n\r\n                        self.chart.chart = c3.generate(chartOptions);\r\n                    }\r\n                });\r\n            }\r\n        );\r\n    };\r\n\r\n    const closeOpenedTableResultsPanel = function () {\r\n        const self = this;\r\n\r\n        self.map.getControlsByClass(TC.control.ResultsPanel)\r\n            .filter(function (ctl) {\r\n                return ctl !== self && ctl.isVisible();\r\n            })\r\n            .filter(function (ctl) {\r\n                return ctl.options.content !== 'chart';\r\n            })\r\n            .forEach(function (ctl) {\r\n                ctl.close();\r\n            });\r\n    };\r\n\r\n    ctlProto.openTable = function () {\r\n        var self = this;\r\n\r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        var data = arguments[0];\r\n        if (data) {\r\n\r\n            var css;\r\n            if (data.css) {\r\n                css = data.css;\r\n            }\r\n            var callback = data.callback;\r\n            var columns = data.columns, data = data.data;\r\n\r\n            if (data && data.length > 0) {\r\n                //Si no recibe columnas, las extrae de las claves del primer objeto de la colección de datos\r\n                if (!columns) {\r\n                    columns = [];\r\n                    for (var k in data[0]) {\r\n                        columns.push(k);\r\n                    }\r\n                }\r\n\r\n                //deleteColumns();\r\n\r\n                self.tableData = {\r\n                    columns: columns,\r\n                    results: data,\r\n                    css: css,\r\n                    callback: callback\r\n                }\r\n                self.getRenderedHtml(self.CLASS + '-table', self.tableData).then(function (html) {\r\n                    const table = self.div.querySelector('.' + self.CLASS + '-table');\r\n                    const parent = table.parentElement;\r\n                    parent.removeChild(table);\r\n                    table.innerHTML = html;\r\n                    parent.appendChild(table);\r\n                    if (self.tableData.callback) {\r\n                        self.tableData.callback(table);\r\n                    }\r\n\r\n                    closeOpenedTableResultsPanel.call(self);\r\n\r\n                    self.map.trigger(TC.Consts.event.DRAWTABLE, { control: self });\r\n                });\r\n\r\n                self.div.querySelector('.' + self.CLASS + '-chart').style.display = 'none';\r\n                self.div.querySelector('.' + self.CLASS + '-info').style.display = 'none';\r\n\r\n                self.show('prsidebar-body');\r\n            }\r\n        }\r\n    };\r\n\r\n    ctlProto.open = function (html, container) {\r\n        const self = this;\r\n        \r\n        self.div.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n        const toCheck = container || self.div.querySelector('.' + self.CLASS + '-table');\r\n        var checkIsRendered = function () {\r\n            var clientRect = toCheck.getBoundingClientRect();\r\n            if (clientRect && clientRect.width > 100) {\r\n                window.cancelAnimationFrame(this.requestIsRendered);\r\n\r\n                //closeOpenedTableResultsPanel.call(self);\r\n                this.map.trigger(TC.Consts.event.DRAWTABLE, { control: self });\r\n            }\r\n        };\r\n\r\n        self.requestIsRendered = window.requestAnimationFrame(checkIsRendered.bind(self));\r\n\r\n        const chartElm = self.div.querySelector('.' + self.CLASS + '-chart');\r\n        chartElm.style.display = 'none';\r\n        const tableElm = self.div.querySelector('.' + self.CLASS + '-table');\r\n        tableElm.style.display = 'none';\r\n        const infoElm = self.div.querySelector('.' + self.CLASS + '-info');\r\n        infoElm.style.display = 'none';\r\n\r\n        if (html) {\r\n            if (container) {\r\n                self.getTableContainer = function () {\r\n                    return container;\r\n                };\r\n                container.innerHTML = html;\r\n                container.style.display = '';\r\n            } else {\r\n                tableElm.innerHTML = html;\r\n                tableElm.style.display = '';\r\n            }\r\n        }\r\n        else {\r\n            if (chartElm.childElementCount) {\r\n                chartElm.style.display = '';\r\n            }\r\n            else if (tableElm.childElementCount) {\r\n                tableElm.style.display = '';\r\n            }\r\n            else if (infoElm.childElementCount) {\r\n                infoElm.style.display = '';\r\n            }\r\n        }\r\n\r\n        const maximizeElm = self.div.querySelector('.prcollapsed-max');\r\n\r\n        if (self.options.titles) {\r\n\r\n            if (self.options.titles.main) {\r\n                const titleElm = self.div.querySelector('.prpanel-title-text');\r\n                titleElm.setAttribute('title', self.options.titles.main);\r\n                titleElm.innerHTML = self.options.titles.main;\r\n            }\r\n\r\n            if (self.options.titles.max) {\r\n                maximizeElm.setAttribute('title', self.options.titles.max);\r\n            }\r\n        }\r\n\r\n        if (self.options.classes) {\r\n            if (self.options.classes.collapsed) {\r\n                maximizeElm.querySelector('i.fa-list-alt').classList.add(self.options.classes.collapsed);\r\n            }\r\n        }\r\n\r\n        // si está minimizado\r\n        const collapsedElm = self.div.querySelector(self.content.collapsedClass);\r\n        if (isElementVisible(collapsedElm)) {\r\n            self.maximize();\r\n        }\r\n\r\n        self.show('prsidebar-body');\r\n        self.hide('prcollapsed-max');\r\n    };\r\n\r\n    ctlProto.loadDataOnChart = function (data) {\r\n        const self = this;\r\n\r\n        // puede llegar aquí después de borrar un track.\r\n        if (self.chart && self.chart.chart) {\r\n            self.chart.chart.unload({\r\n                done: function () {\r\n                    self.elevationProfileChartData = data;\r\n                    self.renderElevationProfileChart({\r\n                        data: data,\r\n                        div: self.div.querySelector('.' + ctlProto.CLASS + '-chart')\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    ctlProto.createChartOptions = function (options) {\r\n        const self = this;\r\n        var result = {};\r\n        options = options || {};\r\n        const locale = options.locale || TC.Util.getMapLocale(self.map);\r\n        switch (options.chartType) {\r\n            default:\r\n                if (options.ele != null) {\r\n                    const getChartSize = function () {\r\n                        const panelStyle = getComputedStyle(self.getContainerElement());\r\n                        const docWidth = document.documentElement.clientWidth / 100 * 40; // css panel contendor\r\n                        const r = {\r\n                            height: docWidth > 445 ? options.maxHeight || self.CHART_SIZE.MAX_HEIGHT : options.minHeight || self.CHART_SIZE.MIN_HEIGHT\r\n                        };\r\n                        // Si el panel ocupa el ancho del mapa dejamos el ancho del perfil que ocupe todo, en cualquier otro caso tenemos tres anchos predefinidos.\r\n                        if (panelStyle.width === getComputedStyle(self.map.div).width) {\r\n                            r.width = parseFloat(panelStyle.width) * 0.95;\r\n                        }\r\n                        else {\r\n                            r.width = docWidth > 445 ? options.maxWidth || self.CHART_SIZE.MAX_WIDTH : docWidth > 310 ? options.mediumWidth || self.CHART_SIZE.MEDIUM_WIDTH : options.minWidth || self.CHART_SIZE.MIN_WIDTH\r\n                        }\r\n                        return r;\r\n                    };\r\n                    const gradIds = ['grad' + TC.getUID()];\r\n\r\n                    let maxy = Number.NEGATIVE_INFINITY;\r\n                    let miny = Number.POSITIVE_INFINITY;\r\n                    options.ele.forEach(function (y) {\r\n                        if (typeof y === 'number') {\r\n                            maxy = Math.max(y, maxy);\r\n                            miny = Math.min(y, miny);\r\n                        }\r\n                    });\r\n\r\n                    let xColumn = [...options.x];\r\n                    let eleColumn = [...options.ele];\r\n\r\n                    result = {\r\n                        data: {\r\n                            x: 'x',\r\n                            columns: [\r\n                                ['x'].concat(xColumn),\r\n                                ['ele'].concat(eleColumn)\r\n                            ],\r\n                            types: {\r\n                                'ele': 'area-spline'\r\n                            },\r\n                            colors: {\r\n                                \"ele\": 'url(#' + gradIds[0] + ')'\r\n                            }\r\n                        },\r\n                        size: getChartSize(),\r\n                        point: {\r\n                            show: false\r\n                        },\r\n                        axis: {\r\n                            x: {\r\n                                tick: {\r\n                                    outer: false,\r\n                                    count: 5, format: function (d) {\r\n                                        d = d / 1000;\r\n                                        var dist;\r\n                                        var measure;\r\n                                        if (d < 1) {\r\n                                            dist = Math.round(d * 1000);\r\n                                            measure = ' m';\r\n                                        } else {\r\n                                            dist = Math.round(d * 100) / 100;\r\n                                            measure = ' km';\r\n                                        }\r\n\r\n                                        dist = dist.toLocaleString(locale);\r\n                                        return dist + measure;\r\n                                    }\r\n                                }\r\n                            },\r\n                            y: {\r\n                                padding: {\r\n                                    top: 0, bottom: 0\r\n                                },\r\n                                max: maxy,\r\n                                min: miny,\r\n                                tick: {\r\n                                    count: 2,\r\n                                    format: function (d) {\r\n                                        return formatYAxis(d, locale);\r\n                                    }\r\n                                }\r\n                            }\r\n                        },\r\n                        onresize: function () {\r\n                            this.api.resize(getChartSize());\r\n                        }\r\n                    };\r\n\r\n                    if (options.elevationFromServiceChartData) {\r\n                        result.data.names = {\r\n                            ele: self.getLocaleString(\"geo.profile.fromTrack\"),\r\n                            ele2: self.getLocaleString(\"mdt\")\r\n                        };\r\n                        result.data.columns.push(['ele2'].concat(options.elevationFromServiceChartData.ele));\r\n\r\n                        result.data.types.ele2 = options.elevationFromServiceChartData.type;\r\n                        gradIds.push('grad' + TC.getUID());\r\n                        result.data.colors.ele2 = 'url(#' + gradIds[gradIds.length - 1] + ')';\r\n                        result.data.axes = {\r\n                            ele: 'y'\r\n                        };                        \r\n\r\n                        if (eleColumn.every((val) => val === 0)) {\r\n                            result.axis.y.min = Math.min(...options.elevationFromServiceChartData.ele);\r\n                            result.axis.y.max = Math.max(...options.elevationFromServiceChartData.ele);\r\n                        } else if (options.elevationFromServiceChartData.ele.every((val) => val === 0)) {\r\n                            result.axis.y.min = Math.min(...eleColumn);\r\n                            result.axis.y.max = Math.max(...eleColumn);\r\n                        } else {\r\n                            result.axis.y.min = Math.min(...eleColumn.concat(options.elevationFromServiceChartData.ele));\r\n                            result.axis.y.max = Math.max(...eleColumn.concat(options.elevationFromServiceChartData.ele));\r\n                        }\r\n                    }\r\n\r\n                    if (options.time) result.time = (\"00000\" + options.time.h).slice(-2) + ':' + (\"00000\" + options.time.m).slice(-2) + ':' + (\"00000\" + options.time.s).slice(-2);\r\n\r\n                    var rendered = false;\r\n                    result._onrendered = function () {\r\n                        if (!rendered) {\r\n                            rendered = true;\r\n\r\n                            if (options.elevationFromServiceChartData) {\r\n                                // redondeamos los cuadritos de la leyenda.\r\n                                document.querySelectorAll('.c3-legend-item-tile').forEach((item) => {\r\n                                    item.setAttribute('rx', 5);\r\n                                    item.setAttribute('ry', 1);\r\n                                });\r\n                                // añdimos title a los elementos de la leyenda\r\n                                document.querySelectorAll('.c3-legend-item').forEach((item) => {\r\n                                    var title = document.createElementNS('http://www.w3.org/2000/svg', 'title');\r\n                                    title.textContent = self.getLocaleString(\"hide\");\r\n                                    item.appendChild(title);\r\n\r\n                                    item.addEventListener(TC.Consts.event.CLICK, function () {\r\n                                        if (item.classList.contains(TC.Consts.classes.HIDDEN)) {\r\n                                            item.querySelector('title').textContent = self.getLocaleString(\"hide\");\r\n                                        } else {\r\n                                            item.querySelector('title').textContent = self.getLocaleString(\"show\");\r\n                                        }\r\n\r\n                                        item.classList.toggle(TC.Consts.classes.HIDDEN);\r\n                                    }, { passive: true });\r\n                                });\r\n                            }\r\n                        }\r\n\r\n                        const svg = this.svg[0][0];\r\n                        var svgDefsElement = svg.getElementsByTagName('defs')[0];\r\n                        var xmlns = \"http://www.w3.org/2000/svg\";\r\n\r\n                        const createLinearGradient = function (id, colors) {\r\n                            var grad = document.createElementNS(xmlns, \"linearGradient\");\r\n                            grad.setAttributeNS(null, \"id\", id);\r\n                            grad.setAttributeNS(null, \"x1\", \"0%\");\r\n                            grad.setAttributeNS(null, \"x2\", \"0%\");\r\n                            grad.setAttributeNS(null, \"y1\", \"0%\");\r\n                            grad.setAttributeNS(null, \"y2\", \"100%\");\r\n                            grad.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\r\n\r\n                            const stop0 = document.createElementNS(xmlns, \"stop\");\r\n                            stop0.setAttributeNS(null, \"offset\", \"0%\");\r\n                            stop0.setAttributeNS(null, \"stop-color\", colors[0]);\r\n                            stop0.setAttributeNS(null, \"stop-opacity\", \"0.7\");\r\n                            grad.appendChild(stop0);\r\n\r\n                            const stop50 = document.createElementNS(xmlns, \"stop\");\r\n                            stop50.setAttributeNS(null, \"offset\", \"50%\");\r\n                            stop50.setAttributeNS(null, \"stop-color\", colors[1]);\r\n                            stop50.setAttributeNS(null, \"stop-opacity\", \"0.9\");\r\n                            grad.appendChild(stop50);\r\n\r\n                            const stop100 = document.createElementNS(xmlns, \"stop\");\r\n                            stop100.setAttributeNS(null, \"offset\", \"100%\");\r\n                            stop100.setAttributeNS(null, \"stop-color\", colors[2]);\r\n                            stop100.setAttributeNS(null, \"stop-opacity\", \"1\");\r\n                            grad.appendChild(stop100);\r\n\r\n                            svgDefsElement.appendChild(grad);\r\n                        };\r\n\r\n                        createLinearGradient(gradIds[0], [\"red\", \"orange\", \"green\"]);\r\n                        if (options.elevationFromServiceChartData) {\r\n                            createLinearGradient(gradIds[gradIds.length - 1], [\"blue\", \"cian\", \"green\"]);\r\n                        }\r\n\r\n                        const d3Node = d3.select(\".c3-brush\").node();\r\n                        if (d3Node) {\r\n                            d3Node.parentNode.removeChild(d3Node);\r\n                        }\r\n\r\n                        d3.select(\".c3-event-rects,.c3-event-rects-single\")\r\n                            .selectAll(\"rect\")\r\n                            .style(\"cursor\", \"pointer\")\r\n                            .on(\"click\", function (e) {\r\n                                d3.event.stopPropagation();\r\n                                let point = self.elevationProfileChartData.coords[e.index];\r\n                                if (point) {\r\n                                    point = point.slice(0, 2);\r\n                                    TC.loadJS(!TC.feature || (TC.feature && !TC.feature.Point),\r\n                                        [TC.apiLocation + 'TC/feature/Point'],\r\n                                        function () {\r\n                                            self.map.zoomToFeatures([new TC.feature.Point(point, {})]);\r\n                                        }\r\n                                    );\r\n                                }\r\n                            });\r\n\r\n                        const path = d3.select('.c3-axis.c3-axis-x').select('path');\r\n                        if (!path.empty()) {\r\n                            let pattern = path.attr('d');\r\n                            let match = /^M\\d\\,(\\d)V\\dH\\d{3}V(\\d)$/i.exec(pattern);\r\n                            if (match) { // quitamos las barritas de los extremos del axis-x\r\n                                pattern = pattern.replace(/(M\\d\\,)\\d/i, \"$10\").replace(/(H\\d{3}V)(\\d)/i, \"$10\");\r\n                                path.attr('d', pattern);\r\n                            } else {\r\n                                let match = /^M\\s\\d\\s(\\d)\\sV\\s\\d\\sH\\s\\d{3}\\sV\\s(\\d)$/i.exec(pattern);\r\n                                if (match) { // quitamos las barritas de los extremos del axis-x\r\n                                    pattern = pattern.replace(/(M\\s\\d\\s)\\d/i, \"$10\").replace(/(H\\s\\d{3}\\sV\\s)(\\d)/i, \"$10\");\r\n                                    path.attr('d', pattern);\r\n                                }\r\n                            }\r\n                        }\r\n                        \r\n\r\n\r\n                        const svgRect = svg.getBoundingClientRect();\r\n                        const chartSize = {\r\n                            width: svgRect.width,\r\n                            height: svgRect.height\r\n                        };\r\n\r\n                        // ¿es necesario pasar los labels a multiline?\r\n                        var setMultilineLabels = function () {\r\n                            var x = d3.scale.ordinal().rangeRoundBands([0, chartSize.width], .1, .3);\r\n                            d3.select('.c3-axis-x').selectAll('text:not(.c3-axis-x-label)')\r\n                                .call(function (textNode, width) {\r\n                                    textNode.each(function () {\r\n                                        textNode.each(function (d, i) {\r\n                                            if (i == 0) return;\r\n\r\n                                            d3text = d3.select(this);\r\n\r\n                                            if (d3text.node().childNodes.length === 1) {\r\n                                                var clone = d3text.select('tspan').node().cloneNode();\r\n                                                var words = d3text.text().split(' ');\r\n\r\n                                                d3text.select('tspan').text(words[0]);\r\n                                                clone.textContent = words[1];\r\n                                                var dy = clone.getAttribute('dy');\r\n                                                dy = dy ? parseFloat(clone.getAttribute('dy')) : .71;\r\n                                                dy = dy + 0.18 + 'em';\r\n                                                clone.setAttribute('dy', dy);\r\n                                                d3text.node().appendChild(clone);\r\n                                            }\r\n                                        });\r\n                                    });\r\n                                }, x.rangeBand());\r\n                        };\r\n                        if (!d3.select('.c3-axis-x').node().getBoundingClientRect().width) {\r\n\r\n                            if (self.elevationChartLabelsRAF) {\r\n                                window.cancelAnimationFrame(self.elevationChartLabelsRAF);\r\n                                self.elevationChartLabelsRAF = undefined;\r\n                            }\r\n\r\n                            function hasSize() {\r\n                                if (d3.select('.c3-axis-x').length && !(d3.select('.c3-axis-x').node())) {\r\n                                    self.elevationChartLabelsRAF = requestAnimationFrame(hasSize);\r\n                                }\r\n                                else if (d3.select('.c3-axis-x').length && d3.select('.c3-axis-x').node() &&\r\n                                    !d3.select('.c3-axis-x').node().getBoundingClientRect().width) {\r\n                                    self.elevationChartLabelsRAF = requestAnimationFrame(hasSize);\r\n                                } else {\r\n                                    window.cancelAnimationFrame(self.elevationChartLabelsRAF);\r\n                                    self.elevationChartLabelsRAF = undefined;\r\n\r\n                                    if (((d3.select('.c3-axis-x').node().getBoundingClientRect().width >= chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) ||\r\n                                        (d3.select('.c3-axis-x').node().getBoundingClientRect().width * 100 / (chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) > 90))) {\r\n                                        setMultilineLabels();\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            self.elevationChartLabelsRAF = requestAnimationFrame(hasSize);\r\n                        }\r\n                        else if (((d3.select('.c3-axis-x').node().getBoundingClientRect().width >= chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) ||\r\n                            (d3.select('.c3-axis-x').node().getBoundingClientRect().width * 100 / (chartSize.width - d3.select('.c3-axis-y').node().getBoundingClientRect().width) > 90))) {\r\n                            setMultilineLabels();\r\n                        }\r\n\r\n                        // pasamos el perfil original adelante si no no se aprecian bien las diferencias por el color y si lo gestionamos antes afecta a la leyenda\r\n                        d3.select('svg').select(\".c3-chart-lines\").selectAll(\".c3-target-ele\").each(function () {\r\n                            this.parentNode.appendChild(this);\r\n                        });\r\n\r\n                        if (!self.isMinimized()) {\r\n                            self.show('prsidebar-body');\r\n                            self.hide('prcollapsed-max');\r\n                        }\r\n\r\n\r\n                        self.div.querySelector('.' + self.CLASS + '-table').style.display = '';\r\n                        self.div.querySelector('.' + self.CLASS + '-info').style.display = '';\r\n                    }\r\n                }\r\n                else {\r\n                    result = {\r\n                        msg: self.getLocaleString(\"geo.trk.chart.chpe.empty\")\r\n                    };\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const getTime = function (timeFrom, timeTo) {\r\n        var diff = timeTo - timeFrom;\r\n        var d = {};\r\n        var daysDifference = Math.floor(diff / 1000 / 60 / 60 / 24);\r\n        diff -= daysDifference * 1000 * 60 * 60 * 24;\r\n\r\n        var hoursDifference = Math.floor(diff / 1000 / 60 / 60);\r\n        diff -= hoursDifference * 1000 * 60 * 60;\r\n\r\n        d.h = hoursDifference + (daysDifference * 24);\r\n\r\n        var minutesDifference = Math.floor(diff / 1000 / 60);\r\n        diff -= minutesDifference * 1000 * 60;\r\n\r\n        d.m = minutesDifference;\r\n\r\n        d.s = Math.floor(diff / 1000);\r\n\r\n        return TC.Util.extend({}, d, { toString: (\"00000\" + d.h).slice(-2) + ':' + (\"00000\" + d.m).slice(-2) + ':' + (\"00000\" + d.s).slice(-2) });\r\n    };\r\n\r\n    ctlProto.getElevationChartTooltip = function (data) {        \r\n        const self = this;\r\n        const locale = self.map.options.locale && self.map.options.locale.replace('_', '-') || undefined;\r\n        const coords = self.elevationProfileChartData.coords;\r\n        const getElevationByDataElem = function (dataElem) {\r\n            return dataElem.value ? parseInt(dataElem.value.toFixed(0)).toLocaleString(locale) : \"0\";\r\n        };\r\n        const p = coords[data[0].index];\r\n        let doneTime;\r\n        if (coords[0].length == 4 && coords[0][3] > 0 && p) {\r\n            doneTime = getTime(coords[0][3], p[3]);\r\n        }\r\n        let distance = data[0].x / 1000;\r\n        let distanceFormatted = (distance < 1 ? Math.round(distance * 1000) : Math.round(distance * 100) / 100).toLocaleString(locale) + (distance < 1 ? ' m' : ' km');\r\n\r\n        let elevationDiv = '<div class=\"onTop\">' +\r\n            '<span>' +\r\n            data.map((elem, index) => {\r\n                if (elem) {\r\n                    return (index === 0 ? '<span data-isNumber class=\"' + (elem.id === \"ele\" ? \"original\" : \"mdt\") + '\">' + getElevationByDataElem(elem) + ' m' + '</span>' :\r\n                        '<span data-isNumber class=\"' + (elem.id === \"ele\" ? \"original\" : \"mdt\") + '\">' + getElevationByDataElem(elem) + ' m ' + '</span>');\r\n                } else {\r\n                    return \"\";\r\n                }\r\n            }).join('') +\r\n            '</span >' +\r\n            '</div>';\r\n\r\n        let distanceAndTimeDiv = '<div class=\"onBottom\">' +\r\n            '<span>' + distanceFormatted + ' </span>' +\r\n            (doneTime ? '<span>' + doneTime.toString + '</span>' + '<div/>' : '<div/>');\r\n\r\n\r\n        return elevationDiv + distanceAndTimeDiv;        \r\n    };\r\n\r\n    ctlProto.getTableContainer = function () {\r\n        return this.tableDiv;\r\n    };\r\n\r\n    ctlProto.getInfoContainer = function () {\r\n        return this.infoDiv;\r\n    };\r\n\r\n    ctlProto.getMenuElement = function () {\r\n        return this.menuDiv;\r\n    };\r\n\r\n    ctlProto.getContainerElement = function () {\r\n        return this.div.querySelector('.prsidebar-body') || null;\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        self.wrap.register(map);\r\n\r\n        if (self.openOn) {\r\n            self.map.one(self.openOn, function (e, args) {\r\n                self.content.fnOpen.call(self, e.data);\r\n            });\r\n        }\r\n\r\n        if (self.closeOn) {\r\n            self.map.one(self.closeOn, function (e, args) {\r\n                self.close();\r\n            });\r\n        }\r\n\r\n        if (self.options.openOn) {\r\n            self.map.on(self.options.openOn, function (e, args) {\r\n                self.content.fnOpen.call(self, e.data);\r\n            });\r\n        }\r\n\r\n        if (self.options.closeOn) {\r\n            self.map.on(self.options.closeOn, function (e, args) {\r\n                self.close();\r\n            });\r\n        }\r\n\r\n        //map.on(TC.Consts.event.VIEWCHANGE, function () {\r\n\r\n        //    map.getControlsByClass(TC.control.ResultsPanel).filter(function (ctl) {\r\n        //        return ctl.options.content !== \"chart\" && ($(ctl.div).find('.' + ctl.CLASS + '-info:visible').length === 1 || $(ctl.div).find('.' + ctl.CLASS + '-table:visible').length === 1);\r\n        //    }).forEach(function (ctl) {\r\n        //        ctl.close();\r\n        //    });\r\n        //});\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.exportToExcel = function () {\r\n        var _ctl = this;\r\n\r\n        var rows = [_ctl.tableData.columns];\r\n\r\n        _ctl.tableData.results.forEach(function (value) {\r\n            var row = [];\r\n            for (var k in value) {\r\n                if (value.hasOwnProperty(k) && k !== \"Id\" && k !== \"Geom\") { //Las columnas ID y Geom no aparece en la exportaci\\u00f3n\r\n                    row.push(value[k]);\r\n                }\r\n            }\r\n            rows.push(row);\r\n        });\r\n        var _fncSave = function (exporter) {\r\n            var fileName = _ctl.save.fileName ? _ctl.save.fileName : 'resultados.xls';\r\n            var title = (_ctl.options.titles && _ctl.options.titles.main ? _ctl.options.titles.main : null);\r\n            exporter.Save(fileName, rows, title);\r\n        }\r\n        if (!TC.Util.ExcelExport) {\r\n            TC.loadJS(true, TC.apiLocation + 'TC/Util.ExcelExport', function () {\r\n                _fncSave(new TC.Util.ExcelExport());\r\n            });\r\n        }\r\n        else {\r\n            _fncSave(new TC.Util.ExcelExport());\r\n        }\r\n    };\r\n\r\n    ctlProto.contentType = {\r\n        TABLE: {\r\n            fnOpen: ctlProto.openTable,\r\n            collapsedClass: '.fa-list-alt'\r\n        },\r\n        CHART: {\r\n            fnOpen: ctlProto.openChart,\r\n            collapsedClass: '.fa-area-chart'\r\n        }\r\n    };\r\n})();"]}