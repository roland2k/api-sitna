{"version":3,"sources":["control/Click.js"],"names":["TC","control","Control","syncLoadJS","apiLocation","Click","apply","this","arguments","options","callback","wrap","inherit","ctlProto","prototype","CLASS","register","map","call","activate","deactivate","coord","point","console","log"],"mappings":"AA8BAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAGnCJ,GAAGC,QAAQI,MAAQ,WAGfL,GAAGE,QAAQI,MAFAC,KAEYC,WAFZD,KAIFE,SAJEF,KAIcE,QAAQC,WAJtBH,KAKFG,SALEH,KAKcE,QAAQC,UALtBH,KAQNI,KAAO,IAAIX,GAAGW,KAAKV,QAAQI,MARrBE,OAWfP,GAAGY,QAAQZ,GAAGC,QAAQI,MAAOL,GAAGE,UAEhC,WACI,IAAIW,EAAWb,GAAGC,QAAQI,MAAMS,UAEhCD,EAASE,MAAQ,eAEjBF,EAASG,SAAW,SAAUC,GACfV,KACNI,KAAKK,SAASC,GACnB,OAAOjB,GAAGE,QAAQY,UAAUE,SAASE,KAF1BX,KAEqCU,IAGpDJ,EAASM,SAAW,WAEhBnB,GAAGE,QAAQY,UAAUK,SAASD,KADnBX,MAAAA,KAENI,KAAKQ,YAGdN,EAASO,WAAa,WACPb,KACNI,KAAKS,aACVpB,GAAGE,QAAQY,UAAUM,WAAWF,KAFrBX,OAKfM,EAASH,SAAW,SAAUW,EAAOC,GACjCC,QAAQC,IAAI,WAAaH,EAAM,GAAK,KAAOA,EAAM,GAAK,KAAOC,EAAM,GAAK,KAAOA,EAAM,GAAK,MAxBlG","sourcesContent":["\r\n/**\r\n  * Opciones de control de clics de usuario.\r\n  * @typedef ClickOptions\r\n  * @property {boolean} [active] - Si se establece a `true`, el control asociado está activo, es decir, responde a los clics hechos en el mapa desde el que se carga.\r\n  * Como máximo puede haber solamente un control activo en el mapa en cada momento.\r\n  * @property {SITNA.Map~ClickCallback} callback - Función de callback que gestiona la respuesta al clic.\r\n  */\r\n\r\n/**\r\n  * Función de callback que gestiona los clic del usuario en la ventana de visualización del mapa.\r\n  * @callback SITNA.Map~ClickCallback\r\n  * @param {number[]} coords - Coordenadas del punto donde se ha realizado clic, en las unidades del sistema de referencia de coordenadas del mapa (Ver propiedad `crs`de {@link MapOptions}). Array de dos números correspondientes a las coordenadas x e y.\r\n  * @example <caption>[Ver en vivo](../examples/cfg.ClickOptions.html)</caption> {@lang html} \r\n  * <div id=\"mapa\"/>\r\n  * <script>\r\n  *     // Creamos un mapa con el control de gestión de clics, con una función de callback personalizada\r\n  *     var map = new SITNA.Map(\"mapa\", {\r\n  *         controls: {\r\n  *             click: {\r\n  *                 active: true,\r\n  *                 callback: function (coord) {\r\n  *                     alert(\"Has pulsado en la posición \" + coord[0] + \", \" + coord[1]);\r\n  *                 }\r\n  *             }\r\n  *         }\r\n  *     });\r\n  * </script>\r\n  */\r\n\r\nTC.control = TC.control || {};\r\n\r\nif (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.control.Click = function () {\r\n    var self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    if (self.options && self.options.callback) {\r\n        self.callback = self.options.callback;\r\n    }\r\n\r\n    self.wrap = new TC.wrap.control.Click(self);\r\n};\r\n\r\nTC.inherit(TC.control.Click, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.Click.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-click';\r\n\r\n    ctlProto.register = function (map) {\r\n        var self = this;\r\n        self.wrap.register(map);\r\n        return TC.Control.prototype.register.call(self, map);\r\n    };\r\n\r\n    ctlProto.activate = function () {\r\n        var self = this;\r\n        TC.Control.prototype.activate.call(self);\r\n        self.wrap.activate();\r\n    };\r\n\r\n    ctlProto.deactivate = function () {\r\n        var self = this;\r\n        self.wrap.deactivate();\r\n        TC.Control.prototype.deactivate.call(self);\r\n    };\r\n\r\n    ctlProto.callback = function (coord, point) {\r\n        console.log('[Click][' + coord[0] + ', ' + coord[1] + '][' + point[0] + ', ' + point[1] + ']');\r\n    };\r\n})();"]}