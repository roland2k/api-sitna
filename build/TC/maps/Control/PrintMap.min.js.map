{"version":3,"sources":["control/PrintMap.js"],"names":["TC","control","MapInfo","syncLoadJS","apiLocation","PrintMap","Control","apply","this","arguments","inherit","ctlProto","prototype","CLASS","ORIENTATION","PAGE_SIZE","a4_portrait","logoWidth","logoHeight","layoutPDF","pageSize","width","height","pageMargins","content","columns","image","margin","text","alignment","table","widths","body","layout","paddingLeft","i","node","paddingRight","paddingTop","paddingBottom","reset","a4_landscape","a3_portrait","a3_landscape","getLayout","orientation","format","getLogoColumn","getScaleBarColumn","options","sideLength","template","compiler","main","container","depth0","helpers","partials","data","alias1","nullContext","alias2","escapeExpression","alias3","lambda","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","name","hash","loc","start","line","column","end","useData","hasLegend","map","workLayers","some","layer","type","Consts","layerType","WMS","getVisibility","register","self","result","mustBeExportable","manageLegendOnZoom","toString","toUpperCase","div","addEventListener","EventTarget","listenerBySelector","setView","view","PRINTING","codeContainer","document","querySelector","cb","id","disabled","checked","createElement","classList","add","appendChild","innerHTML","makeQRCode","printBtnSelector","on","event","STARTLOADING","printBtn","STOPLOADING","remove","ZOOM","updateCanvas","printFormat","bounding","getBoundingClientRect","Number","isInteger","style","Math","round","newWidth","_viewDiv","top","toast","getLocaleString","msgType","INFO","duration","wrap","updateSize","resetPrinting","off","toastHide","currentFormat","removeProperty","DEFAULT","classes","HIDDEN","Util","getDiv","getRenderedHtml","html","insertAdjacentHTML","createPdf","bind","value","evt","generateLink","registeredListeners","registerListeners","render","callback","renderData","controlId","loadingCtrl","getControlsByClass","LoadingIndicator","hasWait","addWait","loadJS","window","pdfMake","url","PDFMAKE","canvas","mergeCanvases","getCanvas","printLayout","createPDF","filename","location","host","title","trim","getFormattedDate","Date","download","replace","error","ERROR","message","stack","msgErrorMode","EMAIL","removeWait","imageErrorHandling","imageUrl","getLegend","layers","filter","legendByGroup","_process","parentLayer","treeLevel","isVisibleByScale","src","srcBase64","params","base64LegendSrc","legend","push","level","_traverse","o","func","Array","isArray","length","children","header","forEach","hideTree","tree","getTree","Promise","resolve","reject","all","imagePromises","j","k","l","tool","Proxification","proxify","allowedMixedContent","fetchImage","exportable","then","img","complete","imageDetail","imgTagToDataUrl","base64","_getLegendImages","group","index","groupIndex","item","reduce","prev","current","vector","sort","a","b","groupWithHeight","rows","colSpan","fontSize","headerRows","concat","toLowerCase","headerItem","itemIndex","position","indexOf","imageWidth","imageHeight","splice","dontBreakRows","keepWithHeaderRows","getGroupTable","basics","onLogoError","logoColumn","logo","imgToDataUrl","dataUrl","titleColumn","getTitleColumn","onError","scaleBarColumn","scaleCtrl","ScaleBar","elem","getElementsByClassName","styling","getComputedStyle","leftBorder","parseInt","getPropertyValue","rightBorder","border","getText","qrTarget","qrCodeBase64","addToCanvas","x","y","mapCanvas","fn","basicsDone","totalWidth","scaleBarWidth","mapPlace","getMap","toDataURL","names","pageBreak","pageOrientation","manageMaxLengthExceed","maxLengthExceed","alertElm","checkboxQR","qr","toggle","async","checkbox","label","LOADING"],"mappings":"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","sourcesContent":["\r\n/**\r\n  * Opciones de control de impresión.\r\n  * @typedef PrintMapOptions\r\n  * @extends ControlOptions\r\n  * @see MapControlOptions\r\n  * @property {HTMLElement|string} [div] - Elemento del DOM en el que crear el control o valor de atributo id de dicho elemento.\r\n  * @property {string} [logo] - URL del archivo de imagen del logo a añadir a la hoja de impresión.\r\n  * @property {PrintMapLegendOptions} [legend] - Opciones de configuración para mostrar la leyenda del mapa en una segunda página de impresión.\r\n  */\r\n\r\n/**\r\n  * Opciones de leyenda para la impresión.\r\n  * @typedef PrintMapLegendOptions\r\n  * @see PrintMapOptions\r\n  * @property {boolean} [visible=false] - Determina si junto a la página del mapa se imprime una segunda página con la leyenda.\r\n  * @property {string} [orientation=\"portrait\"] - Determina la orientación de la página de impresión que contiene la leyenda. Puede tomar el valor `portrait` (vertical) o `landscape` (horizontal).\r\n  */\r\n\r\nTC.control = TC.control || {};\r\n\r\nif (!TC.control.MapInfo) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/control/MapInfo');\r\n}\r\n\r\nTC.control.PrintMap = function () {\r\n    var self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n};\r\n\r\nTC.inherit(TC.control.PrintMap, TC.control.MapInfo);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.PrintMap.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-prnmap';\r\n\r\n    const ORIENTATION = {\r\n        PORTRAIT: 'portrait',\r\n        LANDSCAPE: 'landscape'\r\n    };\r\n    const PAGE_SIZE = {\r\n        A4: 'A4',\r\n        A3: 'A3'\r\n    };\r\n\r\n    /*\r\n        GLS:\r\n        La librería makePDF se basa en la librería PDFKit explicación sobre la unidad de medida que usa:\r\n        PDF points (72 per inch)\r\n        https://stackoverflow.com/questions/51540144/pdfkit-node-js-measurement-unit\r\n        https://www.ninjaunits.com/converters/pixels/points-pixels/\r\n        https://www.ninjaunits.com/converters/pixels/pixels-points/\r\n\r\n        La clave es mantener las dimensiones del mapa en px enteros (canvas sólo admite px enteros), ajustando el layout que está en puntos y que sí admite decimales\r\n    */\r\n\r\n    /* GLS: si se cambian los valores de los layout es necesario actualizar los valores de la clases CSS:  tc-ctl-prnmap-portrait-a4 indicando el valor en px la sección del mapa   */\r\n    var a4_portrait = {\r\n        logoWidth: 60,\r\n        logoHeight: 30,\r\n        layoutPDF: {\r\n            pageSize: {\r\n                width: 595,\r\n                height: 842\r\n            },\r\n            pageMargins: [29.5, 14, 29.5, 22.5],\r\n            content: [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            /*width: 45,*/\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            width: 489,\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0]\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 534,\r\n                                height: 775.5\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        reset: function () {\r\n            this.layoutPDF.content = [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            /*width: 45,*/\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            width: 489,\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0]\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 534,\r\n                                height: 775.5\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ];\r\n        }\r\n    };\r\n    /* GLS: si se cambian los valores de los layout es necesario actualizar los valores de la clases CSS:  tc-ctl-prnmap-landscape-a4 indicando el valor en px la sección del mapa   */\r\n    var a4_landscape = {\r\n        logoWidth: 60,\r\n        logoHeight: 30,\r\n        layoutPDF: {\r\n            pageSize: {\r\n                width: 842,\r\n                height: 595\r\n            },\r\n            pageMargins: [30, 14, 30, 22],\r\n            content: [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            /*width: 45,*/\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0],\r\n                            width: 600\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 780,\r\n                                height: 528\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        reset: function () {\r\n            this.layoutPDF.content = [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            /*width: 45,*/\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0],\r\n                            width: 600\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 780,\r\n                                height: 528\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ];\r\n        }\r\n    };\r\n\r\n    /* GLS: si se cambian los valores de los layout es necesario actualizar los valores de la clases CSS:  tc-ctl-prnmap-portrait-a3 indicando el valor en px la sección del mapa   */\r\n    var a3_portrait = {\r\n        logoWidth: 60,\r\n        logoHeight: 30,\r\n        layoutPDF: {\r\n            pageSize: {\r\n                width: 841.89,\r\n                height: 1190.55\r\n            },\r\n            pageMargins: [29.954, 14, 29.954, 21.55],\r\n            content: [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            width: 489,\r\n                            margin: [0, 10, 0, 0],\r\n                            alignment: 'center'\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 780,\r\n                                height: 1125\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        reset: function () {\r\n            this.layoutPDF.content = [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            width: 489,\r\n                            margin: [0, 10, 0, 0],\r\n                            alignment: 'center'\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 780,\r\n                                height: 1125\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ];\r\n        }\r\n    };\r\n    /* GLS: si se cambian los valores de los layout es necesario actualizar los valores de la clases CSS:  tc-ctl-prnmap-landscape-a3 indicando el valor en px la sección del mapa   */\r\n    var a3_landscape = {\r\n        logoWidth: 60,\r\n        logoHeight: 30,\r\n        layoutPDF: {\r\n            pageSize: {\r\n                width: 1190.55,\r\n                height: 841.89\r\n            },\r\n            pageMargins: [28.775, 14, 28.775, 14.89],\r\n            content: [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0],\r\n                            width: 600\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 1131,\r\n                                height: 783\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        reset: function () {\r\n            this.layoutPDF.content = [\r\n                {\r\n                    columns: [\r\n                        { /* logo */\r\n                            image: null,\r\n                            height: 22,\r\n                            width: 45,\r\n                            margin: [0, 0, 0, 6]\r\n                        },\r\n                        { /* título */\r\n                            text: \"\",\r\n                            alignment: 'center',\r\n                            margin: [0, 10, 0, 0],\r\n                            width: 600\r\n                        },\r\n                        { /* barra de escala */\r\n                            alignment: 'right',\r\n                            margin: [0, 10, 0, 0]\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    table: {\r\n                        widths: ['*'],\r\n                        body: [\r\n                            [{ /* mapa */\r\n                                image: null,\r\n                                width: 1131,\r\n                                height: 783\r\n                            }]\r\n                        ]\r\n                    },\r\n                    layout: {\r\n                        paddingLeft: function (i, node) { return 0; },\r\n                        paddingRight: function (i, node) { return 0; },\r\n                        paddingTop: function (i, node) { return 0; },\r\n                        paddingBottom: function (i, node) { return 0; }\r\n                    }\r\n                }\r\n            ];\r\n        }\r\n    };\r\n\r\n    const getLayout = function (orientation, format) {\r\n        switch (orientation) {\r\n            case ORIENTATION.PORTRAIT: {\r\n                switch (format) {\r\n                    case PAGE_SIZE.A4: {\r\n                        return a4_portrait;\r\n                    }\r\n                    case PAGE_SIZE.A3: {\r\n                        return a3_portrait;\r\n                    }\r\n                    default:\r\n                }\r\n                break;\r\n            }\r\n            case ORIENTATION.LANDSCAPE: {\r\n                switch (format) {\r\n                    case PAGE_SIZE.A4: {\r\n                        return a4_landscape;\r\n                    }\r\n                    case PAGE_SIZE.A3: {\r\n                        return a3_landscape;\r\n                    }\r\n                    default:\r\n                }\r\n                break;\r\n            }\r\n            default:\r\n                return a4_portrait;\r\n        }\r\n    };\r\n\r\n    const getLogoColumn = function (layout) {\r\n        return layout.layoutPDF.content[0].columns[0];\r\n    };\r\n    const getTitleColumn = function (layout) {\r\n        return layout.layoutPDF.content[0].columns[1];\r\n    };\r\n    const getScaleBarColumn = function (layout) {\r\n        return layout.layoutPDF.content[0].columns[2];\r\n    };\r\n    const getMap = function (layout) {\r\n        return layout.layoutPDF.content[1].table.body[0][0];\r\n    };\r\n\r\n    const options = {\r\n        qrCode: {\r\n            sideLength: 85\r\n        }\r\n    };\r\n\r\n    ctlProto.template = {};\r\n    ctlProto.template[ctlProto.CLASS] = TC.apiLocation + \"TC/templates/tc-ctl-prnmap.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-view'] = TC.apiLocation + \"TC/templates/tc-ctl-prnmap-view.hbs\";\r\n    ctlProto.template[ctlProto.CLASS + '-tools'] = TC.apiLocation + \"TC/templates/tc-ctl-prnmap-tools.hbs\";\r\n\r\n    const hasLegend = function () {\r\n        const self = this;\r\n\r\n        return self.map.workLayers.some(function (layer) {\r\n            return layer.type === TC.Consts.layerType.WMS && layer.getVisibility();\r\n        });\r\n    };\r\n\r\n    const hasLegendToPrint = function () {\r\n        const self = this;\r\n\r\n        return self.map.workLayers.some(function (layer) {\r\n            if (layer.type === TC.Consts.layerType.WMS && layer.getVisibility()) {\r\n                for (var i = 0; i < layer.names.length; i++) {\r\n                    if (layer.isVisibleByScale(layer.names[i])) {\r\n                        return true;\r\n                    }\r\n                }\r\n\r\n                return false;\r\n            }\r\n\r\n            return false;\r\n        });\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        const result = TC.control.MapInfo.prototype.register.call(self, map);\r\n\r\n        // GLS: Añado el flag al mapa para tenerlo en cuenta cuando se establece la función de carga de imágenes\r\n        self.map.mustBeExportable = true;\r\n\r\n        const manageLegendOnZoom = function () {\r\n            var layout = getLayout(self.orientation || ORIENTATION.PORTRAIT, self.format.toString().toUpperCase() || \"A4\");\r\n            layout.reset();\r\n        };\r\n\r\n        const print = function () {\r\n\r\n            self.map.setView(TC.Consts.view.PRINTING);\r\n\r\n            var codeContainer = document.querySelector('.' + self.CLASS + '-qrcode');\r\n            const cb = document.querySelector(`#${self.CLASS}-image-qr-${self.id}`);\r\n            if (!cb.disabled && cb.checked) {\r\n                if (!codeContainer) {\r\n                    codeContainer = document.createElement('div');\r\n                    codeContainer.classList.add(self.CLASS + '-qrcode');\r\n                    self.map.div.appendChild(codeContainer);\r\n                }\r\n\r\n                codeContainer.innerHTML = '';\r\n                self.makeQRCode(codeContainer, options.qrCode.sideLength, options.qrCode.sideLength);\r\n            } else {\r\n                if (codeContainer) {\r\n                    codeContainer.innerHTML = '';\r\n                }\r\n            }\r\n\r\n            const printBtnSelector = '.' + self.CLASS + '-btn';\r\n            self.map.on(TC.Consts.event.STARTLOADING, function () {\r\n                const printBtn = self.div.querySelector(printBtnSelector);\r\n                printBtn.classList.add('disabled');\r\n                printBtn.disabled = true;\r\n            });\r\n\r\n            self.map.on(TC.Consts.event.STOPLOADING, function () {\r\n                const printBtn = self.div.querySelector(printBtnSelector);\r\n                printBtn.classList.remove('disabled');\r\n                printBtn.disabled = false;\r\n            });\r\n\r\n            if (hasLegend.call(self)) {\r\n                // GLS: controlamos si una capa deja de verse por la escala para resetear la leyenda                \r\n                self.map.on(TC.Consts.event.ZOOM, manageLegendOnZoom);\r\n            }\r\n\r\n            const updateCanvas = function (printFormat) {\r\n                if (printFormat) {\r\n                    self.map.div.classList.add(printFormat);\r\n                    /*\r\n                     * Validamos que el resultado en pixels sean valores enteros, si no lo son, redondeamos y establecemos evitando estiramiento del canvas /\r\n                     */\r\n                    var bounding = self.map.div.getBoundingClientRect();\r\n                    if (!Number.isInteger(bounding.width)) {\r\n                        self.map.div.style.width = Math.round(bounding.width) + 'px';\r\n                    }\r\n                    if (!Number.isInteger(bounding.height)) {\r\n                        self.map.div.style.height = Math.round(bounding.height) + 'px';\r\n                    }\r\n\r\n                    const newWidth = `calc(50% - ${bounding.width / 2}px)`;\r\n                    self._viewDiv.querySelector(`.${self.CLASS}-view-left`).style.width = newWidth;\r\n                    self._viewDiv.querySelector(`.${self.CLASS}-view-right`).style.width = newWidth;\r\n                    self._viewDiv.querySelector(`.${self.CLASS}-view-bottom`).style.top = bounding.height + 'px';\r\n\r\n                    self.map.toast(self.getLocaleString('print.advice.title') + ': ' + self.getLocaleString('print.advice.desc'), { type: TC.Consts.msgType.INFO, duration: 7000 });\r\n                }\r\n\r\n                self.map.wrap.map.updateSize();\r\n            };\r\n\r\n            const resetPrinting = function () {\r\n\r\n                var layout = getLayout(self.orientation || ORIENTATION.PORTRAIT, self.format.toString().toUpperCase() || \"A4\");\r\n                layout.reset();\r\n\r\n                if (hasLegend.call(self)) {\r\n                    self.map.off(TC.Consts.event.ZOOM, manageLegendOnZoom);\r\n                }\r\n\r\n                self.map.toastHide(self.getLocaleString('print.advice.title') + ': ' + self.getLocaleString('print.advice.desc'));\r\n\r\n                self.map.div.classList.remove(self.currentFormat, self.CLASS + '-printing');\r\n\r\n                self.map.div.style.removeProperty('width');\r\n                self.map.div.style.removeProperty('height');\r\n\r\n                updateCanvas();\r\n\r\n                self.map.setView(TC.Consts.view.DEFAULT);\r\n\r\n                self._viewDiv.classList.add(TC.Consts.classes.HIDDEN);\r\n            };\r\n\r\n            if (!self._viewDiv) {\r\n                self._viewDiv = TC.Util.getDiv();\r\n                document.body.appendChild(self._viewDiv);\r\n\r\n                self.getRenderedHtml(self.CLASS + '-view', null, function (html) {\r\n                    self._viewDiv.innerHTML = html;\r\n                });\r\n\r\n                self.getRenderedHtml(self.CLASS + '-tools', null, function (html) {\r\n                    self.map.div.insertAdjacentHTML('beforeend', html);\r\n\r\n                    self.map.div.querySelector('.' + self.CLASS + '-btn-close').addEventListener('click', resetPrinting);\r\n\r\n                    self.map.div.querySelector('.' + self.CLASS + '-btn-pdf').addEventListener('click', self.createPdf.bind(self));\r\n                });\r\n            }\r\n\r\n            self.orientation = self.div.querySelector(\"#print-design\").value;\r\n            self.format = self.div.querySelector(\"#print-size\").value;\r\n\r\n            self.currentFormat = self.CLASS + '-' + self.orientation + '-' + self.format;\r\n\r\n            self._viewDiv.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n            self.map.div.classList.add(self.CLASS + \"-printing\");\r\n            updateCanvas(self.currentFormat);\r\n        };\r\n\r\n        self.div.addEventListener('click', TC.EventTarget.listenerBySelector('.' + self.CLASS + '-btn', print));\r\n\r\n        self.div.addEventListener('click', TC.EventTarget.listenerBySelector(`#${self.CLASS}-image-qr-${self.id}`, function (evt) {\r\n            self.generateLink();\r\n        }));\r\n\r\n        self.div.addEventListener('click', TC.EventTarget.listenerBySelector('h2', function (evt) {\r\n            if (!self.registeredListeners) {\r\n                self.generateLink();\r\n            }\r\n            self.registerListeners();\r\n        }));\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return TC.Control.prototype.renderData.call(self, { controlId: self.id }, callback);\r\n    };\r\n\r\n    ctlProto.createPdf = function () {\r\n        var self = this;\r\n\r\n        var loadingCtrl = self.map.getControlsByClass(TC.control.LoadingIndicator)[0];\r\n        var hasWait = loadingCtrl.addWait();\r\n\r\n        TC.loadJS(!window.pdfMake, [TC.Consts.url.PDFMAKE], function () {\r\n            self.canvas = TC.Util.mergeCanvases(self.map.wrap.getCanvas());\r\n\r\n            var layout = getLayout(self.orientation || ORIENTATION.PORTRAIT, self.format.toString().toUpperCase() || \"A4\");\r\n            var printLayout = layout.layoutPDF;\r\n\r\n            const createPDF = function (printLayout) {\r\n                var filename = window.location.host + '_';\r\n                var title = self.div.querySelector('.' + self.CLASS + '-title').value.trim();\r\n\r\n                if (title) {\r\n                    filename += title;\r\n                } else {\r\n                    var currentDate = TC.Util.getFormattedDate(new Date().toString(), true);\r\n                    filename += currentDate;\r\n                }\r\n\r\n                try {\r\n                    pdfMake.createPdf(printLayout).download(filename.replace(/[\\\\\\/:*?\"<>\\|]/g, \"\") + '.pdf');\r\n                } catch (error) {\r\n                    self.map.toast(self.getLocaleString('print.error'), { type: TC.Consts.msgType.ERROR });\r\n                    TC.error(error.message + '  ' + error.stack, TC.Consts.msgErrorMode.EMAIL);\r\n                }\r\n\r\n                loadingCtrl.removeWait(hasWait);\r\n            };\r\n\r\n            const imageErrorHandling = function (imageUrl) {\r\n                TC.error(self.getLocaleString('print.error'));\r\n                TC.error('No se ha podido generar el base64 correspondiente a la imagen: ' + imageUrl, TC.Consts.msgErrorMode.EMAIL, 'Error en la impresión'); //Correo de error\r\n            };\r\n\r\n            const getLogo = function () {\r\n\r\n                const onLogoError = function () {\r\n                    var logoColumn = getLogoColumn(layout);\r\n                    delete logoColumn.image;\r\n                    logoColumn.text = \"\";\r\n                    logoColumn.width = 0;\r\n                    return logoColumn;\r\n                };\r\n\r\n                if (self.options.logo) {\r\n                    return TC.Util.imgToDataUrl(self.options.logo).then(function (result) {\r\n                        const canvas = result.canvas;\r\n                        const dataUrl = result.dataUrl;\r\n\r\n                        var logoColumn = getLogoColumn(layout);\r\n                        //URI: si no se define la anchura en el layout calcula la anchura en función de proporción entre ancho y alto de la imagen y el alto de su posición en el PDF\r\n                        if (!logoColumn.width)\r\n                            logoColumn.width = (canvas.width / canvas.height) * logoColumn.height;\r\n                        logoColumn.image = dataUrl;\r\n                        return logoColumn;\r\n\r\n                    }, function () {\r\n                        imageErrorHandling(self.options.logo);\r\n\r\n                        return onLogoError();\r\n                    });\r\n                } else {\r\n                    return onLogoError();\r\n                }\r\n            };\r\n            const getScaleBar = function () {\r\n                const onError = function () {\r\n                    var scaleBarColumn = getScaleBarColumn(layout);\r\n                    delete scaleBarColumn.image;\r\n                    scaleBarColumn.text = \"\";\r\n                    scaleBarColumn.width = \"auto\";\r\n                    return scaleBarColumn;\r\n                };\r\n\r\n                let scaleCtrl = self.map.getControlsByClass(TC.control.ScaleBar)[0];\r\n                if (scaleCtrl) {\r\n                    var elem = document.getElementsByClassName(\"ol-scale-line-inner\"); // no cogemos el DIV del control ya que contiene los bordes y suman al ancho total\r\n                    var bounding = elem[0].getBoundingClientRect();\r\n                    if (bounding) {\r\n                        var styling = getComputedStyle(elem[0], null);\r\n                        var leftBorder = parseInt(styling.getPropertyValue('border-left-width').replace('px', '')) || 0;\r\n                        var rightBorder = parseInt(styling.getPropertyValue('border-right-width').replace('px', '')) || 0;\r\n\r\n                        var scaleBarColumn = getScaleBarColumn(layout);\r\n\r\n                        scaleBarColumn.table = {\r\n                            widths: [((bounding.width > bounding.height ? bounding.width : bounding.height) - leftBorder - rightBorder) * 0.75], // lo pasamos a pt\r\n                            body: [\r\n                                [{ border: [true, false, true, true], text: scaleCtrl.getText(), fontSize: 10, alignment: 'center' }]\r\n                            ]\r\n                        };\r\n\r\n                        scaleBarColumn.layout = {\r\n                            paddingLeft: function (i, node) { return 0; },\r\n                            paddingRight: function (i, node) { return 0; },\r\n                            paddingTop: function (i, node) { return 0; },\r\n                            paddingBottom: function (i, node) { return 0; }\r\n                        };\r\n\r\n                        return scaleBarColumn;\r\n                    } else {\r\n                        return onError();\r\n                    }\r\n                } else {\r\n                    return onError();\r\n                }\r\n            };\r\n            const getLegend = function () {\r\n                var content = [];\r\n                var layers = self.map.workLayers.filter(function (layer) {\r\n                    return layer.type === TC.Consts.layerType.WMS && layer.getVisibility();\r\n                });\r\n                var legendByGroup = [];\r\n\r\n                var _process = function (value, parentLayer, treeLevel) {\r\n                    if (parentLayer.isVisibleByScale(value.name)) { //Si la capa es visible, la mostramos en la leyenda\r\n                        var src,\r\n                            srcBase64;\r\n\r\n                        //Para las capas cargadas por POST (por ejemplo la búsquedas de Comercio Pamplona)\r\n                        if (parentLayer.options && parentLayer.options.params && parentLayer.options.params.base64LegendSrc) {\r\n                            srcBase64 = parentLayer.options.params.base64LegendSrc;\r\n                        }\r\n                        else if (value.legend) {\r\n                            src = value.legend.src;\r\n                        }\r\n\r\n                        result.push({ src: src, title: value.title, level: treeLevel, srcBase64: srcBase64 });\r\n                    }\r\n                };\r\n                var _traverse = function (o, func, parentLayer, treeLevel) {\r\n                    if (Array.isArray(o)) {\r\n                        for (var i = 0; i < o.length; i++) {\r\n                            _traverse(o[i], func, parentLayer, treeLevel);\r\n                        }\r\n                    } else {\r\n                        if (o && o.hasOwnProperty('children') && o.children.length > 0) {\r\n                            if (o.title && o.name) {\r\n                                result.push({ header: o.title, level: treeLevel });\r\n                            }\r\n                            _traverse(o.children, func, parentLayer, ++treeLevel);\r\n                        }\r\n                    }\r\n\r\n                    if (o && o.hasOwnProperty('children') && o.children.length == 0) {\r\n                        func.apply(this, [o, parentLayer, treeLevel]);\r\n                        treeLevel--;\r\n                    }\r\n                };\r\n                var _getLegendImages = function () {\r\n                    var imagePromises = [];\r\n\r\n                    for (var i = 0; i < legendByGroup.length; i++) {\r\n                        var layers = legendByGroup[i].layers;\r\n\r\n                        for (var j = 0; j < layers.length; j++) {\r\n                            (function (k, l) {\r\n                                var layer = legendByGroup[k].layers[l];\r\n                                var src = layer.src || layer.srcBase64;\r\n\r\n                                if (src) {\r\n\r\n                                    if (!TC.tool || !TC.tool.Proxification) {\r\n                                        TC.syncLoadJS(TC.apiLocation + 'TC/tool/Proxification');\r\n                                    }\r\n\r\n                                    imagePromises.push(new Promise(function (resolve, reject) {\r\n                                        var toolProxification = new TC.tool.Proxification(TC.proxify, { allowedMixedContent: true });\r\n                                        toolProxification.fetchImage(src, { exportable: true }).then(function (img) {\r\n                                            if (img.complete) {\r\n                                                var imageDetail = TC.Util.imgTagToDataUrl(img, 'image/png');\r\n                                                layer.image = { base64: imageDetail.base64, canvas: imageDetail.canvas };\r\n                                            } else {\r\n                                                imageErrorHandling(src);\r\n                                            }\r\n\r\n                                            resolve();\r\n\r\n                                        }, function (error) {\r\n                                            imageErrorHandling(src);\r\n                                            reject(error);\r\n                                        });\r\n                                    }));\r\n                                }\r\n                            })(i, j);\r\n                        }\r\n                    }\r\n\r\n                    return imagePromises;\r\n                };\r\n\r\n                layers.forEach(function (layer) {\r\n                    result = [];\r\n\r\n                    var hideTree = layer.options.hideTree;\r\n\r\n                    layer.tree = null;\r\n                    layer.options.hideTree = true;\r\n\r\n                    _traverse(layer.getTree(), _process, layer, 0);\r\n\r\n                    layer.options.hideTree = hideTree;\r\n\r\n                    if (result.length > 0) {\r\n                        legendByGroup.push({ title: layer.title, layers: result });\r\n                    }\r\n                });\r\n\r\n                return new Promise(function (resolve, reject) {\r\n                    Promise.all(_getLegendImages()).then(function () {\r\n\r\n                        const getGroupTable = function (group, index) {                            \r\n                            var rows = [[{ text: group.title, colSpan: 2, alignment: 'left', fontSize: 11, margin: [0, index > 0 ? 10 : 0, 0, 5] }, {}]];\r\n                            var indentation = 10;\r\n\r\n                            rows = rows.concat(group.layers.filter(function (item) {\r\n                                return item.hasOwnProperty('header') && item.header.trim().toLowerCase() !== group.title.trim().toLowerCase();\r\n                            }).map(function (item) {\r\n                                return [{ text: item.header.trim(), colSpan: 2, alignment: 'left', margin: [indentation * item.level, 0, 0, 3] }, {}];\r\n                            }));\r\n\r\n                            const headerRows = rows.length;\r\n                            var headerItem = null;\r\n                            var itemIndex = null;\r\n\r\n                            const getLayerTable = function (item, index) {\r\n                                if (item.header) {\r\n                                    headerItem = item;\r\n\r\n                                    if (itemIndex) {\r\n                                        itemIndex = null;\r\n                                    }\r\n                                } else {\r\n                                    if (!itemIndex) {\r\n                                        itemIndex = 1;\r\n                                    }\r\n\r\n                                    var position;\r\n                                    if (headerItem) {\r\n                                        var headerIndex = rows.map(function (item) { return item[0].text }).indexOf(headerItem.header);\r\n                                        position = headerIndex + itemIndex++;\r\n                                    }\r\n\r\n                                    if (item.image) {\r\n                                        var imageWidth = item.image.canvas.width / 2;\r\n                                        var imageHeight = (imageWidth * item.image.canvas.height / item.image.canvas.width);\r\n\r\n                                        var data = [{\r\n                                            text: item.title,\r\n                                            fontSize: 9,\r\n                                            width: 'auto',\r\n                                            margin: [indentation * item.level, 0, 0, 2]\r\n                                        }, {\r\n                                            image: item.image.base64,\r\n                                            width: imageWidth,\r\n                                            height: imageHeight,\r\n                                            margin: [indentation * item.level, 0, 0, 2]\r\n                                        }];\r\n\r\n                                        if (position) {\r\n                                            rows.splice(position, 0, data);\r\n                                        } else {\r\n                                            rows.push(data);\r\n                                        }\r\n\r\n                                    } else {\r\n                                        var data = [{\r\n                                            text: item.title,\r\n                                            fontSize: 9,\r\n                                            colSpan: 2,\r\n                                            margin: [indentation * item.level, 0, 0, 2]\r\n                                        }, {}];\r\n\r\n                                        if (position) {\r\n                                            rows.splice(position, 0, data);\r\n                                        } else {\r\n                                            rows.push(data);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            };\r\n\r\n                            group.layers.forEach(getLayerTable);\r\n\r\n                            content.push({\r\n                                layout: 'noBorders',\r\n                                table: {\r\n                                    dontBreakRows: true,\r\n                                    keepWithHeaderRows: 1,\r\n                                    headerRows: headerRows,\r\n                                    body: rows\r\n                                }\r\n                            });\r\n                        };\r\n\r\n                        legendByGroup.map(function (group, index) {\r\n                            return {\r\n                                groupIndex: index,\r\n                                height: group.layers.filter(function (item) {\r\n                                    return item.image && item.image.canvas;\r\n                                }).reduce(function (prev, current, index, vector) {\r\n                                    return prev + vector[index].image.canvas.height;\r\n                                }, 0)\r\n                            }\r\n                        }).sort(function (a, b) {\r\n                            if (a.height > b.height) {\r\n                                return 1;\r\n                            }\r\n                            if (a.height < b.height) {\r\n                                return -1;\r\n                            }\r\n                            return 0;\r\n                        }).forEach(function (groupWithHeight, index) {\r\n                            getGroupTable(legendByGroup[groupWithHeight.groupIndex], index)\r\n                        });\r\n\r\n                        resolve(content);\r\n\r\n                    }, function () {\r\n                        reject([]);\r\n                    });\r\n                });\r\n            };\r\n            const drawQR = function () {\r\n                // GLS: añadimos el QR\r\n                //QR\r\n                const cb = document.querySelector(`#${self.CLASS}-image-qr-${self.id}`);\r\n                if (!cb.disabled && cb.checked) {\r\n                    const qrTarget = document.querySelector('.' + self.CLASS + '-qrcode');\r\n                    qrTarget.innerHTML = '';\r\n                    return self.makeQRCode(qrTarget, options.qrCode.sideLength, options.qrCode.sideLength).then(function (qrCodeBase64) {\r\n                        if (qrCodeBase64) {\r\n                            return TC.Util.addToCanvas(self.canvas, qrCodeBase64, { x: self.canvas.width - options.qrCode.sideLength, y: self.canvas.height - options.qrCode.sideLength }, {width: options.qrCode.sideLength, height: options.qrCode.sideLength }).then(function (mapCanvas) {\r\n                                return mapCanvas;\r\n                            });\r\n                        } else {                            \r\n                            return self.canvas;\r\n                        }\r\n                    });\r\n                } else {\r\n                    return self.canvas;\r\n                }\r\n            };\r\n\r\n            const basics = [getLogo, function () {\r\n                var titleColumn = getTitleColumn(layout);\r\n                titleColumn.text = self.div.querySelector('.' + self.CLASS + '-title').value.trim();\r\n                return titleColumn;\r\n            }, getScaleBar, drawQR];\r\n\r\n            Promise.all(basics.map(function (fn) {\r\n                return fn();\r\n            })).then(function (basicsDone) {\r\n\r\n                if (basicsDone[2].table) { // GLS: ajustamos el ancho del título para arrinconar la escala\r\n                    const totalWidth = layout.layoutPDF.pageSize.width - (layout.layoutPDF.pageMargins[0] + layout.layoutPDF.pageMargins[2]);\r\n                    const logoWidth = layout.layoutPDF.content[0].columns[0].width || 0;\r\n                    const scaleBarColumn = layout.layoutPDF.content[0].columns[2];\r\n                    const scaleBarWidth = scaleBarColumn.table.widths[0] + 2;\r\n                    const titleColumn = layout.layoutPDF.content[0].columns[1];\r\n                    titleColumn.width = totalWidth - logoWidth - scaleBarWidth;\r\n                    if (logoWidth === 0) {\r\n                        // Si no hay logo reajustamos texto de título y margen de barra de escala\r\n                        titleColumn.alignment = \"left\";\r\n                        scaleBarColumn.margin[3] = 2;\r\n                    }\r\n                }\r\n\r\n                var mapPlace = getMap(layout);\r\n                var canvas = basicsDone[3] || self.canvas;\r\n\r\n                mapPlace.image = canvas.toDataURL();\r\n\r\n                if (hasLegendToPrint.call(self) && // GLS: validamos que haya capas visibles por escala \r\n                    printLayout.content.length == 2) { // GLS: es la primera descarga o hemos resetado la leyenda por algún zoom por lo que no tenemos la leyenda en el layout\r\n\r\n                    const title = self.div.querySelector('.' + self.CLASS + '-title').value.trim();\r\n                    printLayout.content.push({\r\n                        pageBreak: 'before',\r\n                        pageOrientation: (self.options.legend && self.options.legend.orientation) || ORIENTATION.PORTRAIT,\r\n                        text: title.length > 0 ? title : '',\r\n                        fontSize: 14,\r\n                        margin: [0, 20, 0, 10]\r\n                    });\r\n\r\n                    getLegend().then(function (content) {\r\n                        printLayout.content = printLayout.content.concat(content);\r\n                        createPDF(printLayout);\r\n                    });\r\n                } else {\r\n                    createPDF(printLayout);\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.manageMaxLengthExceed = function (maxLengthExceed) {\r\n        const self = this;\r\n        const alertElm = self.div.querySelector('.' + self.CLASS + '-alert');\r\n        const checkboxQR = document.querySelector(`#${self.CLASS}-image-qr-${self.id}`);\r\n\r\n        checkboxQR.disabled = maxLengthExceed.qr;\r\n\r\n        if (checkboxQR.checked) {\r\n            alertElm.classList.toggle(TC.Consts.classes.HIDDEN, !maxLengthExceed.qr);\r\n        } else {\r\n            alertElm.classList.add(TC.Consts.classes.HIDDEN);\r\n        }\r\n    };\r\n\r\n    ctlProto.generateLink = async function () {\r\n        const self = this;\r\n        const checkbox = self.div.querySelector(`.${self.CLASS}-div input[id|=\"${self.CLASS}-image-qr-${self.id}\"]`);\r\n        const label = self.div.querySelector(`label[for=\"${checkbox.id}\"]`);\r\n        checkbox.disabled = true;\r\n        label.classList.add(TC.Consts.classes.LOADING);\r\n        const result = await TC.control.MapInfo.prototype.generateLink.call(self);\r\n        label.classList.remove(TC.Consts.classes.LOADING);\r\n        return result;\r\n    };\r\n\r\n})();"]}