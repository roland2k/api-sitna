{"version":3,"sources":["control/FileImport.js"],"names":["TC","Control","syncLoadJS","apiLocation","control","FileImport","apply","this","arguments","Array","isArray","options","formats","Consts","format","KML","KMZ","GML","GML2","GEOJSON","JSON","WKT","GPKG","GPX","layers","apiAttribution","mainDataAttribution","dataAttributions","exportsState","inherit","ctlProto","prototype","CLASS","template","1","container","depth0","helpers","partials","data","stack1","lookupProperty","parent","propertyName","Object","hasOwnProperty","call","nullContext","name","hash","fn","program","inverse","noop","loc","start","line","column","end","escapeExpression","lambda","2","compiler","main","alias1","alias2","useData","register","map","self","result","enableDragAndDrop","wrap","on","event","FEATURESIMPORT","e","fileName","target","dropTarget","features","gpxPattern","toLowerCase","indexOf","length","div","addLayer","id","getUID","title","owner","type","layerType","VECTOR","then","layer","push","flatten","prev","cur","concat","projectGeom","feature","geom","geometry","coordinates","Point","MultiPoint","Polyline","MultiPolyline","Polygon","reduce","MultiPolygon","every","coord","Math","abs","setCoords","Util","reproject","crs","i","len","projectedFeature","addFeature","setTimeout","zoomToFeatures","FEATURESIMPORTERROR","dictKey","file","substr","error","getLocaleString","msgErrorMode","TOAST","reader","FileReader","onload","EMAIL","readAsText","FEATURESIMPORTPARTIAL","toast","table","reason","msgType","ERROR","FEATUREREMOVE","removeLayer","LAYERREMOVE","idx","splice","render","_set1stRenderPromise","renderData","fileInput","querySelector","addEventListener","CLICK","form","document","createElement","parentElement","insertBefore","appendChild","reset","insertAdjacentElement","removeChild","passive","console","log","loadFiles","files","exportState","state","importState","layerPromises","forEach","layerData","Promise","all"],"mappings":"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","sourcesContent":["if (!TC.Control) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Control');\r\n}\r\n\r\nTC.control.FileImport = function () {\r\n    var self = this;\r\n\r\n    TC.Control.apply(self, arguments);\r\n\r\n    if (Array.isArray(self.options.formats)) {\r\n        self.formats = self.options.formats;\r\n    }\r\n    else {\r\n        self.formats = [\r\n            TC.Consts.format.KML,\r\n            TC.Consts.format.KMZ,\r\n            TC.Consts.format.GML,\r\n            TC.Consts.format.GML2,\r\n            TC.Consts.format.GEOJSON,\r\n            TC.Consts.format.JSON,\r\n            TC.Consts.format.WKT,            \r\n            'ZIP',\r\n            TC.Consts.format.GPKG,            \r\n            //ahora la lista de ficheros que componen un shape\r\n            'shp', 'dbf', 'prj', 'cst', 'cpg',\r\n            TC.Consts.format.GPX\r\n        ];\r\n    }\r\n    \r\n    self.layers = [];\r\n\r\n    self.apiAttribution = '';\r\n    self.mainDataAttribution = '';\r\n    self.dataAttributions = [];\r\n\r\n    self.exportsState = true;\r\n};\r\n\r\nTC.inherit(TC.control.FileImport, TC.Control);\r\n\r\n(function () {\r\n    var ctlProto = TC.control.FileImport.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl-file';\r\n\r\n    ctlProto.template = TC.apiLocation + \"TC/templates/tc-ctl-file.hbs\";\r\n\r\n    ctlProto.register = function (map) {\r\n        var self = this;\r\n        const result = TC.Control.prototype.register.call(self, map);\r\n\r\n        if (self.options.enableDragAndDrop) {\r\n            map.wrap.enableDragAndDrop(self.options);\r\n        }\r\n\r\n        map\r\n            .on(TC.Consts.event.FEATURESIMPORT, function (e) {\r\n                const fileName = e.fileName;\r\n                const target = e.dropTarget;\r\n                const features = e.features;\r\n                // Ignoramos los GPX (se supone que los gestionar√° Geolocation)\r\n                var gpxPattern = '.' + TC.Consts.format.GPX.toLowerCase();\r\n                if (fileName.toLowerCase().indexOf(gpxPattern) === fileName.length - gpxPattern.length || target !== self.map.div && target !== self) {\r\n                    return;\r\n                }\r\n                \r\n                map.addLayer({\r\n                    id: self.getUID(),\r\n                    title: fileName,\r\n                    owner: self,\r\n                    type: TC.Consts.layerType.VECTOR\r\n                }).then(function (layer) {\r\n                    self.layers.push(layer);\r\n                    var geogCrs = 'EPSG:4326';\r\n                    const flatten = function (prev, cur) {\r\n                        return prev.concat(cur);\r\n                    };\r\n                    var projectGeom = function (feature) {\r\n                        var geom = feature.geometry;\r\n                        if (geom) {\r\n                            var coordinates;\r\n                            switch (true) {\r\n                                case TC.feature.Point && feature instanceof TC.feature.Point:\r\n                                    coordinates = [geom];\r\n                                    break;\r\n                                case TC.feature.MultiPoint && feature instanceof TC.feature.MultiPoint:\r\n                                case TC.feature.Polyline && feature instanceof TC.feature.Polyline:\r\n                                    coordinates = geom;\r\n                                    break;\r\n                                case TC.feature.MultiPolyline && feature instanceof TC.feature.MultiPolyline:\r\n                                case TC.feature.Polygon && feature instanceof TC.feature.Polygon:\r\n                                    coordinates = geom.reduce(flatten);\r\n                                    break;\r\n                                case TC.feature.MultiPolygon && feature instanceof TC.feature.MultiPolygon:\r\n                                    coordinates = geom.reduce(flatten).reduce(flatten);\r\n                                    break;\r\n                                default:\r\n                                    break;\r\n                            }\r\n                            if (coordinates && coordinates.every(function (coord) {\r\n                                return Math.abs(coord[0]) <= 180 && Math.abs(coord[1]) <= 90; // Parecen geogr√°ficas\r\n                            })) {\r\n                                feature.setCoords(TC.Util.reproject(geom, geogCrs, self.map.crs));\r\n                            }\r\n                        }\r\n\r\n                        return feature;\r\n                    };\r\n\r\n                    for (var i = 0, len = features.length; i < len; i++) {\r\n                        var projectedFeature = projectGeom(features[i]);\r\n                        layer.addFeature(projectedFeature);\r\n                    }\r\n                    setTimeout(function () {\r\n                        map.zoomToFeatures(layer.features);\r\n                    }, 100);\r\n                });\r\n            })\r\n            .on(TC.Consts.event.FEATURESIMPORTERROR, function (e) {\r\n                var dictKey;\r\n                var fileName = e.file.name;\r\n                if (fileName.toLowerCase().substr(fileName.length - 4) === '.kmz') {\r\n                    dictKey = 'fileImport.error.reasonKmz';\r\n                }\r\n                else {\r\n                    dictKey = 'fileImport.error.reasonUnknown';\r\n                }\r\n\r\n                TC.error(self.getLocaleString(dictKey, { fileName: fileName }), TC.Consts.msgErrorMode.TOAST);\r\n\r\n                var reader = new FileReader();\r\n                reader.onload = function (event) {\r\n                    TC.error(\"Nombre del archivo: \" + fileName + \" \\n Contenido del archivo: \\n\\n\" + event.target.result, TC.Consts.msgErrorMode.EMAIL, \"Error en la subida de un archivo\");\r\n                };\r\n                reader.readAsText(e.file);\r\n            })\r\n            .on(TC.Consts.event.FEATURESIMPORTPARTIAL, function (e) {\r\n                self.map.toast(self.getLocaleString(\"fileImport.partial.problem\", { fileName: e.file.name, table: e.table, reason: e.reason }), { type: TC.Consts.msgType.ERROR })\r\n            })\r\n            .on(TC.Consts.event.FEATUREREMOVE, function (e) {\r\n                // Eliminamos la capa cuando ya no quedan features en ella\r\n                const layer = e.layer;\r\n                if (self.layers.indexOf(layer) >= 0) {\r\n                    if (!layer.features.length) {\r\n                        self.map.removeLayer(layer);\r\n                    }\r\n                }\r\n            })\r\n            .on(TC.Consts.event.LAYERREMOVE, function (e) {\r\n                const idx = self.layers.indexOf(e.layer);\r\n                if (idx >= 0) {\r\n                    self.layers.splice(idx, 1);\r\n                }\r\n            });\r\n\r\n        return result;\r\n    };\r\n\r\n    ctlProto.render = function () {\r\n        const self = this;\r\n        return self._set1stRenderPromise(self.renderData({ formats: self.formats }, function () {            \r\n            const fileInput = self.div.querySelector('input[type=file]');\r\n            // GLS: Eliminamos el archivo subido, sin ello no podemos subir el mismo archivo seguido varias veces\r\n            fileInput.addEventListener(TC.Consts.event.CLICK, function (e) {\r\n                const input = this;\r\n                // Envolvemos el input en un form\r\n                const form = document.createElement('form');\r\n                const parent = input.parentElement;\r\n                parent.insertBefore(form, input);\r\n                form.appendChild(input);\r\n                form.reset();\r\n                // Desenvolvemos el input del form\r\n                form.insertAdjacentElement('afterend', input);\r\n                parent.removeChild(form);\r\n            }, { passive: true });\r\n            fileInput.addEventListener('change', function (e) {\r\n                if (self.map) {\r\n                    console.log('salta el change');\r\n                    self.map.wrap.loadFiles(e.target.files, { control: self });\r\n                }\r\n            });\r\n        }));\r\n    };\r\n\r\n    ctlProto.exportState = function () {\r\n        const self = this;\r\n        if (self.exportsState && self.layers.length) {\r\n            return {\r\n                id: self.id,\r\n                layers: self.layers.map(function (layer) {\r\n                    return {\r\n                        title: layer.title,\r\n                        state: layer.exportState()\r\n                    };\r\n                })\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importState = function (state) {\r\n        const self = this;\r\n        if (self.map) {\r\n            const layerPromises = [];\r\n            state.layers.forEach(function (layerData) {\r\n                layerPromises.push(self.map.addLayer({\r\n                    id: self.getUID(),\r\n                    title: layerData.title,\r\n                    owner: self,\r\n                    type: TC.Consts.layerType.VECTOR\r\n                }));\r\n            });\r\n\r\n            Promise.all(layerPromises).then(function (layers) {\r\n                for (var i = 0, len = layers.length; i < len; i++) {\r\n                    const layer = layers[i];\r\n                    layer.importState(state.layers[i].state);\r\n                    self.layers.push(layer);\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n})();\r\n"]}