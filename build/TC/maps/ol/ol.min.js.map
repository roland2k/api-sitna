{"version":3,"sources":["ol/ol.js"],"names":["root","factory","define","amd","exports","module","require","ol","this","Math","hypot","y","length","arguments","i","Infinity","sqrt","lastTime","vendors","x","window","requestAnimationFrame","cancelAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","max","id","setTimeout","clearTimeout","DRAGENTER","events","EventType","DRAGOVER","DROP","CHANGE","SINGLECLICK","MapBrowserEventType","POINTERMOVE","MOVEEND","MapEventType","POSTRENDER","POSTCOMPOSE","render","ADDFEATURE","source","VectorEventType","REMOVEFEATURE","CLEAR","TILELOADSTART","TileEventType","TILELOADEND","TILELOADERROR","hitTolerance","TC","Util","detectMouse","cssUrl","url","substr","lastIndexOf","format","KMLCustom","syncLoadJS","apiLocation","GPXCustom","View","prototype","getValueForResolutionFunction","opt_power","power","maxResolution","maxResolution_","minResolution","minResolution_","log","resolution","value","min","detectMobile","Overlay","updateRenderedPosition","pixel","mapSize","style","offset","getOffset","positioning","getPositioning","setVisible","offsetX","offsetY","OverlayPositioning","BOTTOM_RIGHT","CENTER_RIGHT","TOP_RIGHT","rendered","left_","left","right","round","devicePixelRatio","right_","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","offsetWidth","BOTTOM_LEFT","top_","top","bottom","bottom_","CENTER_LEFT","offsetHeight","control","OverviewMap","_validateExtent_","validateExtent_","_wrap","parent","options","alwaysCentered","recenter_","_resetExtent_","resetExtent_","call","wrap","is3D","ovview","ovmap_","getView","extent","calculateExtent","feature","get3DCameraLayer","getSource","getFeatures","coordinates","getGeometry","getCoordinates","coord1","coord2","containsCoordinate","buffer","fit","GML3CRS84","GML3","srsName","inherit","GML2CRS84","GML2","gmlNamespace","gml32Namespace","GMLBase","MULTIPOINT_PARSERS_","MULTILINESTRING_PARSERS_","MULTIPOLYGON_PARSERS_","POINTMEMBER_PARSERS_","LINESTRINGMEMBER_PARSERS_","POLYGONMEMBER_PARSERS_","RING_PARSERS","GEOMETRY_FLAT_COORDINATES_PARSERS","FLAT_LINEAR_RINGS_PARSERS","GEOMETRY_PARSERS","MULTICURVE_PARSERS_","MULTISURFACE_PARSERS_","CURVEMEMBER_PARSERS_","SURFACEMEMBER_PARSERS_","SURFACE_PARSERS_","CURVE_PARSERS_","ENVELOPE_PARSERS_","PATCHES_PARSERS_","SEGMENTS_PARSERS_","readFeaturesInternal","node","objectStack","localName","features","gmlnsCollectionParser","FEATURE_COLLECTION_PARSERS","namespace","xml","makeArrayPusher","namespaceURI","pushParseAndPop","context","featureType","featureNS","prefix","defaultPrefix","childNodes","ii","child","nodeType","ft","nodeName","split","pop","indexOf","key","count","uri","candidate","push","ns","parsersNS","featureTypes","Array","isArray","p","parsers","readFeatureElement","makeReplacer","undefined","proj","proj4","register","get","metersPerUnit_","EPSG4326","METERS_PER_UNIT","oldGet","projectionLike","trim","loadProjDef","crs","sync","readGeometryElement","firstElementChild","getAttribute","Error","dataProjection","geometry","Feature","transformWithOptions","ONLY_WHITESPACE_RE","readFeatureElementInternal","asFeature","geometryName","values","n","nextElementSibling","firstChild","getAllTextContent","test","len","attributes","_content_","attName","name","setGeometryName","fid","getAttributeNS","setId","interaction","DragAndDrop","tryReadFeatures_","text","readFeatures","e","some","f","getRGBA","color","opacity","result","asArray","slice","getResolutionOptions","mapWrap","layer","view","map","prevRes","getResolution","pms","projection","getProjection","center","getCenter","enableRotation","maxExtent","layerForResolutions","type","Consts","layerType","VECTOR","getBaseLayer","maxRes","minRes","res","getResolutions","minResIx","maxResIx","resolutions","Map","setMap","self","initialExtent","proj4Obj","crsCode","projOptions","units","oProj","global","equivalentProjections","code","Projection","addEquivalentProjections","axisOrientation","interactions","defaults","constrainResolution","viewOptions","extentForResolution","rect","div","getBoundingClientRect","dx","dy","width","height","target","controls","pixelRatio","getEventPixel","event","viewportPosition","viewport_","eventPosition","changedTouches","clientX","pointerEvent","clientY","_promise","Promise","resolve","manageSize","one","MAPLOAD","updateSize","on","PRINTING","workLayers","forEach","wl","_noFeatureClicked","featuresInLayers","forEachFeatureAtPixel","showsPopup","trigger","FEATURECLICK","NOFEATURECLICK","addMoveEndListener","ZOOM","hasListener","once","BEFOREZOOM","onChangeView","un","limitZoomLevels","setView","BEFOREBASELAYERCHANGE","evt","on3DView","newLayer","oldResolutions","oldLayer","modelLayer","BASELAYERCHANGE","olMapViewport","getViewport","addEventListener","MOUSEMOVE","hit","activeControl","isExclusive","selectable","FEATUREOVER","cursor","getMetersPerUnit","extentInDegrees","getUnits","Units","DEGREES","getMetersPerDegree","getExtent","getUnitRatio","defaultCrs","Cfg","defaultProj","newProj","normalizeProjection","units_","setProjection","baseLayer","transformExtent","unitRatio","oldView","minZoom","getMinZoom","maxZoom","getMaxZoom","getMinResolution","getMaxResolution","transformFactor","Number","POSITIVE_INFINITY","transform","newView","nearest","insertLayer","olLayer","idx","layers","getLayers","alreadyExists","getLength","item","remove","insertAt","Tile","setMaxResolution","setMinResolution","loadingTileCount","beforeTileLoadHandler","state","Layer","LOADING","BEFORELAYERUPDATE","_loadingTileCount","isRaster","$events","BEFORETILELOAD","TILELOAD","IDLE","LAYERUPDATE","removeLayer","getLayerCount","getLayerGroup","indexOfFirstVector","l","Vector","getLayerIndex","elm","setLayerIndex","index","ix","getArray","setBaseLayer","reject","setLayer","curBl","Image","WMTS","layerProjectionOptions","oldCrs","getCode","getControls","ctl","ZoomSlider","initSlider_","currentResolution","newRes","sort","a","b","reduce","prev","abs","maxResolutionError","isLoaded","animate","duration","ZOOM_ANIMATION_DURATION","bind","setResolution","setExtent","applyExtent","getResolutionForExtent","constrainedResolution","EXTENT_TOLERANCE","setCenter","_setExtentPromise","finally","_timeout","getSize","getLayer","then","apply","factor","getWidth","getHeight","setPromise","coords","opts","getMap","olMap","setRotation","rotation","getRotation","getCoordinateFromPixel","xy","getPixelFromCoordinate","coord","synchronous","isNative","isGeo","addPopup","popupCtl","draggable","loadJS","Draggabilly","DRAGGABILLY","popupDiv","getDiv","$","$popupDiv","classList","add","Popup","CLASS","contentDiv","appendChild","menuDiv","popup","addOverlay","container","parentElement","classes","DRAGGABLE","matches","stopPropagation","passive","drag","not","handleEvent","notSelector","isException","pointer","bcr","clientWidth","pageX","clientHeight","pageY","_pointerCancel","setDragging","_currentOffset","_previousContainerPosition","setPosition","setOffset","coordDelta","position","getPosition","containerRect","mouseMoveHandler","viewport","removeEventListener","hidePopup","currentFeature","VISIBLE","bounding","canvas","idealWidth","idealHeight","isInteger","newSize","setSize","getFormatFromName","KML","mimeType","KMZ","showPointNames","GPX","GEOJSON","JSON","GeoJSON","GML32","GML","TOPOJSON","TopoJSON","WKT","exportFeatures","nativeStyle","createNativeStyle","styles","olFeatures","clone","id_","getStyle","setStyle","getNativeFeatureStyle","getText","setProperties","geom","Point","shape","getImage","RegularShape","diameter","getRadius","getStroke","document","createElement","vectorContext","toContext","getContext","size","setText","drawGeometry","newFeature","getProperties","Style","image","Icon","src","toDataURL","pointsToAdd","point","LineString","getCoordinateAt","Polygon","getInteriorPoint","MultiLineString","lineStrings","getLineStrings","maxLength","line","cur","MultiPolygon","polygons","getPolygons","maxArea","polygon","getArea","crossOrigin","concat","hasZ","getGeometryStride","temp","values_","keysToChange","newKey","replace","featuresNode","writeFeaturesNode","featureProjection","querySelectorAll","removeAttribute","featureCollectionNode","createElementNS","setAttributeNS","schemaLocation","outerHTML","setGeometry","writeFeatures","isFileDrag","dataTransfer","types","handleDragEnter","preventDefault","handleDragExit","enableDragAndDrop","ddOptions","formatConstructors","splitCollection","dropTarget","zipFiles","ddInteraction","featurePromises","getId","getUID","createFeature","all","li","getLoadingIndicator","removeWait","_featureImportWaitId","featuresWithGeometry","filter","FEATURESIMPORT","fileName","file","failed","total","File","zipName","FEATURESIMPORTERROR","map_","addInteraction","dropArea","originalFnc","handleResult_","zipUncompressed","getFileData","arrayBuffer","fr","FileReader","onload","Uint8Array","onerror","readAsArrayBuffer","getFileText","readAsText","async","_self","match","JSZip","zip","zipContent","loadAsync","decodeFileName","bytes","iconv","decode","err","zipFileName","shpFiles","Object","keys","files","dir","data","newFile","reader","console","shp","shapeBaseNameMatch","exec","shapeBaseName","shapes","shpFile","RegExp","prj","encoding","dbf","combine","parseShp","parseDbf","stringify","manageError","error","msgErrorMode","CONSOLE","array","geopackage","open","myPackage","vectorLayers","getFeatureTables","numTables","finished","notLoaded","warnings","manageLoad","off","FEATURESIMPORTPARTIAL","table","reason","contentsDao","queryForId","srs_id","obj","iterateGeoJSONFeaturesFromTable","arr","results","jsonObj","loadFile","ex","substring","extension","hasOwnProperty","timer","collection","handleDrop","addWait","dropListenKeys_","listen","body","buttons","ddEnabled","loadFiles","getInteractions","currentTarget","undoTarget","LOAD","linkTo","thisView","thatView","getVisibility","getVisible","setVisibility","visible","r","METERS","metersPerDegree","createPathFromGeometry","Path2D","p0","moveTo","lineTo","closePath","execCanvasOperation","operationName","precomposeHandler","postcomposeHandler","precomposeHandlerName","postcomposeHandlerName","PRECOMPOSE","clip","isFunction","frameState","ctx","save","restore","stroke","strokeWidth","lineWidth","strokeColor","strokeStyle","Raster","WmsParser","WMSCapabilities","WmtsParser","WMTSCapabilities","addCommonEvents","LAYERVISIBILITY","getGetMapUrl","getServiceType","WMS","dcpType","capabilities","Capability","Request","GetMap","DCPType","HTTP","Get","OnlineResource","OperationsMetadata","GetTile","DCP","href","fragment","createDocumentFragment","textarea","innerHTML","textContent","getInfoFormats","c","GetFeatureInfo","Format","infoFormatPreference","getWMTSLayer","Contents","j","TileMatrixSetLink","matrixSet","TileMatrixSet","getTileMatrix","tms","Identifier","TileMatrix","getScaleDenominators","ScaleDenominator","MinScaleDenominator","MaxScaleDenominator","getName","children","getLayerNodes","childDenominators","getAttribution","ServiceProvider","ProviderName","site","ProviderSite","ServiceIdentification","Title","Service","getInfo","layerNodes","getAllLayerNodes","compareNames","title","Abstract","legend","_traverse","o","func","getLegend","MetadataURL","metadata","md","queryable","layerName","names","abstract","Metadata","jj","getServiceTitle","getRootLayerNode","ignorePrefix","Name","getIdentifier","_layerList","getNodeArray","normalizeLayerNode","normalizeCapabilities","LegendURL","isCompatible","_isCompatible","nodes","inCrs","itemCRS","CRS","SRS","crsList","isIn","CRSCodesEqual","SupportedCRS","getCompatibleCRS","crsLists","getNodePath","otherCrsLists","every","layerNames","tileMatrixSets","tmsl","getCompatibleLayers","_recursiveFn","crsToCheck","tmsList","tmsIdentifier","layerList","tmsLinkList","k","kk","getCompatibleMatrixSets","tmsLink","setWMTSUrl","urls","getUrls","urlPattern","createWMSLayer","params","ImageWMS","ratio","imageRatio","imageLoadFunction","getImageLoad","tile","layerOptions","LAYERS","method","createWmtsSource","sourceOptions","optionsFromCapabilities","requestEncoding","location","protocol","setTileLoadFunction","prevFn","matrix","getLimitedMatrixSet","matrixIndex","createWMTSLayer","getParams","setParams","updateParams","setMatrixSet","newSource","extend","newResolutions","newMaxResolution","newMinResolution","setSource","ts","setResolutions","resolutions_","tileGrid","getLayerNodeByName","BoundingBox","mapCrs","getCRS","mapCrsCode","getCRSCode","MAX_VALUE","MIN_VALUE","firstBbox","crsBbox","bbox","ext","bboxCrs","topLeft","reproject","bottomLeft","topRight","bottomRight","reloadSource","refresh","Geometry","getNearest","candidates","getClosestPoint","setScaleFunction","imageStyle","iconWidth","olFeat","setScaleForWidth","imgWidth","markerWidth","setScale","imageSize","img","naturalWidth","getSrc","getStyleValue","property","m","isPoint","isLine","isPolygon","nativeStyleOptions","getType","getData","styleOptions","cluster","Stroke","lineDash","fill","Fill","fillColor","fillOpacity","circleOptions","radius","isNaN","Circle","label","createNativeTextStyle","marker","anchor","anchorXUnits","anchorYUnits","styleObj","textOptions","overflow","fontSize","font","angle","PI","fontColor","labelOutlineColor","labelOutlineWidth","labelOffset","Text","toHexString","number","toString","getHexColorFromArray","colorArray","getStyleFromNative","olStyle","olGeom","olGeomType","GeometryType","POINT","MULTI_POINT","setImage","getColor","getFill","getAnchor","getLineDash","createVectorSource","createStyles","WFS","listenerKey","getState","Observable","unByKey","addFeatures","import","oldFeatures","vectorOptions","internalLoader","usesGenericLoader","proxify","toLowerCase","getMimeTypeFromUrl","loader","featureloader","xhr","getFormat","fs","newData","LAYERERROR","message","outputFormat","gmlFormat","sOrigin","serviceUrl","manageResponse","response","feats","triggerLayerUpdate","onFeaturesAdd","FEATURESADD","XMLDocument","querySelector","makeAjaxCall","onlyHits","ajaxOptions","version","isSpatial","LogicalNary","conditions","Spatial","properties","URL_MAX_LENGTH","WFSQueryBuilder","maxFeatures","service","request","srsname","featurePrefix","assign","resultType","Bbox","BBOX","responseType","XML","contentType","ajax","getCapabilitiesPromise","_capabilities","numMaxFeatures","Operations","GetFeature","CountDefault","DefaultValue","firstNode","tagName","numOfFeaturesFounded","parseInt","WFSErrors","MAX_NUM_FEATURES","limit","founded","totalFeatures","catch","_requestUrl","_tcLayer","markerStyle","Cluster","distance","start","now","pCoords","cCoords","step","fromCoords","toCoords","fraction","getCurrentCoordinates","CLUSTER_ANIMATION_DURATION","clusterCache","splice","elmCoords","cElm","s","addFeatureToLayer","feat","addFn","addPoint","Polyline","addPolyline","addPolygon","addMultiPolygon","MultiPolyline","addMultiPolyline","addFeature","constructor","FEATUREREMOVE","VECTORUPDATE","FEATURESCLEAR","dynamicStyle","styleFunction","isDynamicStyle","prop","setStyles","createVectorLayer","declutter","commit","getFeatureById","removeFeature","clearFeatures","clear","setFeatureVisibility","fillOptions","strokeOptions","displayNoneStyle","_originalStyle","findFeature","getGetFeatureUrl","sendTransaction","inserts","updates","deletes","getNativeFeature","olInserts","olUpdates","olDeletes","transaction","writeTransaction","er","getElementsByTagNameNS","errorObj","texts","transactionResponse","readTransactionResponse","setDraggable","onend","onstart","olObjects","interactionOptions","Collection","Translate","removeInteraction","detectIE","_handlerDraggablePointerMove","getFeaturesInExtent","tolerance","featuresInExtent","leftCorner","rightCorner","coordinate","Click","_trigger","featureCount","CLICK","activate","deactivate","ScaleBar","updateElement_","ScaleLine","renderedHTML_","NavBar","zCtl","Zoom","zsCtl","viewState","requestSliderSize","setTarget","addControl","button","display","setAttribute","getLocaleString","zoomSlider","renderPromise","sliderInitialized_","setThumbPosition_","NavBarHome","z2eCtl","ZoomToExtent","tipLabel","homeBtn","setInitialExtent","Coordinates","_coordsTrigger","coordsToClick","view3D","onMouseMove","getEventCoordinate","latLon","reverse","update","Geolocation","_snapTrigger","dragging","initSnap","_postcomposeTrigger","duringTrackSnap","getTrackingLine","layerTracking","hasCoordinates","showElevationMarker","d","ResultsPanel","layerTrack","elevationChartData","hideElevationMarker","addWaypoint","waypoint","ele","time","addPosition","heading","speed","accuracy","altitudeAccuracy","altitude","last","appendCoordinate","lx","ly","storage","setSessionLocalValue","Const","LocalStorageKey","TRACKINGTEMP","formattedToStorage","Event","STATEUPDATED","moving","positionChangehandler","geoposition","setTracking","layerGPS","position_","longitude","latitude","projectedPosition","deltaMean","POSITIONCHANGE","pd","radToDeg","addCircle","accuracyCircle","geopositionTracking","firstPosition","trackCenterButton","zoomToFeatures","getTrackInfoPanel","infoPanel","isVisible","doVisible","isMinimized","maximize","controlContainer","getControlsByClass","addElement","POSITION","LEFT","htmlElement","HIDDEN","tracking","nativeTrackingFeature","sessionwaypoint","sessionTracking","parser","storageCRS","tcFeature","currentPositionWaiting","currentPositionTrk","getCurrentPositionInterval","getCurrentPositionRequest","errorTimeout","toast","enableHighAccuracy","timeout","setInterval","getCurrentPosition","errorCallback","navigator","geolocation","clearInterval","watchPosition","onGeolocateError","TIMEOUT","maximumAge","msgType","WARNING","track","activateButton","deactivateButton","watch","clearWatch","activateSnapping","deactivateSnapping","snapInfo","removeOverlay","snapInfoElement","snapLine","attachedDTD","setFillStrokeStyle","endSnap","eventPixel","closestFeature","getClosestFeatureToCoordinate","closestPoint","elevationFromServiceChartData","eleCoordinates","pow","snappingTolerance","setCoordinates","getElementsByClassName","getKeys","locale","toLocaleString","minimumFractionDigits","getZ","getM","getLayout","GeometryLayout","XYZM","z","XYZ","XYM","mdtClosestPoint","mdtZ","mdtz","getRenderedHtml","html","drawTrackingData","layout","formattedFromStorage","storageData","removeTrackingProperty","notReproject","unset","export","getTrackingData","geoJSON","idRequestAnimationFrame","bufferElm","segmentsUnion","mergedIndex","ls","lineString","nextLineIndex","getLastCoordinate","nls","first","getFirstCoordinate","processImportedFeatures","importedFileName","toAdd","toRemove","maybeRemove","segments","featureToAdd","promises","ta","indices","sameName","saveTrack","trackName","importedIndex","processAdd","IMPORTEDTRACK","wait","alert","vectorSource","simulateTrackEnd","resized","resultsPanelChart","chart","show","withLegend","hasElevation","chartProgressClear","simulateMarker","simulateTrack","setCoords","animationFrameFraction","hasTime","toLength","utmCrs","arCoordinates","done","walkingSpeed","trackFilm","timestamp","parse","loopAtFraction","simulate_paused","getCoordinateAtM","getDoneAtM","getSelectedTrack","uiSimulate","chartSetProgress","_getTime","from","getCoords","to","atan2","simulate_speed","delta","d3","D3C3","select","empty","hide","headingChangehandler","infoOnMap","iomStyle","overFlowY","backgroundColor","getHeading","orientationChangehandler","beta","getBeta","gamma","getGamma","constrainCenter","pulsate","circle","pulsated","elapsed","setRadius","drawCircleGeometry","elevationMarker","stopEvent","getOpacity","getElement","coordsActivate","coordsDeactivate","Parser","read","featureOptions","MultiPoint","ovMap","collapsed","collapsible","className","getOverviewMap","pixelRatio_","boxOverlay_","box","boxSizing","_boxElm","ovmMap","positionDrag","newTransform","dragPoint","idxStart","idxEnd","dragged","cloneNode","ACTIVE","insertAdjacentElement","insertBefore","containment","removeChild","moveVector","_delta","centerPixel","newCenter","halfWidth","halfHeight","reset","load","olView","OVERVIEWBASELAYERCHANGE","originalLayer","getFallbackLayer","defaultLayer","loadProjections","orderBy","projList","fovStyle","setColor","addLayer","draw3DCamera","camLayer","fov","enable","resizeEvent","createEvent","initEvent","dispatchEvent","disable","FeatureInfo","_clickTrigger","beforeRequest","NOFEATUREINFO","getElementText","esriXmlParser","dom","DOMParser","parseFromString","documentElement","fiCollections","getElementsByTagName","fic","fInfos","lenj","fields","lenk","field","addLayerToService","path","getPath","getFeatureInfo","targetServices","auxInfo","requestPromises","requestDataArray","services","elem","getGetFeatureInfoUrl","targetService","mapLayers","disgregatedNames","getDisgregatedLayerNames","consoleRegister","Filter","join","cql_filter","params_","gfiURL","QUERY_LAYERS","INFO_FORMAT","FEATURE_COUNT","pixelTolerance","expUrl","requestData","requestedFormat","expandUrl","mapLayer","toolProxification","fetch","cacheHost","getAction","cache","originalUrl","action","responses","someSuccess","featureInsertionPoints","featureInfo","responseText","iFormat","WMSGetFeatureInfo","isParentOrSame","na","nb","pa","pb","fakeLayers","found","lName","featureId","fakeLayer","compoundLayer","rawUrl","rawContent","rawFormat","responseError","status","ERROR","finfoPromises","defaultFeature","getMapLocale","isInside","featureInsertionPoint","responseCallback","INFO","BEFOREFEATUREINFO","GeometryFeatureInfo","hasSuitableLayers","hasLayers","_isSearching","_isDrawing","ret","beginDraw","geometryType","semaforo","drawCtrl","setActive","startDrawing_","olGeometryType","POLYLINE","LINE_STRING","POLYGON","Draw","setShowsPopup","_wrapPromise","points","sketchCoords_","sketchFeature_","addToDrawing_","_drawToken","cancelDraw","source_","readFeaturesFromResponse","exception","featureToServiceDistributor","getFeaturesByGeometry","filterFeature","filterLayer","olGeometry","stride","flatCoordinates","getFlatCoordinates","bestPoint","arrRequests","extractFeatures","intersects","arrPromises","responseObj","errors","errorMsg","errorType","GETCAPABILITIES","NO_FEATURES","INDETERMINATE","descripcion","errorThrown","serviceName","serviceTitle","featuresFound","PANANIMATIONSTART","PANANIMATIONEND","fitToView","popupBoundingRect","mapBoundingRect","west","north","east","popupExt","mapExt","containsExtent","overflows","newPos","newPixelPos","_oldUpdatePixelPosition","updatePixelPosition","ct","easing","percent","setDragged","_newHandleOffsetChanged","unlisten","getChangeEventType","handleOffsetChanged","containerStyle","setProperty","scale","getScale","canvas_","asString","createFeatureBasics","setData","createPoint","hasStyleOptions","createMarker","iconUrl","getPointIconUrl","createPolyline","createPolygon","createMultiPolyline","createMultiPolygon","createCircle","_featurePromise","geomStr","olStyles","cloneFeature","getFont","getOffsetX","getOffsetY","ctor","ringsOrPolylines","isMultiPolygon","isPolygonOrMultiLineString","isLineString","XY","setCenterAndRadius","getPolygonLength","getLinearRings","ring","newRing","getLinearRing","flat","linearRingLength","getLineStringLength","readonly","extendedStyle","currentStyle","fill_","image_","stroke_","text_","layerStyle","newStyle","cssClass","iconOptions","getBackgroundUrlFromCss","imgAnchor","layerStroke","setWidth","strokeChanged","setLineDash","setStroke","setFill","changed","toggleSelectedStyle","condition","setSelectedStyle","removeSelectedStyle","getInnerPoint","clipped","MULTI_POLYGON","clipBox","pol","clipPolygon","area","curArea","rings","MULTI_LINE_STRING","clipPolyline","curLength","centroid","showPopup","Control","currentExtent","_innerCentroid","closeButton","btn","finfo","parentOptions","isEmptyObject","CLASSNAME","fStyle","getImageSize","_folders","getBounds","getTemplate","_balloon","getGeometryName","unsetData","clearData","sketch","MEASUREPARTIAL","getMeasureData","mouseOverHandler","hoverCoordinate","pushCoordinate","clickHandler","_mdPx","squaredClickTolerance_","pointerdownHandler","perimeter","formatArea","formatLength","mode","MULTIPOLYGON","MULTIPOINT","MULTIPOLYLINE","objects","_pointerdownHandler","_clickHandler","_mouseMoveHandler","_mouseOverHandler","snapInteraction","measure","drawOptions","snapTolerance","shiftKeyOnly","hole","parentStyles","RECTANGLE","maxPoints","geometryFunction","end","newCoords","DRAWSTART","overlayStyle","overlay_","MEASURE","endFn","DRAWEND","delay","dblClickInteraction","DoubleClickZoom","getActive","_projectionChangeHandler","oldProj","oldValue","sketchPoint_","sketchCoords","deflateCoordinates","getTransform","transformFn","inflateCoordinates","drawProjectionChangeHandler","snapping","snapOptions","Snap","redoStack","persistent","popCoordinate","puntos","flyingPointContained","flyingPoint","sketchLine_","undo","redo","finishDrawing","CacheBuilder","getRequestSchemas","schema","layerId","olSource","getTileGrid","matrixIds","getMatrixIds","tmsLimits","llen","TileMatrixSetLimits","tileMatrixLimits","rlen","origin","getOrigin","tileSize","getTileSize","unitsPerTile","tml","mId","tSize","cl","floor","cr","rt","rb","tmsLimit","MinTileCol","MaxTileCol","MinTileRow","MaxTileRow","getGetTilePattern","WMTSEncoding","RESTFUL","encodeURIComponent","createHaloStroke1","createHaloStroke2","addHaloToStyle","mainStyle","haloPart1","unshift","haloPart2","updateSelectedStyle","style_","originalStyle","createSelectedStyle","styleFunction_","createStyleFunction","Modify","selectInteraction","Select","getWrapperFeature","selected","FEATURESSELECT","ctrl","deselected","FEATURESUNSELECT","modifyInteraction","modify","FEATUREMODIFY","_onMouseMove","getSelectedFeatures","setSelectedFeatures","featureOverlay_","unselectFeatures","selectedFeatures","unselectedFeatures","olFeature","Edit","cancel","cancelTxt","histPoints","deleteFeatures","toGML","writeGeometryNode","poligons","XMLSerializer","serializeToString","str","pos","toGeoJSON","writeGeometry","write"],"mappings":"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","sourcesContent":["; (function (root, factory) {\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define(['../../lib/ol/build/ol-sitna'], factory);\r\n    } else if (typeof exports === 'object') {\r\n        module.exports = factory(require('../../lib/ol/build/ol-sitna'));\r\n    } else {\r\n        root.ol = factory(root.ol);\r\n    }\r\n\r\n})(this, function (ol) {\r\n    Math.hypot = Math.hypot || function () {\r\n        var y = 0;\r\n        var length = arguments.length;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            if (arguments[i] === Infinity || arguments[i] === -Infinity) {\r\n                return Infinity;\r\n            }\r\n            y += arguments[i] * arguments[i];\r\n        }\r\n        return Math.sqrt(y);\r\n    };\r\n\r\n    // requestAnimationFrame polyfill\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame']\r\n            || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n\r\n    if (!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = window.setTimeout(function () { callback(currTime + timeToCall); },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n\r\n    if (!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n\r\n    // Nombres de tipos de eventos\r\n    const MOUSEMOVE = 'mousemove';\r\n    const MOUSEOVER = 'mouseover';\r\n    const DRAGENTER = ol.events.EventType.DRAGENTER;\r\n    const DRAGOVER = ol.events.EventType.DRAGOVER;\r\n    const DROP = ol.events.EventType.DROP;\r\n    const CHANGE = ol.events.EventType.CHANGE;\r\n    const SINGLECLICK = ol.MapBrowserEventType.SINGLECLICK;\r\n    const POINTERMOVE = ol.MapBrowserEventType.POINTERMOVE;\r\n    const MOVEEND = ol.MapEventType.MOVEEND;\r\n    const POSTRENDER = ol.MapEventType.POSTRENDER;\r\n    const POSTCOMPOSE = ol.render.EventType.POSTCOMPOSE;\r\n    const ADDFEATURE = ol.source.VectorEventType.ADDFEATURE;\r\n    const REMOVEFEATURE = ol.source.VectorEventType.REMOVEFEATURE;\r\n    const CLEAR = ol.source.VectorEventType.CLEAR;\r\n    const TILELOADSTART = ol.source.TileEventType.TILELOADSTART;\r\n    const TILELOADEND = ol.source.TileEventType.TILELOADEND;\r\n    const TILELOADERROR = ol.source.TileEventType.TILELOADERROR;\r\n\r\n    const hitTolerance = TC.Util.detectMouse() ? 3 : 10;\r\n\r\n    var cssUrl = TC.url.ol.substr(0, TC.url.ol.lastIndexOf('/'));\r\n    cssUrl = cssUrl.substr(0, cssUrl.lastIndexOf('/') + 1) + 'css/ol.css';\r\n    //TC.loadCSS(cssUrl);\r\n\r\n\r\n    /////////////////////////// ol patches\r\n\r\n    if (!ol.format.KMLCustom) {\r\n        TC.syncLoadJS(TC.apiLocation + 'TC/ol/format/KMLCustom');\r\n    }\r\n\r\n    if (!ol.format.GPXCustom) {\r\n        TC.syncLoadJS(TC.apiLocation + 'TC/ol/format/GPXCustom');\r\n    }\r\n\r\n    // Parche para evitar el error AssertionError: Assertion failed: calculated value (1.020636810790192) ouside allowed range (0-1)\r\n    ol.View.prototype.getValueForResolutionFunction = function (opt_power) {\r\n        const power = opt_power || 2;\r\n        const maxResolution = this.maxResolution_;\r\n        const minResolution = this.minResolution_;\r\n        const max = Math.log(maxResolution / minResolution) / Math.log(power);\r\n        return (\r\n            /**\r\n                 * @param {number} resolution Resolution.\r\n                 * @return {number} Value.\r\n             */\r\n            function (resolution) {\r\n                var value =\r\n                    (Math.log(maxResolution / resolution) / Math.log(power)) / max;\r\n                value = Math.max(Math.min(1, value), 0);\r\n                return value;\r\n            });\r\n    };\r\n\r\n    if (!TC.Util.detectMobile()) {\r\n        // Parche para situar el ancla del popup cuando tenemos zoom in/out de navegador o pantalla\r\n        ol.Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\r\n            const style = this.element.style;\r\n            const offset = this.getOffset();\r\n\r\n            const positioning = this.getPositioning();\r\n\r\n            this.setVisible(true);\r\n\r\n            var offsetX = offset[0];\r\n            var offsetY = offset[1];\r\n            if (positioning == ol.OverlayPositioning.BOTTOM_RIGHT ||\r\n                positioning == ol.OverlayPositioning.CENTER_RIGHT ||\r\n                positioning == ol.OverlayPositioning.TOP_RIGHT) {\r\n                if (this.rendered.left_ !== '') {\r\n                    this.rendered.left_ = style.left = '';\r\n                }\r\n                const right = Math.round(mapSize[0] - pixel[0] - offsetX) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.right_ != right) {\r\n                    this.rendered.right_ = style.right = right;\r\n                }\r\n            } else {\r\n                if (this.rendered.right_ !== '') {\r\n                    this.rendered.right_ = style.right = '';\r\n                }\r\n                if (positioning == ol.OverlayPositioning.BOTTOM_CENTER ||\r\n                    positioning == ol.OverlayPositioning.CENTER_CENTER ||\r\n                    positioning == ol.OverlayPositioning.TOP_CENTER) {\r\n                    offsetX -= this.element.offsetWidth / 2;\r\n                }\r\n                const left = Math.round(pixel[0] + offsetX) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.left_ != left) {\r\n                    this.rendered.left_ = style.left = left;\r\n                }\r\n            }\r\n            if (positioning == ol.OverlayPositioning.BOTTOM_LEFT ||\r\n                positioning == ol.OverlayPositioning.BOTTOM_CENTER ||\r\n                positioning == ol.OverlayPositioning.BOTTOM_RIGHT) {\r\n                if (this.rendered.top_ !== '') {\r\n                    this.rendered.top_ = style.top = '';\r\n                }\r\n                const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.bottom_ != bottom) {\r\n                    this.rendered.bottom_ = style.bottom = bottom;\r\n                }\r\n            } else {\r\n                if (this.rendered.bottom_ !== '') {\r\n                    this.rendered.bottom_ = style.bottom = '';\r\n                }\r\n                if (positioning == ol.OverlayPositioning.CENTER_LEFT ||\r\n                    positioning == ol.OverlayPositioning.CENTER_CENTER ||\r\n                    positioning == ol.OverlayPositioning.CENTER_RIGHT) {\r\n                    offsetY -= this.element.offsetHeight / 2;\r\n                }\r\n                const top = Math.round(pixel[1] + offsetY) / window.devicePixelRatio + 'px';\r\n                if (this.rendered.top_ != top) {\r\n                    this.rendered.top_ = style.top = top;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    // Modificación para cambiar el comportamiento de ol.control.OverviewMap:\r\n    // Mantener la caja del extent siempre centrada.\r\n    ol.control.OverviewMap.prototype._validateExtent_ = ol.control.OverviewMap.prototype.validateExtent_;\r\n    ol.control.OverviewMap.prototype.validateExtent_ = function () {\r\n        var self = this;\r\n        self._validateExtent_();\r\n        if (self._wrap && self._wrap.parent.options.alwaysCentered) {\r\n            self.recenter_();\r\n        }\r\n    };\r\n\r\n    // En modo 3D, cambiar la lógica de la escala para que siempre muestre área de visión.\r\n    ol.control.OverviewMap.prototype._resetExtent_ = ol.control.OverviewMap.prototype.resetExtent_;\r\n    ol.control.OverviewMap.prototype.resetExtent_ = function () {\r\n        var self = this;\r\n        self._resetExtent_.call(self);\r\n        var wrap = self._wrap;\r\n        if (wrap.is3D) {\r\n            var ovmap = self.ovmap_;\r\n            var ovview = ovmap.getView();\r\n            var extent = ovview.calculateExtent();\r\n            var feature = wrap.get3DCameraLayer().getSource().getFeatures()[0];\r\n            if (feature) {\r\n                coordinates = feature.getGeometry().getCoordinates();\r\n                var coord1 = coordinates[0][0];\r\n                var coord2 = coordinates[0][1];\r\n                if (!ol.extent.containsCoordinate(extent, coord1) || !ol.extent.containsCoordinate(extent, coord2)) {\r\n                    var buffer = Math.max(\r\n                        extent[0] - coord1[0],\r\n                        extent[1] - coord1[1],\r\n                        coord1[0] - extent[2],\r\n                        coord1[1] - extent[3],\r\n                        extent[0] - coord2[0],\r\n                        extent[1] - coord2[1],\r\n                        coord2[0] - extent[2],\r\n                        coord2[1] - extent[3]\r\n                    );\r\n                    ovview.fit(ol.extent.buffer(extent, buffer));\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ol.format.GML3CRS84 = function () {\r\n        ol.format.GML3.call(this, {\r\n            srsName: 'CRS:84'\r\n        });\r\n    };\r\n    TC.inherit(ol.format.GML3CRS84, ol.format.GML3);\r\n\r\n    ol.format.GML2CRS84 = function () {\r\n        ol.format.GML2.call(this, {\r\n            srsName: 'CRS:84'\r\n        });\r\n    };\r\n    TC.inherit(ol.format.GML2CRS84, ol.format.GML2);\r\n\r\n    // Añadido el espacio de nombres de GML 3.2 al parser\r\n    const gmlNamespace = 'http://www.opengis.net/gml';\r\n    const gml32Namespace = 'http://www.opengis.net/gml/3.2';\r\n    ol.format.GMLBase.prototype.MULTIPOINT_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.MULTIPOINT_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.MULTILINESTRING_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.MULTILINESTRING_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.MULTIPOLYGON_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.MULTIPOLYGON_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.POINTMEMBER_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.POINTMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.LINESTRINGMEMBER_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.LINESTRINGMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.POLYGONMEMBER_PARSERS_[gml32Namespace] = ol.format.GMLBase.prototype.POLYGONMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GMLBase.prototype.RING_PARSERS[gml32Namespace] = ol.format.GMLBase.prototype.RING_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS[gml32Namespace] = ol.format.GML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.FLAT_LINEAR_RINGS_PARSERS[gml32Namespace] = ol.format.GML3.prototype.FLAT_LINEAR_RINGS_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.GEOMETRY_PARSERS[gml32Namespace] = ol.format.GML3.prototype.GEOMETRY_PARSERS[gmlNamespace];\r\n    ol.format.GML3.prototype.MULTICURVE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.MULTICURVE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.MULTISURFACE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.MULTISURFACE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.CURVEMEMBER_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.CURVEMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.SURFACEMEMBER_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.SURFACEMEMBER_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.SURFACE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.SURFACE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.CURVE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.CURVE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.ENVELOPE_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.ENVELOPE_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.PATCHES_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.PATCHES_PARSERS_[gmlNamespace];\r\n    ol.format.GML3.prototype.SEGMENTS_PARSERS_[gml32Namespace] = ol.format.GML3.prototype.SEGMENTS_PARSERS_[gmlNamespace];\r\n\r\n    // Bug de OpenLayers hasta 5.3.0 como mínimo:\r\n    // El parser de GML2 no lee las siguientes features del GML si tienen un featureType distinto del primero.\r\n    // Esto pasa porque genera el objeto de featureTypes con la primera y en las siguientes iteraciones si el objeto existe no se regenera.\r\n    // Entre comentarios /* */ se elimina lo que sobra.\r\n    //\r\n    // Más: se añade para FeatureCollection un parser por cada namespaceURI del nodo. \r\n    // Esto es porque QGIS genera GML cuyo nodo FeatureCollection tiene namespace = http://ogr.maptools.org/.\r\n    ol.format.GMLBase.prototype.readFeaturesInternal = function (node, objectStack) {\r\n        const localName = node.localName;\r\n        let features = null;\r\n        if (localName == 'FeatureCollection') {\r\n            // Ñapa para leer GML de https://catastro.navarra.es/ref_catastral/gml.ashx?C=217&PO=5&PA=626\r\n            // y demás GMLs obtenidos de un WFS de GeoServer.\r\n            var gmlnsCollectionParser = this.FEATURE_COLLECTION_PARSERS[ol.format.GMLBase.prototype.namespace];\r\n            if (!gmlnsCollectionParser['member']) {\r\n                gmlnsCollectionParser['member'] = ol.xml.makeArrayPusher(\r\n                    ol.format.GMLBase.prototype.readFeaturesInternal);\r\n            };\r\n            //////\r\n            // Sustituimos la siguienta instrucción por la siguiente condición :\r\n            //features = pushParseAndPop([],\r\n            //    this.FEATURE_COLLECTION_PARSERS, node,\r\n            //    objectStack, this);\r\n            if (node.namespaceURI === 'http://www.opengis.net/wfs') {\r\n                features = ol.xml.pushParseAndPop([],\r\n                    this.FEATURE_COLLECTION_PARSERS, node,\r\n                    objectStack, this);\r\n            } else {\r\n                this.FEATURE_COLLECTION_PARSERS[node.namespaceURI] =\r\n                    this.FEATURE_COLLECTION_PARSERS[node.namespaceURI] || this.FEATURE_COLLECTION_PARSERS[ol.format.GMLBase.prototype.namespace];\r\n                features = ol.xml.pushParseAndPop(/*null*/[], // Cambiado null por [] porque si no, no crea el array de features\r\n                    this.FEATURE_COLLECTION_PARSERS, node,\r\n                    objectStack, this);\r\n            }\r\n            //////\r\n        } else if (localName == 'featureMembers' || localName == 'featureMember' || localName == 'member') {\r\n            const context = objectStack[0];\r\n            let featureType = context['featureType'];\r\n            let featureNS = context['featureNS'];\r\n            const prefix = 'p';\r\n            const defaultPrefix = 'p0';\r\n            if (/*!featureType && */node.childNodes) {\r\n                featureType = [], featureNS = {};\r\n                for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\r\n                    const child = node.childNodes[i];\r\n                    if (child.nodeType === 1) {\r\n                        const ft = child.nodeName.split(':').pop();\r\n                        if (featureType.indexOf(ft) === -1) {\r\n                            let key = '';\r\n                            let count = 0;\r\n                            const uri = child.namespaceURI;\r\n                            for (let candidate in featureNS) {\r\n                                if (featureNS[candidate] === uri) {\r\n                                    key = candidate;\r\n                                    break;\r\n                                }\r\n                                ++count;\r\n                            }\r\n                            if (!key) {\r\n                                key = prefix + count;\r\n                                featureNS[key] = uri;\r\n                            }\r\n                            featureType.push(key + ':' + ft);\r\n                        }\r\n                    }\r\n                }\r\n                if (localName != 'featureMember') {\r\n                    // recheck featureType for each featureMember\r\n                    context['featureType'] = featureType;\r\n                    context['featureNS'] = featureNS;\r\n                }\r\n            }\r\n            if (typeof featureNS === 'string') {\r\n                const ns = featureNS;\r\n                featureNS = {};\r\n                featureNS[defaultPrefix] = ns;\r\n            }\r\n            /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\r\n            const parsersNS = {};\r\n            const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\r\n            for (let p in featureNS) {\r\n                /** @type {Object<string, import(\"../xml.js\").Parser>} */\r\n                const parsers = {};\r\n                for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\r\n                    const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\r\n                        defaultPrefix : featureTypes[i].split(':')[0];\r\n                    if (featurePrefix === p) {\r\n                        parsers[featureTypes[i].split(':').pop()] =\r\n                            (localName == 'featureMembers') ?\r\n                                ol.xml.makeArrayPusher(this.readFeatureElement, this) :\r\n                                ol.xml.makeReplacer(this.readFeatureElement, this);\r\n                    }\r\n                }\r\n                parsersNS[featureNS[p]] = parsers;\r\n            }\r\n            if (localName == 'featureMember') {\r\n                features = ol.xml.pushParseAndPop(undefined, parsersNS, node, objectStack);\r\n            } else {\r\n                features = ol.xml.pushParseAndPop([], parsersNS, node, objectStack);\r\n            }\r\n        }\r\n        if (features === null) {\r\n            features = [];\r\n        }\r\n        return features;\r\n    };\r\n\r\n    ol.proj.proj4.register(proj4);\r\n    // OpenLayers usa para las proyecciones geográficas un valor ol.proj.METERS_PER_UNIT[ol.proj.Units.DEGREES], calculado con una esfera, salvo\r\n    // EPSG:4326, en la que usa ol.proj.EPSG4326.METERS_PER_UNIT, calculado con el geoide. Esto hace que las proyecciones en EPSG:4258 salgan desplazadas,\r\n    // pese a que para todos los efectos son iguales a las EPSG:4326. Para evitar eso, introducimos en las 4258 el valor ol.proj.EPSG4326.METERS_PER_UNIT.\r\n    ol.proj.get('EPSG:4258').metersPerUnit_ = ol.proj.EPSG4326.METERS_PER_UNIT;\r\n    ol.proj.get('urn:ogc:def:crs:EPSG::4258').metersPerUnit_ = ol.proj.EPSG4326.METERS_PER_UNIT;\r\n    ol.proj.get('http://www.opengis.net/gml/srs/epsg.xml#4258').metersPerUnit_ = ol.proj.EPSG4326.METERS_PER_UNIT;\r\n\r\n    // Reescribimos la obtención de proyección para que soporte códigos tipo EPSG:X, urn:ogc:def:crs:EPSG::X y http://www.opengis.net/gml/srs/epsg.xml#X\r\n    ol.proj.oldGet = ol.proj.get;\r\n    ol.proj.get = function (projectionLike) {\r\n        if (typeof projectionLike === 'string') {\r\n            projectionLike = projectionLike.trim();\r\n            TC.loadProjDef({ crs: projectionLike, sync: true });\r\n        }\r\n        return ol.proj.oldGet.call(this, projectionLike);\r\n    };\r\n\r\n    // Reescritura de código para transformar las geometrías de getFeatureInfo que están en un CRS distinto\r\n    ol.format.GMLBase.prototype.readGeometryElement = function (node, objectStack) {\r\n        var context = /** @type {Object} */ (objectStack[0]);\r\n        context['srsName'] = node.firstElementChild.getAttribute('srsName');\r\n        context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\r\n        /** @type {ol.geom.Geometry} */\r\n\r\n        // Parche para poder leer coordenadas en EPSG:4326 con orden incorrecto (las crea QGIS, por ejemplo)\r\n        if (this instanceof ol.format.GML2CRS84 || this instanceof ol.format.GML3CRS84) {\r\n            if (context.srsName !== 'EPSG:4326' || !context.srsName) {\r\n                throw new Error(\"Conflicto de CRS\");\r\n            }\r\n        }\r\n        if (!context.srsName) {\r\n            context.srsName = this.srsName;\r\n        }\r\n        context.dataProjection = ol.proj.get(context.srsName);\r\n        const geometry = ol.xml.pushParseAndPop(null,\r\n            this.GEOMETRY_PARSERS, node, objectStack, this);\r\n        if (geometry) {\r\n            return /** @type {ol.geom.Geometry} */ (\r\n                ol.format.Feature.transformWithOptions(geometry, false, context));\r\n        } else {\r\n            return undefined;\r\n        }\r\n    };\r\n\r\n    const ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\r\n\r\n    // Reescritura de código para hacerlo compatible con GML generado por inspire:\r\n    // No se puede considerar geometría cualquier cosa que tenga elementos anidados.\r\n    ol.format.GMLBase.prototype.readFeatureElementInternal = function (node, objectStack, asFeature) {\r\n        let geometryName;\r\n        const values = {};\r\n        for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\r\n            let value;\r\n            const localName = n.localName;\r\n            // first, check if it is simple attribute\r\n            if (n.childNodes.length === 0\r\n                || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\r\n                value = ol.xml.getAllTextContent(n, false);\r\n                if (ONLY_WHITESPACE_RE.test(value)) {\r\n                    value = undefined;\r\n                }\r\n            } else {\r\n                if (asFeature) {\r\n                    //if feature, try it as a geometry\r\n                    value = this.readGeometryElement(n, objectStack);\r\n                }\r\n                if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\r\n                    value = this.readFeatureElementInternal(n, objectStack, false);\r\n                } else if (localName !== 'boundedBy' && localName !== 'referencePoint') {\r\n                    // boundedBy is an extent and must not be considered as a geometry\r\n                    // flacunza: Tampoco referencePoint\r\n                    geometryName = localName;\r\n                }\r\n            }\r\n\r\n            if (values[localName]) {\r\n                if (!(values[localName] instanceof Array)) {\r\n                    values[localName] = [values[localName]];\r\n                }\r\n                values[localName].push(value);\r\n            } else {\r\n                values[localName] = value;\r\n            }\r\n\r\n            const len = n.attributes.length;\r\n            if (len > 0) {\r\n                values[localName] = { _content_: values[localName] };\r\n                for (let i = 0; i < len; i++) {\r\n                    const attName = n.attributes[i].name;\r\n                    values[localName][attName] = n.attributes[i].value;\r\n                }\r\n            }\r\n        }\r\n        if (!asFeature) {\r\n            return values;\r\n        } else {\r\n            const feature = new ol.Feature(values);\r\n            if (geometryName) {\r\n                feature.setGeometryName(geometryName);\r\n            }\r\n            const fid = node.getAttribute('fid') ||\r\n                node.getAttributeNS(this.namespace, 'id');\r\n            if (fid) {\r\n                feature.setId(fid);\r\n            }\r\n            return feature;\r\n        }\r\n    };\r\n\r\n    ol.interaction.DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_(format, text, options) {\r\n        let features;\r\n        try {\r\n            features = format.readFeatures(text, options);\r\n        } catch (e) {\r\n            return null;\r\n        }\r\n        if (features && features.length && features.some(f => !!f.getGeometry())) {\r\n            return features;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    //////////////////////// end ol patches\r\n\r\n    const getRGBA = function (color, opacity) {\r\n        var result;\r\n        if (color) {\r\n            result = ol.color.asArray(color);\r\n            result = result.slice();\r\n            if (opacity !== undefined) {\r\n                result[3] = opacity;\r\n            }\r\n        }\r\n        else {\r\n            result = [0, 0, 0, 1];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /**\r\n     * Obtiene el objeto de opciones de una vista que restringe los niveles de zoom activos sobre el mapa dependiendo de las opciones definidas sobre\r\n     * el mapa base activo.\r\n     */\r\n    var getResolutionOptions = function (mapWrap, layer) {\r\n        var view = mapWrap.map.getView();\r\n        var prevRes = view.getResolution();\r\n\r\n        var pms = {\r\n            projection: view.getProjection(),\r\n            center: view.getCenter(),\r\n            resolution: prevRes,\r\n            enableRotation: false\r\n        };\r\n\r\n        if (mapWrap.parent.maxExtent) {\r\n            pms.extent = mapWrap.parent.maxExtent;\r\n        }\r\n\r\n        // GLS 06/03/2019 Corregimos bug 24832, si el mapa de fondo es el mapa en blanco, asignamos las resoluciones del mapa de fondo actual\r\n        var layerForResolutions = layer;\r\n        if (layer.type === TC.Consts.layerType.VECTOR && mapWrap.parent.getBaseLayer()) {\r\n            layerForResolutions = mapWrap.parent.getBaseLayer();\r\n        }\r\n\r\n        var res = layerForResolutions.getResolutions ? layerForResolutions.getResolutions() : [];\r\n        var maxRes;\r\n        var minRes;\r\n\r\n        if (res && res.length) {\r\n            maxRes = layerForResolutions.maxResolution || res[0];\r\n            minRes = layerForResolutions.minResolution || res[res.length - 1];\r\n\r\n            var minResIx = res.indexOf(minRes);\r\n            var maxResIx = res.indexOf(maxRes);\r\n\r\n            pms.resolutions = res.slice(maxResIx, minResIx + 1);\r\n        }\r\n        else {\r\n            maxRes = layerForResolutions.maxResolution;\r\n            minRes = layerForResolutions.minResolution;\r\n        }\r\n        if (minRes) {\r\n            pms.minResolution = minRes;\r\n            if (prevRes < minRes) {\r\n                pms.resolution = minRes;\r\n            }\r\n        }\r\n        if (maxRes) {\r\n            pms.maxResolution = maxRes;\r\n            if (prevRes > maxRes) {\r\n                pms.resolution = maxRes;\r\n            }\r\n        }\r\n\r\n        return pms;\r\n    };\r\n\r\n\r\n    TC.wrap.Map.prototype.setMap = function () {\r\n        var self = this;\r\n        var center = [\r\n            (self.parent.initialExtent[0] + self.parent.initialExtent[2]) / 2,\r\n            (self.parent.initialExtent[1] + self.parent.initialExtent[3]) / 2\r\n        ];\r\n\r\n        var proj4Obj = proj4(self.parent.crs);\r\n        var addEquivalentProjections = function () {\r\n            // Añadimos proyecciones equivalentes y transformaciones necesarias.\r\n            var crsCode = self.parent.crs.substr(self.parent.crs.lastIndexOf(':') + 1);\r\n\r\n            var projOptions = {\r\n                units: proj4Obj.oProj.units,\r\n                global: true\r\n            };\r\n\r\n            var equivalentProjections = [];\r\n            if (crsCode !== '4326') { // Este código ya está metido, no lo machacamos\r\n                projOptions.code = 'EPSG:' + crsCode;\r\n                equivalentProjections.push(new ol.proj.Projection(projOptions));\r\n                projOptions.code = 'urn:ogc:def:crs:EPSG::' + crsCode;\r\n                equivalentProjections.push(new ol.proj.Projection(projOptions));\r\n\r\n                ol.proj.addEquivalentProjections(equivalentProjections);\r\n            }\r\n            //var doTransform = function (fn, input, opt_output, opt_dimension) {\r\n            //    var result = [];\r\n            //    var dimension = opt_dimension || 2;\r\n            //    for (var i = 0; i < input.length; i += dimension) {\r\n            //        var transformed = Array.prototype.slice.call(fn(input.slice(i, i + dimension)));\r\n            //        if (dimension === 3 || dimension === 4) {\r\n            //            transformed = transformed.slice(0, 2).concat(input.slice(i + 2, (i + 2) + (dimension - 2)));\r\n            //        }\r\n\r\n            //        result = result.concat(transformed);\r\n            //    }\r\n            //    if (Array.isArray(opt_output)) {\r\n            //        opt_output.length = 0;\r\n            //        for (var i = 0; i < result.length; i++) {\r\n            //            opt_output[i] = result[i];\r\n            //        }\r\n            //        result = opt_output;\r\n            //    }\r\n            //    return result;\r\n            //};\r\n            //var fromEPSG4326 = function (input, opt_output, opt_dimension) {\r\n            //    return doTransform(proj4Obj.forward, input, opt_output, opt_dimension);\r\n            //};\r\n            //var toEPSG4326 = function (input, opt_output, opt_dimension) {\r\n            //    return doTransform(proj4Obj.inverse, input, opt_output, opt_dimension);\r\n            //};\r\n\r\n            ol.proj.proj4.register(proj4);\r\n\r\n            //ol.proj.addEquivalentTransforms(\r\n            //    ol.proj.EPSG4326.PROJECTIONS,\r\n            //    equivalentProjections,\r\n            //    fromEPSG4326,\r\n            //    toEPSG4326);\r\n        };\r\n\r\n        addEquivalentProjections();\r\n\r\n        var projOptions = {\r\n            code: self.parent.crs,\r\n            units: proj4Obj.oProj.units\r\n        };\r\n        if (self.parent.crs === 'EPSG:4326') {\r\n            projOptions.axisOrientation = 'neu';\r\n        }\r\n        var projection = new ol.proj.Projection(projOptions);\r\n\r\n        var interactions = ol.interaction.defaults({ constrainResolution: true });\r\n\r\n        var viewOptions = {\r\n            projection: projection,\r\n            center: center,\r\n            enableRotation: false\r\n        };\r\n        const extentForResolution = self.parent.maxExtent || self.parent.initialExtent;\r\n        viewOptions.extent = extentForResolution;\r\n        var rect = self.parent.div.getBoundingClientRect();\r\n        var dx = extentForResolution[2] - extentForResolution[0];\r\n        var dy = extentForResolution[3] - extentForResolution[1];\r\n        if (rect.width / rect.height > dx / dy) {\r\n            viewOptions.resolution = dx / rect.width;\r\n        }\r\n        else {\r\n            viewOptions.resolution = dy / rect.height;\r\n        }\r\n\r\n        self.map = new ol.Map({\r\n            target: self.parent.div,\r\n            view: new ol.View(viewOptions),\r\n            controls: [],\r\n            interactions: interactions,\r\n            pixelRatio: 1 /* 08/02/2019 GLS: \r\n            Establecemos el pixelRatio siempre a uno, porque OL sólo atiende al valor al principio, \r\n            si después se hace zoom in/out del navegador, OL no atiende el cambio lo que provoca que el mapa se vea borroso,\r\n            click se sitúa mal, popup se sitúa entre otros efectos.\r\n            Lo gestionamos nosotros hasta que lo soporten del todo. Relacionado con las tareas/bugs:\r\n                Bug 25976:Mapa situación en blanco\r\n                Bug 25954:Canvas en blanco con zoom mayor al 100%\r\n                Bug 23855:Mapa de situación se muestra en blanco\r\n            */\r\n        });\r\n\r\n        if (!TC.Util.detectMobile()) {\r\n            // Parche para corregir https://github.com/openlayers/openlayers/issues/2904\r\n            // saben que tienen un bug cuando se trabaja sobre un mapa con zoom\r\n            self.map.getEventPixel = function (event) {\r\n                var viewportPosition = this.viewport_.getBoundingClientRect();\r\n                var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\r\n                eventPosition = eventPosition.clientX ? eventPosition : (eventPosition.pointerEvent ? eventPosition.pointerEvent : eventPosition);\r\n                return [\r\n                    (eventPosition.clientX - viewportPosition.left) * window.devicePixelRatio,\r\n                    (eventPosition.clientY - viewportPosition.top) * window.devicePixelRatio\r\n                ];\r\n            };\r\n        }\r\n\r\n        self.map._wrap = self;\r\n        self._promise = Promise.resolve(self.map);\r\n\r\n        // mantenemos el ancho y alto del canvas en números enteros\r\n        self.manageSize.call(self.map);\r\n\r\n        // Para evitar estiramientos en canvas\r\n        var updateSize = function () {\r\n            self.updateSize();\r\n        };\r\n        //if (window.ResizeObserver) {\r\n        //    self.parent.loaded(function () {\r\n        //        const resizeObserver = new ResizeObserver(updateSize);\r\n        //        resizeObserver.observe(self.parent.div);\r\n        //    });\r\n        //}\r\n        //self.map.getViewport().addEventListener(RESIZE, updateSize);\r\n        self.parent.one(TC.Consts.event.MAPLOAD, updateSize);\r\n\r\n        self.map.on(SINGLECLICK, function (e) {\r\n\r\n            if (self.parent.view === TC.Consts.view.PRINTING) {\r\n                return;\r\n            }\r\n\r\n            self.parent.workLayers.forEach(function (wl) {\r\n                delete wl._noFeatureClicked;\r\n            });\r\n            var featuresInLayers = self.parent.workLayers.map(function () {\r\n                return false;\r\n            });\r\n            self.map.forEachFeatureAtPixel(e.pixel,\r\n                function (feature, layer) {\r\n                    if (feature._wrap && feature._wrap.parent.showsPopup) {\r\n                        for (var i = 0; i < self.parent.workLayers.length; i++) {\r\n                            var wl = self.parent.workLayers[i];\r\n                            if (wl.wrap.layer === layer) {\r\n                                featuresInLayers[i] = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        self.parent.trigger(TC.Consts.event.FEATURECLICK, { feature: feature._wrap.parent });\r\n                        return feature;\r\n                    }\r\n                },\r\n                {\r\n                    hitTolerance: hitTolerance\r\n                });\r\n            for (var i = 0; i < featuresInLayers.length; i++) {\r\n                if (!featuresInLayers[i]) {\r\n                    self.parent.trigger(TC.Consts.event.NOFEATURECLICK, { layer: self.parent.workLayers[i] });\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        // GLS: 13/02/2019 cambiamos el orden de las suscripciones a eventos de cambio de resolución y moveend\r\n        // para gestionar el borrado del estado inicial. Si no lo hacemos el cambio al extent inicial se registra como evento de usuario\r\n        // porque la carga inicial del mapa con promesas nativas es más rápido que antes.\r\n        // Bug:26001 Borrar estado inicial al entrar\r\n        const addMoveEndListener = function () {\r\n            self.map.on(MOVEEND, function () {\r\n                self.parent.trigger(TC.Consts.event.ZOOM);\r\n            });\r\n        };\r\n        var olView = self.map.getView();\r\n        olView.on('change:resolution', function () {\r\n            if (!self.map.hasListener(MOVEEND)) {\r\n                self.map.once(MOVEEND, function () {\r\n                    addMoveEndListener();\r\n                });\r\n            }\r\n\r\n            self.parent.trigger(TC.Consts.event.BEFOREZOOM);\r\n        }, self.parent);\r\n\r\n        const onChangeView = function () {\r\n            if (!self.map.hasListener(MOVEEND)) {\r\n                self.map.un('change:view', onChangeView);\r\n                addMoveEndListener();\r\n            }\r\n        };\r\n        self.map.on('change:view', onChangeView);\r\n\r\n        /**\r\n         * Restringe los niveles de zoom activos sobre el mapa dependiendo de las opciones definidas sobre\r\n         * el mapa base activo.\r\n         */\r\n        var limitZoomLevels = function (layer) {\r\n            var pms = getResolutionOptions(self, layer);\r\n\r\n            var view = new ol.View(pms);\r\n            self.map.setView(view);\r\n            self.map.render();\r\n        };\r\n\r\n        self.parent.on(TC.Consts.event.BEFOREBASELAYERCHANGE, function (evt) {\r\n            // Solo se limitan las resoluciones cuando estamos en un CRS por defecto, donde no se repixelan teselas\r\n            if (self.parent.crs === self.parent.options.crs && !self.parent.on3DView && evt.newLayer.type !== TC.Consts.layerType.VECTOR) {\r\n                const oldResolutions = evt.oldLayer.getResolutions();\r\n                let modelLayer = evt.newLayer;\r\n                if (!evt.newLayer.getResolutions() && oldResolutions) {\r\n                    // Si la capa nueva no tiene resoluciones y la vieja sí, mantenemos las resoluciones anteriores.\r\n                    // Esto evita que OpenLayers se invente los niveles de zoom y las resoluciones para la capa dinámica.\r\n                    modelLayer = evt.oldLayer;\r\n                }\r\n                self.parent.one(TC.Consts.event.BASELAYERCHANGE, function (e) {\r\n                    limitZoomLevels(modelLayer);\r\n                });\r\n            }\r\n        });\r\n        self.parent.on(TC.Consts.event.MAPLOAD, function (e) {\r\n            limitZoomLevels(self.parent.getBaseLayer());\r\n        });\r\n\r\n        const olMapViewport = self.map.getViewport();\r\n\r\n        olMapViewport.addEventListener(TC.Consts.event.MOUSEMOVE, function (e) {\r\n            var hit = false;\r\n\r\n            if (!self.parent.activeControl || !self.parent.activeControl.isExclusive()) {\r\n\r\n                if (self.parent.view === TC.Consts.view.PRINTING) {\r\n                    return;\r\n                }\r\n\r\n                var pixel = self.map.getEventPixel(e);\r\n                hit = self.map.forEachFeatureAtPixel(pixel, function (feature, layer) {\r\n                    var result = true;\r\n                    if (feature._wrap && !feature._wrap.parent.showsPopup && !feature._wrap.parent.options.selectable) {\r\n                        result = false;\r\n                    }\r\n\r\n                    if (result && feature._wrap) {\r\n                        self.parent.trigger(TC.Consts.event.FEATUREOVER, {\r\n                            feature: feature._wrap.parent\r\n                        });\r\n                    }\r\n\r\n                    return result;\r\n                }, { hitTolerance: hitTolerance });\r\n            }\r\n\r\n            if (hit) {\r\n                olMapViewport.style.cursor = 'pointer';\r\n            } else {\r\n                olMapViewport.style.cursor = '';\r\n                //self.parent.trigger(TC.Consts.event.FEATUREOUT);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.updateSize = function () {\r\n        this.map.updateSize();\r\n    };\r\n\r\n    var getMetersPerUnit = function (proj, extentInDegrees) {\r\n        var units = proj.getUnits();\r\n        if (!units || units === ol.proj.Units.DEGREES) {\r\n            return TC.Util.getMetersPerDegree(extentInDegrees);\r\n        }\r\n        return ol.proj.METERS_PER_UNIT[units];\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getMetersPerUnit = function () {\r\n        var self = this;\r\n        return getMetersPerUnit(ol.proj.get(self.parent.crs), self.getExtent());\r\n    };\r\n\r\n    var getUnitRatio = function (options) {\r\n        var self = this;\r\n        options = options || {};\r\n        var defaultCrs = self.parent.options.crs || TC.Cfg.crs;\r\n        var defaultProj = ol.proj.get(defaultCrs);\r\n        var newProj = ol.proj.get(options.crs);\r\n        return getMetersPerUnit(newProj, options.extentInDegrees) / getMetersPerUnit(defaultProj, options.extentInDegrees);\r\n    };\r\n\r\n    var normalizeProjection = function (options) {\r\n        var result;\r\n        if (options.axisOrientation) {\r\n            result = new ol.proj.Projection({\r\n                code: options.crs,\r\n                axisOrientation: options.axisOrientation\r\n            });\r\n        }\r\n        else {\r\n            result = ol.proj.get(options.crs);\r\n        }\r\n        if (!result.getUnits()) {\r\n            result.units_ = ol.proj.Units.DEGREES;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setProjection = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const baseLayer = options.baseLayer || self.parent.baseLayer;\r\n        var extent;\r\n        if (options.extent) {\r\n            extent = options.extent;\r\n        }\r\n        else {\r\n            extent = ol.proj.transformExtent(self.getExtent(), self.parent.crs, options.crs);\r\n        }\r\n        const extentInDegrees = ol.proj.transformExtent(extent, options.crs, 'EPSG:4326');\r\n        const unitRatio = getUnitRatio.call(self, {\r\n            crs: options.crs,\r\n            extentInDegrees: extentInDegrees\r\n        });\r\n        const projection = normalizeProjection(options);\r\n        const oldView = self.map.getView();\r\n        const viewOptions = {\r\n            projection: projection,\r\n            enableRotation: false\r\n        };\r\n        const resolutions = baseLayer.getResolutions();\r\n\r\n        if (resolutions && resolutions.length) {\r\n            viewOptions.resolutions = resolutions;\r\n        }\r\n        else {\r\n            viewOptions.minZoom = oldView.getMinZoom();\r\n            viewOptions.maxZoom = oldView.getMaxZoom();\r\n            const minResolution = baseLayer.wrap.layer.getMinResolution();\r\n            const maxResolution = baseLayer.wrap.layer.getMaxResolution();\r\n            var transformFactor = 1;\r\n            if (minResolution === 0 || maxResolution === Number.POSITIVE_INFINITY) {\r\n                const oldUnitRatio = getUnitRatio.call(self, {\r\n                    crs: self.parent.crs,\r\n                    extentInDegrees: extentInDegrees\r\n                });\r\n                transformFactor = oldUnitRatio / unitRatio;\r\n            }\r\n            if (minResolution === 0) {\r\n                viewOptions.minResolution = oldView.getMinResolution() * transformFactor;\r\n            }\r\n            else {\r\n                viewOptions.minResolution = minResolution;\r\n            }\r\n            if (maxResolution === Number.POSITIVE_INFINITY) {\r\n                viewOptions.maxResolution = oldView.getMaxResolution() * transformFactor;\r\n            }\r\n            else {\r\n                viewOptions.maxResolution = maxResolution;\r\n            }\r\n        }\r\n\r\n        // GLS: transformamos también el centro     \r\n        viewOptions.center = ol.proj.transform(self.getCenter(), self.parent.crs, options.crs);\r\n\r\n        var newView = new ol.View(viewOptions);\r\n        self.map.setView(newView);\r\n        self.parent.initialExtent = unitRatio !== 1 ? ol.proj.transformExtent(self.parent.initialExtent, self.parent.crs, options.crs) : self.parent.options.initialExtent;\r\n        if (self.parent.options.maxExtent) {\r\n            self.parent.options.maxExtent = self.parent.maxExtent = unitRatio !== 1 ? ol.proj.transformExtent(self.parent.maxExtent, self.parent.crs, options.crs) : self.parent.options.maxExtent;\r\n        }\r\n        newView.fit(extent, { nearest: true });\r\n    };\r\n\r\n    /*\r\n     *  insertLayer: inserts OpenLayers layer at index\r\n     *  Parameters: OpenLayers.Layer, number\r\n     */\r\n    TC.wrap.Map.prototype.insertLayer = function (olLayer, idx) {\r\n        var self = this;\r\n        var layers = self.map.getLayers();\r\n        var alreadyExists = false;\r\n        for (var i = 0; i < layers.getLength(); i++) {\r\n            if (layers.item(i) === olLayer) {\r\n                alreadyExists = true;\r\n                break;\r\n            }\r\n        }\r\n        if (alreadyExists) {\r\n            layers.remove(olLayer);\r\n            layers.insertAt(idx, olLayer);\r\n        }\r\n        else {\r\n            if (idx < 0) {\r\n                layers.push(olLayer);\r\n            }\r\n            else {\r\n                layers.insertAt(idx, olLayer);\r\n            }\r\n            // Solo se limitan las resoluciones cuando estamos en un CRS por defecto, donde no se repixelan teselas\r\n            var view = self.map.getView();\r\n            if (self.parent.crs === self.parent.options.crs) {\r\n                if (olLayer instanceof ol.layer.Tile) {\r\n                    var resolutions = olLayer.getSource().getResolutions();\r\n                    view.maxResolution_ = resolutions[0];\r\n                    view.minResolution_ = resolutions[resolutions.length - 1];\r\n                }\r\n            }\r\n            else {\r\n                // Cambiamos los límites de resolución de la capa a los de la vista. Esto lo hacemos porque su resolución está en otro CRS.\r\n                if (olLayer instanceof ol.layer.Tile) {\r\n                    olLayer.setMaxResolution(view.getMaxResolution());\r\n                    olLayer.setMinResolution(view.getMinResolution());\r\n                }\r\n            }\r\n\r\n            var wrap = olLayer._wrap;\r\n            var loadingTileCount = 0;\r\n\r\n            var beforeTileLoadHandler = function (e) {\r\n                wrap.parent.state = TC.Layer.state.LOADING;\r\n                if (loadingTileCount <= 0) {\r\n                    loadingTileCount = 0;\r\n                    self.parent.trigger(TC.Consts.event.BEFORELAYERUPDATE, { layer: wrap.parent });\r\n                }\r\n                olLayer._loadingTileCount = olLayer._loadingTileCount + 1;\r\n            };\r\n            if (wrap.parent.state === TC.Layer.state.LOADING && wrap.parent.isRaster()) {\r\n                beforeTileLoadHandler();\r\n            }\r\n            wrap.$events.on(TC.Consts.event.BEFORETILELOAD, beforeTileLoadHandler);\r\n\r\n            wrap.$events.on(TC.Consts.event.TILELOAD, function (e) {\r\n                loadingTileCount = loadingTileCount - 1;\r\n                if (loadingTileCount <= 0) {\r\n                    loadingTileCount = 0;\r\n                    wrap.parent.state = TC.Layer.state.IDLE;\r\n                    self.parent.trigger(TC.Consts.event.LAYERUPDATE, { layer: wrap.parent });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.removeLayer = function (olLayer) {\r\n        this.map.removeLayer(olLayer);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getLayerCount = function () {\r\n        return this.map.getLayerGroup().getLayers().getLength();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.indexOfFirstVector = function () {\r\n        var result = -1;\r\n        this.map.getLayerGroup().getLayers().forEach(function (l, i) {\r\n            if (l instanceof ol.layer.Vector && result === -1) {\r\n                result = i;\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getLayerIndex = function (olLayer) {\r\n        var result = -1;\r\n        this.map.getLayerGroup().getLayers().forEach(function (elm, idx) {\r\n            if (elm === olLayer) {\r\n                result = idx;\r\n            }\r\n        });\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setLayerIndex = function (olLayer, index) {\r\n        var layers = this.map.getLayers();\r\n        var list = layers.getArray();\r\n        var ix = list.indexOf(olLayer);\r\n\r\n        if (ix > -1 && ix != index) {\r\n            this.map.removeLayer(olLayer);\r\n            this.insertLayer(olLayer, index);\r\n            //layers.setAt(index, olLayer);\r\n        }\r\n        else {\r\n            //no está el layer, así que no hago nada\r\n        }\r\n\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setBaseLayer = function (olLayer) {\r\n        var self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var setLayer = function (curBl) {\r\n                // GLS: si se llega después de una animación el valor de self.parent.getBaseLayer() ya es el definitivo y no el actual lo que provoca efectos indeseados. \r\n                // ir a línea 1313: paso como parámetro el baseLayer actual en el caso de animación.\r\n                var curBl = curBl || self.parent.getBaseLayer();\r\n                if (curBl) {\r\n                    self.map.removeLayer(curBl.wrap.layer);\r\n                    if (olLayer instanceof ol.layer.Image) { // Si es imagen no teselada\r\n                        olLayer._wrap.setProjection({\r\n                            crs: self.parent.crs\r\n                        });\r\n                    }\r\n\r\n                    if (olLayer._wrap.parent.type === TC.Consts.layerType.WMTS) {\r\n                        var layerProjectionOptions = { crs: self.parent.crs, oldCrs: olLayer.getSource().getProjection().getCode() };\r\n\r\n                        if (layerProjectionOptions.oldCrs !== layerProjectionOptions.crs) {\r\n                            olLayer._wrap.parent.setProjection(layerProjectionOptions);\r\n                        }\r\n                    }\r\n\r\n                    //if (olLayer instanceof ol.layer.Tile) { // Si es imagen teselada\r\n                    //    const view = self.map.getView();\r\n                    //    const resolutions = olLayer.getSource().getResolutions();\r\n                    //    if (resolutions) {\r\n                    //        view.options_.resolutions = resolutions;\r\n                    //        view.applyOptions_(view.options_);\r\n                    //    }\r\n                    //}\r\n                }\r\n                self.insertLayer(olLayer, 0);\r\n                self.map.getControls().forEach(function (ctl) {\r\n                    if (ctl instanceof ol.control.ZoomSlider) {\r\n                        ctl.initSlider_();\r\n                    }\r\n                });\r\n                resolve();\r\n            };\r\n\r\n            // Toda esta lógica antes de llamar a setLayer() es para hacer un zoom a la nueva resolución\r\n            // cuando la nueva capa no llega a la resolución actual\r\n            var viewOptions = getResolutionOptions(self, olLayer._wrap.parent);\r\n            var view = self.map.getView();\r\n            var currentResolution = view.getResolution();\r\n            if (viewOptions.resolutions) {\r\n                //buscamos la nueva resolución: o una que sea similar a la actual dentro de los márgenes admitidos, o la inmediata superior\r\n                var newRes = viewOptions.resolutions\r\n                    .sort(function (a, b) { return a - b })\r\n                    .reduce(function (prev, elm) {\r\n                        if (prev === 0 &&\r\n                            (elm > currentResolution || Math.abs(1 - (currentResolution / elm)) < self.parent.options.maxResolutionError)) {\r\n                            return elm;\r\n                        }\r\n                        return prev;\r\n                    }, 0);\r\n                if (newRes !== currentResolution) {\r\n                    if (self.parent.isLoaded) {\r\n                        view.animate({ resolution: newRes, duration: TC.Consts.ZOOM_ANIMATION_DURATION }, setLayer.bind(self, self.parent.getBaseLayer()));\r\n                    }\r\n                    else { // Primera carga, no animamos\r\n                        view.setResolution(newRes);\r\n                        setLayer();\r\n                    }\r\n                }\r\n                else {\r\n                    setLayer();\r\n                }\r\n            }\r\n            else {\r\n                setLayer();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setExtent = function (extent, options) {\r\n        const self = this;\r\n        options = options || {};\r\n\r\n        const applyExtent = function (view, mapSize, resolve, reject) {\r\n            var res = view.getResolutionForExtent(extent, mapSize);\r\n            // URI: Esta logica está fusilada de la función fit de un objeto view de OL3\r\n            if (view.constrainResolution) {\r\n                var constrainedResolution = view.constrainResolution(res, 0, 0);\r\n                if (constrainedResolution < res) {\r\n                    if (constrainedResolution / res < TC.Consts.EXTENT_TOLERANCE) {\r\n                        constrainedResolution = view.constrainResolution(\r\n                            constrainedResolution, -1, 0);\r\n                    }\r\n                }\r\n                res = constrainedResolution;\r\n            }\r\n\r\n            // flacunza: No animamos si la duración va a ser 0, porque a veces el zoom no se completa\r\n            // GLS: antes de resolver la promesa validamos si existe animación\r\n            // URI: si la animacion no existe ponemos duracion 0\r\n            // flacunza: en caso de que animate=undefined, se anima\r\n            const center = [((extent[0] + extent[2]) / 2), ((extent[1] + extent[3]) / 2)];\r\n            if (options.animate === void (0) || options.animate) {\r\n                view.animate({\r\n                    resolution: res,\r\n                    center: center,\r\n                    duration: TC.Consts.ZOOM_ANIMATION_DURATION\r\n                }, resolve);\r\n            }\r\n            else {\r\n                view.setCenter(center);\r\n                view.setResolution(res);\r\n                resolve();\r\n            }\r\n        };\r\n\r\n        const setPromise = function (extent) {\r\n            self._setExtentPromise = new Promise(function (resolve, reject) {\r\n                // Timeout porque OL3 no tiene evento featuresadded, por tanto cuando se activa map.options.zoomToMarkers\r\n                // se lanza un setExtent por marcador. El timeout evita ejecuciones a lo tonto.\r\n                clearTimeout(self._timeout);\r\n                self._timeout = setTimeout(function () {\r\n                    var mapSize = self.map.getSize();\r\n                    var view = self.map.getView();\r\n\r\n                    if (self.parent.baseLayer) {\r\n                        self.parent.baseLayer.wrap.getLayer().then(function (olLayer) {\r\n                            // Todo esto para evitar que haga más zoom que el admisible por la capa base\r\n                            const res = view.getResolutionForExtent(extent, mapSize);\r\n                            const resolutions = self.getResolutions();\r\n                            const maxZoom = view.getMaxZoom();\r\n                            if (maxZoom < resolutions.length - 1) {\r\n                                resolutions.length = Math.round(maxZoom + 1); // en 3D puede llegar un valor no entero, no sé reproducirlo\r\n                            }\r\n\r\n                            if (resolutions.length > 0) {\r\n                                var minRes = Math.min.apply(self, resolutions);\r\n                                if (minRes > res) {\r\n                                    var factor = 0.5 * (minRes / res - 1);\r\n                                    var dx = ol.extent.getWidth(extent) * factor;\r\n                                    var dy = ol.extent.getHeight(extent) * factor;\r\n                                    extent = extent.slice(0);\r\n                                    extent[0] = extent[0] - dx;\r\n                                    extent[1] = extent[1] - dy;\r\n                                    extent[2] = extent[2] + dx;\r\n                                    extent[3] = extent[3] + dy;\r\n                                }\r\n                            }\r\n\r\n                            applyExtent(view, mapSize, resolve, reject);\r\n\r\n                        });\r\n                    }\r\n                    else {\r\n                        applyExtent(view, mapSize, resolve, reject);\r\n                    }\r\n                }, 50);\r\n            });\r\n        };\r\n        Promise.resolve(self._setExtentPromise).finally(function () {\r\n            setPromise(extent);\r\n        });\r\n\r\n        return self._setExtentPromise;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getExtent = function () {\r\n        return this.map.getView().calculateExtent(this.map.getSize());\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setCenter = function (coords, options) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const callback = function () {\r\n                resolve();\r\n            };\r\n\r\n            const opts = options || {};\r\n            const view = self.map.getView();\r\n\r\n            if (opts.animate) {\r\n                view.animate({\r\n                    center: coords, duration: TC.Consts.ZOOM_ANIMATION_DURATION\r\n                }, callback);\r\n            }\r\n            else {\r\n                view.setCenter(coords);\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getCenter = function () {\r\n        return this.map.getView().getCenter();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getResolution = function () {\r\n        return this.map.getView().getResolution();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setResolution = function (resolution) {\r\n        this.getMap().then(function (olMap) {\r\n            olMap.getView().setResolution(resolution);\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.setRotation = function (rotation) {\r\n        this.getMap().then(function (olMap) {\r\n            olMap.getView().setRotation(rotation);\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getRotation = function () {\r\n        return this.map.getView().getRotation();\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getResolutions = function () {\r\n        return this.map.getView().getResolutions() || [];\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getCoordinateFromPixel = function (xy) {\r\n        return this.map.getCoordinateFromPixel(xy);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getPixelFromCoordinate = function (coord) {\r\n        return this.map.getPixelFromCoordinate(coord);\r\n    };\r\n\r\n    TC.wrap.Map.prototype.getViewport = function (options) {\r\n        const self = this;\r\n        var result;\r\n        var opts = options || {\r\n        };\r\n        if (opts.synchronous) {\r\n            result = self.map.getViewport();\r\n        }\r\n        else {\r\n            result = new Promise(function (resolve, reject) {\r\n                self.getMap().then(function (olMap) {\r\n                    resolve(olMap.getViewport());\r\n                });\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.isNative = function (map) {\r\n        return map instanceof ol.Map;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.isGeo = function () {\r\n        var units = this.map.getView().getProjection().getUnits();\r\n        return !units || units === ol.proj.Units.DEGREES;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.addPopup = function (popupCtl) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            var draggable = popupCtl.options.draggable === undefined || popupCtl.options.draggable;\r\n            TC.loadJS(\r\n                draggable && !window.Draggabilly,\r\n                [TC.apiLocation + TC.Consts.url.DRAGGABILLY],\r\n                function () {\r\n                    self.getMap().then(function (olMap) {\r\n                        if (!popupCtl.popupDiv) {\r\n                            // No popups yet\r\n                            const popupDiv = TC.Util.getDiv();\r\n                            popupCtl.popupDiv = popupDiv;\r\n                            if (window.$) {\r\n                                popupCtl.$popupDiv = $(popupDiv);\r\n                            }\r\n                            popupDiv.classList.add(TC.control.Popup.prototype.CLASS);\r\n                            popupCtl.contentDiv = TC.Util.getDiv();\r\n                            popupCtl.contentDiv.classList.add(TC.control.Popup.prototype.CLASS + '-content');\r\n                            popupCtl.popupDiv.appendChild(popupCtl.contentDiv);\r\n                            popupCtl.menuDiv = TC.Util.getDiv();\r\n                            popupCtl.menuDiv.classList.add(TC.control.Popup.prototype.CLASS + '-menu');\r\n                            popupCtl.popupDiv.appendChild(popupCtl.menuDiv);\r\n                            self.parent.div.appendChild(popupDiv);\r\n\r\n                            var popup = new ol.Overlay({\r\n                                element: popupDiv,\r\n                                positioning: ol.OverlayPositioning.BOTTOM_LEFT\r\n                            });\r\n                            olMap.addOverlay(popup);\r\n                            popupCtl.wrap.popup = popup;\r\n\r\n                            //popupCtl._firstRender.resolve();\r\n                            //popupCtl.trigger(TC.Consts.event.CONTROLRENDER);\r\n                            const olMapViewport = olMap.getViewport();\r\n\r\n                            if (draggable) {\r\n                                const container = popupCtl.popupDiv.parentElement;\r\n                                popupCtl.popupDiv.classList.add(TC.Consts.classes.DRAGGABLE);\r\n\r\n\r\n                                container.addEventListener('touchmove', function (e) {\r\n                                    var parent = e.target;\r\n                                    do {\r\n                                        if (parent.matches('.tc-ctl-finfo-layer-content')) {\r\n                                            e.stopPropagation();\r\n                                            break;\r\n                                        }\r\n                                        parent = parent.parentElement;\r\n                                    }\r\n                                    while (parent);\r\n                                }, { passive: true });\r\n\r\n                                // Tuneamos Draggabilly para que acepte excepciones a los asideros del elemento.\r\n                                const drag = new Draggabilly(container, {\r\n                                    not: 'th,td, td *,input,select,.tc-ctl-finfo-coords'\r\n                                });\r\n                                drag.handleEvent = function (event) {\r\n                                    const notSelector = this.options.not;\r\n                                    if (notSelector) {\r\n                                        let elm = event.target;\r\n                                        let isException = false;\r\n                                        while (elm && !isException) {\r\n                                            isException = elm.matches(notSelector);\r\n                                            elm = elm.parentElement;\r\n                                        }\r\n                                        if (isException) {\r\n                                            return;\r\n                                        }\r\n                                    }\r\n                                    Draggabilly.prototype.handleEvent.call(this, event);\r\n                                };\r\n                                drag.on('pointerDown', function (e, pointer) {\r\n                                    var bcr = e.target.getBoundingClientRect();\r\n                                    // Si estamos pulsando sobre una barra de scroll abortamos drag\r\n                                    if (bcr.left + e.target.clientWidth < pointer.pageX || bcr.top + e.target.clientHeight < pointer.pageY) {\r\n                                        drag._pointerCancel(e, pointer);\r\n                                        return false;\r\n                                    }\r\n                                });\r\n                                drag.on('dragStart', function (e, pointer) {\r\n                                    popupCtl.setDragging(true);\r\n                                    popupCtl._currentOffset = popup.getOffset();\r\n                                    if (popupCtl._previousContainerPosition) {\r\n                                        var mapSize = olMap.getSize();\r\n                                        popup.setPosition(olMap.getCoordinateFromPixel([popupCtl._previousContainerPosition[0], mapSize[1] - popupCtl._previousContainerPosition[1]]));\r\n                                        popupCtl._currentOffset = [0, 0];\r\n                                        popup.setOffset(popupCtl._currentOffset);\r\n                                        delete popupCtl._previousContainerPosition;\r\n                                    }\r\n                                    else {\r\n                                        popupCtl._currentOffset = popup.getOffset();\r\n                                    }\r\n                                });\r\n                                drag.on('dragEnd', function (e) {\r\n                                    popupCtl.setDragging(false);\r\n                                    var coord1 = olMap.getCoordinateFromPixel([0, 0]);\r\n                                    var coord2 = olMap.getCoordinateFromPixel(popup.getOffset());\r\n                                    var coordDelta = [coord2[0] - coord1[0], coord2[1] - coord1[1]];\r\n                                    var position = popup.getPosition();\r\n                                    popup.setPosition([position[0] + coordDelta[0], position[1] + coordDelta[1]]);\r\n                                    popup.setOffset([0, 0]);\r\n                                    popupCtl._currentOffset = [0, 0];\r\n\r\n                                    const containerRect = container.getBoundingClientRect();\r\n                                    popupCtl._previousContainerPosition = [containerRect.left, containerRect.bottom];\r\n                                });\r\n                                //drag.on('dragMove', function (e, pointer, moveVector) {\r\n                                //popup.setOffset([popupCtl._currentOffset[0] + moveVector.x, popupCtl._currentOffset[1] + moveVector.y]);\r\n                                //});\r\n                                //.drag(function (ev, dd) {\r\n                                //    if (!ev.buttons && !Modernizr.touch) { // Evitamos que se mantenga el drag si no hay botón pulsado (p.e. en IE pulsando una scrollbar)\r\n                                //        return false;\r\n                                //    }\r\n                                //    popup.setOffset([popupCtl._currentOffset[0] + dd.deltaX, popupCtl._currentOffset[1] + dd.deltaY]);\r\n                                //}, {\r\n                                //    not: 'th,td, td *,input,select,.tc-ctl-finfo-coords'\r\n                                //    })                                \r\n                            }\r\n\r\n                            const mouseMoveHandler = function (e) {\r\n                                const viewport = olMap.getViewport();\r\n                                var hit = false;\r\n                                if (!self.parent.activeControl || !self.parent.activeControl.isExclusive()) {\r\n                                    var pixel = olMap.getEventPixel(e);\r\n                                    hit = olMap.forEachFeatureAtPixel(pixel, function (feature, layer) {\r\n                                        var result = true;\r\n                                        if (feature._wrap && !feature._wrap.parent.showsPopup) {\r\n                                            result = false;\r\n                                        }\r\n                                        return result;\r\n                                    },\r\n                                        {\r\n                                            hitTolerance: hitTolerance\r\n                                        });\r\n                                }\r\n                                if (hit) {\r\n                                    viewport.style.cursor = 'pointer';\r\n                                } else {\r\n                                    viewport.style.cursor = '';\r\n                                }\r\n                            };\r\n\r\n                            // change mouse cursor when over marker\r\n                            olMapViewport.removeEventListener(MOUSEMOVE, mouseMoveHandler);\r\n                            olMapViewport.addEventListener(MOUSEMOVE, mouseMoveHandler);\r\n                        }\r\n                    });\r\n                    resolve();\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n    TC.wrap.Map.prototype.hidePopup = function (popupCtl) {\r\n        var self = this;\r\n        self.parent.currentFeature = null;\r\n        if (popupCtl.popupDiv) {\r\n            popupCtl.popupDiv.classList.remove(TC.Consts.classes.VISIBLE);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.manageSize = function () {\r\n        const self = this;\r\n\r\n        // Para controlar que el mapa no se vea borroso porque no encajan el width y height con los width y height de CSS\r\n        const manageSize = function (event) {\r\n            var pixelRatio = window.devicePixelRatio || 1;\r\n            var canvas = event.context.canvas;\r\n            var bounding = canvas.getBoundingClientRect();\r\n\r\n            var idealWidth = pixelRatio * bounding.width;\r\n            var idealHeight = pixelRatio * bounding.height;\r\n\r\n            if (idealWidth !== bounding.width || !Number.isInteger(idealWidth)) {\r\n                idealWidth = Math.round(idealWidth);\r\n            }\r\n\r\n            if (idealHeight !== bounding.height || !Number.isInteger(idealHeight)) {\r\n                idealHeight = Math.round(idealHeight);\r\n            }\r\n\r\n            if (idealWidth !== bounding.width || idealHeight !== bounding.height) {\r\n                var newSize = [idealWidth, idealHeight];\r\n                event.target.setSize(newSize);\r\n            }\r\n        };\r\n\r\n        if (!TC.Util.detectMobile()) {\r\n            self.on(POSTCOMPOSE, manageSize);\r\n        }\r\n    };\r\n\r\n    var getFormatFromName = function (name) {\r\n        switch (name) {\r\n            case TC.Consts.layerType.KML:\r\n            case TC.Consts.mimeType.KML:\r\n            case TC.Consts.format.KMZ:\r\n                return new ol.format.KMLCustom({\r\n                    showPointNames: false\r\n                });\r\n            case TC.Consts.layerType.GPX:\r\n            case TC.Consts.mimeType.GPX:\r\n                return new ol.format.GPXCustom();\r\n            case TC.Consts.layerType.GEOJSON:\r\n            case TC.Consts.mimeType.GEOJSON:\r\n            case TC.Consts.mimeType.JSON:\r\n            case TC.Consts.format.JSON:\r\n                return new ol.format.GeoJSON();\r\n            case TC.Consts.format.GML2:\r\n                return new ol.format.GML2();\r\n            case TC.Consts.format.GML3:\r\n                return new ol.format.GML3();\r\n            case TC.Consts.format.GML32:\r\n                return new ol.format.GML32();\r\n            case TC.Consts.mimeType.GML:\r\n            case TC.Consts.format.GML:\r\n                return new ol.format.GML();\r\n            case TC.Consts.format.TOPOJSON:\r\n                return new ol.format.TopoJSON();\r\n            case TC.Consts.format.WKT:\r\n                return new ol.format.WKT();\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.exportFeatures = function (features, options) {\r\n        var self = this;\r\n        options = options || {};\r\n        var nativeStyle = createNativeStyle({\r\n            styles: self.parent.options.styles\r\n        });\r\n        var olFeatures = features.map(function (elm) {\r\n            var result = elm.wrap.feature.clone();\r\n            //URI:replicamos el id a la feature OL\r\n            result.id_ = elm.id;\r\n            // Si la feature no tiene estilo propio le ponemos el definido por la API\r\n            if (!result.getStyle()) {\r\n                result.setStyle(nativeStyle);\r\n            }\r\n            // Miramos si tiene texto, en cuyo caso la features se clona para no contaminar la feature orignal \r\n            // y al clon se le añade el texto como atributo (necesario para exportar etiquetas en KML y GPX)\r\n            const text = getNativeFeatureStyle(result).getText();\r\n            if (text) {\r\n                const name = text.getText();\r\n                if (name) {\r\n                    result.setProperties({\r\n                        name: text.getText()\r\n                    });\r\n                }\r\n            }\r\n            return result;\r\n        });\r\n        var format = getFormatFromName(options.format);\r\n\r\n        if (format instanceof ol.format.KML) {\r\n            // KML no tiene estilo para puntos aparte del de icono. Para puntos sin icono creamos uno en SVG.\r\n            olFeatures = olFeatures\r\n                .map(function (feature) {\r\n                    const geom = feature.getGeometry();\r\n                    if (geom instanceof ol.geom.Point) {\r\n                        // Si el punto no tiene icono, creamos uno nuevo con un icono generado como data URI a partir del estilo\r\n                        var style = getNativeFeatureStyle(feature);\r\n                        const shape = style.getImage();\r\n                        if (shape instanceof ol.style.RegularShape) {\r\n                            const radius = shape.getRadius();\r\n                            const stroke = shape.getStroke();\r\n                            const strokeWidth = stroke.getWidth();\r\n                            const diameter = (2 * radius) + strokeWidth + 1;\r\n                            const position = diameter / 2;\r\n                            const canvas = document.createElement('canvas');\r\n                            canvas.width = diameter;\r\n                            canvas.height = diameter;\r\n                            const vectorContext = ol.render.toContext(canvas.getContext('2d'), {\r\n                                size: [diameter, diameter]\r\n                            });\r\n                            const text = style.getText();\r\n                            style = style.clone();\r\n                            style.setText(); // Quitamos el texto para que no salga en el canvas\r\n                            vectorContext.setStyle(style);\r\n                            vectorContext.drawGeometry(new ol.geom.Point([position, position]));\r\n                            const newFeature = new ol.Feature(geom);\r\n                            newFeature.setProperties(feature.getProperties());\r\n                            newFeature.setStyle(new ol.style.Style({\r\n                                image: new ol.style.Icon({\r\n                                    src: canvas.toDataURL('image/png')\r\n                                }),\r\n                                text: text\r\n                            }));\r\n                            return newFeature;\r\n                        }\r\n                    }\r\n                    return feature;\r\n                });\r\n            // KML no pone etiquetas a líneas y polígonos. En esos casos ponemos un punto con la etiqueta.\r\n            const pointsToAdd = [];\r\n            olFeatures.forEach(function (feature) {\r\n                var style = getNativeFeatureStyle(feature);\r\n                const geometry = feature.getGeometry();\r\n                const text = style.getText();\r\n                var point;\r\n                if (text) {\r\n                    switch (true) {\r\n                        case geometry instanceof ol.geom.LineString:\r\n                            point = new ol.geom.Point(geometry.getCoordinateAt(0.5));\r\n                            break;\r\n                        case geometry instanceof ol.geom.Polygon:\r\n                            point = geometry.getInteriorPoint();\r\n                            break;\r\n                        case geometry instanceof ol.geom.MultiLineString:\r\n                            // Seleccionamos la línea más larga\r\n                            const lineStrings = geometry.getLineStrings();\r\n                            var maxLength = -1;\r\n                            point = new ol.geom.Point(lineStrings[lineStrings\r\n                                .map(function (line) {\r\n                                    return line.getLength();\r\n                                })\r\n                                .reduce(function (prev, cur, idx) {\r\n                                    if (cur > maxLength) {\r\n                                        maxLength = cur;\r\n                                        return idx;\r\n                                    }\r\n                                    return prev;\r\n                                }, -1)].getCoordinateAt(0.5));\r\n                            break;\r\n                        case geometry instanceof ol.geom.MultiPolygon:\r\n                            // Seleccionamos el polígono más grande\r\n                            const polygons = geometry.getPolygons();\r\n                            var maxArea = -1;\r\n                            point = polygons[polygons\r\n                                .map(function (polygon) {\r\n                                    return polygon.getArea();\r\n                                })\r\n                                .reduce(function (prev, cur, idx) {\r\n                                    if (cur > maxArea) {\r\n                                        maxArea = cur;\r\n                                        return idx;\r\n                                    }\r\n                                    return prev;\r\n                                }, -1)].getInteriorPoint();\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    if (point) {\r\n                        const newFeature = new ol.Feature(point);\r\n                        newFeature.setStyle(new ol.style.Style({\r\n                            text: text.clone(),\r\n                            image: new ol.style.Icon({\r\n                                crossOrigin: 'anonymous',\r\n                                src: TC.apiLocation + 'TC/css/img/transparent.gif'\r\n                            })\r\n                        }));\r\n                        pointsToAdd.push(newFeature);\r\n                    }\r\n                }\r\n            });\r\n            if (pointsToAdd.length) {\r\n                olFeatures = olFeatures.concat(pointsToAdd);\r\n            }\r\n        }\r\n\r\n        if (format instanceof ol.format.GMLBase) {\r\n            format.hasZ = features[0].getGeometryStride() >= 3;\r\n            format.srsName = self.parent.crs;\r\n            // Quitamos los espacios en blanco de los nombres de atributo en las features: no son válidos en GML.\r\n            olFeatures = olFeatures.map(function (f) {\r\n                var temp = f.clone();\r\n                temp.id_ = f.id_;\r\n                return temp;\r\n            });\r\n            olFeatures.forEach(function (f) {\r\n                const values = f.values_\r\n                const keysToChange = [];\r\n                for (var key in values) {\r\n                    if (key.indexOf(' ') >= 0) {\r\n                        keysToChange.push(key);\r\n                    }\r\n                }\r\n                keysToChange.forEach(function (key) {\r\n                    // Quitamos espacios en blanco y evitamos que empiece por un número\r\n                    var newKey = key.replace(/ /g, '_');\r\n                    if (/^\\d/.test(newKey)) {\r\n                        newKey = '_' + newKey;\r\n                    }\r\n                    if (key !== newKey) {\r\n                        while (values[newKey] !== undefined) {\r\n                            newKey += '_';\r\n                        }\r\n                    }\r\n                    values[newKey] = values[key];\r\n                    delete values[key];\r\n                });\r\n            });\r\n\r\n            format.featureNS = \"http://www.opengis.net/gml\";\r\n            format.featureType = \"feature\";\r\n            var featuresNode = format.writeFeaturesNode(olFeatures, {\r\n                featureProjection: self.parent.crs\r\n            });\r\n            featuresNode.querySelectorAll(\"feature geometry > * *[srsName]\").forEach((item) => { item.removeAttribute(\"srsName\") })\r\n\r\n            var featureCollectionNode = ol.xml.createElementNS('http://www.opengis.net/wfs',\r\n                'FeatureCollection');\r\n            featureCollectionNode.setAttributeNS('http://www.w3.org/2001/XMLSchema-instance',\r\n                'xsi:schemaLocation', format.schemaLocation);\r\n\r\n            featuresNode.removeAttribute('xmlns:xsi');\r\n            featuresNode.removeAttribute('xsi:schemaLocation');\r\n            featureCollectionNode.appendChild(featuresNode);\r\n            //ol.xml.setAttributeNS(node, 'http://www.w3.org/2001/XMLSchema-instance',\r\n            //    'xsi:schemaLocation', this.schemaLocation);\r\n            return featureCollectionNode.outerHTML;\r\n        }\r\n\r\n        if (format instanceof ol.format.GPX) {\r\n            // Queremos exportar tracks en vez de routes. OpenLayers exporta LineStrings como routes y MultiLineStrings como tracks.\r\n            olFeatures = olFeatures.map(function (f) {\r\n                const geom = f.getGeometry();\r\n                if (geom instanceof ol.geom.LineString) {\r\n                    f = f.clone();\r\n                    f.setGeometry(new ol.geom.MultiLineString([geom.getCoordinates()]));\r\n                }\r\n                return f;\r\n            });\r\n        }\r\n\r\n        var result = format.writeFeatures(olFeatures, {\r\n            dataProjection: 'EPSG:4326',\r\n            featureProjection: self.parent.crs\r\n        });\r\n        if (format instanceof ol.format.GPX) {\r\n            // Este formato no procesa bien las elevaciones cuando son nulas. Hemos hecho un preproceso para transformarlas en NaN y ahora hay que eliminarlas.\r\n            result = result.replace(/<ele>NaN<\\/ele>/g, '');\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var isFileDrag = function (e) {\r\n        for (var i = 0, len = e.dataTransfer.types.length; i < len; i++) {\r\n            if (e.dataTransfer.types[i] === 'Files') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n    var handleDragEnter = function (e) {\r\n        var self = this;\r\n        if (isFileDrag(e)) { // Solo hay gestión si lo que se arrastra es un archivo\r\n            self.getMap()._wrap.parent.div.classList.add(TC.Consts.classes.DROP);\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n    };\r\n\r\n    var handleDragExit = function (e) {\r\n        var self = this;\r\n        if (isFileDrag(e)) { // Solo hay gestión si lo que se arrastra es un archivo\r\n            var map = self.getMap()._wrap.parent;\r\n            if (e.target === self.target) {\r\n                map.div.classList.remove(TC.Consts.classes.DROP);\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.enableDragAndDrop = function (options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        var ddOptions = {\r\n            formatConstructors: [\r\n                ol.format.KMLCustom,\r\n                ol.format.GPXCustom,\r\n                ol.format.GML2,\r\n                ol.format.GML3CRS84,\r\n                ol.format.GML2CRS84,\r\n                ol.format.GML3,\r\n                ol.format.GeoJSON,\r\n                function () {\r\n                    return new ol.format.WKT({\r\n                        splitCollection: true\r\n                    });\r\n                },\r\n                ol.format.TopoJSON\r\n            ]\r\n        };\r\n        if (opts.dropTarget) {\r\n            ddOptions.target = TC.getDiv(opts.dropTarget);\r\n        }\r\n        else {\r\n            ddOptions.target = self.parent.div;\r\n        }\r\n        var zipFiles = null;\r\n        var ddInteraction = new ol.interaction.DragAndDrop(ddOptions);\r\n        ddInteraction.on('addfeatures', function (e) {\r\n            var featurePromises = e.features ? e.features.map(function (elm) {\r\n                if (!elm.getId()) {\r\n                    elm.setId(TC.getUID());\r\n                }\r\n                return TC.wrap.Feature.createFeature(elm);\r\n            }) : [];\r\n            Promise.all(featurePromises).then(function (features) {\r\n                var li = self.parent.getLoadingIndicator();\r\n                if (li) {\r\n                    li.removeWait(self._featureImportWaitId);\r\n                }\r\n                const featuresWithGeometry = features.filter(f => f.geometry);\r\n                if (featuresWithGeometry.length) {\r\n                    self.parent.trigger(TC.Consts.event.FEATURESIMPORT, {\r\n                        features: featuresWithGeometry, fileName: e.file.name, dropTarget: e.target.target\r\n                    });\r\n                }\r\n                if (!features.length || features.some(f => !f.geometry)) {\r\n                    if (zipFiles)\r\n                        if (++zipFiles.failed < zipFiles.total)\r\n                            return;\r\n                        else\r\n                            e.file = new File([], zipFiles.zipName);\r\n                    self.parent.trigger(TC.Consts.event.FEATURESIMPORTERROR, {\r\n                        file: e.file\r\n                    });\r\n                }\r\n            });\r\n        });\r\n        if (opts.once) {\r\n            ddInteraction.map_ = self.map;\r\n        }\r\n        else {\r\n            self.map.addInteraction(ddInteraction);\r\n            var dropArea = ddInteraction.target ? ddInteraction.target : self.map.getViewport();\r\n\r\n            const originalFnc = ddInteraction.handleResult_;\r\n\r\n            var zipUncompressed = {}\r\n            var getFileData = function (file) {\r\n                if (file.arrayBuffer)\r\n                    return file.arrayBuffer();\r\n                else {\r\n                    return new Promise(function (resolve, reject) {\r\n                        var fr = new FileReader()\r\n                        fr.onload = function (e) {\r\n                            resolve(new Uint8Array(this.result));\r\n                        };\r\n                        fr.onerror = reject;\r\n                        fr.readAsArrayBuffer(file)\r\n                    })\r\n                }\r\n            }\r\n            var getFileText = function (file) {\r\n                if (file.text)\r\n                    return file.text();\r\n                else {\r\n                    return new Promise(function (resolve, reject) {\r\n                        var fr = new FileReader()\r\n                        fr.onload = function (e) {\r\n                            resolve(new Uint8Array(this.result));\r\n                        };\r\n                        fr.onerror = reject;\r\n                        fr.readAsText(file)\r\n                    })\r\n                }\r\n            }\r\n\r\n            ddInteraction.handleResult_ = async function (file, evt) {\r\n                var _self = this;\r\n                //URI: si el fichero es ZIP o KMZ lo proceso sino llamo a la función original con los datos originales\r\n                zipFiles = null;\r\n                const defaultEncoding = \"ISO-8859-1\"\r\n                if (file.type === \"application/x-zip-compressed\" || file.type === \"application/vnd.google-earth.kmz\" || (!file.type && file.name.match(/\\.kmz|\\.zip$/ig))) {\r\n                    TC.loadJS(!window.JSZip, [TC.apiLocation + 'lib/jszip/jszip', TC.apiLocation + 'lib/iconv-lite/iconv-lite'], function () {\r\n                        (async function (file) {\r\n                            var zip = new JSZip();\r\n                            try {\r\n                                var zipContent = await zip.loadAsync(file, {\r\n                                    decodeFileName: function (bytes) {\r\n                                        return iconv.decode(bytes, 'cp858');\r\n                                    }\r\n                                });\r\n                            }\r\n                            catch (err) {\r\n                                throw err;\r\n                            }\r\n                            const zipFileName = file.name;\r\n                            //busco archivos shape\r\n                            var shpFiles = zip.file(/\\.shp$/ig);\r\n                            if (shpFiles.length === 0) {\r\n                                // si está vacio lanzo un error\r\n                                if (!Object.keys(zipContent.files).length)\r\n                                    self.parent.trigger(TC.Consts.event.FEATURESIMPORTERROR, {\r\n                                        file: file\r\n                                    });\r\n                                //URI:Leo el contenido del zip e itero por cada fichero\r\n                                zipContent.forEach(async function (fileName, file) {\r\n                                    if (file.dir) return;\r\n                                    zipFiles = { total: Object.keys(zipContent.files).length, failed: 0, zipName: zipFileName };\r\n                                    //TODO: Desestimar fichero no geográficos\r\n                                    file.async(\"blob\").then(function (data) {\r\n                                        const newFile = new File([data], fileName);\r\n                                        //URI: El contenid del fichero lo manejo con un filereader que es lo que usa internamente la función original para leer las features \r\n                                        const reader = new FileReader();\r\n                                        reader.onload = function (evt) {\r\n                                            console.log(newFile.name);\r\n                                            //URI: una vez que he cargado los datos nuevos en el filereader llamo a la función original pasando el nuevo File y el nuevo FileReader\r\n                                            //originalFnc.apply(_self, [newFile, evt]);\r\n                                            //flacunza: mejora de lo anterior: se llama al nuevo handleResult_ en vez de a la función original, así admite GeoPackage zipeados y zips anidados.\r\n                                            _self.handleResult_(newFile, evt);\r\n                                        };\r\n                                        reader.readAsText(newFile);\r\n                                    });\r\n                                });\r\n                            }\r\n                            else {\r\n                                //si es un shape uso la libreria shp.js\r\n                                TC.loadJS(!window.shp, TC.apiLocation + 'lib/shpjs/shp', async function () {\r\n                                    for (let i = 0; i < shpFiles.length; i++) {\r\n                                        let shapeBaseNameMatch = /(.*\\/)*(.+?)(\\.[^.]*$|$)/i.exec(shpFiles[i].name)\r\n                                        let shapeBaseName = shapeBaseNameMatch[2] || shapeBaseNameMatch[1];\r\n\r\n                                        var shpFile = zipContent.file(new RegExp(shapeBaseName + \".shp$\", \"g\"))[0];\r\n                                        var prj = zipContent.file(new RegExp(shapeBaseName + \".prj$\", \"g\"))[0];\r\n                                        var encoding = zipContent.file(new RegExp(\"(\" + shapeBaseName + \".cst)|(\" + shapeBaseName + \".cpg)$\", \"g\"))[0];\r\n                                        var dbf = zipContent.file(new RegExp(shapeBaseName + \".dbf$\", \"g\"))[0];\r\n\r\n                                        var shapes;\r\n                                        try {\r\n                                            shapes = await shp.combine([\r\n                                                shp.parseShp(await getFileData(await shpFile.async(\"blob\")), await getFileText(await prj.async(\"blob\"))),\r\n                                                shp.parseDbf(await getFileData(await dbf.async(\"blob\")), encoding ? await getFileText(await encoding.async(\"blob\")) : defaultEncoding)])\r\n                                        }\r\n                                        catch (err) {\r\n                                            self.parent.trigger(TC.Consts.event.FEATURESIMPORTERROR, {\r\n                                                file: file\r\n                                            });\r\n                                            originalFnc.apply(_self, [file, { target: { result: null } }]);\r\n                                        }\r\n                                        var newFile = new File([], shapeBaseName + '.shp');\r\n                                        originalFnc.apply(_self, [newFile, { target: { result: JSON.stringify(shapes) } }]);\r\n                                    }\r\n                                })\r\n                            }\r\n\r\n                        })(file);\r\n                    });\r\n                }\r\n                else if (/\\.gpkg$/ig.test(file.name))\r\n                    TC.loadJS(true, TC.apiLocation + 'lib/geopackage/geopackage.min.js', async function () {\r\n                        const manageError = function (err) {\r\n                            if (err)\r\n                                TC.error(err, TC.Consts.msgErrorMode.CONSOLE);\r\n                            originalFnc.apply(_self, [file, { target: { result: null } }]);\r\n                        };\r\n                        const loadFile = async function (array) {\r\n                            geopackage.open(array).then(async function (myPackage) {\r\n                                const vectorLayers = myPackage.getFeatureTables();\r\n                                const numTables = vectorLayers.length;\r\n                                var finished = 0, notLoaded = 0;\r\n                                var warnings = [];\r\n\r\n                                //me subscribo al evento\r\n                                const manageLoad = function (evt) {\r\n                                    if (++finished === numTables) {\r\n                                        self.parent.off(TC.Consts.event.FEATURESIMPORT, manageLoad);\r\n                                        for (var i = 0; i < warnings.length; i++)\r\n                                            self.parent.trigger(TC.Consts.event.FEATURESIMPORTPARTIAL, {\r\n                                                file: file,\r\n                                                table: warnings[i].table,\r\n                                                reason: warnings[i].reason\r\n                                            });\r\n                                    }\r\n                                }\r\n                                self.parent.on(TC.Consts.event.FEATURESIMPORT, manageLoad);\r\n                                for (var i = 0; i < vectorLayers.length; i++) {\r\n                                    //vamos a ver si construimos en JSON\r\n\r\n                                    var _currentSRSId = myPackage.contentsDao.queryForId(vectorLayers[i]).srs_id;\r\n                                    try {\r\n                                        const obj = await geopackage.iterateGeoJSONFeaturesFromTable(myPackage, vectorLayers[i]);\r\n\r\n                                        var arr = [];\r\n                                        for (const f of obj.results) {\r\n                                            if (f.geometry)\r\n                                                arr[arr.length] = f;\r\n                                        }\r\n                                        if (!arr.length) throw 'empty table';\r\n\r\n                                        var jsonObj = {\r\n                                            \"type\": \"FeatureCollection\",\r\n                                            \"features\": arr\r\n                                        }\r\n                                        var newFile = new File([], vectorLayers[i]);\r\n                                        originalFnc.apply(_self, [newFile, { target: { result: JSON.stringify(jsonObj) } }]);\r\n\r\n                                    } catch (err) {\r\n                                        notLoaded++;\r\n                                        manageLoad({ fileName: vectorLayers[i] });\r\n                                        warnings.push({ table: vectorLayers[i], reason: err });\r\n                                        TC.error(\"Error: \" + err + \" Table: \" + vectorLayers[i], TC.Consts.msgErrorMode.CONSOLE);\r\n                                    }\r\n                                }\r\n                                if (numTables === notLoaded) {\r\n                                    manageError(\"Error: No hay capas vectoriales válidas que mostrar\");\r\n                                }\r\n                            }, manageError);\r\n                        }\r\n                        try {\r\n                            loadFile(new Uint8Array(await getFileData(file)));\r\n                        }\r\n                        catch (ex) {\r\n                            manageError(ex);\r\n                        }\r\n                    });\r\n                else if (/\\.(shp|dbf|prj|cst|cpg|dbf|sbn|sbx|shx)$/ig.test(file.name)) {\r\n                    const fileName = file.name.substring(0, file.name.lastIndexOf(\".\"));\r\n                    const extension = file.name.substring(file.name.lastIndexOf(\".\") + 1);\r\n                    if (!zipUncompressed.hasOwnProperty(fileName)) {\r\n                        zipUncompressed[fileName] = {};\r\n                    }\r\n                    if (/\\.(cst|cpg|prj)$/ig.test(file.name))\r\n                        zipUncompressed[fileName][extension] = await getFileText(file);\r\n                    else\r\n                        zipUncompressed[fileName][extension] = await getFileData(file);\r\n                    clearTimeout(zipUncompressed[fileName].timer);\r\n                    zipUncompressed[fileName].timer = setTimeout(function () {\r\n                        TC.loadJS(!window.shp, TC.apiLocation + 'lib/shpjs/shp', async function () {\r\n                            var shapes;\r\n                            try {\r\n                                shapes = await shp.combine([\r\n                                    shp.parseShp(zipUncompressed[fileName][\"shp\"], zipUncompressed[fileName][\"prj\"], zipUncompressed[fileName][\"str\"]),\r\n                                    shp.parseDbf(zipUncompressed[fileName][\"dbf\"], zipUncompressed[fileName][\"cst\"] || zipUncompressed[fileName][\"cpg\"] || defaultEncoding)])\r\n                                delete zipUncompressed[fileName];\r\n                            }\r\n                            catch (err) {\r\n                                self.parent.trigger(TC.Consts.event.FEATURESIMPORTERROR, {\r\n                                    file: file\r\n                                });\r\n                                originalFnc.apply(_self, [file, { target: { result: null } }]);\r\n                            }\r\n                            (shapes instanceof Array ? shapes : [shapes]).forEach(function (collection) {\r\n                                var newFile = new File([], fileName + '.shp');\r\n                                originalFnc.apply(_self, [newFile, { target: { result: JSON.stringify(collection) } }]);\r\n                            });\r\n                        });\r\n                    }, 1000);\r\n\r\n                }\r\n                else {\r\n                    originalFnc.apply(_self, [file, evt]);\r\n                }\r\n            }\r\n\r\n            // Añadidos gestores de eventos para mostrar el indicador visual de drop.\r\n            var handleDrop = function (e) {\r\n                if (isFileDrag(e)) { // Solo hay gestión si lo que se arrastra es un archivo\r\n                    var map = self.parent;\r\n                    if (ddInteraction.target === e.target) {\r\n                        var li = map.getLoadingIndicator();\r\n                        if (li) {\r\n                            self._featureImportWaitId = li.addWait();\r\n                        }\r\n                        e.stopPropagation();\r\n                    }\r\n                    else {\r\n                        e.preventDefault();\r\n                    }\r\n                    map.div.classList.remove(TC.Consts.classes.DROP);\r\n                }\r\n            };\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(dropArea, DRAGENTER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, DRAGENTER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(dropArea, DRAGOVER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, DRAGOVER,\r\n                    handleDragEnter, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(dropArea, DROP,\r\n                    handleDrop, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, DROP,\r\n                    handleDrop, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, 'dragleave',\r\n                    handleDragExit, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, 'dragend',\r\n                    handleDragExit, ddInteraction)\r\n            );\r\n            ddInteraction.dropListenKeys_.push(\r\n                ol.events.listen(document.body, 'dragexit',\r\n                    handleDragExit, ddInteraction)\r\n            );\r\n            document.addEventListener('mouseenter', function (e) {\r\n                if (!e.buttons) {\r\n                    self.parent.div.classList.remove(TC.Consts.classes.DROP);\r\n                }\r\n            }, false);\r\n            self.ddEnabled = true;\r\n        }\r\n        return ddInteraction;\r\n    };\r\n\r\n    TC.wrap.Map.prototype.loadFiles = function (files, options) {\r\n        var self = this;\r\n        var ddInteraction;\r\n        if (self.ddEnabled) {\r\n            self.map.getInteractions().forEach(function (elm) {\r\n                if (elm instanceof ol.interaction.DragAndDrop) {\r\n                    ddInteraction = elm;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            ddInteraction = self.enableDragAndDrop({\r\n                once: true\r\n            });\r\n        }\r\n\r\n        if (ddInteraction && options) {\r\n            var currentTarget = ddInteraction.target;\r\n            ddInteraction.target = options.control;\r\n            const undoTarget = function (e) {\r\n                ddInteraction.target = currentTarget;\r\n\r\n                self.parent.off(TC.Consts.event.FEATURESIMPORT, undoTarget);\r\n            };\r\n            self.parent.on(TC.Consts.event.FEATURESIMPORT, undoTarget);\r\n        }\r\n\r\n        var li = self.parent.getLoadingIndicator();\r\n        if (li) {\r\n            self._featureImportWaitId = li.addWait();\r\n        }\r\n        for (let i = 0, ii = files.length; i < ii; ++i) {\r\n            const file = files.item(i);\r\n            const reader = new FileReader();\r\n            reader.addEventListener(ol.events.EventType.LOAD, ddInteraction.handleResult_.bind(ddInteraction, file));\r\n            reader.readAsText(file);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Map.prototype.linkTo = function (map) {\r\n        const self = this;\r\n        const onChangeView = function () {\r\n            const thisView = self.map.getView();\r\n            const thatView = map.wrap.map.getView();\r\n            setTimeout(function () {\r\n                if (thisView !== thatView) {\r\n                    self.map.setView(thatView);\r\n                }\r\n            }, 100);\r\n        };\r\n        map.on('change:view', onChangeView);\r\n        onChangeView();\r\n    };\r\n\r\n    /*\r\n     *  getVisibility: gets the OpenLayers layer visibility\r\n     *  Result: boolean\r\n     */\r\n    TC.wrap.Layer.prototype.getVisibility = function () {\r\n        const self = this;\r\n        var result = false;\r\n        if (self.layer) {\r\n            result = self.layer.getVisible();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    /*\r\n     *  setVisibility: Sets the OpenLayers layer visibility\r\n     *  Parameter: boolean\r\n     */\r\n    TC.wrap.Layer.prototype.setVisibility = function (visible) {\r\n        const self = this;\r\n        self.getLayer().then(function (layer) {\r\n            layer.setVisible(visible);\r\n        });\r\n    };\r\n\r\n    TC.wrap.Layer.prototype.isNative = function (layer) {\r\n        return layer instanceof ol.layer.Layer;\r\n    };\r\n\r\n    TC.wrap.Layer.prototype.setProjection = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const layer = self.parent;\r\n        if (layer.map) {\r\n            const unitRatio = getUnitRatio.call(self, {\r\n                crs: options.crs,\r\n                extentInDegrees: ol.proj.transformExtent(layer.map.getExtent(), layer.map.crs, 'EPSG:4326')\r\n            });\r\n\r\n            var resolutions = layer.getResolutions();\r\n            if (resolutions && resolutions.length) {\r\n                resolutions = resolutions.map(function (r) {\r\n                    return r / unitRatio;\r\n                });\r\n                layer.wrap.layer.setMaxResolution(resolutions[0]);\r\n                layer.wrap.layer.setMinResolution(resolutions[resolutions.length - 1]);\r\n            }\r\n            else {\r\n                // de metros a grados\r\n                if (options.oldCrs && ol.proj.get(options.oldCrs).getUnits() === ol.proj.Units.METERS && (!ol.proj.get(options.crs).getUnits() || ol.proj.get(options.crs).getUnits() === ol.proj.Units.DEGREES)) {\r\n\r\n                    if (layer.minResolution) {\r\n                        layer.minResolution = layer.minResolution / unitRatio;\r\n                        self.layer.setMinResolution(layer.minResolution);\r\n                    }\r\n\r\n                    if (layer.maxResolution) {\r\n                        layer.maxResolution = layer.maxResolution / unitRatio;\r\n                        self.layer.setMaxResolution(layer.maxResolution);\r\n                    }\r\n\r\n                    // de grados a metros\r\n                } else if (options.oldCrs && ol.proj.get(options.oldCrs).getUnits() === ol.proj.Units.DEGREES && ol.proj.get(options.crs).getUnits() === ol.proj.Units.METERS) {\r\n                    var metersPerDegree = TC.Util.getMetersPerDegree(ol.proj.transformExtent(layer.map.getExtent(), layer.map.crs, 'EPSG:4326'));\r\n\r\n                    if (layer.minResolution) {\r\n                        layer.minResolution = layer.minResolution * metersPerDegree;\r\n                        self.layer.setMinResolution(layer.minResolution);\r\n                    }\r\n\r\n                    if (layer.maxResolution) {\r\n                        layer.maxResolution = layer.maxResolution * metersPerDegree;\r\n                        self.layer.setMaxResolution(layer.maxResolution);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    const createPathFromGeometry = function (geometry, pixelRatio) {\r\n        const result = new Path2D();\r\n        geometry.forEach(p => {\r\n            p[0] *= pixelRatio;\r\n            p[1] *= pixelRatio;\r\n        })\r\n        const p0 = geometry[0];\r\n        result.moveTo(p0[0], p0[1]);\r\n        for (var i = 1, ii = geometry.length; i < ii; i++) {\r\n            const p = geometry[i];\r\n            result.lineTo(p[0], p[1]);\r\n        }\r\n        result.closePath();\r\n        return result;\r\n    };\r\n\r\n    const execCanvasOperation = function (geometry, operationName, precomposeHandler, postcomposeHandler) {\r\n        const self = this;\r\n        const precomposeHandlerName = `_${operationName}PrecomposeHandler`;\r\n        const postcomposeHandlerName = `_${operationName}PostcomposeHandler`;\r\n        if (self[precomposeHandlerName]) {\r\n            self.layer.un(ol.render.EventType.PRECOMPOSE, self[precomposeHandlerName]);\r\n            delete self[precomposeHandlerName];\r\n            self.layer.un(ol.render.EventType.POSTCOMPOSE, self[postcomposeHandlerName]);\r\n            delete self[postcomposeHandlerName];\r\n        }\r\n\r\n        if (geometry) {\r\n            self[precomposeHandlerName] = precomposeHandler;\r\n            self.layer.on(ol.render.EventType.PRECOMPOSE, self[precomposeHandlerName]);\r\n\r\n            self[postcomposeHandlerName] = postcomposeHandler;\r\n            self.layer.on(ol.render.EventType.POSTCOMPOSE, self[postcomposeHandlerName]);\r\n        }\r\n\r\n        self.parent.map.wrap.map.render();\r\n    };\r\n\r\n    TC.wrap.Layer.prototype.clip = function (geometry) {\r\n        const self = this;\r\n        execCanvasOperation.call(self, geometry, 'clip', function (e) {\r\n            let geom = geometry;\r\n            if (TC.Util.isFunction(geometry)) {\r\n                geom = geometry.call(self._wrap);\r\n            }\r\n            if (!(geom instanceof Path2D)) {\r\n                geom = createPathFromGeometry(geom, e.frameState.pixelRatio);\r\n            }\r\n            const ctx = e.context;\r\n            ctx.save();\r\n            ctx.clip(geom, 'evenodd');\r\n        }, function (e) {\r\n            e.context.restore();\r\n        });\r\n    };\r\n\r\n    TC.wrap.Layer.prototype.stroke = function (geometry, style) {\r\n        const self = this;\r\n        execCanvasOperation.call(self, geometry, 'stroke', function (e) {\r\n        }, function (e) {\r\n            let geom = geometry;\r\n            if (TC.Util.isFunction(geometry)) {\r\n                geom = geometry.call(self._wrap);\r\n            }\r\n            if (!(geom instanceof Path2D)) {\r\n                geom = createPathFromGeometry(geom, e.frameState.pixelRatio);\r\n            }\r\n            const ctx = e.context;\r\n            if (style.strokeWidth) {\r\n                ctx.lineWidth = style.strokeWidth;\r\n            }\r\n            if (style.strokeColor) {\r\n                ctx.strokeStyle = style.strokeColor;\r\n            }\r\n            ctx.stroke(geom);\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.WmsParser = ol.format.WMSCapabilities;\r\n\r\n    TC.wrap.layer.Raster.prototype.WmtsParser = ol.format.WMTSCapabilities;\r\n\r\n    TC.wrap.Layer.prototype.addCommonEvents = function (layer) {\r\n        var self = this;\r\n        layer.on('change:visible', function () {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.LAYERVISIBILITY, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        }, self.parent.map);\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getGetMapUrl = function () {\r\n        var result = null;\r\n        var self = this;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                var dcpType = self.parent.capabilities.Capability.Request.GetMap.DCPType;\r\n                for (var i = 0; i < dcpType.length; i++) {\r\n                    if (dcpType[i].HTTP && dcpType[i].HTTP.Get) {\r\n                        result = dcpType[i].HTTP.Get.OnlineResource;\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                result = self.parent.capabilities.OperationsMetadata.GetTile.DCP.HTTP.Get[0].href;\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const fragment = document.createDocumentFragment();\r\n        const textarea = document.createElement('textarea');\r\n        fragment.appendChild(textarea);\r\n        textarea.innerHTML = result;\r\n        result = textarea.textContent;\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getInfoFormats = function () {\r\n        var result = null;\r\n        var c = this.parent.capabilities;\r\n        if (c.Capability && c.Capability.Request.GetFeatureInfo) {\r\n            result = c.Capability.Request.GetFeatureInfo.Format;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.infoFormatPreference = [\r\n        'application/json',\r\n        'application/vnd.ogc.gml/3.1.1',\r\n        'application/vnd.ogc.gml',\r\n        'application/vnd.esri.wms_featureinfo_xml',\r\n        'text/html',\r\n        'text/plain',\r\n        'text/xml'\r\n    ];\r\n\r\n    TC.wrap.layer.Raster.prototype.getWMTSLayer = function () {\r\n        var result = null;\r\n        var self = this;\r\n        var capabilities = self.parent.capabilities;\r\n        if (capabilities && capabilities.Contents) {\r\n            for (var i = 0; i < capabilities.Contents.Layer.length; i++) {\r\n                var layer = capabilities.Contents.Layer[i];\r\n                for (var j = 0; j < layer.TileMatrixSetLink.length; j++) {\r\n                    if (self.parent.options.matrixSet === layer.TileMatrixSetLink[j].TileMatrixSet) {\r\n                        result = layer;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getTileMatrix = function (matrixSet) {\r\n        var result = null;\r\n        var self = this;\r\n        var capabilities = self.parent.capabilities;\r\n        if (capabilities && capabilities.Contents && capabilities.Contents.TileMatrixSet) {\r\n            for (var i = 0; i < capabilities.Contents.TileMatrixSet.length; i++) {\r\n                var tms = capabilities.Contents.TileMatrixSet[i];\r\n                if (tms.Identifier === matrixSet) {\r\n                    result = tms.TileMatrix;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getScaleDenominators = function (node) {\r\n        var result = [];\r\n        var self = this;\r\n        if (node.ScaleDenominator) {\r\n            result = [node.ScaleDenominator, node.ScaleDenominator];\r\n        }\r\n        else {\r\n            if (node.MinScaleDenominator || node.MaxScaleDenominator) {\r\n                result = [node.MaxScaleDenominator, node.MinScaleDenominator];\r\n            }\r\n        }\r\n        // Contemplamos el caso de una capa sin nombre: sus escalas válidas serán las de sus hijas.\r\n        if (!result.length && !self.getName(node)) {\r\n            var children = self.getLayerNodes(node);\r\n            var max = -Infinity, min = Infinity;\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                var childDenominators = self.getScaleDenominators(children[i]);\r\n                if (childDenominators[0] > max) {\r\n                    max = childDenominators[0];\r\n                }\r\n                if (childDenominators[1] < min) {\r\n                    min = childDenominators[1];\r\n                }\r\n            }\r\n            if (max > -Infinity && min < Infinity) {\r\n                result = [max, min];\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getAttribution = function () {\r\n        const self = this;\r\n        const result = {};\r\n        const capabilities = TC.capabilities[self.parent.url];\r\n\r\n        if (capabilities) {\r\n            if (capabilities.ServiceProvider) {\r\n                result.name = capabilities.ServiceProvider.ProviderName.trim();\r\n                result.site = capabilities.ServiceProvider.ProviderSite;\r\n                if (result.site && result.site.href && result.site.href.trim().length > 0) {\r\n                    result.site = result.site.href;\r\n                } else {\r\n                    delete result.site;\r\n                }\r\n            }\r\n            else if (capabilities.ServiceIdentification) {\r\n                result.name = capabilities.ServiceIdentification.Title.trim();\r\n            }\r\n            else {\r\n                result.name = capabilities.Service.Title.trim();\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getInfo = function (name) {\r\n        var self = this;\r\n        var result = {};\r\n        var capabilities = self.parent.capabilities;\r\n        if (capabilities) {\r\n            if (capabilities.Capability) { // WMS\r\n                var layerNodes = self.getAllLayerNodes();\r\n                for (var i = 0; i < layerNodes.length; i++) {\r\n                    var l = layerNodes[i];\r\n                    if (self.parent.compareNames(self.getName(l), name)) {\r\n                        if (l.Title) {\r\n                            result.title = l.Title;\r\n                        }\r\n                        if (l.Abstract) {\r\n                            result['abstract'] = l.Abstract;\r\n                        }\r\n                        result.legend = [];\r\n\r\n                        var _process = function (value) {\r\n                            var legend = this.getLegend(value);\r\n\r\n                            if (legend.src)\r\n                                result.legend.push({\r\n                                    src: legend.src, title: value.Title\r\n                                });\r\n                        };\r\n\r\n                        var _traverse = function (o, func) {\r\n                            if (o.Layer && o.Layer.length > 0) {\r\n                                for (var i in o.Layer) {\r\n                                    //bajar un nivel en el árbol\r\n                                    _traverse(o.Layer[i], func);\r\n                                }\r\n                            } else {\r\n                                func.apply(self, [o]);\r\n                            }\r\n                        };\r\n\r\n                        //Obtenemos todas las leyendas de la capa o grupo de capas\r\n                        _traverse(l, _process);\r\n\r\n                        if (l.MetadataURL && l.MetadataURL.length) {\r\n                            result.metadata = [];\r\n                            for (var j = 0; j < l.MetadataURL.length; j++) {\r\n                                var md = l.MetadataURL[j];\r\n                                result.metadata.push({\r\n                                    format: md.Format, type: md.type, url: md.OnlineResource\r\n                                });\r\n                            }\r\n                        }\r\n                        result.queryable = l.queryable;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else if (capabilities.Contents) { // WMTS\r\n                const layerName = self.parent.names[0];\r\n                for (var i = 0, ii = capabilities.Contents.Layer.length; i < ii; i++) {\r\n                    const layer = capabilities.Contents.Layer[i];\r\n                    if (layer.Identifier === layerName) {\r\n                        result.abstract = layer.Abstract;\r\n                        let metadata = layer.Metadata;\r\n                        if (metadata) {\r\n                            if (!Array.isArray(metadata)) {\r\n                                metadata = [metadata];\r\n                            }\r\n                            result.metadata = [];\r\n                            for (var j = 0, jj = metadata.length; j < jj; j++) {\r\n                                const md = metadata[j];\r\n                                result.metadata.push({\r\n                                    format: md.format,\r\n                                    url: md.href\r\n                                });\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getServiceType = function () {\r\n        var result = null;\r\n        var capabilities = this.parent.capabilities;\r\n        if (capabilities.Capability && capabilities.Capability.Request && capabilities.Capability.Request.GetMap) {\r\n            result = TC.Consts.layerType.WMS;\r\n        }\r\n        else if (capabilities.OperationsMetadata && capabilities.OperationsMetadata.GetTile) {\r\n            result = TC.Consts.layerType.WMTS;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getServiceTitle = function () {\r\n        var result = null;\r\n        var capabilities = this.parent.capabilities;\r\n        if (capabilities.Capability && capabilities.Service) {\r\n            result = capabilities.Service.Title;\r\n        }\r\n        else if (capabilities.ServiceIdentification) {\r\n            result = capabilities.ServiceIdentification.Title;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getRootLayerNode = function () {\r\n        var self = this;\r\n        var result;\r\n        if (self.getServiceType() === TC.Consts.layerType.WMS) {\r\n            result = self.parent.capabilities.Capability.Layer;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getName = function (node, ignorePrefix) {\r\n        var result = node.Name;\r\n        if (result && ignorePrefix) {\r\n            var idx = result.indexOf(':');\r\n            if (idx >= 0) {\r\n                result = result.substr(idx + 1);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getIdentifier = function (node) {\r\n        return node.Identifier;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getLayerNodes = function (node) {\r\n        var result = node.Layer;\r\n        if (!Array.isArray(result)) {\r\n            if (result) {\r\n                result = [result];\r\n            }\r\n            else {\r\n                result = [];\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getAllLayerNodes = function () {\r\n        var self = this;\r\n        if (!self._layerList) {\r\n            switch (self.getServiceType()) {\r\n                case TC.Consts.layerType.WMS:\r\n                    var getNodeArray = function getNodeArray(node) {\r\n                        var r = [node];\r\n                        var children = self.getLayerNodes(node);\r\n                        for (var i = 0; i < children.length; i++) {\r\n                            r = r.concat(getNodeArray(children[i]));\r\n                        }\r\n                        return r;\r\n                    };\r\n                    var root = self.getRootLayerNode();\r\n                    self._layerList = root ? getNodeArray(root) : [];\r\n                    break;\r\n                case TC.Consts.layerType.WMTS:\r\n                    self._layerList = self.parent.capabilities.Contents.Layer.slice();\r\n                    break;\r\n                default:\r\n                    self._layerList = [];\r\n                    break;\r\n            }\r\n        }\r\n        return self._layerList;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.normalizeLayerNode = function (node) {\r\n        return node;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.normalizeCapabilities = function (capabilities) {\r\n        return capabilities;\r\n    };\r\n\r\n\r\n    TC.wrap.layer.Raster.prototype.getLegend = function (node) {\r\n        var result = {};\r\n        var styles = node.Style;\r\n        if (styles && styles.length) {\r\n            if (styles.length && styles[0].LegendURL && styles[0].LegendURL.length) {\r\n                var legend = styles[0].LegendURL[0];\r\n\r\n                const fragment = document.createDocumentFragment();\r\n                const textarea = document.createElement('textarea');\r\n                fragment.appendChild(textarea);\r\n                textarea.innerHTML = legend.OnlineResource;\r\n                result.src = textarea.textContent;\r\n                // Eliminado porque GeoServer miente con el tamaño de sus imágenes de la leyenda\r\n                //if (legend.size) {\r\n                //    result.width = legend.size[0];\r\n                //    result.height = legend.size[1];\r\n                //}\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.isCompatible = function (crs) {\r\n        var self = this;\r\n        var result = true;\r\n        var layer = self.parent;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                if (layer.capabilities && layer.capabilities.Capability && layer.capabilities.Capability.Layer) {\r\n                    if (layer.names.length > 0) {\r\n                        var names = layer.names.slice(0);\r\n                        var _isCompatible = function _isCompatible(nodes, name, inCrs) {\r\n                            var r = false;\r\n                            if (nodes) {\r\n                                for (var i = 0; i < nodes.length; i++) {\r\n                                    var n = nodes[i];\r\n                                    const itemCRS = n.CRS || n.SRS;\r\n                                    const crsList = Array.isArray(itemCRS) ? itemCRS : [itemCRS];\r\n                                    var isIn = inCrs || crsList.indexOf(crs) >= 0;\r\n                                    if (layer.compareNames(self.getName(n), name)) {\r\n                                        if (isIn) {\r\n                                            r = true;\r\n                                        }\r\n                                        break;\r\n                                    }\r\n                                    else if (_isCompatible(n.Layer, name, isIn)) {\r\n                                        r = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                            return r;\r\n                        };\r\n                        while (names.length > 0) {\r\n                            if (!_isCompatible([layer.capabilities.Capability.Layer], names.pop())) {\r\n                                result = false;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                result = false;\r\n                if (layer.capabilities && layer.capabilities.Contents && layer.capabilities.Contents.TileMatrixSet) {\r\n                    var tms = layer.capabilities.Contents.TileMatrixSet;\r\n                    for (var i = 0; i < tms.length; i++) {\r\n                        if (tms[i].Identifier === layer.options.matrixSet) {\r\n                            result = TC.Util.CRSCodesEqual(crs, tms[i].SupportedCRS);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleCRS = function () {\r\n        var self = this;\r\n        var result = [];\r\n        var layer = self.parent;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                if (layer.capabilities && layer.capabilities.Capability && layer.capabilities.Capability.Layer) {\r\n                    if (layer.names.length > 0) {\r\n                        const crsLists = layer.names\r\n                            .map(function (name) {\r\n                                return layer\r\n                                    .getNodePath(name) // array de nodos\r\n                                    .map(function (node) {\r\n                                        const itemCRS = node.CRS || node.SRS || [];\r\n                                        const crsList = Array.isArray(itemCRS) ? itemCRS : [itemCRS];\r\n                                        return Array.isArray(crsList) ? crsList : [crsList];\r\n                                    }) // array de arrays de crs\r\n                                    .reduce(function (prev, cur) {\r\n                                        if (prev.length === 0) {\r\n                                            return cur;\r\n                                        }\r\n                                        cur.forEach(function (elm) {\r\n                                            if (prev.indexOf(elm) < 0) {\r\n                                                prev[prev.length - 1] = elm;\r\n                                            }\r\n                                        });// array con todos los crs\r\n                                        return prev;\r\n                                    }, []);\r\n                            });\r\n\r\n                        if (crsLists.length === 1) {\r\n                            result = crsLists[0];\r\n                        } else {\r\n                            const otherCrsLists = crsLists.slice(1);\r\n                            result = crsLists[0].filter(function (elm) {\r\n                                return otherCrsLists.every(function (crsList) {\r\n                                    return crsList.indexOf(elm) >= 0;\r\n                                });\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                if (layer.capabilities && layer.capabilities.Contents) {\r\n                    layer.capabilities.Contents.Layer\r\n                        .filter(function (l) {\r\n                            return l.Identifier === layer.layerNames;\r\n                        })  // La capa de interés\r\n                        .forEach(function (l) {\r\n                            const tileMatrixSets = l.TileMatrixSetLink\r\n                                .map(function (tmsl) {\r\n                                    return tmsl.TileMatrixSet;\r\n                                });\r\n                            result = layer.capabilities.Contents.TileMatrixSet\r\n                                .filter(function (tms) {\r\n                                    return tileMatrixSets.indexOf(tms.Identifier) >= 0;\r\n                                }) // TileMatrixSets asociados a la capa de interés\r\n                                .map(function (tms) {\r\n                                    return tms.SupportedCRS;\r\n                                });\r\n                        });\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleLayers = function (crs) {\r\n        var self = this;\r\n        var result = [];\r\n        var layer = self.parent;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WMS:\r\n                if (layer.capabilities && layer.capabilities.Capability && layer.capabilities.Capability.Layer) {\r\n                    var _recursiveFn = function (item, crs, inCrs) {\r\n                        var crsToCheck = item.CRS || item.SRS;\r\n                        var itemCRS = Array.isArray(crsToCheck) ? crsToCheck : [crsToCheck];\r\n                        var isIn = inCrs || itemCRS.indexOf(crs) >= 0;\r\n                        if (isIn && item.Name) {\r\n                            result.push(item.Name);\r\n                        }\r\n                        if (item.Layer) {\r\n                            for (var i = 0; i < item.Layer.length; i++) {\r\n                                _recursiveFn(item.Layer[i], crs, isIn);\r\n                            }\r\n                        }\r\n                    }\r\n                    _recursiveFn(layer.capabilities.Capability.Layer, crs);\r\n                }\r\n                break;\r\n            case TC.Consts.layerType.WMTS:\r\n                if (layer.capabilities && layer.capabilities.Contents && layer.capabilities.Contents.TileMatrixSet) {\r\n                    var tmsList = layer.capabilities.Contents.TileMatrixSet;\r\n                    for (var i = 0, ii = tmsList.length; i < ii; i++) {\r\n                        var tms = tmsList[i];\r\n                        if (TC.Util.CRSCodesEqual(crs, tms.SupportedCRS)) {\r\n                            var tmsIdentifier = tms.Identifier;\r\n                            var layerList = layer.capabilities.Contents.Layer;\r\n                            for (var j = 0, jj = layerList.length; j < jj; j++) {\r\n                                var tmsLinkList = layerList[j].TileMatrixSetLink;\r\n                                for (var k = 0, kk = tmsLinkList.length; k < kk; k++) {\r\n                                    if (tmsLinkList[k].TileMatrixSet === tmsIdentifier) {\r\n                                        result.push(layerList[j].Identifier);\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getCompatibleMatrixSets = function (crs) {\r\n        var self = this;\r\n        var result = [];\r\n        normalizeProjection({\r\n            crs: crs\r\n        });\r\n        var layer = self.parent;\r\n        if (self.getServiceType() === TC.Consts.layerType.WMTS) {\r\n            var layerList = layer.capabilities.Contents.Layer;\r\n            var tmsList = layer.capabilities.Contents.TileMatrixSet;\r\n            for (var i = 0, ii = layerList.length; i < ii; i++) {\r\n                if (layer.layerNames === layerList[i].Identifier) {\r\n                    var tmsLinkList = layerList[i].TileMatrixSetLink;\r\n                    for (var j = 0, jj = tmsLinkList.length; j < jj; j++) {\r\n                        var tmsLink = tmsLinkList[j];\r\n                        for (var k = 0, kk = tmsList.length; k < kk; k++) {\r\n                            var tms = tmsList[k];\r\n                            if (tms.Identifier === tmsLink.TileMatrixSet) {\r\n                                if (TC.Util.CRSCodesEqual(crs, tms.SupportedCRS)) {\r\n                                    result.push(tms.Identifier);\r\n                                }\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.setWMTSUrl = function () {\r\n        var self = this;\r\n\r\n        self.getLayer().then(function (l) {\r\n            self.parent.options = self.parent.options || {};\r\n            var urls = l.getSource().getUrls();\r\n            self.parent.options.urlPattern = urls[urls.length - 1];\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.createWMSLayer = function (url, params, options) {\r\n        const self = this;\r\n        var result = null;\r\n\r\n        var source = new ol.source.ImageWMS({\r\n            url: url,\r\n            crossOrigin: options.map ? options.map.options.crossOrigin : undefined,\r\n            params: params,\r\n            extent: TC.Cfg.initialExtent,\r\n            ratio: TC.Cfg.imageRatio,\r\n            imageLoadFunction: self.parent.getImageLoad.bind(self.parent)\r\n        });\r\n\r\n        source.on('imageloadstart', function (e) {\r\n            self.trigger(TC.Consts.event.BEFORETILELOAD, {\r\n                tile: e.image.getImage()\r\n            });\r\n        });\r\n        source.on('imageloadend', function (e) {\r\n            self.trigger(TC.Consts.event.TILELOAD, {\r\n                tile: e.image.getImage()\r\n            });\r\n        });\r\n        source.on('imageloaderror', function (e) {\r\n            self.trigger(TC.Consts.event.TILELOAD, {\r\n                tile: e.image.getImage()\r\n            });\r\n        });\r\n\r\n\r\n        var layerOptions = {\r\n            visible: !!params.LAYERS.length || (options && options.method && options.method === 'POST'), //Las capas de temáticos cargadas por POST no tienen el atributo LAYERS\r\n            source: source\r\n        };\r\n\r\n        if (options.minResolution) {\r\n            layerOptions.minResolution = options.minResolution;\r\n        }\r\n        if (options.maxResolution) {\r\n            layerOptions.maxResolution = options.maxResolution;\r\n        }\r\n        result = new ol.layer.Image(layerOptions);\r\n\r\n        result._wrap = self;\r\n\r\n        self.addCommonEvents(result);\r\n\r\n        return result;\r\n    };\r\n\r\n    var createWmtsSource = function (options) {\r\n        var self = this;\r\n        var result = null;\r\n        var sourceOptions = ol.source.WMTS.optionsFromCapabilities(self.parent.capabilities, {\r\n            layer: options.layerNames,\r\n            matrixSet: options.matrixSet,\r\n            crossOrigin: options.map ? options.map.options.crossOrigin : undefined,\r\n            requestEncoding: options.encoding,\r\n            format: options.format,\r\n        });\r\n        var https = 'https:';\r\n\r\n        if (sourceOptions) {\r\n            if (location.protocol === https) {\r\n                sourceOptions.urls = sourceOptions.urls.map(function (elm) {\r\n                    return elm.replace('http:', https);\r\n                });\r\n            }\r\n\r\n            sourceOptions.crossOrigin = options.map ? options.map.options.crossOrigin : undefined;\r\n\r\n            result = new ol.source.WMTS(sourceOptions);\r\n            result.setTileLoadFunction(self.parent.getImageLoad.bind(self.parent));\r\n\r\n            result.on(TILELOADSTART, function (e) {\r\n                self.trigger(TC.Consts.event.BEFORETILELOAD, {\r\n                    tile: e.tile.getImage()\r\n                });\r\n            });\r\n            result.on(TILELOADEND, function (e) {\r\n                self.trigger(TC.Consts.event.TILELOAD, {\r\n                    tile: e.tile.getImage()\r\n                });\r\n            });\r\n            result.on(TILELOADERROR, function (e) {\r\n                self.trigger(TC.Consts.event.TILELOAD, {\r\n                    tile: e.tile.getImage()\r\n                });\r\n            });\r\n\r\n            var prevFn = result.getResolutions.bind(result);\r\n            result.getResolutions = function () {\r\n                var resolutions = prevFn();\r\n                var matrix = self.parent.getLimitedMatrixSet();\r\n                //esto está mal, porque matrix podría empezar más abajo (tener recortado por ambos lados)\r\n                if (matrix && matrix.length) {\r\n                    var ix = matrix[0].matrixIndex;\r\n                    resolutions = resolutions.slice(ix, matrix.length + ix);\r\n                }\r\n\r\n                return resolutions;\r\n            };\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.createWMTSLayer = function (options) {\r\n        const self = this;\r\n        var result = null;\r\n\r\n        var source = createWmtsSource.call(self, options);\r\n\r\n        if (source) {\r\n            var layerOptions = {\r\n                source: source\r\n            };\r\n            if (options.minResolution) {\r\n                layerOptions.minResolution = options.minResolution;\r\n            }\r\n            if (options.maxResolution) {\r\n                layerOptions.maxResolution = options.maxResolution;\r\n            }\r\n            result = new ol.layer.Tile(layerOptions);\r\n            result._wrap = self;\r\n\r\n            self.addCommonEvents(result);\r\n\r\n            var resolutions = source.getResolutions();\r\n            //Este +1 tan chungo es porque, en el caso en que la resolución del mapa es igual a la máxima del layer, openLayers lo oculta\r\n            result.setMaxResolution(resolutions[0] + 1);\r\n            result.setMinResolution(resolutions[resolutions.length - 1]);\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n\r\n    /*\r\n     *  getParams: Gets the WMS layer getmap parameters\r\n     *  Returns: object\r\n     */\r\n    TC.wrap.layer.Raster.prototype.getParams = function () {\r\n        return this.layer.getSource().getParams();\r\n    };\r\n\r\n    /*\r\n     *  setParams: Sets the WMS layer getmap parameters\r\n     *  Parameter: object\r\n     */\r\n    TC.wrap.layer.Raster.prototype.setParams = function (params) {\r\n        this.layer.getSource().updateParams(params);\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.setMatrixSet = function (matrixSet) {\r\n        const self = this;\r\n        const oldResolutions = self.layer.getSource().getResolutions();\r\n        if (self.parent.type === TC.Consts.layerType.WMTS) {\r\n            const newSource = createWmtsSource.call(self, TC.Util.extend({}, self.parent.options, { matrixSet: matrixSet }));\r\n            const newResolutions = newSource.getResolutions();\r\n            const newMaxResolution = newResolutions[0]\r\n            const newMinResolution = newResolutions[newResolutions.length - 1];\r\n            self.layer.setMaxResolution(newMaxResolution);\r\n            self.layer.setMinResolution(newMinResolution);\r\n            if (self.parent.minResolution) {\r\n                self.parent.minResolution = newMinResolution;\r\n            }\r\n            if (self.parent.maxResolution) {\r\n                self.parent.maxResolution = newMaxResolution;\r\n            }\r\n            self.layer.setSource(newSource);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getResolutions = function () {\r\n        if (this.layer.getSource) {\r\n            var ts = this.layer.getSource();\r\n            if (ts.getResolutions) return ts.getResolutions();\r\n            else return [];\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.setResolutions = function (resolutions) {\r\n        if (this.layer.getSource) {\r\n            var ts = this.layer.getSource();\r\n            if (ts.resolutions_) {\r\n                ts.resolutions_ = resolutions;\r\n            }\r\n            else if (ts.tileGrid) {\r\n                ts.tileGrid.resolutions_ = resolutions;\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.getExtent = function () {\r\n        const self = this;\r\n        const parent = self.parent;\r\n\r\n        const layerNodes = new Array(parent.names.length);\r\n        for (var i = 0, ii = layerNodes.length; i < ii; i++) {\r\n            const node = parent.getLayerNodeByName(parent.names[i]);\r\n            if (!node.BoundingBox) {\r\n                return null;\r\n            }\r\n            layerNodes[i] = node;\r\n        }\r\n\r\n        const mapCrs = parent.map && parent.map.getCRS();\r\n        const mapCrsCode = TC.Util.getCRSCode(mapCrs);\r\n        const extent = [Number.MAX_VALUE, Number.MAX_VALUE, Number.MIN_VALUE, Number.MIN_VALUE];\r\n        layerNodes\r\n            .map(function (node) {\r\n                const bboxes = Array.isArray(node.BoundingBox) ? node.BoundingBox : [node.BoundingBox];\r\n                let firstBbox, crsBbox;\r\n                bboxes.forEach(function (bbox, idx) {\r\n                    if (idx === 0) {\r\n                        firstBbox = bbox;\r\n                    }\r\n                    if (TC.Util.getCRSCode(bbox.crs) === mapCrsCode) {\r\n                        crsBbox = bbox;\r\n                    }\r\n                });\r\n                if (crsBbox) {\r\n                    return crsBbox.extent;\r\n                }\r\n                const ext = firstBbox.extent;\r\n                let bboxCrs = firstBbox.crs;\r\n                if (bboxCrs === 'CRS:84') {\r\n                    bboxCrs = 'EPSG:4326';\r\n                }\r\n                const topLeft = TC.Util.reproject([ext[0], ext[3]], bboxCrs, mapCrs);\r\n                const bottomLeft = TC.Util.reproject([ext[0], ext[1]], bboxCrs, mapCrs);\r\n                const topRight = TC.Util.reproject([ext[2], ext[3]], bboxCrs, mapCrs);\r\n                const bottomRight = TC.Util.reproject([ext[2], ext[1]], bboxCrs, mapCrs);\r\n                return [Math.min(topLeft[0], bottomLeft[0]), Math.min(bottomLeft[1], bottomRight[1]), Math.max(topRight[0], bottomRight[0]), Math.max(topLeft[1], topRight[1])];\r\n            })\r\n            .forEach(function (ext) {\r\n                extent[0] = Math.min(ext[0], extent[0]);\r\n                extent[1] = Math.min(ext[1], extent[1]);\r\n                extent[2] = Math.max(ext[2], extent[2]);\r\n                extent[3] = Math.max(ext[3], extent[3]);\r\n            });\r\n        return extent;\r\n    };\r\n\r\n    TC.wrap.layer.Raster.prototype.reloadSource = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (self.layer.getSource) {\r\n                self.layer.getSource().refresh();\r\n                resolve();\r\n            }\r\n            else {\r\n                reject();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.Geometry = {\r\n        getNearest: function (point, candidates) {\r\n            var pline = new ol.geom.LineString(candidates);\r\n            return pline.getClosestPoint(point);\r\n        }\r\n    };\r\n\r\n    // En OL3 la imagen tiene el tamaño original. Escalamos si hace falta.\r\n    var setScaleFunction = function (imageStyle, iconWidth, olFeat) {\r\n        if (imageStyle) {\r\n            var setScaleForWidth = function (imgWidth) {\r\n                var markerWidth = (olFeat && olFeat._wrap ? olFeat._wrap.parent.options.width : null) || iconWidth;\r\n                if (markerWidth < imgWidth) {\r\n                    var factor = markerWidth / imgWidth;\r\n                    imageStyle.setScale(factor);\r\n                }\r\n            };\r\n            var imageSize = imageStyle.getSize();\r\n            if (imageSize) {\r\n                setScaleForWidth(imageSize[0]);\r\n            }\r\n            else {\r\n                var img = imageStyle.getImage();\r\n                if (img.naturalWidth) {\r\n                    setScaleForWidth(img.naturalWidth);\r\n                }\r\n                else {\r\n                    const fragment = document.createDocumentFragment();\r\n                    const img = document.createElement('img');\r\n                    img.src = imageStyle.getSrc();\r\n                    img.addEventListener('load', function () {\r\n                        setScaleForWidth(this.naturalWidth);\r\n                    });\r\n                    fragment.appendChild(img);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var getStyleValue = function (property, feature) {\r\n        var result = property;\r\n        var olFeat = feature && feature.wrap && feature.wrap.feature;\r\n        if (typeof property === 'string') {\r\n            var match = property.match(/^\\$\\{(.+)\\}$/);\r\n            if (match && olFeat) {\r\n                // Permitimos el formato ${prop.subprop.subsubprop}\r\n                var m = match[1].split('.');\r\n                var r = olFeat.getProperties();\r\n                for (var i = 0; i < m.length && r !== undefined; i++) {\r\n                    r = r[m[i]];\r\n                }\r\n                if (r === undefined) {\r\n                    r = feature.data;\r\n                    for (var i = 0; i < m.length && r !== undefined; i++) {\r\n                        r = r[m[i]];\r\n                    }\r\n                }\r\n                result = r;\r\n            }\r\n        }\r\n        else if (TC.Util.isFunction(property)) {\r\n            result = property(feature);\r\n        }\r\n        return result;\r\n    };\r\n\r\n    // Transformación de opciones de estilo en un estilo nativo OL3.\r\n    var createNativeStyle = function (options, olFeat) {\r\n        var nativeStyleOptions = {\r\n        };\r\n\r\n        var feature;\r\n        var isPoint, isLine, isPolygon;\r\n        if (olFeat) {\r\n            switch (olFeat.getGeometry().getType()) {\r\n                case 'Point':\r\n                case 'MultiPoint':\r\n                    isPoint = true;\r\n                    break;\r\n                case 'LineString':\r\n                case 'MultiLineString':\r\n                    isLine = true;\r\n                    break;\r\n                case 'Polygon':\r\n                case 'MultiPolygon':\r\n                    isPolygon = true;\r\n                    break;\r\n            }\r\n            if (olFeat._wrap) {\r\n                feature = olFeat._wrap.parent;\r\n            }\r\n            else {\r\n                // Si la API SITNA no ha completado su feature, creamos un mock-up para que no fallen las funciones de estilo\r\n                feature = {\r\n                    id: TC.wrap.Feature.prototype.getId.call({\r\n                        feature: olFeat\r\n                    }), // GLS añado el id de la feature para poder filtrar por la capa a la cual pertenece                    \r\n                    features: olFeat.get('features'),\r\n                    getData: function () {\r\n                        return TC.wrap.Feature.prototype.getData.call({\r\n                            feature: olFeat\r\n                        });\r\n                    }\r\n                };\r\n\r\n\r\n            }\r\n        }\r\n        var isCluster = feature && Array.isArray(feature.features) && feature.features.length > 1;\r\n        var styles;\r\n        if (isCluster) {\r\n            styles = TC.Util.extend(true, {}, TC.Cfg.styles.cluster, (options && options.styles && options.styles.cluster) ? options.styles.cluster : {});\r\n        }\r\n        else {\r\n            styles = options.styles || TC.Cfg.styles;\r\n        }\r\n\r\n        var styleOptions = {};\r\n        if (styles.line && (isLine || !olFeat)) {\r\n            styleOptions = styles.line;\r\n            nativeStyleOptions.stroke = new ol.style.Stroke({\r\n                color: getStyleValue(styles.line.strokeColor, feature),\r\n                width: getStyleValue(styles.line.strokeWidth, feature),\r\n                lineDash: styles.line.lineDash\r\n            });\r\n        }\r\n\r\n        if (styles.polygon && (isPolygon || !olFeat)) {\r\n            styleOptions = styles.polygon;\r\n            nativeStyleOptions.fill = new ol.style.Fill({\r\n                color: getRGBA(getStyleValue(styles.polygon.fillColor, feature), getStyleValue(styles.polygon.fillOpacity, feature))\r\n            });\r\n            nativeStyleOptions.stroke = new ol.style.Stroke({\r\n                color: getStyleValue(styles.polygon.strokeColor, feature),\r\n                width: getStyleValue(styles.polygon.strokeWidth, feature),\r\n                lineDash: styles.polygon.lineDash\r\n            });\r\n        }\r\n\r\n        if (styles.point && (isPoint || !olFeat)) {\r\n            styleOptions = styles.point;\r\n            var circleOptions = {\r\n                radius: getStyleValue(styleOptions.radius, feature) ||\r\n                (getStyleValue(styleOptions.height, feature) + getStyleValue(styleOptions.width, feature)) / 4\r\n            };\r\n            if (styleOptions.fillColor) {\r\n                circleOptions.fill = new ol.style.Fill({\r\n                    color: getRGBA(getStyleValue(styleOptions.fillColor, feature), getStyleValue(styleOptions.fillOpacity, feature))\r\n                });\r\n            }\r\n            if (styleOptions.strokeColor) {\r\n                circleOptions.stroke = new ol.style.Stroke({\r\n                    color: getStyleValue(styleOptions.strokeColor, feature),\r\n                    width: getStyleValue(styleOptions.strokeWidth, feature),\r\n                    lineDash: styleOptions.lineDash\r\n                });\r\n            }\r\n\r\n            if (!isNaN(circleOptions.radius))\r\n                nativeStyleOptions.image = new ol.style.Circle(circleOptions);\r\n        }\r\n\r\n        if (styleOptions.label) {\r\n            nativeStyleOptions.text = createNativeTextStyle(styleOptions, feature);\r\n        }\r\n\r\n        if (styles.marker && (isPoint || !olFeat)) {\r\n            styleOptions = styles.marker;\r\n            var ANCHOR_DEFAULT_UNITS = 'fraction';\r\n            if (styleOptions.url) {\r\n                nativeStyleOptions.image = new ol.style.Icon({\r\n                    crossOrigin: 'anonymous',\r\n                    anchor: styleOptions.anchor || styles.marker.anchor || [0.5, 1],\r\n                    anchorXUnits: styleOptions.anchorXUnits || ANCHOR_DEFAULT_UNITS,\r\n                    anchorYUnits: styleOptions.anchorYUnits || ANCHOR_DEFAULT_UNITS,\r\n                    src: styleOptions.url\r\n                });\r\n                nativeStyleOptions.text = createNativeTextStyle(styleOptions, feature);\r\n            }\r\n        }\r\n\r\n        return [new ol.style.Style(nativeStyleOptions)];\r\n    };\r\n\r\n    const createNativeTextStyle = function (styleObj, feature) {\r\n        if (!styleObj || !styleObj.label) {\r\n            return;\r\n        }\r\n\r\n        const textOptions = {\r\n            text: '' + getStyleValue(styleObj.label, feature),\r\n            overflow: true\r\n        };\r\n        //const olGeom = feature.wrap.feature.getGeometry();\r\n        //if (olGeom instanceof ol.geom.LineString || olGeom instanceof ol.geom.MultiLineString) {\r\n        //    textOptions.placement = ol.style.TextPlacement.LINE;\r\n        //}\r\n        if (styleObj.fontSize) {\r\n            textOptions.font = getStyleValue(styleObj.fontSize, feature) + 'pt sans-serif';\r\n        }\r\n        if (styleObj.angle) {\r\n            textOptions.rotation = -Math.PI * getStyleValue(styleObj.angle, feature) / 180;\r\n        }\r\n        if (styleObj.fontColor) {\r\n            textOptions.fill = new ol.style.Fill({\r\n                color: getRGBA(getStyleValue(styleObj.fontColor, feature), 1)\r\n            });\r\n        }\r\n        if (styleObj.labelOutlineColor) {\r\n            textOptions.stroke = new ol.style.Stroke({\r\n                color: getRGBA(getStyleValue(styleObj.labelOutlineColor, feature), 1),\r\n                width: getStyleValue(styleObj.labelOutlineWidth, feature)\r\n            });\r\n        }\r\n        if (styleObj.labelOffset) {\r\n            textOptions.offsetX = styleObj.labelOffset[0];\r\n            textOptions.offsetY = styleObj.labelOffset[1];\r\n        }\r\n        return new ol.style.Text(textOptions);\r\n    };\r\n\r\n    var toHexString = function (number) {\r\n        var result = number.toString(16);\r\n        if (result.length === 1) {\r\n            result = '0' + result;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var getHexColorFromArray = function (colorArray) {\r\n        return '#' + toHexString(colorArray[0]) + toHexString(colorArray[1]) + toHexString(colorArray[2])\r\n    };\r\n\r\n    var getStyleFromNative = function (olStyle, olFeat) {\r\n        var result = {\r\n        };\r\n        if (TC.Util.isFunction(olStyle)) {\r\n            if (olFeat) {\r\n                olStyle = olStyle(olFeat);\r\n            }\r\n        }\r\n        if (Array.isArray(olStyle)) {\r\n            olStyle = olStyle[0];\r\n        }\r\n        if (!TC.Util.isFunction(olStyle)) {\r\n            var color;\r\n            var stroke;\r\n            var fill;\r\n            if (olFeat) {\r\n                const olGeom = olFeat.getGeometry();\r\n                if (olGeom) {\r\n                    const olGeomType = olGeom.getType();\r\n                    // Si la geometría no aplica, no poner ol.style.Image\r\n                    // Esto es porque el parser de KML genera estilos \"totum revolutum\" a partir de las URL de estilos (bug 27470)\r\n                    if (olGeomType !== ol.geom.GeometryType.POINT && olGeomType !== ol.geom.GeometryType.MULTI_POINT) {\r\n                        olStyle.setImage(null);\r\n                    }\r\n                }\r\n            }\r\n            var image = olStyle.getImage();\r\n            if (image) {\r\n                if (image instanceof ol.style.RegularShape) {\r\n                    stroke = image.getStroke();\r\n                    color = stroke.getColor();\r\n                    if (color) {\r\n                        color = ol.color.asArray(color);\r\n                        result.strokeColor = getHexColorFromArray(color);\r\n                    }\r\n                    result.strokeWidth = stroke.getWidth();\r\n                    fill = image.getFill();\r\n                    if (fill) {\r\n                        color = fill.getColor();\r\n                        if (color) {\r\n                            color = ol.color.asArray(color);\r\n                            result.fillColor = getHexColorFromArray(color);\r\n                        }\r\n                        result.fillOpacity = color[3];\r\n                    }\r\n                }\r\n                else {\r\n                    result.url = image.getSrc();\r\n                    var size = image.getSize();\r\n                    if (size) {\r\n                        result.width = size[0];\r\n                        result.height = size[1];\r\n                        result.anchor = image.getAnchor();\r\n                        if (result.anchor) {\r\n                            result.anchor[0] = result.anchor[0] / result.width;\r\n                            result.anchor[1] = result.anchor[1] / result.height;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                stroke = olStyle.getStroke();\r\n                if (stroke) {\r\n                    color = stroke.getColor();\r\n                    if (color) {\r\n                        color = ol.color.asArray(color);\r\n                        result.strokeColor = getHexColorFromArray(color);\r\n                    }\r\n                    result.strokeWidth = stroke.getWidth();\r\n                    result.lineDash = stroke.getLineDash();\r\n                }\r\n                fill = olStyle.getFill();\r\n                if (fill) {\r\n                    color = fill.getColor();\r\n                    if (color) {\r\n                        color = ol.color.asArray(color);\r\n                        result.fillColor = getHexColorFromArray(color);\r\n                    }\r\n                    result.fillOpacity = color[3];\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getStyle = function () {\r\n        return getStyleFromNative(this.layer.getStyle());\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.reloadSource = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const layerOptions = self.createVectorSource(self.parent, self.createStyles(self.parent));\r\n\r\n            if (self.parent.type === TC.Consts.layerType.WFS) {\r\n                var listenerKey = layerOptions.source.on('change', function (e) {\r\n                    if (layerOptions.source.getState() == 'ready') {\r\n                        ol.Observable.unByKey(listenerKey);\r\n\r\n                        resolve();\r\n                    }\r\n                });\r\n            }\r\n\r\n            var features = self.layer.getSource().getFeatures();\r\n            self.layer.setSource(layerOptions.source);\r\n\r\n            if (layerOptions.style)\r\n                self.layer.setStyle(layerOptions.style);\r\n\r\n            if (self.parent.type != TC.Consts.layerType.WFS) {\r\n                layerOptions.source.addFeatures(features);\r\n                resolve();\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.import = function (options) {\r\n        var self = this;\r\n        var opts = TC.Util.extend({\r\n        }, options);\r\n        opts.type = options.format;\r\n\r\n        var oldFeatures = self.layer.getSource().getFeatures();\r\n        var layerOptions = self.createVectorSource(opts, self.createStyles(self.parent));\r\n        self.layer.setSource(layerOptions.source);\r\n        if (layerOptions.style) {\r\n            self.layer.setStyle(layerOptions.style);\r\n        }\r\n\r\n        layerOptions.source.addFeatures(oldFeatures);\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.createVectorSource = function (options, nativeStyle) {\r\n        const self = this;\r\n\r\n        var createGenericLoader = function (url, format) {\r\n            var internalLoader = ol.featureloader.xhr(url, format);\r\n            return function (extent, resolution, projection) {\r\n                self.parent.state = TC.Layer.state.LOADING;\r\n                if (self.parent.map) {\r\n                    self.parent.map.trigger(TC.Consts.event.BEFORELAYERUPDATE, {\r\n                        layer: self.parent\r\n                    });\r\n                }\r\n                internalLoader.call(this, extent, resolution, projection);\r\n            };\r\n        };\r\n        var usesGenericLoader = false;\r\n\r\n        var source;\r\n        var vectorOptions;\r\n\r\n        var getMimeTypeFromUrl = function (url) {\r\n            var idx = url.indexOf('?');\r\n            if (idx >= 0) {\r\n                url = url.substr(0, idx);\r\n            }\r\n            else {\r\n                idx = url.indexOf('#');\r\n                if (idx >= 0) {\r\n                    url = url.substr(0, idx);\r\n                }\r\n            }\r\n            switch (url.substr(url.lastIndexOf('.') + 1).toLowerCase()) {\r\n                case 'kml':\r\n                    return TC.Consts.mimeType.KML;\r\n                case 'json':\r\n                case 'geojson':\r\n                    return TC.Consts.mimeType.GEOJSON;\r\n                case 'gml':\r\n                    return TC.Consts.mimeType.GML;\r\n                case 'gpx':\r\n                    return TC.Consts.mimeType.GPX;\r\n                default:\r\n                    return null;\r\n            }\r\n        };\r\n\r\n        if (Array.isArray(options.url) || options.urls) {\r\n            var urls = options.urls || options.url;\r\n            urls = urls.map(function (elm, idx) {\r\n                return TC.proxify(elm);\r\n            });\r\n            vectorOptions = {\r\n                url: urls,\r\n                format: new ol.format.KMLCustom({\r\n                    showPointNames: false\r\n                }),\r\n                projection: options.crs\r\n            };\r\n        }\r\n        else if (options.url && options.type !== TC.Consts.layerType.WFS) {\r\n            vectorOptions = {\r\n                url: TC.proxify(options.url),\r\n                projection: options.crs\r\n            };\r\n            vectorOptions.format = getFormatFromName(options.format) || getFormatFromName(getMimeTypeFromUrl(options.url)) || getFormatFromName(options.type);\r\n            vectorOptions.loader = createGenericLoader(vectorOptions.url, vectorOptions.format);\r\n            usesGenericLoader = true;\r\n        }\r\n        else if (options.data) {\r\n            vectorOptions = {\r\n                projection: options.crs,\r\n                loader: function (extent, resolution, projection) {\r\n                    self.parent.state = TC.Layer.state.LOADING;\r\n                    if (self.parent.map) {\r\n                        self.parent.map.trigger(TC.Consts.event.BEFORELAYERUPDATE, {\r\n                            layer: self.parent\r\n                        });\r\n                    }\r\n                    var format = this.getFormat();\r\n                    try {\r\n                        var fs = format.readFeatures(options.data, {\r\n                            featureProjection: projection\r\n                        });\r\n                        this.addFeatures(fs);\r\n                        self.parent.state = TC.Layer.state.IDLE;\r\n                        if (self.parent.map) {\r\n                            self.parent.map.trigger(TC.Consts.event.LAYERUPDATE, {\r\n                                layer: self.parent, newData: data\r\n                            });\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        self.parent.state = TC.Layer.state.IDLE;\r\n                        if (self.parent.map) {\r\n                            self.parent.map.trigger(TC.Consts.event.LAYERERROR, {\r\n                                layer: self.parent, reason: e.message\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            vectorOptions.format = getFormatFromName(options.format) || getFormatFromName(options.type);\r\n        }\r\n        else if (options.type == TC.Consts.layerType.WFS) {\r\n            var outputFormat;\r\n            var mimeType;\r\n            switch (options.outputFormat) {\r\n                case TC.Consts.format.JSON:\r\n                    outputFormat = new ol.format.GeoJSON({\r\n                        geometryName: options.geometryName\r\n                    });\r\n                    mimeType = 'json';\r\n                    break;\r\n                case TC.Consts.format.GML3:\r\n                    outputFormat = new ol.format.WFS({ gmlFormat: new ol.format.GML3() });\r\n                    mimeType = TC.Consts.mimeType.GML;\r\n                    break;\r\n                case TC.Consts.format.GML32:\r\n                    outputFormat = new ol.format.WFS({ gmlFormat: new ol.format.GML32() });\r\n                    mimeType = TC.Consts.mimeType.GML;\r\n                    break;\r\n                default:\r\n                    outputFormat = new ol.format.WFS({ gmlFormat: new ol.format.GML2() });\r\n                    mimeType = TC.Consts.mimeType.GML;\r\n                    break;\r\n            }\r\n            vectorOptions = {\r\n                format: outputFormat,\r\n                loader: function (extent, resolution, projection) {\r\n                    var sOrigin = this;\r\n                    var serviceUrl = options.url;\r\n                    if (serviceUrl) {\r\n                        self.parent.state = TC.Layer.state.LOADING;\r\n                        self.parent.map.trigger(TC.Consts.event.BEFORELAYERUPDATE, {\r\n                            layer: self.parent\r\n                        });\r\n\r\n                        const manageResponse = (response) => {\r\n                            const data = response.data;\r\n                            let feats;\r\n                            try {\r\n                                feats = outputFormat.readFeatures(data);\r\n                            }\r\n                            catch (e) {\r\n                                self.parent.map.trigger(TC.Consts.event.LAYERERROR, { layer: self.parent, reason: e.message })\r\n                            }\r\n                            const triggerLayerUpdate = function () {\r\n                                self.parent.map.trigger(TC.Consts.event.LAYERUPDATE, {\r\n                                    layer: self.parent, newData: data\r\n                                });\r\n                            };\r\n                            const onFeaturesAdd = function (e) {\r\n                                if (e.layer === self.parent) {\r\n                                    self.parent.map.off(TC.Consts.event.FEATURESADD, onFeaturesAdd);\r\n                                    triggerLayerUpdate();\r\n                                }\r\n                            };\r\n                            if (feats && feats.length) {\r\n                                sOrigin.addFeatures(feats);\r\n                                self.parent.map.on(TC.Consts.event.FEATURESADD, onFeaturesAdd);\r\n                            }\r\n                            else {\r\n                                triggerLayerUpdate();\r\n                            }\r\n                            self.parent.state = TC.Layer.state.IDLE;\r\n                        }\r\n                        const manageError = (error) => {\r\n                            if (error instanceof XMLDocument)\r\n                                self.parent.map.trigger(TC.Consts.event.LAYERERROR, { layer: self.parent, reason: error.querySelector(\"ExceptionText\").innerHTML });\r\n                            else\r\n                                self.parent.map.trigger(TC.Consts.event.LAYERERROR, { layer: self.parent, reason: error });\r\n                        };\r\n\r\n                        const makeAjaxCall = (onlyHits, capabilities) => {\r\n                            var ajaxOptions = {};\r\n                            var crs = projection.getCode();\r\n                            var version = options.version || capabilities.version || '1.1.0';\r\n                            capabilities.version = version;\r\n                            var url = serviceUrl;\r\n                            var featureType = Array.isArray(options.featureType) ? options.featureType : [options.featureType];\r\n                            const isSpatial = function (filter) {\r\n                                switch (true) {\r\n                                    case filter instanceof TC.filter.LogicalNary:\r\n                                        return filter.conditions.some(f => isSpatial(f));\r\n                                    case filter instanceof TC.filter.Spatial:\r\n                                        return true;\r\n                                    default:\r\n                                        return false;\r\n                                }\r\n                            }\r\n                            if (options.properties && (isSpatial(options.properties) || options.properties.getText(capabilities.version).length > TC.Consts.URL_MAX_LENGTH)) {\r\n                                ajaxOptions.method = 'POST';\r\n                                ajaxOptions.url = url;\r\n                                ajaxOptions.data = TC.Util.WFSQueryBuilder(featureType, options.properties, capabilities, onlyHits ? null : options.outputFormat, onlyHits, crs, options.maxFeatures)\r\n                            }\r\n                            else {\r\n                                ajaxOptions.method = 'GET';\r\n                                ajaxOptions.url = url;\r\n                                ajaxOptions.data = {\r\n                                    service: \"WFS\",\r\n                                    request: \"GetFeature\",\r\n                                    version: version,\r\n                                    outputFormat: options.outputFormat,\r\n                                    srsname: crs\r\n                                }\r\n                                ajaxOptions.data[\"typename\" + (version === \"2.0.0\" ? \"s\" : \"\")] = (options.featurePrefix ? options.featurePrefix + \":\" : \"\") + options.featureType;\r\n                                if (onlyHits)\r\n                                    ajaxOptions.data = Object.assign(ajaxOptions.data, {\r\n                                        resultType: \"hits\"\r\n                                    });\r\n                                if (options.properties) {\r\n                                    if (options.properties instanceof TC.filter.Bbox)\r\n                                        ajaxOptions.data = Object.assign(ajaxOptions.data, {\r\n                                            BBOX: '{0},{1},{2},{3},{4}'.format(options.properties.extent.concat([crs]))\r\n                                        });\r\n                                    else\r\n                                        ajaxOptions.data = Object.assign(ajaxOptions.data, {\r\n                                            filter: options.properties.getText()\r\n                                        });\r\n                                }\r\n                                if (options.maxFeatures)\r\n                                    ajaxOptions.data = Object.assign(ajaxOptions.data, {\r\n                                        maxFeatures: options.maxFeatures\r\n                                    });\r\n                            }\r\n                            switch (onlyHits ? \"\" : mimeType) {\r\n                                case 'json':\r\n                                    ajaxOptions.responseType = TC.Consts.mimeType.JSON;\r\n                                    break;\r\n                                default:\r\n                                    ajaxOptions.responseType = TC.Consts.mimeType.XML;\r\n                                    break;\r\n                            }\r\n                            ajaxOptions.contentType = TC.Consts.mimeType.XML;\r\n\r\n                            return TC.ajax(ajaxOptions);\r\n                        };\r\n\r\n                        self.parent.getCapabilitiesPromise().then((_capabilities) => {\r\n                            const capabilities = _capabilities;\r\n                            //obtenos del capabilities nummax de features\r\n                            let numMaxFeatures = null;\r\n                            try {\r\n                                numMaxFeatures = capabilities.Operations.GetFeature.CountDefault.DefaultValue;\r\n                            }\r\n                            catch (e) {\r\n                            }\r\n                            if (numMaxFeatures) {\r\n                                if (!options.maxFeatures) options.maxFeatures = numMaxFeatures;\r\n                                makeAjaxCall(true, capabilities).then((response) => {\r\n                                    var firstNode = response.data.children[0];\r\n                                    if (firstNode.tagName.toLowerCase().indexOf(\"exception\") >= 0) {\r\n                                        self.parent.map.trigger(TC.Consts.event.LAYERERROR, { layer: self.parent, reason: firstNode.querySelector(\"ExceptionText\").innerHTML })\r\n                                    }\r\n                                    else if (firstNode.tagName.toLowerCase().indexOf(\"featurecollection\") >= 0) {\r\n                                        let numOfFeaturesFounded = parseInt((firstNode.attributes[\"numberMatched\"] || firstNode.attributes[\"numberOfFeatures\"]).value, 10);\r\n                                        if (isNaN(numOfFeaturesFounded) || numOfFeaturesFounded >= parseInt(numMaxFeatures, 10)) {\r\n                                            self.parent.map.trigger(TC.Consts.event.LAYERERROR, { layer: self.parent, reason: TC.Consts.WFSErrors.MAX_NUM_FEATURES, data: { limit: parseInt(numMaxFeatures, 10), founded: numOfFeaturesFounded } });\r\n                                            return;\r\n                                        }\r\n                                        else if (!isNaN(numOfFeaturesFounded) && numOfFeaturesFounded === 0) {\r\n                                            //si no encuentra nada. LLamo a la función para \r\n                                            manageResponse({\r\n                                                data: outputFormat instanceof ol.format.GeoJSON ? { \"type\": \"FeatureCollection\", \"totalFeatures\": 0, \"features\": [], \"crs\": null } : outputFormat.writeFeatures([])\r\n                                            });\r\n                                            return;\r\n                                        }\r\n                                        makeAjaxCall(false, capabilities).then(manageResponse).catch(manageError);\r\n                                    }\r\n                                })\r\n                            }\r\n                            else {\r\n                                makeAjaxCall(false, capabilities).then(manageResponse).catch(manageError);\r\n                            }\r\n                        });\r\n                        self._requestUrl = serviceUrl;\r\n                    }\r\n                },\r\n                //strategy: ol.loadingstrategy.all(),\r\n                projection: options.crs\r\n            };\r\n        }\r\n\r\n        source = new ol.source.Vector(vectorOptions);\r\n\r\n        if (usesGenericLoader) {\r\n            source.on(CHANGE, function (e) {\r\n                if (self.parent.map) {\r\n                    self.parent.map.trigger(TC.Consts.event.LAYERUPDATE, {\r\n                        layer: self.parent\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n        source._tcLayer = self.parent;\r\n\r\n        var markerStyle = options.style && options.style.marker ? options.style.marker : TC.Cfg.styles.marker;\r\n        if (!options.style || !options.style.marker) {\r\n            markerStyle = TC.Util.extend({}, markerStyle, {\r\n                anchor: TC.Cfg.styles.point.anchor\r\n            });\r\n        }\r\n\r\n        // Si habilitamos el clustering la fuente es especial\r\n        if (options.cluster) {\r\n            source = new ol.source.Cluster({\r\n                projection: options.crs,\r\n                distance: options.cluster.distance,\r\n                source: source\r\n            });\r\n\r\n            // Animación\r\n            if (options.cluster.animate) {\r\n                var getCurrentCoordinates = function (fromCoords, toCoords, duration, start) {\r\n                    var fraction = Math.min((Date.now() - start) / duration, 1);\r\n                    var dx = (toCoords[0] - fromCoords[0]) * fraction;\r\n                    var dy = (toCoords[1] - fromCoords[1]) * fraction;\r\n                    return [fromCoords[0] + dx, fromCoords[1] + dy];\r\n                };\r\n                var animate = function (parent, child) {\r\n                    var start = Date.now();\r\n                    var pCoords = parent.getGeometry().getCoordinates();\r\n                    var cCoords = child.getGeometry().getCoordinates();\r\n                    child.setGeometry(new ol.geom.Point(pCoords));\r\n                    var step = function step() {\r\n                        var coords = getCurrentCoordinates(pCoords, cCoords, TC.Consts.CLUSTER_ANIMATION_DURATION, start);\r\n                        child.setGeometry(new ol.geom.Point(coords));\r\n                        if (coords[0] !== cCoords[0] && coords[1] !== cCoords[1]) {\r\n                            requestAnimationFrame(step);\r\n                        }\r\n                        else {\r\n                            clusterCache.splice(clusterCache.indexOf(parent), 1);\r\n                        }\r\n                    };\r\n                    requestAnimationFrame(step);\r\n                };\r\n                var clusterCache = [];\r\n                source.addEventListener(REMOVEFEATURE, function (e) {\r\n                    var features = e.feature.get('features');\r\n                    if (features && features.length > 1) {\r\n                        clusterCache.push(e.feature);\r\n                    }\r\n                });\r\n                source.addEventListener(ADDFEATURE, function (e) {\r\n                    var features = e.feature.get('features');\r\n                    if (features) {\r\n                        var coords = features[0].getGeometry().getCoordinates();\r\n                        if (features.length > 1) {\r\n                            var match = clusterCache.filter(function (elm) {\r\n                                var elmCoords = elm.getGeometry().getCoordinates();\r\n                                return elmCoords[0] === coords[0] && elmCoords[1] === coords[1];\r\n                            });\r\n                            if (match.length) {\r\n                                clusterCache.splice(clusterCache.indexOf(match[0]), 1);\r\n                            }\r\n                        }\r\n                        var parent = clusterCache.filter(function (elm) {\r\n                            var children = elm.get('features');\r\n                            if (children && children.length > 0) {\r\n                                var child = children.filter(function (cElm) {\r\n                                    var cCoords = cElm.getGeometry().getCoordinates();\r\n                                    return cCoords[0] === coords[0] && cCoords[1] === coords[1];\r\n                                });\r\n                                return child.length > 0;\r\n                            }\r\n                        });\r\n                        if (parent.length) {\r\n                            animate(parent[parent.length - 1], e.feature);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n        var s = source;\r\n        do {\r\n            s.addEventListener(ADDFEATURE, function (e) {\r\n                var olFeat = e.feature;\r\n                // OL3 dibuja el tamaño original del icono del marcador, lo escalamos si es necesario:\r\n                var style = getNativeFeatureStyle(olFeat, true);\r\n                if (style) {\r\n                    setScaleFunction(style.getImage(), markerStyle.width, olFeat);\r\n                }\r\n            });\r\n            if (TC.Util.isFunction(s.getSource)) {\r\n                s = s.getSource();\r\n            }\r\n            else {\r\n                s = null;\r\n            }\r\n        }\r\n        while (s);\r\n\r\n        source.addEventListener(ADDFEATURE, function (e) {\r\n            const olFeat = e.feature;\r\n\r\n            const addFeatureToLayer = function (feat) {\r\n                var addFn;\r\n                switch (true) {\r\n                    case TC.feature.Point && feat instanceof TC.feature.Point:\r\n                        addFn = self.parent.addPoint;\r\n                        break;\r\n                    case TC.feature.Polyline && feat instanceof TC.feature.Polyline:\r\n                        addFn = self.parent.addPolyline;\r\n                        break;\r\n                    case TC.feature.Polygon && feat instanceof TC.feature.Polygon:\r\n                        addFn = self.parent.addPolygon;\r\n                        break;\r\n                    case TC.feature.MultiPolygon && feat instanceof TC.feature.MultiPolygon:\r\n                        addFn = self.parent.addMultiPolygon;\r\n                        break;\r\n                    case TC.feature.MultiPolyline && feat instanceof TC.feature.MultiPolyline:\r\n                        addFn = self.parent.addMultiPolyline;\r\n                        break;\r\n                    default:\r\n                        addFn = self.parent.addFeature;\r\n                        break;\r\n                }\r\n                if (addFn) {\r\n                    var _timeout;\r\n                    addFn.call(self.parent, olFeat).then(function (f) {\r\n                        var features = olFeat.get('features');\r\n                        if (Array.isArray(features)) {\r\n                            // Es una feature de fuente ol.source.Cluster\r\n                            f.features = features.map(function (elm) {\r\n                                return new feat.constructor(elm);\r\n                            });\r\n                        }\r\n\r\n                        // Timeout porque OL3 no tiene evento featuresadded. El timeout evita ejecuciones a lo tonto.\r\n                        clearTimeout(_timeout);\r\n                        _timeout = setTimeout(function () {\r\n                            self.parent.map.trigger(TC.Consts.event.FEATURESADD, {\r\n                                layer: self.parent, features: [f]\r\n                            });\r\n                        }, 50);\r\n                    });\r\n                }\r\n            };\r\n\r\n            if (!olFeat._wrap || !olFeat._wrap.parent.layer) { // Solo actuar si no es una feature añadida desde la API\r\n                TC.wrap.Feature.createFeature(olFeat).then(addFeatureToLayer);\r\n            }\r\n        });\r\n\r\n        source.addEventListener(REMOVEFEATURE, function (e) {\r\n            var olFeat = e.feature;\r\n            if (olFeat._wrap) {\r\n                var idx = self.parent.features.indexOf(olFeat._wrap.parent);\r\n                if (idx > -1) {\r\n                    self.parent.features.splice(idx, 1);\r\n                    self.parent.map.trigger(TC.Consts.event.FEATUREREMOVE, {\r\n                        layer: self.parent, feature: olFeat._wrap.parent\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n        source.addEventListener(ADDFEATURE, function (e) {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        });\r\n\r\n        source.addEventListener(REMOVEFEATURE, function () {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        });\r\n\r\n        source.addEventListener(CLEAR, function () {\r\n            if (self.parent.map) {\r\n                self.parent.map.trigger(TC.Consts.event.FEATURESCLEAR, {\r\n                    layer: self.parent\r\n                });\r\n            }\r\n        });\r\n\r\n        var layerOptions = {\r\n            source: source\r\n        };\r\n\r\n        if (options.minResolution) {\r\n            layerOptions.minResolution = options.minResolution;\r\n        }\r\n        if (options.maxResolution) {\r\n            layerOptions.maxResolution = options.maxResolution;\r\n        }\r\n\r\n        // En KML conservamos el estilo que viene con el archivo, así que no entramos aquí.\r\n        // A no ser que tenga clusters, porque OL no soporta por defecto la combinación de estilo KML con clusters.\r\n        if (!(vectorOptions && vectorOptions.format instanceof ol.format.KML) || options.cluster) {\r\n            layerOptions.style = nativeStyle || options.styles;\r\n        }\r\n\r\n        return layerOptions;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.createStyles = function (options) {\r\n        var self = this;\r\n\r\n        var dynamicStyle = false;\r\n\r\n        if (TC.Util.isFunction(options)) {\r\n            dynamicStyle = true;\r\n            self.styleFunction = function (olFeat) {\r\n                return createNativeStyle(options(olFeat));\r\n            }\r\n        }\r\n        else {\r\n            options = TC.Util.extend({}, options);\r\n            options.crs = options.crs || TC.Cfg.crs;\r\n            options.styles = options.styles || TC.Cfg.styles;\r\n            var isDynamicStyle = function isDynamicStyle(obj) {\r\n                for (var key in obj) {\r\n                    var prop = obj[key];\r\n                    switch (typeof prop) {\r\n                        case 'string':\r\n                            if (/^\\$\\{(.+)\\}$/.test(prop)) {\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case 'object':\r\n                            if (isDynamicStyle(prop)) {\r\n                                return true;\r\n                            }\r\n                            break;\r\n                        case 'function':\r\n                            return true;\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n\r\n            dynamicStyle = !!(options.cluster && options.cluster.styles) || isDynamicStyle(options.styles);\r\n            const opts = {};\r\n            if (self.parent.styles) {\r\n                opts.styles = Object.assign({}, self.parent.styles);\r\n            }\r\n            if (options.cluster && options.cluster.styles) {\r\n                opts.styles = Object.assign({}, opts.styles, { cluster: options.cluster.styles });\r\n            }\r\n            self.styleFunction = function (olFeat) {\r\n                return createNativeStyle(opts, olFeat);\r\n            };\r\n        }\r\n\r\n        var nativeStyle = dynamicStyle ? self.styleFunction : self.styleFunction();\r\n\r\n        return nativeStyle;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.setStyles = function (options) {\r\n        const self = this;\r\n        self.getLayer().then(function (olLayer) {\r\n            olLayer.setStyle(self.createStyles({ styles: options }));\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.createVectorLayer = function () {\r\n        const self = this;\r\n        var result = null;\r\n\r\n        var options = self.parent.options;\r\n\r\n        var layerOptions = self.createVectorSource(options, self.createStyles(options));\r\n        layerOptions.declutter = self.parent.options.declutter || false;\r\n        result = new ol.layer.Vector(layerOptions);\r\n        result._wrap = self;\r\n\r\n        self.addCommonEvents(result);\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.addFeatures = function (features) {\r\n        const self = this;\r\n        const commit = function (l) {\r\n            var source = l;\r\n            while (TC.Util.isFunction(source.getSource)) {\r\n                source = source.getSource();\r\n            }\r\n            source.addFeatures(features);\r\n        };\r\n        if (self.layer) {\r\n            commit(self.layer);\r\n        }\r\n        else {\r\n            self.getLayer().then(commit);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getFeatures = function () {\r\n        var olLayer = this.getLayer();\r\n        if (olLayer instanceof ol.layer.Layer) {\r\n            return olLayer.getSource().getFeatures();\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getFeatureById = function (id) {\r\n        var olLayer = this.layer;\r\n        if (olLayer instanceof ol.layer.Layer) {\r\n            return olLayer.getSource().getFeatureById(id);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.removeFeature = function (feature) {\r\n        const self = this;\r\n        const commit = function (l) {\r\n            if (feature.wrap.feature) {\r\n                let source = l.getSource();\r\n                let id = feature.wrap.feature.getId();\r\n                if (id && source.getFeatureById(id)) {\r\n                    source.removeFeature(feature.wrap.feature);\r\n                }\r\n            }\r\n        };\r\n        if (self.layer) {\r\n            commit(self.layer);\r\n        }\r\n        else {\r\n            self.getLayer().then(commit);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.clearFeatures = function () {\r\n        const self = this;\r\n        const commit = function (l) {\r\n            var source = l.getSource();\r\n            if (source.clearFeatures) {\r\n                source.clearFeatures();\r\n            }\r\n            else {\r\n                source.clear();\r\n            }\r\n        };\r\n        if (self.layer) {\r\n            commit(self.layer);\r\n        }\r\n        else {\r\n            self.getLayer().then(commit);\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.setFeatureVisibility = function (feature, visible) {\r\n        var self = this;\r\n\r\n        var fillOptions = {\r\n            color: 'rgba(0, 0, 0, 0)'\r\n        };\r\n        var strokeOptions = {\r\n            color: 'rgba(0, 0, 0, 0)'\r\n        };\r\n        var displayNoneStyle = new ol.style.Style({\r\n            image: new ol.style.Circle({\r\n                radius: 0,\r\n                fill: new ol.style.Fill(fillOptions),\r\n                stroke: new ol.style.Stroke(strokeOptions)\r\n            }),\r\n            fill: new ol.style.Fill(fillOptions),\r\n            stroke: new ol.style.Stroke(strokeOptions)\r\n        });\r\n        var idx = self.parent.features.indexOf(feature);\r\n        if (idx >= 0) {\r\n            var olFeat = feature.wrap.feature;\r\n            self.getLayer().then(function (olLayer) {\r\n                if (visible && olFeat._originalStyle) {\r\n                    olFeat.setStyle(olFeat._originalStyle);\r\n                }\r\n                else {\r\n                    olFeat._originalStyle = olFeat.getStyle() || olLayer.getStyle();\r\n                    olFeat.setStyle(displayNoneStyle);\r\n                }\r\n                self.parent.map.trigger(TC.Consts.event.VECTORUPDATE, {\r\n                    layer: self.parent\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getRGBA = function (color, opacity) {\r\n        return getRGBA(color, opacity);\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.findFeature = function (values) {\r\n        // TODO: añadir ol.animation.zoom\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getGetFeatureUrl = function () {\r\n        return this._requestUrl;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.sendTransaction = function (inserts, updates, deletes) {\r\n        const self = this;\r\n        const getNativeFeature = function (feat) {\r\n            return feat.wrap.feature;\r\n        };\r\n        return new Promise(function (resolve, reject) {\r\n            const olInserts = inserts.map(getNativeFeature);\r\n            const olUpdates = updates.map(getNativeFeature);\r\n            const olDeletes = deletes.map(getNativeFeature);\r\n            if (inserts.length || updates.length || deletes.length) {\r\n                self.getLayer().then(function (olLayer) {\r\n                    var format = new ol.format.WFS();\r\n                    var options = self.parent.options;\r\n                    var transaction = format.writeTransaction(olInserts, olUpdates, olDeletes, {\r\n                        featurePrefix: options.featurePrefix,\r\n                        featureNS: options.featureNS,\r\n                        featureType: options.featureType[0]\r\n                    });\r\n                    var ajaxOptions = {\r\n                        url: self.parent.url,\r\n                        method: 'POST',\r\n                        contentType: TC.Consts.mimeType.XML,\r\n                        responseType: TC.Consts.mimeType.XML,\r\n                        data: transaction.outerHTML\r\n                    };\r\n                    TC.ajax(ajaxOptions)\r\n                        .then(function (response) {\r\n                            const data = response.data;\r\n                            const ns = 'http://www.opengis.net/ows';\r\n                            var er = data.getElementsByTagNameNS(ns, 'ExceptionReport')[0];\r\n                            var errorObj = {\r\n                                reason: ''\r\n                            };\r\n                            if (er) {\r\n                                var e = er.getElementsByTagNameNS(ns, 'Exception')[0];\r\n                                if (e) {\r\n                                    errorObj.code = e.getAttribute('exceptionCode');\r\n                                    var texts = e.getElementsByTagNameNS(ns, 'ExceptionText');\r\n                                    for (var i = 0, len = texts.length; i < len; i++) {\r\n                                        errorObj.reason += '\\n' + texts[i].innerHTML;\r\n                                    }\r\n                                }\r\n                                reject(errorObj);\r\n                            }\r\n                            else {\r\n                                var transactionResponse = format.readTransactionResponse(data);\r\n                                resolve(transactionResponse);\r\n                            }\r\n                        })\r\n                        .catch(function () {\r\n                            reject({\r\n                                code: '', reason: 'unknown'\r\n                            });\r\n                        });\r\n                });\r\n            }\r\n            else {\r\n                resolve(self.parent);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.setDraggable = function (draggable, onend, onstart) {\r\n        var self = this;\r\n\r\n        //tiene que estar a nivel de control para poder retirarla después\r\n        //var interaction;\r\n        Promise.all([self.parent.map.wrap.getMap(), self.getLayer()]).then(function (olObjects) {\r\n            const olMap = olObjects[0];\r\n            const olLayer = olObjects[1];\r\n            if (draggable) {\r\n                var interactionOptions = {\r\n                    layers: [olLayer],\r\n                    features: new ol.Collection(olLayer.getSource().getFeatures())\r\n                };\r\n                self.interaction = new ol.interaction.Translate(interactionOptions);\r\n                if (TC.Util.isFunction(onend)) {\r\n                    self.interaction.on('translateend', function (e) {\r\n                        if (e.features.getLength()) {\r\n                            onend(e.features.item(0)._wrap.parent);\r\n                        }\r\n                    });\r\n                }\r\n                if (TC.Util.isFunction(onstart)) {\r\n                    self.interaction.on('translatestart', function (e) {\r\n                        if (e.features.getLength()) {\r\n                            onstart(e.features.item(0)._wrap.parent);\r\n                        }\r\n                    });\r\n                }\r\n                olMap.addInteraction(self.interaction);\r\n            }\r\n            else if (self.interaction) {\r\n                olMap.removeInteraction(self.interaction);\r\n\r\n                // GLS: En IE no muestra la manita en el over sobre marcadores trasladables.\r\n                if (TC.Util.detectIE() && self._handlerDraggablePointerMove && TC.Util.isFunction(self._handlerDraggablePointerMove)) {\r\n                    olMap.un('pointermove', self._handlerDraggablePointerMove);\r\n                    delete self._handlerDraggablePointerMove;\r\n                }\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getFeaturesInExtent = function (extent, tolerance) {\r\n        var self = this;\r\n        var features = this.layer.getSource().getFeatures();\r\n        var featuresInExtent = [];\r\n\r\n        if (tolerance) {\r\n            var leftCorner = self.parent.map.getPixelFromCoordinate([extent[0], extent[1]]);\r\n            var rightCorner = self.parent.map.getPixelFromCoordinate([extent[2], extent[3]]);\r\n            leftCorner[0] -= tolerance[0] / 2;\r\n            leftCorner[1] += tolerance[1];\r\n            rightCorner[0] += tolerance[0] / 2;\r\n            extent = self.parent.map.getCoordinateFromPixel(leftCorner).concat(self.parent.map.getCoordinateFromPixel(rightCorner));\r\n        }\r\n\r\n        for (var i = 0; i < features.length; i++) {\r\n            var feat = features[i];\r\n\r\n            var geometry = feat.getGeometry();\r\n            var coordinate = geometry.getCoordinates();\r\n\r\n            if (ol.extent.containsCoordinate(extent, coordinate)) {\r\n                featuresInExtent.push(feat._wrap.parent);\r\n            }\r\n        }\r\n\r\n        return featuresInExtent;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getAttribution = function () {\r\n        return null;\r\n    };\r\n    TC.wrap.layer.Vector.prototype.getGetMapUrl = function () {\r\n        var result = null;\r\n        var self = this;\r\n        switch (self.getServiceType()) {\r\n            case TC.Consts.layerType.WFS:\r\n                try {\r\n                    result = self.parent.capabilities.Operations.GetFeature.DCP.HTTP.Get.href;\r\n                }\r\n                catch (ex) {\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        const fragment = document.createDocumentFragment();\r\n        const textarea = document.createElement('textarea');\r\n        fragment.appendChild(textarea);\r\n        textarea.innerHTML = result;\r\n        result = textarea.textContent;\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.layer.Vector.prototype.getServiceType = function () {\r\n        var result = null;\r\n        //URI: Si se tiene capabilities se supone que es un servicio WFS\r\n        if (this.parent.capabilities) {\r\n            result = TC.Consts.layerType.WFS;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.register = function (map) {\r\n        var self = this;\r\n\r\n        self._trigger = function (e) {\r\n            if (map.view === TC.Consts.view.PRINTING) {\r\n                return;\r\n            }\r\n            var featureCount = 0;\r\n            map.wrap.map.forEachFeatureAtPixel(e.pixel,\r\n                function (feature, layer) {\r\n                    if (feature._wrap && feature._wrap.parent.showsPopup) {\r\n                        featureCount++;\r\n                    }\r\n                },\r\n                {\r\n                    hitTolerance: hitTolerance\r\n                });\r\n            if (!featureCount) {\r\n                // GLS: lanzo el evento click, para que los controles que no pueden heredar de click y definir un callback pueda suscribirse al evento\r\n                self.parent.map.trigger(TC.Consts.event.CLICK, {\r\n                    coordinate: e.coordinate, pixel: e.pixel\r\n                });\r\n                self.parent.callback(e.coordinate, e.pixel);\r\n            }\r\n            // Seguimos adelante si no se han pinchado featuers\r\n            return featureCount === 0;\r\n        };\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.activate = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            olMap.on(SINGLECLICK, self._trigger);\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Click.prototype.deactivate = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            olMap.un(SINGLECLICK, self._trigger);\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.ScaleBar.prototype.render = function () {\r\n        var self = this;\r\n        if (!self.ctl) {\r\n            self.ctl = new ol.control.ScaleLine({\r\n                target: self.parent.div\r\n            });\r\n        }\r\n        else {\r\n            self.ctl.updateElement_();\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.ScaleBar.prototype.getText = function () {\r\n        var self = this;\r\n        if (self.ctl) {\r\n            return self.ctl.renderedHTML_;\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.NavBar.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            const div = self.parent.div;\r\n            self.zCtl = new ol.control.Zoom({\r\n                target: div\r\n            });\r\n            // Ponemos para render una función modificada, para evitar que en los pinch zoom haya errores de este tipo:\r\n            // AssertionError: Assertion failed: calculated value (1.002067782531452) ouside allowed range (0-1)\r\n\r\n            self.zsCtl = new ol.control.ZoomSlider({\r\n                render: function (e) {\r\n                    if (!e.frameState || !e.frameState.viewState || olMap.getView().getMinResolution() <= e.frameState.viewState.resolution) {\r\n                        // GLS: para evitar que el slider se configure en horizontal\r\n                        var render = function () {\r\n                            if (this.element.offsetWidth > this.element.offsetHeight) {\r\n                                if (!self.requestSliderSize) {\r\n                                    self.requestSliderSize = window.requestAnimationFrame(render.bind(this));\r\n                                }\r\n\r\n                                window.requestAnimationFrame(render.bind(this));\r\n                            } else if (this.element.offsetWidth < this.element.offsetHeight) {\r\n                                if (self.requestSliderSize) {\r\n                                    window.cancelAnimationFrame(self.requestSliderSize);\r\n                                    delete self.requestSliderSize;\r\n                                }\r\n                                ol.control.ZoomSlider.render.call(this, e);\r\n                            }\r\n                        };\r\n                        render.call(this);\r\n                    }\r\n                }\r\n            });\r\n            self.zsCtl.setTarget(div);\r\n\r\n            olMap.addControl(self.zsCtl);\r\n            olMap.addControl(self.zCtl);\r\n\r\n            div.querySelectorAll('button').forEach(function (button) {\r\n                button.classList.add('tc-ctl-btn', self.parent.CLASS + '-btn');\r\n                button.style.display = 'block';\r\n                button.innerHTML = '';\r\n                if (button.matches('.ol-zoom-in')) {\r\n                    button.classList.add(self.parent.CLASS + '-btn-zoomin');\r\n                    button.setAttribute('title', self.parent.getLocaleString('zoomIn'));\r\n                }\r\n                if (button.matches('.ol-zoom-out')) {\r\n                    button.classList.add(self.parent.CLASS + '-btn-zoomout');\r\n                    button.setAttribute('title', self.parent.getLocaleString('zoomOut'));\r\n                }\r\n            });\r\n\r\n            const zoomSlider = div.querySelector('.ol-zoomslider');\r\n            zoomSlider.classList.add(self.parent.CLASS + '-bar');\r\n            zoomSlider.querySelector('.ol-zoomslider-thumb').classList.add(self.parent.CLASS + '-slider');\r\n\r\n            map.on(TC.Consts.event.BASELAYERCHANGE, self.refresh.bind(self));\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.NavBar.prototype.refresh = function () {\r\n        /*\r\n        var map = this.parent.map;\r\n        var olMap = map.wrap.map;\r\n\r\n        olMap.removeControl(self.zsCtl);\r\n        var res = map.getResolutions();\r\n        self.zsCtl = new ol.control.ZoomSlider(\r\n            {\r\n                target: this.parent.div,\r\n                \"maxResolution\": res[0],\r\n                \"minResolution\": res[res.length - 1]\r\n            });\r\n\r\n        olMap.addControl(self.zsCtl);\r\n        $(map.div).find('.ol-zoomslider').addClass(self.parent.CLASS + '-bar').find('.ol-zoomslider-thumb').addClass(self.parent.CLASS + '-slider');\r\n        */\r\n        var self = this;\r\n        var map = self.parent.map.wrap.map;\r\n        // Puede ser que se llame a refresh antes de que esté inicializado ol.control.ZoomSlider. En ese caso llamamos a render que lo inicializa.\r\n        // Como render necesita un ol.MapEvent, esperamos al evento POSTRENDER.\r\n\r\n        self.parent.renderPromise().then(function () {\r\n            if (self.zsCtl.sliderInitialized_) {\r\n                var res = map.getView().getResolution();\r\n                self.zsCtl.setThumbPosition_(res);\r\n            }\r\n            else {\r\n                map.once(POSTRENDER, function (e) {\r\n                    self.zsCtl.render(e);\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.NavBarHome.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            const div = self.parent.div;\r\n\r\n            self.z2eCtl = new ol.control.ZoomToExtent({\r\n                target: div, extent: map.initialExtent, tipLabel: ''\r\n            });\r\n\r\n            olMap.addControl(self.z2eCtl);\r\n\r\n            div.querySelectorAll('button').forEach(function (button) {\r\n                button.style.display = 'block';\r\n                button.innerHTML = '';\r\n            });\r\n            const homeBtn = div.querySelector('.ol-zoom-extent button');\r\n            homeBtn.classList.add('tc-ctl-btn', self.parent.CLASS + '-btn');\r\n            homeBtn.setAttribute('title', self.parent.getLocaleString('zoomToInitialExtent'));\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.NavBarHome.prototype.setInitialExtent = function (extent) {\r\n        this.z2eCtl.extent = extent;\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.register = function (map) {\r\n        const self = this;\r\n        self.map = map;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            self._coordsTrigger = function (e) {\r\n                self.parent.coordsToClick(e);\r\n            };\r\n\r\n            map.wrap.getMap().then(function (olMap) {\r\n                self.olMap = olMap;\r\n\r\n                if (!self.parent.map.on3DView) {\r\n                    var projection = olMap.getView().getProjection();\r\n                    self.parent.crs = projection.getCode();\r\n                    self.parent.units = projection.getUnits();\r\n                } else {\r\n                    self.parent.crs = self.parent.map.view3D.crs;\r\n                    self.parent.units = TC.Consts.units.DEGREES;\r\n                }\r\n\r\n                self.parent.isGeo = self.parent.units === ol.proj.Units.DEGREES;\r\n\r\n                //$(olMap.getViewport()).add(self.parent.div);\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.onMouseMove = function (e) {\r\n        var self = this;\r\n        if (self.map.wrap.map) {\r\n            var coords = self.map.wrap.map.getEventCoordinate(e);\r\n            if (coords) {\r\n                if (self.parent.isGeo) {\r\n                    self.parent.latLon = coords.reverse();\r\n                } else {\r\n                    self.parent.xy = coords;\r\n                }\r\n\r\n                self.parent.update.apply(self.parent, arguments);\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.register = function (map) {\r\n        var self = this;\r\n        self.map = map;\r\n\r\n        self._snapTrigger = function (e) {\r\n            if (e.dragging)\r\n                return;\r\n\r\n            self.initSnap(self.olMap.getEventCoordinate(e), e.pixel);\r\n        };\r\n\r\n        self._postcomposeTrigger = function (e) {\r\n            self.duringTrackSnap(e);\r\n        };\r\n\r\n        map.wrap.getMap().then(function (olMap) {\r\n            self.olMap = olMap;\r\n        });\r\n    };\r\n\r\n    var getTrackingLine = function () {\r\n        var self = this;\r\n\r\n        return self.parent.layerTracking.features.filter(function (f) {\r\n            return f instanceof TC.feature.Polyline;\r\n        })[0];\r\n    }\r\n\r\n    TC.wrap.control.Geolocation.prototype.hasCoordinates = function () {\r\n        var self = this;\r\n\r\n        return self.parent.layerTracking.features.length > 0 && self.parent.layerTracking.features[0].geometry.length >= 1;\r\n    };\r\n\r\n    var getTime = function (timeFrom, timeTo) {\r\n        var diff = timeTo - timeFrom;\r\n        var d = {\r\n            s: Math.floor((diff / 1000) % 60),\r\n            m: Math.floor(((diff / (1000 * 60)) % 60)),\r\n            h: Math.floor(((diff / (1000 * 60 * 60)) % 24))\r\n        };\r\n\r\n        return TC.Util.extend({}, d, { toString: (\"00000\" + d.h).slice(-2) + ':' + (\"00000\" + d.m).slice(-2) + ':' + (\"00000\" + d.s).slice(-2) });\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.showElevationMarker = function (d) {\r\n        var self = this;\r\n\r\n        TC.wrap.control.ResultsPanel.prototype.showElevationMarker.call(self, {\r\n            data: d,\r\n            layer: self.parent.layerTrack,\r\n            coords: self.parent.elevationChartData.coords\r\n        })\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.hideElevationMarker = function () {\r\n        TC.wrap.control.ResultsPanel.prototype.hideElevationMarker.call(this);\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.addWaypoint = function (position, properties) {\r\n        var self = this;\r\n\r\n        var waypoint = new ol.Feature({\r\n            geometry: new ol.geom.Point([position[0], position[1], properties.ele, properties.time], ('XYZM'))\r\n        });\r\n        waypoint.setProperties(properties);\r\n\r\n        self.parent.layerTracking.wrap.layer.getSource().addFeature(waypoint);\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.addPosition = function (position, heading, m, speed, accuracy, altitudeAccuracy, altitude) {\r\n        var self = this;\r\n\r\n        var x = Math.round(position[0]);\r\n        var y = Math.round(position[1]);\r\n\r\n        var line = getTrackingLine.call(this);\r\n        if (self.parent.layerTracking.features && line) {\r\n            var last = line.geometry.length > 0 && line.geometry[line.geometry.length - 1];\r\n            if (last && last.length == 0) {\r\n                self.parent.layerTracking.features[0].geometry.push([x, y, altitude, m]);\r\n                line.wrap.feature.getGeometry().appendCoordinate([x, y, altitude, m]);\r\n            }\r\n            else {\r\n                var lx = Math.round(last[0]);\r\n                var ly = Math.round(last[1]);\r\n\r\n                if (x != lx || y != ly) {\r\n                    self.parent.layerTracking.features[0].geometry.push([x, y, altitude, m]);\r\n                    line.wrap.feature.getGeometry().appendCoordinate([x, y, altitude, m]);\r\n                }\r\n            }\r\n\r\n            TC.Util.storage.setSessionLocalValue(self.parent.Const.LocalStorageKey.TRACKINGTEMP, self.formattedToStorage(self.parent.layerTracking).features);\r\n        }\r\n\r\n        self.parent.trigger(self.parent.Const.Event.STATEUPDATED, {\r\n            moving: (heading != undefined && speed != undefined && speed > 0 && heading > 0)\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.positionChangehandler = function (geoposition) {\r\n        const self = this;\r\n        var accuracy, heading, speed, altitude, altitudeAccuracy;\r\n\r\n        if (!getTrackingLine.call(this)) {\r\n            self.parent.setTracking(false);\r\n        }\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            if (geoposition && geoposition.coords) {\r\n                self.parent.layerGPS.clearFeatures();\r\n\r\n                accuracy = (geoposition.coords.accuracy / self.parent.map.getMetersPerUnit()) || 0;\r\n                heading = geoposition.coords.heading || geoposition[2] || 0;\r\n                speed = geoposition.coords.speed ? geoposition.coords.speed * 3.6 : 0;\r\n                altitude = geoposition.coords.altitude || 0;\r\n                altitudeAccuracy = geoposition.coords.altitudeAccuracy || 0;\r\n\r\n                if (self.parent.layerTracking) {\r\n                    var position_ = [geoposition.coords && geoposition.coords.longitude || geoposition[0], geoposition.coords && geoposition.coords.latitude || geoposition[1]];\r\n                    var projectedPosition = TC.Util.reproject(position_, 'EPSG:4326', self.parent.map.crs);\r\n\r\n                    self.addPosition(projectedPosition, heading, new Date().getTime(), speed, accuracy, altitudeAccuracy, altitude);\r\n\r\n                    var coords = getTrackingLine.call(self).geometry;\r\n                    var len = coords.length;\r\n                    if (len >= 2) {\r\n                        self.parent.deltaMean = (coords[len - 1][3] - coords[0][3]) / (len - 1);\r\n                    }\r\n\r\n                    self.parent.trigger(self.parent.Const.Event.POSITIONCHANGE, {\r\n                        pd: {\r\n                            \"position\": projectedPosition,\r\n                            \"altitude\": altitude,\r\n                            \"accuracy\": accuracy,\r\n                            \"heading\": TC.Util.radToDeg(heading),\r\n                            \"speed\": speed\r\n                        }\r\n                    });\r\n\r\n                    Promise.all([self.parent.layerGPS.addPoint(projectedPosition, {\r\n                        radius: 4,\r\n                        fillColor: '#00CED1',\r\n                        fillOpacity: 1,\r\n                        strokeColor: '#ffffff',\r\n                        strokeWidth: 2,\r\n                        showsPopup: false\r\n                    }), self.parent.layerGPS.addCircle([projectedPosition, accuracy], {\r\n                        strokeColor: '#00CED1',\r\n                        strokeWidth: 0.4,\r\n                        fillColor: '#ffffff',\r\n                        fillOpacity: 0.2,\r\n                        showsPopup: false\r\n                    })]).then(function (features) {\r\n                        const marker = features[0];\r\n                        const accuracyCircle = features[1];\r\n                        self.parent.geopositionTracking = true;\r\n\r\n                        if (self.parent.firstPosition == false) {\r\n                            self.parent.firstPosition = true;\r\n\r\n                            if (!self.parent.trackCenterButton) {\r\n                                self.parent.trackCenterButton = self.parent.div.querySelector('.' + self.parent.CLASS + '-track-center');\r\n                                self.parent.trackCenterButton.querySelector('button').addEventListener('click', function () {\r\n                                    self.parent.layerGPS.map.zoomToFeatures(self.parent.layerGPS.features);\r\n\r\n                                    self.parent.getTrackInfoPanel().then(function (infoPanel) {\r\n                                        if (!infoPanel.isVisible()) {\r\n                                            infoPanel.doVisible();\r\n                                        }\r\n\r\n                                        if (infoPanel.isMinimized()) {\r\n                                            infoPanel.maximize();\r\n                                        }\r\n                                    });\r\n                                });\r\n\r\n                                var controlContainer = self.parent.map.getControlsByClass('TC.control.ControlContainer')[0];\r\n                                if (controlContainer) {\r\n                                    self.parent.trackCenterButton = controlContainer.addElement({ position: controlContainer.POSITION.LEFT, htmlElement: self.parent.trackCenterButton });\r\n                                } else {\r\n                                    self.parent.map.div.appendChild(self.parent.trackCenterButton);\r\n                                }\r\n\r\n                            }\r\n                            self.parent.trackCenterButton.classList.remove(TC.Consts.classes.HIDDEN);\r\n\r\n                            self.parent.layerGPS.map.zoomToFeatures(self.parent.layerGPS.features);\r\n                        }\r\n\r\n                        resolve({\r\n                            marker: marker, accuracy: accuracyCircle\r\n                        });\r\n                    });\r\n\r\n                } else { resolve(null); }\r\n            } else {\r\n                resolve(null);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.setTracking = function (tracking) {\r\n        var self = this;\r\n\r\n        if (tracking) {\r\n            self.parent.firstPosition = false;\r\n            var sessionwaypoint = [];\r\n\r\n            var nativeTrackingFeature;\r\n\r\n            if (self.parent.sessionTracking) {\r\n\r\n                var JSONParser = new TC.wrap.parser.JSON();\r\n                var features = JSONParser.parser.readFeatures(self.parent.sessionTracking);\r\n                if (features && self.parent.storageCRS !== self.parent.map.crs) {\r\n                    features = features.map(function (feature) {\r\n                        var clone = feature.clone();\r\n                        clone.getGeometry().transform(self.parent.storageCRS, self.parent.map.crs);\r\n                        return clone;\r\n                    });\r\n                }\r\n\r\n                var coordinates = features.filter(function (feature) {\r\n                    var type = feature.getGeometry().getType().toLowerCase();\r\n                    if (type === 'point') { sessionwaypoint.push(feature); }\r\n                    return type === 'linestring' || type === 'multilinestring';\r\n                })[0].getGeometry().getCoordinates();\r\n\r\n                nativeTrackingFeature = new ol.Feature({\r\n                    geometry: new ol.geom.LineString(coordinates, ('XYZM')),\r\n                    tracking: true\r\n                });\r\n\r\n            } else {\r\n                nativeTrackingFeature = new ol.Feature({\r\n                    geometry: new ol.geom.LineString([], ('XYZM')),\r\n                    tracking: true\r\n                });\r\n            }\r\n\r\n            if (nativeTrackingFeature) {\r\n\r\n                TC.wrap.Feature.createFeature(nativeTrackingFeature).then(function (tcFeature) {\r\n                    self.parent.layerTracking.addFeature(tcFeature);\r\n\r\n                    if (tcFeature.geometry.length > 1) {\r\n                        self.parent.map.zoomToFeatures(self.parent.layerTracking.features);\r\n                    }\r\n\r\n                    if (sessionwaypoint.length > 0) {\r\n                        Promise.all(sessionwaypoint.map(function (waypoint) {\r\n                            return TC.wrap.Feature.createFeature(waypoint);\r\n                        })).then(function (features) {\r\n                            if (features) {\r\n                                features.forEach(function (feature) {\r\n                                    self.parent.layerTracking.addFeature(feature);\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    self.parent.currentPositionWaiting = self.parent.getLoadingIndicator().addWait();\r\n\r\n                    if (!self.currentPositionTrk) {\r\n                        self.currentPositionTrk = [];\r\n                    }\r\n\r\n                    var getCurrentPositionInterval;\r\n                    var getCurrentPositionRequest = 0;\r\n                    var errorTimeout = 0;\r\n                    var toast = false;\r\n                    var options = {\r\n                        enableHighAccuracy: true, timeout: 600000\r\n                    };\r\n\r\n                    function getCurrentPosition(errorCallback) {\r\n                        var id = getCurrentPositionRequest++;\r\n                        navigator.geolocation.getCurrentPosition(\r\n                            function (data) {\r\n                                clearInterval(getCurrentPositionInterval);\r\n                                self.parent.getLoadingIndicator().removeWait(self.parent.currentPositionWaiting);\r\n                                self.positionChangehandler(data).then(function (obj) {\r\n                                    if (self.parent.geopositionTracking == true && obj && obj.marker && obj.accuracy) {\r\n                                        self.currentPositionTrk.push(navigator.geolocation.watchPosition(self.positionChangehandler.bind(self), self.parent.onGeolocateError.bind(self.parent), options));\r\n                                    }\r\n                                });\r\n                            },\r\n                            errorCallback ? errorCallback :\r\n                                function (error) {\r\n                                    switch (error.code) {\r\n                                        case error.TIMEOUT:\r\n                                            if (errorTimeout > 10) {\r\n                                                clearInterval(getCurrentPositionInterval);\r\n                                                self.parent.onGeolocateError.call(self.parent, error);\r\n                                            } else {\r\n                                                errorTimeout++;\r\n                                                getCurrentPosition(function () {\r\n                                                    clearInterval(getCurrentPositionInterval);\r\n                                                    if (!toast) {\r\n                                                        toast = true;\r\n                                                        self.parent.onGeolocateError.call(self.parent, error);\r\n                                                    }\r\n                                                });\r\n                                            }\r\n                                            break;\r\n                                        default:\r\n                                            clearInterval(getCurrentPositionInterval);\r\n                                            self.parent.onGeolocateError.call(self.parent, error);\r\n                                    }\r\n                                }, {\r\n                                timeout: 5000 + id,\r\n                                maximumAge: 10,\r\n                                enableHighAccuracy: true\r\n                            }\r\n                        );\r\n                    }\r\n                    getCurrentPositionInterval = setInterval(getCurrentPosition, 1000);\r\n\r\n                    setTimeout(function () {\r\n                        if (self.parent.layerTracking && self.parent.layerTracking.features && self.parent.layerTracking.features.length > 0 && self.parent.layerTracking.features[0].geometry.length == 0) {\r\n                            clearInterval(getCurrentPositionInterval);\r\n\r\n                            self.parent.getLoadingIndicator().removeWait(self.parent.currentPositionWaiting);\r\n                            self.map.toast(self.parent.getLocaleString(\"geo.error.permission_denied\"), {\r\n                                type: TC.Consts.msgType.WARNING\r\n                            });\r\n                            self.parent.track.activateButton.classList.remove(TC.Consts.classes.HIDDEN);\r\n                            self.parent.track.deactivateButton.classList.add(TC.Consts.classes.HIDDEN);\r\n                        }\r\n                    }, options.timeout + 1000); // Wait extra second\r\n\r\n                });\r\n            }\r\n        } else {\r\n            self.parent.firstPosition = false;\r\n\r\n            if (self.currentPositionTrk) {\r\n                self.currentPositionTrk = self.currentPositionTrk instanceof Array ? self.currentPositionTrk : [self.currentPositionTrk];\r\n\r\n                self.currentPositionTrk.forEach(function (watch) {\r\n                    navigator.geolocation.clearWatch(watch);\r\n                });\r\n\r\n                self.currentPositionTrk = [];\r\n            }\r\n\r\n            if (self.parent.trackCenterButton)\r\n                self.parent.trackCenterButton.classList.add(TC.Consts.classes.HIDDEN);\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.activateSnapping = function () {\r\n        var self = this;\r\n\r\n        if (!TC.Util.detectMobile()) {\r\n            self.olMap.on([POINTERMOVE, SINGLECLICK], self._snapTrigger);\r\n            self.olMap.on(POSTCOMPOSE, self._postcomposeTrigger);\r\n        }\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.deactivateSnapping = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            if (!TC.Util.detectMobile()) {\r\n                olMap.un([POINTERMOVE, SINGLECLICK], self._snapTrigger);\r\n                olMap.un(POSTCOMPOSE, self._postcomposeTrigger);\r\n            }\r\n\r\n            if (self.snapInfo) {\r\n                olMap.removeOverlay(self.snapInfo);\r\n            }\r\n\r\n            if (self.snapInfoElement) {\r\n                self.snapInfoElement.style.display = 'none';\r\n            }\r\n\r\n            if (self.snapLine) {\r\n                delete self.snapLine;\r\n                olMap.render();\r\n            }\r\n        });\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.clear = function (layer) {\r\n        var self = this;\r\n\r\n        if (layer) {\r\n            layer.clearFeatures();\r\n        }\r\n\r\n        attachedDTD = false;\r\n\r\n        self.deactivateSnapping.call(self);\r\n    };\r\n    var vectorCtx;\r\n    TC.wrap.control.Geolocation.prototype.duringTrackSnap = function (e) {\r\n        var self = this;\r\n\r\n        var vectorContext = vectorCtx = e.vectorContext;\r\n\r\n        if (vectorContext && self.snapLine) {\r\n            if (typeof (vectorContext.setFillStrokeStyle) === 'function')\r\n                vectorContext.setFillStrokeStyle(null, new ol.style.Stroke({\r\n                    color: 'rgba(197, 39, 55, 1)',\r\n                    width: 1\r\n                }));\r\n\r\n            if (typeof (vectorContext.drawGeometry) === 'function')\r\n                vectorContext.drawGeometry(self.snapLine.wrap.feature.getGeometry());\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.endSnap = function () {\r\n        var self = this;\r\n\r\n        self.parent.map.wrap.getMap().then(function (olMap) {\r\n            /* cartel */\r\n            if (self.snapInfo) {\r\n                olMap.removeOverlay(self.snapInfo);\r\n            }\r\n            if (self.snapInfoElement) {\r\n                self.snapInfoElement.style.display = 'none';\r\n            }\r\n            /* línea */\r\n            if (self.snapLine) {\r\n                delete self.snapLine;\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.initSnap = function (coordinate, eventPixel) {\r\n        var self = this;\r\n\r\n        if (self.parent.layerTrack) {\r\n            var vectorSource = self.parent.layerTrack.wrap.layer.getSource();\r\n            var closestFeature = vectorSource.getClosestFeatureToCoordinate(coordinate);\r\n\r\n            if (closestFeature !== null) {\r\n                var geometry = closestFeature.getGeometry();\r\n                var closestPoint = geometry.getClosestPoint(coordinate);\r\n\r\n                // preparamos las Z del MDT si hay datos del MDT\r\n                if (self.parent.elevationChartData && self.parent.elevationChartData.elevationFromServiceChartData &&\r\n                    self.parent.elevationChartData.elevationFromServiceChartData.ele &&\r\n                    !self.parent.elevationChartData.elevationFromServiceChartData.eleCoordinates) {\r\n                    let coords = [...closestFeature.getGeometry().getCoordinates()];\r\n\r\n                    if (Array.isArray(coords) && Array.isArray(coords[0])) {\r\n                        coords.forEach((c, i) => {\r\n                            c.splice(2, 1, self.parent.elevationChartData.elevationFromServiceChartData.ele[i])\r\n                        });\r\n\r\n                        self.parent.elevationChartData.elevationFromServiceChartData.eleCoordinates = coords;\r\n                    }                    \r\n                }\r\n\r\n                const pixel = self.parent.map.getPixelFromCoordinate(closestPoint);\r\n                const distance = Math.sqrt(\r\n                    Math.pow(eventPixel[0] - pixel[0], 2) +\r\n                    Math.pow(eventPixel[1] - pixel[1], 2));\r\n\r\n                if (distance > self.parent.snappingTolerance) {\r\n                    self.endSnap();\r\n                } else {\r\n                    var coordinates = [coordinate, [closestPoint[0], closestPoint[1]]];\r\n\r\n                    if (!self.snapLine) self.snapLine = new TC.feature.Polyline(coordinates, {});\r\n                    else self.snapLine.wrap.feature.getGeometry().setCoordinates(coordinates);\r\n\r\n                    // información del punto\r\n                    if (!self.snapInfoElement)\r\n                        self.snapInfoElement = document.getElementsByClassName('tc-ctl-geolocation-track-snap-info')[0];\r\n\r\n                    self.snapInfoElement.style.display = 'block';\r\n\r\n                    if (!self.snapInfo) {\r\n                        self.snapInfo = new ol.Overlay({\r\n                            element: self.snapInfoElement,\r\n                            offset: [5, 18]\r\n                        });\r\n\r\n                        self.olMap.addOverlay(self.snapInfo);\r\n                    }\r\n\r\n                    if (self.snapInfo.getMap() == undefined)\r\n                        self.snapInfo.setMap(self.olMap);\r\n\r\n                    self.snapInfo.setPosition(coordinate);\r\n\r\n                    var data = {};\r\n                    if (closestFeature.getGeometry().getType() != \"LineString\") {\r\n                        if (closestFeature.getKeys().indexOf('name') > -1)\r\n                            data.n = closestFeature.get('name');\r\n                    }\r\n\r\n                    var locale = self.parent.map.options.locale && self.parent.map.options.locale.replace('_', '-') || undefined;\r\n                    data.x = self.map.wrap.isGeo() ? closestPoint[0].toLocaleString(locale, { minimumFractionDigits: 5 }) : Math.round(closestPoint[0]).toLocaleString(locale);\r\n                    data.y = self.map.wrap.isGeo() ? closestPoint[1].toLocaleString(locale, { minimumFractionDigits: 5 }) : Math.round(closestPoint[1]).toLocaleString(locale);\r\n\r\n                    if (self.map.wrap.isGeo()) {\r\n                        data.isGeo = true;\r\n                    }\r\n\r\n                    var getZ = function (position) {\r\n                        return closestPoint[position] ? (Math.round(closestPoint[position] * 100) / 100).toLocaleString(locale) : undefined;\r\n                    };\r\n                    var getM = function (position) {\r\n                        return closestPoint[position] > 0 ? new Date(closestPoint[position]).toLocaleString(locale) : undefined;\r\n                    };\r\n\r\n                    if (closestFeature.getGeometry().getLayout() === ol.geom.GeometryLayout.XYZM) {\r\n                        data.z = getZ(2);\r\n                        data.m = getM(3);\r\n                    } else if (closestFeature.getGeometry().getLayout() === ol.geom.GeometryLayout.XYZ) {\r\n                        data.z = getZ(2);\r\n                    } else if (closestFeature.getGeometry().getLayout() === ol.geom.GeometryLayout.XYM) {\r\n                        data.m = getM(2);\r\n                    }\r\n\r\n                    if (data) {\r\n                        // Z del MDT si hay datos del MDT\r\n                        if (self.parent.elevationChartData && self.parent.elevationChartData.elevationFromServiceChartData &&\r\n                            self.parent.elevationChartData.elevationFromServiceChartData.eleCoordinates) {\r\n                            let mdtClosestPoint = TC.wrap.Geometry.getNearest(coordinate, self.parent.elevationChartData.elevationFromServiceChartData.eleCoordinates);\r\n                            let mdtZ = (Math.round(mdtClosestPoint[2] * 100) / 100).toLocaleString(locale);\r\n                            data.mdtz = mdtZ;\r\n                        }\r\n\r\n                        self.parent.getRenderedHtml(self.parent.CLASS + '-track-snapping-node', data, function (html) {\r\n                            self.snapInfoElement.innerHTML = html;\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        self.olMap.render();\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.drawTrackingData = function (track) {\r\n        const self = this;\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            const featurePromises = [];\r\n\r\n            const JSONParser = new TC.wrap.parser.JSON();\r\n            const features = JSONParser.parser.readFeatures(track.data);\r\n\r\n            features.filter(function (feature) {\r\n                return feature.getGeometry().getType().toLowerCase() === 'linestring' || feature.getGeometry().getType().toLowerCase() === 'multilinestring';\r\n            }).forEach(function (feature) {\r\n                feature.getGeometry().setCoordinates(feature.getGeometry().getCoordinates(), track.layout);\r\n            });\r\n\r\n            self.activateSnapping.call(self);\r\n\r\n            for (var i = 0, len = features.length; i < len; i++) {\r\n                featurePromises.push(TC.wrap.Feature.createFeature(features[i]));\r\n            }\r\n\r\n            Promise.all(featurePromises).then(function (feats) {\r\n                feats.forEach(function (feat) {\r\n                    if (feat) {\r\n                        self.parent.layerTrack.addFeature(feat);\r\n                    }\r\n                });\r\n                self.parent.map.zoomToFeatures(self.parent.layerTrack.features);\r\n\r\n                resolve();\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.formattedFromStorage = function (storageData) {\r\n        const self = this;\r\n\r\n        if (self.parent.storageCRS !== self.parent.map.crs) {\r\n            var features = new ol.format.GeoJSON().readFeatures(storageData);\r\n            if (features) {\r\n                features = features.map(function (feature) {\r\n                    var clone = feature.clone();\r\n                    clone.getGeometry().transform(self.parent.storageCRS, self.parent.map.crs);\r\n                    clone.setId(feature.getId());\r\n                    return clone;\r\n                });\r\n\r\n                return new ol.format.GeoJSON().writeFeatures(features);\r\n            }\r\n        }\r\n\r\n        return storageData;\r\n    };\r\n    TC.wrap.control.Geolocation.prototype.formattedToStorage = function (layer, removeTrackingProperty, notReproject) {\r\n        var self = this;\r\n\r\n        var parser = new TC.wrap.parser.JSON();\r\n        parser = parser.parser;\r\n\r\n        var features = layer.wrap.layer.getSource().getFeatures();\r\n        var layout;\r\n\r\n        features = features.map(function (feature) {\r\n            if (feature.getGeometry() instanceof ol.geom.LineString) {\r\n                layout = feature.getGeometry().getLayout();\r\n            }\r\n\r\n            if (removeTrackingProperty && feature.getProperties().tracking) {\r\n                feature.unset(\"tracking\");\r\n            }\r\n\r\n            if (!notReproject && self.parent.map.crs !== self.parent.storageCRS) {\r\n                var clone = feature.clone();\r\n                clone.getGeometry().transform(self.parent.map.crs, self.parent.storageCRS);\r\n                clone.setId(feature.getId());\r\n\r\n                return clone;\r\n            }\r\n\r\n            return feature;\r\n        }).sort(function (a, b) {\r\n\r\n            if (a.getGeometry() instanceof ol.geom.Point &&\r\n                !(b.getGeometry() instanceof ol.geom.Point)) {\r\n                return -1;\r\n            }\r\n\r\n            if (b.getGeometry() instanceof ol.geom.Point &&\r\n                !(a.getGeometry() instanceof ol.geom.Point)) {\r\n                return 2;\r\n            }\r\n\r\n            if (a.getProperties().name < b.getProperties().name) { return -1; }\r\n            if (a.getProperties().name > b.getProperties().name) { return 1; }\r\n\r\n            return 0;\r\n        });\r\n\r\n        return {\r\n            features: parser.writeFeatures(features), layout: layout\r\n        };\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.export = function (li) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            self.parent.getTrackingData(li).then(function (data) {\r\n                if (data) {\r\n\r\n                    var olFeatures = new ol.format.GeoJSON().readFeatures(data.data);\r\n\r\n                    if (olFeatures.length === 0) {\r\n                        var geoJSON = self.parent.getTrackingData(li);\r\n                        olFeatures = new ol.format.GeoJSON().readFeatures(geoJSON);\r\n                    }\r\n\r\n                    Promise.all(olFeatures.map(function (feature) {\r\n                        return TC.wrap.Feature.createFeature(feature);\r\n                    })).then((features) => {\r\n                        resolve(features);\r\n                    });\r\n                } else {\r\n                    reject();\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    var segmentsUnion = function (lineStrings) {\r\n        var mergedIndex = [];\r\n        var coords = [];\r\n        if (lineStrings.length > 1) {\r\n\r\n            if (lineStrings[0].length == 4) {\r\n                lineStrings = lineStrings.sort(function (a, b) {\r\n                    if (a[0][3] == b[0][3])\r\n                        return 0;\r\n                    else if (a[0][3] < b[0][3])\r\n                        return -1;\r\n                    else return 1;\r\n                });\r\n            }\r\n\r\n            for (var ls = 0; ls < lineStrings.length; ls++) {\r\n                var lineString = lineStrings[ls];\r\n                var nextLineIndex = -1;\r\n                var distance = Infinity;\r\n\r\n                var last = lineString.getLastCoordinate();\r\n                for (var nls = ls + 1; nls < lineStrings.length; nls++) {\r\n                    var first = lineStrings[nls].getFirstCoordinate();\r\n                    var d = Math.hypot(last[0] - first[0], last[1] - first[1]);\r\n                    if (d < distance) {\r\n                        nextLineIndex = nls;\r\n                        distance = d;\r\n                    }\r\n                }\r\n\r\n                if (mergedIndex.length < lineStrings.length) {\r\n                    if (mergedIndex.indexOf(ls) == -1) {\r\n                        mergedIndex.push(ls);\r\n                        coords = coords.concat(lineString.getCoordinates());\r\n                    }\r\n                    if (mergedIndex.indexOf(nextLineIndex) == -1) {\r\n                        mergedIndex.push(nextLineIndex);\r\n                        coords = coords.concat(lineStrings[nextLineIndex].getCoordinates());\r\n                    }\r\n                }\r\n            }\r\n\r\n            //self.map.toast(self.parent.getLocaleString(\"geo.trk.simulateWarning\"), { type: TC.Consts.msgType.WARNING });\r\n\r\n            return coords;\r\n        }\r\n\r\n        return lineStrings[0].getCoordinates();\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.processImportedFeatures = function (options) {\r\n        var self = this;\r\n\r\n        var source = self.parent.layerTrack.wrap.layer.getSource();\r\n        var fileName = self.parent.importedFileName;\r\n        var names = [];\r\n        var toAdd = [];\r\n        var toRemove = [];\r\n        var maybeRemove = [];\r\n        var features = source.getFeatures();\r\n\r\n        var segments = [];\r\n        var coord = [];\r\n\r\n        var getName = function (feature) {\r\n            if (feature.getProperties().hasOwnProperty(\"name\")) {\r\n                if (feature.getProperties().name.trim().length > 0)\r\n                    names.push(feature.getProperties().name);\r\n                else names.push(fileName);\r\n            }\r\n            else names.push(fileName);\r\n        };\r\n\r\n        for (var f = 0; f < features.length; f++) {\r\n            var feature = features[f];\r\n\r\n            if (feature instanceof TC.Feature)\r\n                feature = features[f].wrap.feature;\r\n\r\n            if (feature.getGeometry() instanceof ol.geom.Point) {\r\n                coord.push(feature.getGeometry().getCoordinates());\r\n                maybeRemove.push(feature);\r\n            }\r\n            else if (feature.getGeometry() instanceof ol.geom.LineString) {\r\n                // GLS: 31/01/2018 Routes (<rte>) are converted into LineString geometries, and tracks (<trk>) into MultiLineString, por tanto, las líneas las cargamos como N Rutas, no las unimos como hasta ahora: // segments.push(feature.getGeometry());                \r\n                getName(feature);\r\n                const newFeature = new ol.Feature({\r\n                    geometry: new ol.geom.LineString(feature.getGeometry().getCoordinates(), feature.getGeometry().getLayout())\r\n                });\r\n                newFeature.setId(feature.getId() || TC.getUID());\r\n                toAdd.push(newFeature);\r\n                toRemove.push(feature);\r\n            }\r\n            else if (feature.getGeometry() instanceof ol.geom.MultiLineString) {\r\n                var clone = feature.clone();\r\n                getName(clone);\r\n\r\n                var ls = clone.getGeometry().getLineStrings();\r\n\r\n                var coords = segmentsUnion(ls);\r\n                const newFeature = new ol.Feature({\r\n                    geometry: new ol.geom.LineString(coords, feature.getGeometry().getLayout())\r\n                });\r\n                newFeature.setId(feature.getId() || TC.getUID());\r\n                toAdd.push(newFeature);\r\n                toRemove.push(feature);\r\n            }\r\n        }\r\n\r\n        if (segments.length > 0) {\r\n            var coords = segmentsUnion(segments);\r\n            toAdd.push(new ol.Feature({\r\n                geometry: new ol.geom.LineString(coords)\r\n            }));\r\n        }\r\n\r\n        if (coord.length > 0 && maybeRemove.length == features.length) {\r\n            toAdd.push(new ol.Feature({\r\n                geometry: new ol.geom.LineString(coord)\r\n            }));\r\n        }\r\n\r\n        if (toRemove.length > 0) {\r\n            for (var i = 0; i < toRemove.length; i++) {\r\n                source.removeFeature(toRemove[i]);\r\n            }\r\n        }\r\n\r\n        if (toAdd.length > 0) {\r\n            var sameName = function (array, element) {\r\n                var indices = [];\r\n                var idx = array.indexOf(element);\r\n                while (idx != -1) {\r\n                    indices.push(idx);\r\n                    idx = array.indexOf(element, idx + 1);\r\n\r\n                    if (indices.length > 1)\r\n                        return true;\r\n                }\r\n\r\n                return indices.length > 1 ? true : false;\r\n            };\r\n\r\n            var featureToAdd;\r\n            var index = 0;\r\n            var processAdd = function () {\r\n                const promises = toAdd.map(function (ta, idx) {\r\n                    return new Promise(function (resolve, reject) {\r\n                        if (featureToAdd) {\r\n                            source.removeFeature(featureToAdd);\r\n                        }\r\n\r\n                        var name;\r\n                        if (names.length > idx) {\r\n                            var name = names[idx];\r\n                            if (sameName(names, name))\r\n                                name = '[' + (idx + 1) + ']' + ' ' + name;\r\n                        }\r\n\r\n                        self.parent.importedFileName = name ? name : fileName;\r\n\r\n                        featureToAdd = toAdd[idx];\r\n                        source.addFeature(featureToAdd);\r\n\r\n                        self.parent.saveTrack({\r\n                            message: self.parent.getLocaleString('geo.trk.upload.ok', { trackName: name ? name : fileName }),\r\n                            importedFileName: name ? name : fileName,\r\n                            notReproject: options.notReproject\r\n                        }).then(function (importedIndex) {\r\n                            if (idx == 0) {\r\n                                index = importedIndex;\r\n                            }\r\n                            resolve();\r\n                        });\r\n                    });\r\n                });\r\n                return Promise.all(promises);\r\n            };\r\n            processAdd().then(function () {\r\n\r\n                self.parent.layerTrack.setVisibility(false);\r\n                // la siguiente instrucción hace que se elimine del array de ids la línea y después no funciona la descarga de la feature.\r\n                // 13/11/2020 recupero la instrucción: sin el borrado de features al compartir un track se queda la importada en 4326 y \r\n                // la nueva ya gestionada, con lo que el zoom a la feature no funciona como debe. Después de todos los cambios en la gestión de \r\n                // IDs de las features de los track no he conseguido reproducir el problema del anterior comentario.\r\n                self.parent.layerTrack.clearFeatures();\r\n\r\n                self.parent.trigger(self.parent.Const.Event.IMPORTEDTRACK, { index: index });\r\n\r\n                delete self.parent.importedFileName;\r\n                self.parent.getLoadingIndicator().removeWait(options.wait);\r\n            });\r\n        } else {\r\n\r\n            if (self.parent.layerTrack) {\r\n                self.parent.map.removeLayer(self.parent.layerTrack);\r\n                self.parent.layerTrack = undefined;\r\n            }\r\n\r\n            delete self.parent.importedFileName;\r\n            self.parent.getLoadingIndicator().removeWait(options.wait);\r\n            TC.alert(self.parent.getLocaleString(\"geo.trk.upload.error4\"));\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.import = function (wait, data, type) {\r\n        var self = this;\r\n        var vectorSource;\r\n        var listenerKey;\r\n\r\n        if (data && data.text) {\r\n\r\n            var layerOptions = self.parent.layerTrack.wrap.createVectorSource({\r\n                data: data.text,\r\n                type: type\r\n            });\r\n            vectorSource = layerOptions.source;\r\n\r\n            listenerKey = vectorSource.on('change', function (e) {\r\n                if (vectorSource.getState() == 'ready') {\r\n                    ol.Observable.unByKey(listenerKey);\r\n                    self.processImportedFeatures(wait);\r\n                }\r\n            });\r\n\r\n            var olLayer = self.parent.layerTrack.wrap.layer;\r\n            olLayer.setSource(vectorSource);\r\n\r\n        } else {\r\n\r\n            if (self.parent.layerTrack) {\r\n                self.parent.map.removeLayer(self.parent.layerTrack);\r\n                self.parent.layerTrack = undefined;\r\n            }\r\n\r\n            delete self.parent.importedFileName;\r\n            self.parent.getLoadingIndicator().removeWait(wait);\r\n            TC.alert(self.parent.getLocaleString(\"geo.trk.upload.error4\"));\r\n        }\r\n    };\r\n\r\n    var idRequestAnimationFrame;\r\n    TC.wrap.control.Geolocation.prototype.simulateTrackEnd = function (resized) {\r\n        var self = this;\r\n\r\n        // mostramos el perfil del MDT si es que está        \r\n        if (!resized &&\r\n            self.parent.elevationChartData && self.parent.elevationChartData.elevationFromServiceChartData) {\r\n            self.parent.resultsPanelChart.chart.chart.show('ele2', { withLegend: true });\r\n\r\n            // revertimos: establecemos a false para que no muestra el progreso en el perfil ya que siempre será elevación 0\r\n            self.hasElevation = true;\r\n        }\r\n\r\n        self.parent.chartProgressClear();\r\n\r\n        if (self.simulateMarker) {\r\n            window.cancelAnimationFrame(idRequestAnimationFrame);\r\n            if (self.simulateMarker.layer.wrap.layer.getSource().getFeatures().length > 0)\r\n                self.simulateMarker.layer.removeFeature(self.simulateMarker);\r\n\r\n            delete self.simulateMarker;\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.simulateTrack = function () {\r\n        var self = this;\r\n\r\n        var coordinates;\r\n        var features = self.parent.layerTrack.wrap.layer.getSource().getFeatures();\r\n        for (var ls = 0; ls < features.length; ls++) {\r\n            if (features[ls].getGeometry() instanceof ol.geom.LineString) {\r\n                coordinates = features[ls].getGeometry().getCoordinates();\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (coordinates && coordinates.length > 0) {\r\n            var first = coordinates[0];\r\n\r\n            var setSimulateMarker = function () {\r\n                return new Promise(function (resolve, reject) {\r\n                    if (!self.simulateMarker) {\r\n                        self.parent.layerTrack.addPoint(first.slice(0, 2), {\r\n                            radius: 7,\r\n                            fillColor: '#ff0000',\r\n                            fillOpacity: 0.5,\r\n                            strokeColor: '#ffffff',\r\n                            strokeWidth: 2\r\n                        }).then(function (f) {\r\n                            resolve(f);\r\n                        });\r\n                    } else {\r\n                        self.simulateMarker.setCoords(first.slice(0, 2));\r\n                        resolve(self.simulateMarker);\r\n                    }\r\n                });\r\n            };\r\n            setSimulateMarker().then(function (f) {\r\n                self.simulateMarker = f;\r\n\r\n                var animationFrameFraction = function () {\r\n                    var trackLength = coordinates.length;\r\n                    var start, finish;\r\n                    var duration;\r\n                    var fraction;\r\n                    var hasTime = false;\r\n\r\n                    const toLength = function (coords) {\r\n                        if (self.parent.map.crs !== self.parent.map.options.utmCrs) {\r\n                            return TC.Util.reproject(coords, self.parent.map.crs, self.parent.map.options.utmCrs);\r\n                        }\r\n\r\n                        return coords;\r\n                    };\r\n\r\n                    var arCoordinates = coordinates;\r\n                    if (arCoordinates[0].length == 4 && arCoordinates[0][3] > 0) {\r\n                        start = arCoordinates[0][3];\r\n                        finish = arCoordinates[arCoordinates.length - 1][3];\r\n                        hasTime = true;\r\n                    } else {\r\n                        arCoordinates[0][3] = Date.now();\r\n\r\n                        for (var i = 1; i < arCoordinates.length; i++) {\r\n                            var done;\r\n                            arCoordinates[i][3] = 0;\r\n\r\n                            if (i + 1 < arCoordinates.length) {\r\n                                done = new ol.geom.LineString(toLength(arCoordinates.slice(i - 1, i + 1))).getLength();\r\n                            } else {\r\n                                done = new ol.geom.LineString(toLength(arCoordinates.slice(i - 1))).getLength();\r\n                            }\r\n\r\n                            arCoordinates[i][3] = arCoordinates[i - 1][3] + (3600000 * done / self.parent.walkingSpeed);\r\n                        }\r\n\r\n                        start = arCoordinates[0][3];\r\n                        finish = arCoordinates[arCoordinates.length - 1][3];\r\n                    }\r\n\r\n                    var trackFilm = new ol.geom.LineString(arCoordinates);\r\n                    var timestamp = start;\r\n                    var distance = 0;\r\n\r\n                    if (self.parent.map.crs !== self.parent.map.options.utmCrs) {\r\n                        distance = new ol.geom.LineString(toLength(JSON.parse(JSON.stringify(arCoordinates)))).getLength();\r\n                    } else {\r\n                        distance = trackFilm.getLength();\r\n                    }\r\n\r\n                    var done = 0;\r\n                    var getDoneAtM = function (m) {\r\n                        for (var i = 0; i < arCoordinates.length; i++) {\r\n                            if (arCoordinates[i][3] > m)\r\n                                return {\r\n                                    d: new ol.geom.LineString(toLength(arCoordinates.slice(0, i))).getLength(),\r\n                                    p: arCoordinates[i - 1].slice(0, 2)\r\n                                };\r\n                        }\r\n                    };\r\n\r\n                    var loopAtFraction = function () {\r\n\r\n                        if (!self.parent.simulate_paused) {\r\n                            var position = trackFilm.getCoordinateAtM(timestamp);\r\n                            var d = getDoneAtM(timestamp);\r\n\r\n                            if (fraction >= 1 || !position || !d) {\r\n                                var li = self.parent.getSelectedTrack();\r\n                                if (li)\r\n                                    self.parent.uiSimulate(false, li);\r\n\r\n                                if (self.parent.hasElevation) {\r\n                                    self.parent.chartProgressClear();\r\n                                }\r\n\r\n                                self.simulateTrackEnd();\r\n\r\n                                return;\r\n                            } else {\r\n\r\n                                if (self.parent.hasElevation) {\r\n                                    self.parent.chartSetProgress(d, position, distance, (hasTime ? self.parent._getTime(arCoordinates[0][3], position[3]) : false));\r\n                                }\r\n\r\n                                if (self.simulateMarker) {\r\n                                    var from = self.simulateMarker.getCoords();\r\n                                    var to = position;\r\n                                    var rotation = Math.atan2(to[1] - from[1], to[0] - from[0]) * 180 / Math.PI;\r\n\r\n                                    self.simulateMarker.setCoords(position);\r\n                                    //self.simulateMarker.setStyle({ angle: rotation });\r\n                                }\r\n\r\n                                if (self.parent.simulate_speed !== 1)\r\n                                    timestamp = timestamp + (self.parent.delta * self.parent.simulate_speed);\r\n                                else\r\n                                    timestamp = timestamp + self.parent.delta;\r\n                            }\r\n                        }\r\n\r\n                        idRequestAnimationFrame = requestAnimationFrame(loopAtFraction);\r\n                    };\r\n                    idRequestAnimationFrame = requestAnimationFrame(loopAtFraction);\r\n\r\n                };\r\n\r\n                const hasD3 = new Promise(function (resolve, reject) {\r\n                    if (window.d3) {\r\n                        resolve();\r\n                    }\r\n                    else {\r\n                        TC.loadJS(!window.d3, [TC.Consts.url.D3C3], function () {\r\n                            resolve();\r\n                        });\r\n                    }\r\n                });\r\n                hasD3.then(function () {\r\n                    // ocultamos el perfil del MDT si es que está y si contamos con elevación original porque si no se queda el perfil vacío\r\n                    if (!d3.select('.c3-legend-item-ele2').empty() && self.parent.hasElevation) {\r\n                        self.parent.resultsPanelChart.chart.chart.hide('ele2', { withLegend: true });\r\n                    }\r\n\r\n                    idRequestAnimationFrame = requestAnimationFrame(animationFrameFraction);\r\n                });\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.headingChangehandler = function (evt) {\r\n        var self = this;\r\n        if (!self.parent.track.infoOnMap) {\r\n            self.parent.track.infoOnMap = document.createElement('div');\r\n            const iomStyle = self.parent.track.infoOnMap.style;\r\n            iomStyle.overFlowY = 'scroll';\r\n            iomStyle.height = '200px';\r\n            iomStyle.width = '200px';\r\n            iomStyle.top = '0';\r\n            iomStyle.left = '100px';\r\n            iomStyle.backgroundColor = 'fuchsia';\r\n            iomStyle.position = 'absolute';\r\n            self.parent.map.div.appendChild(self.parent.track.infoOnMap);\r\n        }\r\n\r\n        self.parent.track.infoOnMap.style.display = '';\r\n\r\n        self.heading = evt.target.getHeading();\r\n\r\n        self.parent.track.infoOnMap.innerHTML = self.parent.track.infoOnMap.innerHTML +\r\n            '<br> <p> salta headingChangehandler </p> <br> <p> evt.target.getHeading(): ' + self.heading + ' </p>';\r\n\r\n\r\n\r\n        self.map.wrap.getMap().then(function (map) {\r\n            map.getView().setRotation(-self.heading);\r\n        });\r\n\r\n        self.parent.trigger(self.parent.Const.Event.STATEUPDATED, {\r\n            moving: (heading != undefined && heading > 0)\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.orientationChangehandler = function (event) {\r\n        var self = this;\r\n\r\n        var view = self.map.wrap.map.getView();\r\n        var center = view.getCenter();\r\n        var resolution = view.getResolution();\r\n        var beta = event.target.getBeta() || 0;\r\n        var gamma = event.target.getGamma() || 0;\r\n\r\n        center[0] -= resolution * gamma * 25;\r\n        center[1] += resolution * beta * 25;\r\n\r\n        view.setCenter(view.constrainCenter(center));\r\n\r\n        self.parent.trigger(self.parent.Const.Event.STATEUPDATED, {\r\n            moving: (heading != undefined && heading > 0)\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Geolocation.prototype.pulsate = function (circle) {\r\n        var self = this;\r\n\r\n        self.pulsated = true;\r\n\r\n        var radius = circle.wrap.feature.getGeometry().getRadius();\r\n        var start = new Date().getTime();\r\n\r\n        var duration = 500;\r\n        var listenerKey;\r\n\r\n        var getRadius = function (elapsed) {\r\n            switch (true) {\r\n                case elapsed <= 50:\r\n                    return radius;\r\n                case elapsed > 50 && elapsed <= 100:\r\n                    return radius * 1.02;\r\n                case elapsed > 100 && elapsed <= 150:\r\n                    return radius * 1.05;\r\n                case elapsed > 150 && elapsed <= 200:\r\n                    return radius * 1.02;\r\n                case elapsed > 200 && elapsed <= 300:\r\n                    return radius;\r\n                case elapsed > 300 && elapsed <= 350:\r\n                    return radius * 1.02;\r\n                case elapsed > 350 && elapsed <= 400:\r\n                    return radius * 1.05;\r\n                case elapsed > 400 && elapsed <= 450:\r\n                    return radius * 1.02;\r\n                case elapsed > 450 && elapsed <= 500:\r\n                    return radius * 1;\r\n                default:\r\n                    return radius;\r\n            }\r\n        };\r\n        listenerKey = self.olMap.on(POSTCOMPOSE, function (event) {\r\n            var vectorContext = event.vectorContext;\r\n            var frameState = event.frameState;\r\n\r\n            var elapsed = frameState.time - start;\r\n\r\n            var f = circle.wrap.feature.getGeometry().clone();\r\n            var r = getRadius(elapsed);\r\n            f.setRadius(r);\r\n\r\n            vectorContext.setFillStrokeStyle(\r\n                new ol.style.Fill({\r\n                    color: 'rgba(0, 0, 0, 0.1)'\r\n                }),\r\n                new ol.style.Stroke({\r\n                    color: 'rgba(255, 0, 0, .8)', width: 1\r\n                })\r\n            );\r\n            vectorContext.drawCircleGeometry(f);\r\n\r\n            if (elapsed > duration) {\r\n                ol.Observable.unByKey(listenerKey);\r\n                return;\r\n            }\r\n\r\n            frameState.animate = true;\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.ResultsPanel.prototype.register = function (map) {\r\n        const self = this;\r\n        self.map = map;\r\n\r\n        map.wrap.getMap().then(function (olMap) {\r\n            self.olMap = olMap;\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.ResultsPanel.prototype.showElevationMarker = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const data = options.data;\r\n        const layer = options.layer;\r\n        const coords = options.coords;\r\n\r\n        if (!self.elevationMarker) {\r\n            const elm = document.createElement('div');\r\n            elm.style.display = 'none';\r\n            elm.classList.add('tc-ctl-geolocation-trackMarker', 'elevation');\r\n            self.elevationMarker = new ol.Overlay({\r\n                element: elm,\r\n                offset: [0, -11],\r\n                positioning: ol.OverlayPositioning.CENTER_CENTER,\r\n                stopEvent: false\r\n            });\r\n        }\r\n\r\n        // GLS: si la capa del track está visible mostramos marcamos punto del gráfico en el mapa\r\n        if (!layer || (layer.getVisibility() && layer.getOpacity() > 0)) {\r\n            self.elevationMarker.getElement().style.display = '';\r\n            self.olMap.addOverlay(self.elevationMarker);\r\n            self.elevationMarker.setPosition(coords[data[0].index]);\r\n        }\r\n\r\n        // No centrar en el marker\r\n        //var extent = self.map.getExtent();\r\n        //var p = coords[data[0].index];\r\n        //if (p[0] >= extent[0] && p[0] <= extent[2] && p[1] >= extent[1] && p[1] <= extent[3]) { }\r\n        //else {\r\n        //    self.map.setCenter(p.slice(0, 2), { animate: true });\r\n        //}\r\n    };\r\n\r\n    TC.wrap.control.ResultsPanel.prototype.hideElevationMarker = function () {\r\n        if (this.elevationMarker) {\r\n            this.elevationMarker.getElement().style.display = 'none';\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.coordsActivate = function () {\r\n        var self = this;\r\n\r\n        self.olMap.on(SINGLECLICK, self._coordsTrigger);\r\n    };\r\n\r\n    TC.wrap.control.Coordinates.prototype.coordsDeactivate = function () {\r\n        var self = this;\r\n\r\n        self.olMap.un(SINGLECLICK, self._coordsTrigger);\r\n    };\r\n\r\n    TC.wrap.Parser = function () {\r\n    };\r\n\r\n    TC.wrap.Parser.prototype.read = function (data) {\r\n        var result = [];\r\n        var self = this;\r\n        if (self.parser) {\r\n            if (!TC.Feature) {\r\n                TC.syncLoadJS(TC.apiLocation + 'TC/Feature');\r\n            }\r\n            result = self.parser.readFeatures(data).map(function (feat) {\r\n                return new TC.Feature(null, {\r\n                    id: feat.getId(), data: feat.getProperties()\r\n                });\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Parser.prototype.readFeatures = function (data) {\r\n        var result = [];\r\n        var self = this;\r\n        if (self.parser) {\r\n            if (!TC.Feature) {\r\n                TC.syncLoadJS(TC.apiLocation + 'TC/Feature');\r\n            }\r\n            result = self.parser.readFeatures(data).map(function (feat) {\r\n                let coordinates = feat.getGeometry().getCoordinates();\r\n                const featureOptions = {};\r\n                switch (feat.getGeometry().getType()) {\r\n                    case \"LineString\":\r\n                        geometry = new TC.feature.Polyline(coordinates, featureOptions);\r\n                        break;\r\n                    case \"Polygon\":\r\n                        geometry = new TC.feature.Polygon(coordinates, featureOptions);\r\n                        break;\r\n                    case \"MultiPoint\":\r\n                        geometry = new TC.feature.MultiPoint(coordinates, featureOptions);\r\n                        break;\r\n                    case \"MultiLineString\":\r\n                        geometry = new TC.feature.MultiPolyline(coordinates, featureOptions);\r\n                        break;\r\n                    case \"MultiPolygon\":\r\n                        geometry = new TC.feature.MultiPolygon(coordinates, featureOptions);\r\n                        break;\r\n                    case \"Point\":\r\n                    default:\r\n                        geometry = new TC.feature.Point(coordinates, featureOptions);\r\n                        break;\r\n                }\r\n                return geometry;\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.parser = {\r\n        WFS: function (options) {\r\n            this.parser = new ol.format.WFS(options);\r\n        },\r\n        JSON: function (options) {\r\n            this.parser = new ol.format.GeoJSON(options);\r\n        }\r\n    };\r\n    TC.inherit(TC.wrap.parser.WFS, TC.wrap.Parser);\r\n    TC.inherit(TC.wrap.parser.JSON, TC.wrap.Parser);\r\n\r\n    TC.wrap.control.OverviewMap.prototype.register = function (map) {\r\n        var self = this;\r\n\r\n        self.parent.layer.wrap.getLayer().then(function setOVMap(olLayer) {\r\n            self.ovMap = new ol.control.OverviewMap({\r\n                target: self.parent.div,\r\n                collapsed: false,\r\n                collapsible: false,\r\n                className: self.parent.CLASS + ' ol-overviewmap',\r\n                layers: [olLayer]\r\n            });\r\n            self.ovMap._wrap = self;\r\n\r\n            /* 08/02/2019 GLS: \r\n                Establecemos el pixelRatio siempre a uno (aunque el control instancie un olMap internamente no admite el paso de la opción pixelRatio,\r\n                imposible de entender, por eso lo hago directamente), porque OL sólo atiende al valor al principio,\r\n                si después se hace zoom in/out del navegador, OL no atiende el cambio lo que provoca que el mapa se vea borroso, click se sitúa mal,\r\n                popup se sitúa entre otros efectos.\r\n                Lo gestionamos nosotros hasta que lo soporten del todo. Relacionado con las tareas/bugs:\r\n                    Bug 25976:Mapa situación en blanco\r\n                    Bug 25954:Canvas en blanco con zoom mayor al 100%\r\n                    Bug 23855:Mapa de situación se muestra en blanco\r\n            */\r\n            self.ovMap.getOverviewMap().pixelRatio_ = 1;\r\n\r\n            // Quitamos el drag&drop añadido en OL 4.1.0 machacando el overlay\r\n            self.ovMap.ovmap_.removeOverlay(self.ovMap.boxOverlay_);\r\n            var box = document.createElement('DIV');\r\n            box.className = 'ol-overviewmap-box';\r\n            box.style.boxSizing = 'border-box';\r\n            self.ovMap.boxOverlay_ = new ol.Overlay({\r\n                position: [0, 0],\r\n                positioning: ol.OverlayPositioning.BOTTOM_LEFT,\r\n                element: box\r\n            });\r\n            self.ovMap.ovmap_.addOverlay(self.ovMap.boxOverlay_);\r\n\r\n            // mantenemos el ancho y alto del canvas en números enteros\r\n            self.manageSize.call(self.ovMap.ovmap_);\r\n\r\n            self._boxElm = self.ovMap.boxOverlay_.getElement();\r\n\r\n            TC.loadJS(\r\n                !window.Draggabilly,\r\n                [TC.apiLocation + TC.Consts.url.DRAGGABILLY],\r\n                function () {\r\n                    var ovmMap = self.ovMap.ovmap_;\r\n                    const drag = new Draggabilly(self._boxElm);\r\n                    // Parcheamos Draggabilly para que respete las otras transformaciones, por ejemplo rotación.\r\n                    drag.positionDrag = function () {\r\n                        const style = this.element.style;\r\n                        const newTransform = 'translate3d( ' + this.dragPoint.x +\r\n                            'px, ' + this.dragPoint.y + 'px, 0)';\r\n                        if (style.transform.length) {\r\n                            const idxStart = style.transform.indexOf('translate3d');\r\n                            if (idxStart >= 0) {\r\n                                const idxEnd = style.transform.indexOf(')', idxStart);\r\n                                style.transform = style.transform.replace(style.transform.substring(idxStart, idxEnd + 1), newTransform);\r\n                            }\r\n                            else {\r\n                                style.transform = newTransform + ' ' + style.transform;\r\n                            }\r\n                        }\r\n                        else {\r\n                            style.transform = newTransform;\r\n                        }\r\n                    };\r\n                    drag.on('pointerDown', function (e) {\r\n                        drag.dragged = self._boxElm.cloneNode();\r\n                        drag.dragged.classList.add(TC.Consts.classes.ACTIVE);\r\n                        drag.dragged.style.position = 'absolute';\r\n                        self._boxElm.insertAdjacentElement('beforebegin', drag.dragged);\r\n                        if (map.maxExtent) {\r\n                            var bottomLeft = ovmMap.getPixelFromCoordinate([map.maxExtent[0], map.maxExtent[1]]);\r\n                            var topRight = ovmMap.getPixelFromCoordinate([map.maxExtent[2], map.maxExtent[3]]);\r\n                            var mapSize = ovmMap.getSize();\r\n                            const container = document.createElement('div');\r\n                            container.style.position = 'absolute';\r\n                            container.style.bottom = Math.round(mapSize[1] - bottomLeft[1]) + 'px';\r\n                            container.style.left = Math.round(bottomLeft[0]) + 'px';\r\n                            container.style.top = Math.round(topRight[1]) + 'px';\r\n                            container.style.right = Math.round(mapSize[0] - topRight[0]) + 'px';\r\n                            const viewport = ovmMap.getViewport();\r\n                            viewport.insertBefore(container, viewport.firstElementChild);\r\n                            drag.options.containment = container;\r\n                        }\r\n                    });\r\n                    drag.on('pointerUp', function (e) {\r\n                        drag.dragged.parentElement.removeChild(drag.dragged);\r\n                        if (map.maxExtent) {\r\n                            ovmMap.getViewport().removeChild(drag.options.containment);\r\n                            drag.options.containment = null;\r\n                        }\r\n                    });\r\n                    drag.on('dragMove', function (e, pointer, moveVector) {\r\n                        drag._delta = moveVector;\r\n                    });\r\n                    drag.on('dragEnd', function (e, pointer) {\r\n                        var olMap = self.ovMap.getMap();\r\n                        var view = olMap.getView();\r\n                        var centerPixel = ovmMap.getPixelFromCoordinate(view.getCenter());\r\n                        var newCenter = ovmMap.getCoordinateFromPixel([centerPixel[0] + drag._delta.x, centerPixel[1] + drag._delta.y]);\r\n                        var extent = map.getExtent();\r\n                        var halfWidth = (extent[2] - extent[0]) / 2;\r\n                        var halfHeight = (extent[3] - extent[1]) / 2;\r\n\r\n                        if (newCenter[0] + halfWidth > map.maxExtent[2]) {\r\n                            newCenter[0] = map.maxExtent[2] - halfWidth;\r\n                        }\r\n                        else if (newCenter[0] - halfWidth < map.maxExtent[0]) {\r\n                            newCenter[0] = map.maxExtent[0] + halfWidth;\r\n                        }\r\n                        if (newCenter[1] + halfHeight > map.maxExtent[3]) {\r\n                            newCenter[1] = map.maxExtent[3] - halfHeight;\r\n                        }\r\n                        else if (newCenter[1] - halfHeight < map.maxExtent[1]) {\r\n                            newCenter[1] = map.maxExtent[1] + halfHeight;\r\n                        }\r\n\r\n                        drag.setPosition(0, 0);\r\n                        delete drag._delta;\r\n                        map.setCenter(newCenter, { animate: true });\r\n                    });\r\n                });\r\n\r\n            map.wrap.getMap().then(function (olMap) {\r\n\r\n                // Modificamos mapa para que tenga la proyección correcta\r\n                self.reset();\r\n\r\n                const load = self.parent.div.querySelector('.' + self.parent.CLASS + '-load');\r\n                olLayer._wrap.$events.on(TC.Consts.event.BEFORETILELOAD, function () {\r\n                    load.classList.remove(TC.Consts.classes.HIDDEN);\r\n                    load.classList.add(TC.Consts.classes.VISIBLE);\r\n                });\r\n                olLayer._wrap.$events.on(TC.Consts.event.TILELOAD, function () {\r\n                    load.classList.remove(TC.Consts.classes.VISIBLE);\r\n                    load.classList.add(TC.Consts.classes.HIDDEN);\r\n                });\r\n\r\n                olMap.addControl(self.ovMap);\r\n\r\n                self.parent.isLoaded = true;\r\n                self.parent.trigger(TC.Consts.event.MAPLOAD);\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.reset = function (options) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const setLayer = function (layer, crs) {\r\n                if (layer.type === TC.Consts.layerType.WMTS) {\r\n                    var layerProjectionOptions = { crs: crs || self.parent.map.crs, oldCrs: layer.wrap.layer.getSource().getProjection().getCode() }; // , allowFallbackLayer: true\r\n\r\n                    if (layerProjectionOptions.oldCrs !== layerProjectionOptions.crs) {\r\n                        layer.setProjection(layerProjectionOptions);\r\n                    }\r\n                }\r\n\r\n                layer.wrap.getLayer().then(function (olLayer) {\r\n\r\n                    var olView = new ol.View(getResolutionOptions(self.parent.map.wrap, olLayer._wrap.parent));\r\n\r\n                    if (olView.getResolutions()) {\r\n                        olView.setResolution(olView.getResolutions().filter(function (res) {\r\n                            return res > olView.getResolutionForExtent(self.parent.map.getExtent(), olMap.getSize())\r\n                        }).reverse()[0]);\r\n\r\n                        olMap.setView(olView);\r\n                    } else if (olView.getProjection().getCode() !== olMap.getView().getProjection().getCode()) {\r\n                        olMap.setView(olView);\r\n                    }\r\n\r\n                    // para controlar el mapa en blanco en IE en la carga inicial\r\n                    olLayer._wrap.$events.one(TC.Consts.event.TILELOAD, function () {\r\n                        olMap.getLayers().getArray()[0].getSource().refresh();\r\n                    });\r\n\r\n                    if (layer !== self.parent.layer || olMap.getLayers().getArray().indexOf(layer) === -1) {\r\n\r\n                        self.parent.map.trigger(TC.Consts.event.OVERVIEWBASELAYERCHANGE, { oldLayer: layer !== self.parent.layer ? self.parent.layer : null, newLayer: layer });\r\n                        olMap.getLayers().forEach(function (l) {\r\n                            if (l instanceof ol.layer.Image || l instanceof ol.layer.Tile) {\r\n                                olMap.removeLayer(l);\r\n                            }\r\n                        });\r\n\r\n                        const load = self.parent.div.querySelector('.' + self.parent.CLASS + '-load');\r\n                        olLayer._wrap.$events.on(TC.Consts.event.BEFORETILELOAD, function () {\r\n                            load.classList.remove(TC.Consts.classes.HIDDEN);\r\n                            load.classList.add(TC.Consts.classes.VISIBLE);\r\n                        });\r\n                        olLayer._wrap.$events.on(TC.Consts.event.TILELOAD, function () {\r\n                            load.classList.remove(TC.Consts.classes.VISIBLE);\r\n                            load.classList.add(TC.Consts.classes.HIDDEN);\r\n                        });\r\n\r\n                        olMap.getLayers().insertAt(0, olLayer); // GLS: no usamos .addLayer(olLayer) para asegurar que la capa a añadir quede como fondo.\r\n                    }\r\n\r\n                    resolve(layer);\r\n                });\r\n            };\r\n\r\n            options = options || {};\r\n            var layer = options.layer || self.parent.layer;\r\n            if (self.parent.map && layer && self.ovMap) {\r\n                var olMap = self.ovMap.ovmap_;\r\n\r\n                layer.getCapabilitiesPromise().then(function () {\r\n\r\n                    var originalLayer = layer;\r\n\r\n                    if (!layer.isCompatible(self.parent.map.crs) && layer.wrap.getCompatibleMatrixSets(self.parent.map.crs).length === 0) {\r\n                        layer = layer.getFallbackLayer() || self.parent.defaultLayer;\r\n\r\n                        layer.getCapabilitiesPromise().then(function () {\r\n                            if (self.parent.map.on3DView && !layer.isCompatible(self.parent.map.crs)) {\r\n                                self.parent.map.loadProjections({\r\n                                    crsList: originalLayer.getCompatibleCRS(),\r\n                                    orderBy: 'name'\r\n                                }).then(function (projList) {\r\n                                    setLayer(originalLayer, projList[0].code);\r\n                                });\r\n                            } else if (layer.isCompatible(self.parent.map.crs)) {\r\n                                setLayer(layer);\r\n                            }\r\n                        });\r\n                    } else {\r\n                        setLayer(layer);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.get3DCameraLayer = function () {\r\n        var self = this;\r\n        var result = null;\r\n        var camLayerId = '3DCamera';\r\n        var ovMap;\r\n\r\n        if (self.ovMap) {\r\n            ovMap = self.ovMap.getOverviewMap();\r\n            ovMap.getLayers().forEach(function (elm) {\r\n                if (elm.get('id') === camLayerId) {\r\n                    result = elm;\r\n                }\r\n            });\r\n\r\n            if (!result) {\r\n                var ovMap = self.ovMap.getOverviewMap();\r\n                var fovStyle = createNativeStyle({});\r\n                // Ponemos los cuadriláteros de fov sin relleno (por legibilidad)\r\n                fovStyle[0].getFill().setColor([0, 0, 0, 0]);\r\n                result = new ol.layer.Vector({\r\n                    id: camLayerId,\r\n                    source: new ol.source.Vector(),\r\n                    style: fovStyle\r\n                });\r\n                ovMap.addLayer(result);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.draw3DCamera = function (options) {\r\n        var self = this;\r\n\r\n        if (this.parent.map.isLoaded) {\r\n            self.is3D = !!options;\r\n            var camLayer = self.get3DCameraLayer();\r\n            if (camLayer) {\r\n                var feature;\r\n                options = options || {\r\n                };\r\n                var fov = options.fov;\r\n                var source = camLayer.getSource();\r\n                if (!fov || !fov.length) { // no vemos terreno o no estamos en vista 3D\r\n                    source.clear();\r\n                }\r\n                else {\r\n                    var features = source.getFeatures();\r\n                    if (!features.length) {\r\n                        feature = new ol.Feature();\r\n                        source.addFeature(feature);\r\n                    }\r\n                    else {\r\n                        feature = features[0];\r\n                    }\r\n                    feature.setGeometry(new ol.geom.Polygon([fov]));\r\n                }\r\n                var heading = (typeof options.heading === 'number') ? options.heading : 0;\r\n                self._boxElm.style.transform = 'rotate(' + heading + 'rad)';\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.enable = function () {\r\n        var self = this;\r\n        if (self.parent.layer && self.parent.layer.setVisibility) {\r\n            self.parent.layer.setVisibility(true);\r\n\r\n            /* GLS: bug 23855: mapa de situación se muestra en blanco\r\n                En el resize se valida el alto y el ancho y como el div padre (id = \"ovmap\") tiene display: none, \r\n                el ancho y el alto devuelven cero y por ello se muestra en blanco. \r\n                No vale con lanzar .trigger('resize') porque no utiliza los valores actuales del div, \r\n                sino los almacenados, por eso llamamos a updateSize que actualiza dichos valores.\r\n                https://tfsapp.tracasa.es:8088/tfs/web/wi.aspx?pcguid=4819cc6e-400e-4f70-ba7c-c18a830405aa&id=23855                \r\n            */\r\n            self.parent.wrap.ovMap.ovmap_.updateSize();\r\n\r\n            // Lo siguiente es para actualizar mapa de situación\r\n            const resizeEvent = document.createEvent('HTMLEvents');\r\n            resizeEvent.initEvent('resize', false, false);\r\n            self.parent.map.div.dispatchEvent(resizeEvent);\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.disable = function () {\r\n        var self = this;\r\n        if (self.parent.layer && self.parent.layer.setVisibility) {\r\n            self.parent.layer.setVisibility(false);\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.OverviewMap.prototype.manageSize = function () {\r\n        const self = this;\r\n\r\n        TC.wrap.Map.prototype.manageSize.call(self);\r\n    };\r\n\r\n    TC.wrap.control.FeatureInfo.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            TC.wrap.control.Click.prototype.register.call(self, map);\r\n            var _clickTrigger = self._trigger;\r\n            self._trigger = function (e) {\r\n                var result = _clickTrigger.call(self, e);\r\n                if (result) {\r\n                    self.parent.beforeRequest({ xy: e.pixel });\r\n                }\r\n                else {\r\n                    map.trigger(TC.Consts.event.NOFEATUREINFO, { control: self.parent });\r\n                }\r\n                return result;\r\n            }\r\n        });\r\n    };\r\n\r\n    var bufferElm;\r\n    var getElementText = function (elm) {\r\n        var text = elm.innerHTML || elm.textContent;\r\n        bufferElm = bufferElm || document.createElement(\"textarea\");\r\n        bufferElm.innerHTML = text;\r\n        return bufferElm.value;\r\n    };\r\n\r\n    var esriXmlParser = {\r\n        readFeatures: function (text) {\r\n            var result = [];\r\n            var dom = (new DOMParser()).parseFromString(text, 'text/xml');\r\n            if (dom.documentElement.tagName === 'FeatureInfoResponse') {\r\n                var fiCollections = dom.documentElement.getElementsByTagName('FeatureInfoCollection');\r\n                for (var i = 0, len = fiCollections.length; i < len; i++) {\r\n                    var fic = fiCollections[i];\r\n                    var layerName = fic.getAttribute('layername');\r\n                    var fInfos = fic.getElementsByTagName('FeatureInfo');\r\n                    for (var j = 0, lenj = fInfos.length; j < lenj; j++) {\r\n                        var fields = fInfos[j].getElementsByTagName('Field');\r\n                        var attributes = {\r\n                        };\r\n                        for (var k = 0, lenk = fields.length; k < lenk; k++) {\r\n                            var field = fields[k];\r\n                            attributes[getElementText(field.getElementsByTagName('FieldName')[0])] = getElementText(field.getElementsByTagName('FieldValue')[0]);\r\n                        }\r\n                        var feature = new ol.Feature(attributes);\r\n                        feature.setId(layerName + '.' + TC.getUID());\r\n                        result.push(feature);\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n\r\n    var addLayerToService = function (service, layer, name) {\r\n        var path = layer.getPath(name);\r\n        service.layers.push({\r\n            name: name,\r\n            title: path[path.length - 1],\r\n            path: path.slice(1),\r\n            features: [],\r\n            filter: layer.filter\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.FeatureInfo.prototype.getFeatureInfo = function (coords, resolution, options) {\r\n        var self = this;\r\n        var opts = options || {};\r\n        var map = self.parent.map;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            var targetServices = {};\r\n            var auxInfo = {};\r\n            const requestPromises = [];\r\n            const requestDataArray = [];\r\n            var featurePromises = [];\r\n            var services = [];\r\n\r\n            //var infoFormats = [];\r\n            var layers = olMap.getLayers().getArray();\r\n\r\n            // GLS: filtro el array de capas para quedarnos con las capas que son raster y visibles.\r\n            layers = layers.filter(function (elem) { return elem instanceof ol.layer.Image && elem.getVisible(); });\r\n\r\n            for (var j = 0; j < layers.length; j++) {\r\n                var olLayer = layers[j];\r\n                var layer = olLayer._wrap.parent;\r\n                var source = olLayer.getSource();\r\n                //console.log(\"Source: \" + layer.layerNames.join(\",\"));\r\n                //Por qué en workLayers están el vectorial de medición, y cosas así?\r\n                if (source.getGetFeatureInfoUrl && map.workLayers.indexOf(layer) >= 0 && layer.names.length > 0\r\n                    && (!opts.serviceUrl || opts.serviceUrl === layer.url)) { // Mirar si en las opciones pone que solo busque en un servicio\r\n\r\n                    //\r\n                    var targetService;\r\n                    if (!targetServices[layer.url]) {\r\n                        targetService = {\r\n                            url: layer.url,\r\n                            layers: [],\r\n                            mapLayers: [],\r\n                            title: layer.title,\r\n                            request: null\r\n                        };\r\n                        targetServices[layer.url] = targetService;\r\n                        auxInfo[layer.url] = {\r\n                            source: TC.Util.extend(true, {}, source),\r\n                            layers: []\r\n                        };\r\n                    }\r\n                    else {\r\n                        targetService = targetServices[layer.url];\r\n                        auxInfo[layer.url].source.updateParams(TC.Util.extend(auxInfo[layer.url].source.getParams(), source.getParams()));\r\n                    }\r\n                    targetService.mapLayers.push(layer);\r\n\r\n                    //var targetService = {\r\n                    //    layers: [], mapLayers: [layer]\r\n                    //};\r\n                    var disgregatedNames = layer.getDisgregatedLayerNames();\r\n                    if (opts.layerName) { // Mirar si en las opciones pone que solo busque en una capa\r\n                        if (disgregatedNames.indexOf(opts.layerName) >= 0 && olLayer._wrap.getInfo(opts.layerName).queryable) {\r\n                            addLayerToService(targetService, layer, opts.layerName);\r\n                            auxInfo[layer.url].layers.push(opts.layerName);\r\n                        }\r\n                    }\r\n                    else {\r\n                        for (var i = 0; i < disgregatedNames.length; i++) {\r\n                            var name = disgregatedNames[i];\r\n                            if (olLayer._wrap.getInfo(name).queryable) {\r\n                                addLayerToService(targetService, layer, name);\r\n                            }\r\n                            else {\r\n                                TC.Util.consoleRegister('Capa \"' + disgregatedNames[i] + '\" no queryable, la eliminamos de la petición GFI');\r\n                                disgregatedNames.splice(i, 1);\r\n                                i = i - 1;\r\n                            }\r\n\r\n                        }\r\n\r\n                        // GLS: validamos si nos queda alguna capa a la cual consultar\r\n                        if (disgregatedNames.length > 0) {\r\n                            auxInfo[layer.url].layers = auxInfo[layer.url].layers.concat(disgregatedNames);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for (var serviceUrl in targetServices) {\r\n                services.push(targetServices[serviceUrl]);\r\n                var targetService = targetServices[serviceUrl];\r\n                var source = auxInfo[serviceUrl].source;\r\n                var layers = auxInfo[serviceUrl].layers;\r\n\r\n                // GLS: validamos si hay capas a las cuales consultar, si no hay continuamos con el siguiente servicio\r\n                if (!layers || (layers && layers.length === 0)) {\r\n                    continue;\r\n                }\r\n\r\n                var params = source.getParams();\r\n                if (params.filter) params.filter = targetService.layers.map(function (i) { return \"(\" + (!i.filter ? \"\" : (i.filter instanceof TC.filter.Filter ? i.filter.getText() : i.filter)) + \")\"; }).join(\"\");\n                if (params.cql_filter) params.cql_filter = targetService.layers.map(function (i) { return !i.filter ? \"INCLUDE\" : i.filter; }).join(\";\");\r\n                source.params_.LAYERS = layers.join(',');\r\n                var gfiURL = source.getGetFeatureInfoUrl(coords, resolution, map.crs, {\r\n                    'QUERY_LAYERS': layers.join(','),\r\n                    'INFO_FORMAT': params.INFO_FORMAT,\r\n                    'FEATURE_COUNT': 1000,\r\n                    'radius': map.options.pixelTolerance,\r\n                    'buffer': map.options.pixelTolerance\r\n                });\r\n\r\n                gfiURL = gfiURL.replace(/sld_body=[a-zA-Z%0-9._]*/); // Quitamos el parámetro sld_body\r\n\r\n\r\n                var expUrl = gfiURL;\r\n                const requestData = {\r\n                    serviceUrl: serviceUrl,\r\n                    requestedFormat: params.INFO_FORMAT,\r\n                    expandUrl: expUrl\r\n                };\r\n                requestDataArray.push(requestData);\r\n                requestPromises.push(new Promise(function (resolve, reject) {\r\n                    const mapLayer = targetService.mapLayers[0];\r\n                    mapLayer.toolProxification.fetch(gfiURL)\r\n                        .then(function (data) {\r\n                            mapLayer.toolProxification.cacheHost.getAction(requestData.expandUrl).then(function (cache) {\r\n                                requestData.originalUrl = cache.action.call(mapLayer.toolProxification, requestData.expandUrl);\r\n                                resolve(TC.Util.extend({}, data, requestData));\r\n                            });\r\n                        })\r\n                        .catch(function (error) {\r\n                            reject(Error(error));\r\n                        });\r\n                }));\r\n                TC.Util.consoleRegister(\"Lanzamos GFI\");\r\n            }\r\n\r\n            if (requestPromises.length > 0) {\r\n                Promise.all(requestPromises).then(function (responses) {\r\n                    var someSuccess = false;\r\n                    var featureCount = 0;\r\n                    var featureInsertionPoints = [];\r\n                    for (var i = 0; i < responses.length; i++) {\r\n                        var featureInfo = responses[i];\r\n                        var service = targetServices[requestDataArray[i].serviceUrl];\r\n                        someSuccess = true;\r\n                        service.text = featureInfo.responseText;\r\n                        var format;\r\n                        var iFormat = featureInfo.contentType;\r\n                        if (iFormat && iFormat.indexOf(\";\") > -1)\r\n                            iFormat = iFormat.substr(0, iFormat.indexOf(\";\")).trim();\r\n\r\n                        if (!iFormat) iFormat = featureInfo.requestedFormat;\r\n\r\n                        if (iFormat === featureInfo.requestedFormat) {\r\n                            switch (iFormat) {\r\n                                case 'application/json':\r\n                                    format = new ol.format.GeoJSON();\r\n                                    break;\r\n                                case 'application/vnd.ogc.gml':\r\n                                    if (featureInfo.responseText.indexOf(\"FeatureCollection\") > -1) {\r\n                                        format = new ol.format.WFS({\r\n                                            gmlFormat: new ol.format.GML2({\r\n                                                srsName: map.crs\r\n                                            })\r\n                                        });\r\n                                    }\r\n                                    else {\r\n                                        format = new ol.format.WMSGetFeatureInfo();\r\n                                    }\r\n                                    break;\r\n                                case 'application/vnd.ogc.gml/3.1.1':\r\n                                    format = new ol.format.GML3({\r\n                                        srsName: map.crs\r\n                                    });\r\n                                    break;\r\n                                case 'application/vnd.esri.wms_featureinfo_xml':\r\n                                    format = esriXmlParser;\r\n                                    break;\r\n                                default:\r\n                                    format = null;\r\n                                    break;\r\n                            }\r\n\r\n                            if (format) {\r\n                                var features;\r\n                                try {\r\n                                    features = format.readFeatures(featureInfo.responseText, {\r\n                                        featureProjection: ol.proj.get(map.crs)\r\n                                    });\r\n                                }\r\n                                catch (e) {\r\n                                    TC.error(self.parent.getLocaleString('featureInfo.error.badResponse', { url: featureInfo.serviceUrl }) + ': ' + e.message);\r\n                                    features = [];\r\n                                    continue;\r\n                                };\r\n                                featureCount = featureCount + features.length;\r\n                                var isParentOrSame = function (layer, na, nb) {\r\n                                    var result = false;\r\n                                    if (na === nb) {\r\n                                        result = true;\r\n                                    }\r\n                                    else {\r\n                                        var pa = layer.getNodePath(na);\r\n                                        var pb = layer.getNodePath(nb);\r\n                                        if (pa.length > 0 && pb.length >= pa.length) {\r\n                                            result = true;\r\n                                            for (var i = 0; i < pa.length; i++) {\r\n                                                if (layer.wrap.getName(pa[i]) !== layer.wrap.getName(pb[i])) {\r\n                                                    result = false;\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                    return result;\r\n                                };\r\n\r\n                                var fakeLayers = {\r\n                                };\r\n\r\n                                for (var j = 0; j < features.length; j++) {\r\n                                    var feature = features[j];\r\n                                    if (feature instanceof ol.Feature) {\r\n                                        var fid = feature.getId() || TC.getUID();\r\n                                        var found = false;\r\n                                        var layerName = fid.substr(0, fid.lastIndexOf('.'));\r\n                                        for (var k = 0; k < service.layers.length; k++) {\r\n                                            var l = service.layers[k];\r\n                                            var lName = l.name.substr(l.name.indexOf(':') + 1);\r\n                                            if (service.mapLayers.some(function (mapLayer) { return isParentOrSame(mapLayer, lName, layerName) })) {\r\n                                                found = true;\r\n                                                if (!opts.featureId || feature.getId() === opts.featureId) { // Mirar si en las opciones pone que solo busque una feature\r\n                                                    featurePromises.push(TC.wrap.Feature.createFeature(feature, { showsPopup: false }));\r\n                                                    featureInsertionPoints.push(l.features);\r\n                                                }\r\n                                                break;\r\n                                            }\r\n                                        }\r\n\r\n                                        //si llegamos aquí y no he encontrado su layer, es que no cuadraba el prefijo del fid con el id del layer\r\n                                        //esto pasa, p.ej, en cartociudad\r\n                                        if (!found) {\r\n                                            //así que creo un layer de palo para la respuesta del featInfo\r\n                                            var fakeLayer;\r\n                                            if (fakeLayers[layerName]) fakeLayer = fakeLayers[layerName];\r\n                                            else {\r\n                                                fakeLayer = {\r\n                                                    name: layerName, title: layerName, path: [layerName], features: []\r\n                                                };\r\n                                                fakeLayers[layerName] = fakeLayer;\r\n                                                service.layers.push(fakeLayer);\r\n                                            }\r\n\r\n                                            if (!opts.featureId || feature.getId() === opts.featureId) { // Mirar si en las opciones pone que solo busque una feature\r\n                                                featurePromises.push(TC.wrap.Feature.createFeature(feature, { showsPopup: false }));\r\n                                                featureInsertionPoints.push(fakeLayer.features);\r\n                                            }\r\n                                        }\r\n                                    }\r\n                                }//iteración sobre las features de esta respuesta\r\n\r\n\r\n                            }\r\n                            else {\r\n                                //si no hay formato reconocido y parseable, metemos un iframe con la respuesta\r\n                                //y prau\r\n                                //para eso, creo una falsa entrada de tipo feature, con un campo especial rawUrl o rawContent\r\n\r\n                                const compoundLayer = {\r\n                                    name: 'layer' + TC.getUID(), title: 'Datos en el punto', features: [{\r\n                                        rawUrl: featureInfo.originalUrl, expandUrl: featureInfo.expandUrl, rawContent: featureInfo.responseText, rawFormat: iFormat\r\n                                    }]\r\n                                };\r\n\r\n                                service.layers.push(compoundLayer);\r\n                                featureCount = featureCount + 1;\r\n                            }\r\n                        }\r\n                        else { // iFormat !== featureInfo.requestedFormat\r\n\r\n                            // GLS:\r\n                            TC.Util.consoleRegister(\"Respuesta GFI: lo más probable es que el servidor esté devolviendo una excepción\");\r\n                            TC.Util.consoleRegister(\"Lanzamos los eventos que corresponde y mostramos tostada\");\r\n\r\n                            // En este caso lo más probable es que el servidor esté devolviendo una excepción\r\n                            self.parent.responseError({\r\n                                message: featureInfo.responseText,\r\n                                status: featureInfo.status\r\n                            });\r\n                            // GLS: misma gestión de error que en ol.js - > function (a, b, c) { // error...\r\n                            map.toast(self.parent.getLocaleString('featureInfo.error'), {\r\n                                type: TC.Consts.msgType.ERROR\r\n                            });\r\n                        }\r\n\r\n                    }\r\n                    if (someSuccess) {\r\n                        var finfoPromises = featurePromises;\r\n                        if (featurePromises.length) {\r\n                            finfoPromises = finfoPromises.concat(new Promise(function (resolve, reject) {\r\n                                // Si hay features cargamos el módulo de geometria para encontrar una que se interseque con el punto\r\n                                TC.loadJS(\r\n                                    !TC.Geometry,\r\n                                    TC.apiLocation + 'TC/Geometry',\r\n                                    function () {\r\n                                        resolve();\r\n                                    }\r\n                                );\r\n                            }));\r\n                        }\r\n                        Promise.all(finfoPromises).then(function afterFeatureInfoPromises(features) {\r\n                            var defaultFeature;\r\n                            features.forEach(function (feat, idx) {\r\n                                if (feat) {\r\n                                    feat.attributes = [];\r\n                                    for (var key in feat.data) {\r\n                                        var value = feat.data[key];\r\n                                        if (typeof value !== 'object') {\r\n                                            feat.attributes.push({\r\n                                                name: key,\r\n                                                value: typeof (value) == \"number\" ? value.toLocaleString(TC.Util.getMapLocale(self.parent.map)) : value\r\n                                            });\r\n                                        }\r\n                                        else {\r\n                                            feat.attributes.push({\r\n                                                name: key,\r\n                                                value: value//\"objeto complejo\"\r\n                                            });\r\n                                        }\r\n                                    }\r\n                                    if (!defaultFeature && TC.Geometry.isInside(coords, feat.geometry)) {\r\n                                        defaultFeature = feat;\r\n                                    }\r\n                                    const featureInsertionPoint = featureInsertionPoints[idx];\r\n                                    // Añadimos la feature si no ha sido ya añadida (por ejemplo porque hay dos capas en el \r\n                                    // mapa que tienen features coincidentes)\r\n                                    if (!featureInsertionPoint.some(f => f.id === feat.id)) {\r\n                                        featureInsertionPoint.push(feat);\r\n                                    }\r\n                                }\r\n                            });\r\n\r\n                            var services = [];\r\n                            for (var serviceUrl in targetServices) {\r\n                                if (targetServices.hasOwnProperty(serviceUrl)) {\r\n                                    services.push(targetServices[serviceUrl]);\r\n                                }\r\n                            }\r\n\r\n                            self.parent.responseCallback({\r\n                                coords: coords,\r\n                                resolution: resolution,\r\n                                services: services,\r\n                                featureCount: featureCount,\r\n                                defaultFeature: defaultFeature\r\n                            });\r\n                        });\r\n                    }\r\n                },\r\n                    function (a, b, c) { // error\r\n                        if (services && services.length == 0) {\r\n                            for (var serviceUrl in targetServices) {\r\n                                services.push(targetServices[serviceUrl]);\r\n                            }\r\n                        }\r\n\r\n                        self.parent.responseCallback({\r\n                            coords: coords, resolution: resolution, services: services, featureCount: 0\r\n                        });\r\n                        map.toast(self.parent.getLocaleString('featureInfo.error'), {\r\n                            type: TC.Consts.msgType.ERROR\r\n                        });\r\n                    });\r\n            }\r\n            else {\r\n\r\n                if (map.workLayers.filter(function (layer) {\r\n                    return layer instanceof TC.layer.Raster;\r\n                }).length > 0) {\r\n                    map.toast(self.parent.getLocaleString('featureInfo.notQueryableLayers'), {\r\n                        type: TC.Consts.msgType.INFO\r\n                    });\r\n                }\r\n\r\n                if (services && services.length == 0) {\r\n                    for (var serviceUrl in targetServices) {\r\n                        services.push(targetServices[serviceUrl]);\r\n                    }\r\n                }\r\n\r\n                // GLS: nos suscribimos TC.Consts.event.BEFOREFEATUREINFO y lanzamos el mismo evento de zero resultados ya que puede darse que la resolución se lance antes del before.\r\n                map.on(TC.Consts.event.BEFOREFEATUREINFO, function () {\r\n                    self.parent.responseCallback({\r\n                        coords: coords, resolution: resolution, services: services, featureCount: 0\r\n                    });\r\n                });\r\n\r\n                self.parent.responseCallback({\r\n                    coords: coords, resolution: resolution, services: services, featureCount: 0\r\n                });\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.register = function (map) {\r\n        var self = this;\r\n        map.wrap.getMap().then(function (olMap) {\r\n            TC.wrap.control.Click.prototype.register.call(self, map);\r\n            var _clickTrigger = self._trigger;\r\n            self._trigger = function (e) {\r\n                self.hasSuitableLayers().then(function (hasLayers) {\r\n                    if (hasLayers) {\r\n                        if (!self.parent._isSearching) {\r\n                            if (e.type == SINGLECLICK && !self.parent._isDrawing && !self.parent._isSearching) {\r\n                                _clickTrigger.call(self, e);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.hasSuitableLayers = function () {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            const map = self.parent.map;\r\n            var ret = false;\r\n            map.wrap.getMap().then(function (olMap) {\r\n                olMap.getLayers().forEach(function (olLayer) {\r\n                    var layer = olLayer._wrap.parent;\r\n                    var source = olLayer.getSource();\r\n                    //Por qué en workLayers están el vectorial de medición, y cosas así?\r\n                    if (source.getGetFeatureInfoUrl && map.workLayers.indexOf(layer) >= 0) {\r\n                        ret = true;\r\n                        return false;   //break del foreach\r\n                    }\r\n                });\r\n                resolve(ret);\r\n            });\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.beginDraw = function (options) {\r\n        var self = this;\r\n        options = options || {};\r\n        var xy = options.xy;\r\n        var layer = options.layer;\r\n        var callback = options.callback;\r\n        var geometryType = options.geometryType;\r\n        var semaforo = false;\r\n        if (!self.drawCtrl) {\r\n            layer.wrap.getLayer().then(function (olLayer) {\r\n                var olGeometryType;\r\n                switch (geometryType) {\r\n                    case TC.Consts.geom.POLYLINE:\r\n                        olGeometryType = ol.geom.GeometryType.LINE_STRING;\r\n                        break;\r\n                    default:\r\n                        olGeometryType = ol.geom.GeometryType.POLYGON;\r\n                        break;\r\n                }\r\n                self.drawCtrl = new ol.interaction.Draw({\r\n                    source: olLayer.getSource(),\r\n                    type: olGeometryType\r\n                    , style: olLayer.getStyle()\r\n                });\r\n                var setShowsPopup = function (wrap) {\r\n                    wrap.parent.showsPopup = false;\r\n                };\r\n                olLayer.getSource().on(ADDFEATURE, function (event) {\r\n                    if (event.feature._wrap) {\r\n                        setShowsPopup(event.feature._wrap);\r\n                    }\r\n                    else {\r\n                        event.feature._wrapPromise.then(setShowsPopup);\r\n                    }\r\n                });\r\n                self.drawCtrl.handleEvent = function (event) {\r\n                    //esta ñapa para solucionar cuando haces un primer punto y acontinuación otro muy rápido\r\n                    if (event.type == SINGLECLICK) {\r\n                        var points = olGeometryType === ol.geom.GeometryType.POLYGON ? this.sketchCoords_[0] : this.sketchCoords_;\r\n                        if (semaforo && points.length == 2 && this.sketchFeature_ !== null) {// GLS: Añado la misma validación (this.sketchFeature_ !== null) que tiene el código de OL antes de invocar addToDrawing_ \r\n                            this.addToDrawing_(event);\r\n                        }\r\n                        else {\r\n                            semaforo = true;\r\n                        }\r\n                    }\r\n                    return ol.interaction.Draw.prototype.handleEvent.call(this, event);\r\n                }\r\n                const map = self.parent.map;\r\n                const olMap = map.wrap.map;\r\n                olMap.addInteraction(self.drawCtrl);\r\n                self.drawCtrl.on('drawstart', function (event) {\r\n                    self.parent._isDrawing = true;\r\n                    olMap.getInteractions().forEach(function (item, i) {\r\n                        if (item instanceof (ol.interaction.DoubleClickZoom))\r\n                            item.setActive(false);\r\n                    });\r\n                });\r\n                self.drawCtrl.startDrawing_({\r\n                    coordinate: xy\r\n                });\r\n                self.drawCtrl.on('drawend', function (event) {\r\n                    self.parent._isDrawing = false;\r\n                    olMap.getInteractions().forEach(function (item, i) {\r\n                        if (item instanceof (ol.interaction.DoubleClickZoom))\r\n                            item.setActive(false);\r\n                    });\r\n                    olMap.removeInteraction(self.drawCtrl);\r\n                    this.setActive(false);\r\n                    self.drawCtrl = null;\r\n                    olLayer.getSource().clear();\r\n                    self.parent._drawToken = true;\r\n                    setTimeout(function () {\r\n                        self.parent._drawToken = false;\r\n                    }, 500);\r\n                    if (callback) {\r\n                        TC.wrap.Feature.createFeature(event.feature, { showsPopup: false }).then(function (feat) {\r\n                            callback(feat);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n\r\n        }\r\n        else {\r\n            self.drawCtrl.setActive(true);\r\n            self.drawCtrl.startDrawing_({\r\n                coordinate: xy\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.cancelDraw = function (xy, layer, callback) {\r\n        var self = this;\r\n        if (self.drawCtrl && self.parent._isDrawing) {\r\n            self.parent._isDrawing = false;\r\n            self.drawCtrl.setActive(false);\r\n            self.drawCtrl.source_.clear();\r\n\r\n        }\r\n    };\r\n\r\n    var readFeaturesFromResponse = function (map, data, contentType) {\r\n        var format;\r\n        var iFormat = contentType;\r\n        if (iFormat && iFormat.indexOf(\";\") > -1)\r\n            iFormat = iFormat.substr(0, iFormat.indexOf(\";\")).trim();\r\n\r\n        if (!iFormat) iFormat = data.requestedFormat;\r\n        switch (iFormat) {\r\n            case 'application/json':\r\n                format = new ol.format.GeoJSON();\r\n                break;\r\n            case 'application/vnd.ogc.gml':\r\n                if (data.responseText.indexOf(\"FeatureCollection\") > -1)\r\n                    format = new ol.format.WFS({\r\n                        gmlFormat: new ol.format.GML2({\r\n                            srsName: map.crs\r\n                        })\r\n                    });\r\n                else\r\n                    format = new ol.format.WMSGetFeatureInfo();\r\n                break;\r\n            case 'application/vnd.ogc.gml/3.1.1':\r\n                format = new ol.format.GML3({\r\n                    srsName: map.crs\r\n                });\r\n                break;\r\n            case \"text/xml\":\r\n            case \"application/xml\":\r\n                //posible error\r\n                const exception = data.querySelector(\"ServiceException\");\r\n                if (exception)\r\n                    TC.error(exception);\r\n                format = null;\r\n                break;\r\n            default:\r\n                format = null;\r\n                break;\r\n        }\r\n        if (format) {\r\n            return format.readFeatures(data, {\r\n                featureProjection: ol.proj.get(map.crs)\r\n            });\r\n        }\r\n        else {\r\n            return null;\r\n            ////si no hay formato reconocido y parseable, metemos un iframe con la respuesta\r\n            ////y prau\r\n            ////para eso, creo una falsa entrada de tipo feature, con un campo especial rawUrl o rawContent\r\n            //var l = service.layers[0];\r\n            //l.features.push({\r\n            //    error: response.responseText\r\n            //});\r\n        }\r\n    };\r\n    var featureToServiceDistributor = function (features, service) {\r\n        var featurePromises = [];\r\n        var featureInsertionPoints = [];\r\n        var isParentOrSame = function (layer, na, nb) {\r\n            var result = false;\r\n            if (na === nb || (na.indexOf(nb) === 0)) {\r\n                result = true;\r\n            }\r\n            else {\r\n                var pa = layer.getPath(na);\r\n                var pb = layer.getPath(nb);\r\n                if (pa.length > 0 && pb.length >= pa.length) {\r\n                    result = true;\r\n                    for (var i = 0; i < pa.length; i++) {\r\n                        if (pa[i] !== pb[i]) {\r\n                            result = false;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n\r\n        var fakeLayers = {};\r\n        for (var j = 0; j < features.length; j++) {\r\n            var feature = features[j];\r\n            if (feature instanceof ol.Feature) {\r\n                var fid = feature.getId() || TC.getUID();\r\n                var found = false;\r\n                var layerName = fid.substr(0, fid.lastIndexOf('.'));\r\n                for (var k = 0; k < service.layers.length; k++) {\r\n                    var l = service.layers[k];\r\n                    var lName = l.name.substr(l.name.indexOf(':') + 1);\r\n                    if (service.mapLayers.some(function (mapLayer) { return isParentOrSame(mapLayer, lName, layerName) })) {\r\n                        found = true;\r\n                        featurePromises.push(TC.wrap.Feature.createFeature(feature));\r\n\r\n                        featureInsertionPoints[feature.id_] = (l.features);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                //si llegamos aqu\\u00ed y no he encontrado su layer, es que no cuadraba el prefijo del fid con el id del layer\r\n                //esto pasa, p.ej, en cartociudad\r\n                if (!found) {\r\n                    //as\\u00ed que creo un layer de palo para la respuesta del featInfo\r\n                    var fakeLayer;\r\n                    if (fakeLayers[layerName]) fakeLayer = fakeLayers[layerName];\r\n                    else {\r\n                        fakeLayer = {\r\n                            name: layerName, title: layerName, features: []\r\n                        };\r\n                        fakeLayers[layerName] = fakeLayer;\r\n                        service.layers.push(fakeLayer);\r\n                    }\r\n\r\n                    featurePromises.push(TC.wrap.Feature.createFeature(feature));\r\n                    featureInsertionPoints.push(feature.id_);\r\n                }\r\n            }\r\n        }//iteraci\\u00f3n sobre las features de esta respuesta\r\n\r\n        return new Promise(function (resolve, reject) {\r\n            Promise.all(featurePromises).then(function (features) {\r\n                features.forEach(function (feat) {\r\n                    feat.attributes = [];\r\n                    //feat.showsPopup = false;\r\n                    for (var key in feat.data) {\r\n                        var value = feat.data[key];\r\n                        if (typeof value !== 'object') {\r\n                            feat.attributes.push({\r\n                                name: key, value: value\r\n                            });\r\n                        }\r\n                        else {\r\n                            feat.attributes.push({\r\n                                name: key,\r\n                                value: value//\"objeto complejo\"\r\n                            });\r\n                        }\r\n                    }\r\n                    featureInsertionPoints[feat.id].push(feat);\r\n                });\r\n                resolve({\r\n                    service: service\r\n                })\r\n            });\r\n        });\r\n    }\r\n\r\n    TC.wrap.control.GeometryFeatureInfo.prototype.getFeaturesByGeometry = function (feature, xy) {\r\n\r\n        var self = this;\r\n        var map = self.parent.map;\r\n        self.parent.filterFeature = feature;\r\n        feature.layer = self.parent.filterLayer;\r\n\r\n        map.wrap.getMap().then(function (olMap) {\r\n\r\n            var olGeometry = feature.wrap.feature.getGeometry();\r\n            var stride = olGeometry.stride;\r\n            var flatCoordinates = olGeometry.getFlatCoordinates();\r\n            //calcular el punto mas alto\r\n            if (!xy) {\r\n                var bestPoint = null;\r\n                for (var i = 1, len = flatCoordinates.length; i < len; i += stride) {\r\n                    if (!bestPoint || bestPoint[1] < flatCoordinates[i]) {\r\n                        bestPoint = [flatCoordinates[i - 1], flatCoordinates[i]];\r\n                    }\r\n                }\r\n                xy = olMap.getPixelFromCoordinate(new ol.geom.Point(bestPoint).getCoordinates());\r\n            }\r\n\r\n            self.parent.beforeRequest({ xy: xy });\r\n\r\n            var arrRequests = map.extractFeatures({ filter: new TC.filter.intersects(feature, map.crs), outputFormat: TC.Consts.format.JSON });\r\n\r\n            const arrPromises = [];\r\n            Promise.all(arrRequests).then(function (responses) {\r\n                var targetServices = [];\r\n                var featureCount = 0;\r\n                var hayError = false;\r\n\r\n                for (var i = 0; i < responses.length; i++) {\r\n                    const responseObj = responses[i];\r\n                    if (!responseObj) continue;\r\n                    arrPromises.push(new Promise(function (resolve, reject) {\r\n                        if (responseObj.errors && responseObj.errors.length) {\r\n                            for (var j = 0; j < responseObj.errors.length; j++) {\r\n                                var errorMsg, errorType = TC.Consts.msgType.WARNING;\r\n                                hayError = true;\r\n                                var error = responseObj.errors[j];\r\n                                switch (error.key) {\r\n                                    case TC.Consts.WFSErrors.MAX_NUM_FEATURES:\r\n                                        errorMsg = self.parent.getLocaleString(\"wfs.tooManyFeatures\", error.params);\r\n                                        break;\r\n                                        /*case TC.Consts.WFSErrors.NO_LAYERS:\r\n                                            errorMsg = self.parent.getLocaleString('noLayersLoaded');*/\r\n                                        break;\r\n                                    case TC.Consts.WFSErrors.GETCAPABILITIES:\r\n                                        errorMsg = self.parent.getLocaleString('wfsGFI.inValidService', error.params);\r\n                                        break;\r\n                                    case TC.Consts.WFSErrors.NO_FEATURES:\r\n                                        //si no hay features nos callamos. Quizas en un futuro se muestre una alerta\r\n                                        hayError = false;\r\n                                        continue;\r\n                                        break;\r\n                                    case TC.Consts.WFSErrors.INDETERMINATE:\r\n                                        errorMsg = self.parent.getLocaleString(\"wfs.IndeterminateError\");\r\n                                        TC.error(\"Error:{error} \\r\\n Descripcion:{descripcion} \\r\\n Servicio:{serviceName}\".format({ error: error.params.err, descripcion: error.params.errorThrown, serviceName: error.params.serviceTitle }), TC.Consts.msgErrorMode.CONSOLE);\r\n                                        errorType = TC.Consts.msgType.ERROR;\r\n                                        break;\r\n                                    default:\r\n                                        errorMsg = self.parent.getLocaleString(\"wfsGFI.\" + error.key, error.params);\r\n                                        break;\r\n                                }\r\n\r\n                                map.toast(errorMsg, { type: errorType });\r\n                            }\r\n                            if (!responseObj.response) {\r\n                                resolve();\r\n                            }\r\n                        }\r\n                    }));\r\n\r\n                    // Puede no haber response porque la URL no es correcta, metemos un condicional\r\n                    var featuresFound = responseObj.response ? readFeaturesFromResponse(map, responseObj.response.responseText, responseObj.response.contentType) : [];\r\n                    //ahora se distribuye la features por servicio y capa\r\n                    arrPromises[arrPromises.length - 1] = featureToServiceDistributor(featuresFound, responseObj.service);\r\n                    if (responseObj.service) {\r\n                        targetServices.push(responseObj.service);\r\n                    }\r\n                    featureCount = featureCount + featuresFound.length;\r\n                }\r\n                Promise.all(arrPromises).then(function () {\r\n                    self.parent.responseCallback({\r\n                        xy: xy || null, services: targetServices, featureCount: featureCount\r\n                    });\r\n                });\r\n            }, function (e) {\r\n                self.parent.responseCallback({});\r\n            })\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Popup.prototype = function () {\r\n        this.popup = null;\r\n    };\r\n\r\n    TC.Consts.event.PANANIMATIONSTART = 'pananimationstart.tc';\r\n    TC.Consts.event.PANANIMATIONEND = 'pananimationend.tc';\r\n    TC.wrap.control.Popup.prototype.fitToView = function () {\r\n        var self = this;\r\n        var map = self.parent.map;\r\n        var olMap = self.parent.map.wrap.map;\r\n\r\n        var popupBoundingRect = self.parent.popupDiv.getBoundingClientRect();\r\n        var mapBoundingRect = map.div.getBoundingClientRect();\r\n\r\n        var topLeft = olMap.getCoordinateFromPixel([popupBoundingRect.left - mapBoundingRect.left, popupBoundingRect.top - mapBoundingRect.top]);\r\n        var bottomRight = olMap.getCoordinateFromPixel([popupBoundingRect.right - mapBoundingRect.left, popupBoundingRect.bottom - mapBoundingRect.top]);\r\n        var west = topLeft[0];\r\n        var north = topLeft[1];\r\n        var east = bottomRight[0];\r\n        var south = bottomRight[1];\r\n\r\n        var popupExt = [west, south, east, north];\r\n        var mapExt = map.getExtent();\r\n\r\n        if (!ol.extent.containsExtent(mapExt, popupExt)) {\r\n            var overflows = {\r\n                left: Math.max(mapExt[0] - popupExt[0], 0),\r\n                bottom: Math.max(mapExt[1] - popupExt[1], 0),\r\n                right: Math.max(popupExt[2] - mapExt[2], 0),\r\n                top: Math.max(popupExt[3] - mapExt[3], 0)\r\n            };\r\n\r\n            if (self.parent.dragged) {\r\n                // Movemos el popup\r\n                var newPos = self.popup.getPosition();\r\n                if (overflows.right) {\r\n                    newPos[0] = newPos[0] - overflows.right;\r\n                }\r\n                else if (overflows.left) {\r\n                    newPos[0] = newPos[0] + overflows.left;\r\n                }\r\n                if (overflows.top) {\r\n                    newPos[1] = newPos[1] - overflows.top;\r\n                }\r\n                else if (overflows.bottom) {\r\n                    newPos[1] = newPos[1] + overflows.bottom;\r\n                }\r\n                var newPixelPos = olMap.getPixelFromCoordinate(newPos);\r\n                newPixelPos[1] = olMap.getSize()[1] - newPixelPos[1];\r\n                self.parent._previousContainerPosition = newPixelPos;\r\n                (self.popup._oldUpdatePixelPosition || self.popup.updatePixelPosition).call(self.popup, newPos);\r\n            }\r\n            else {\r\n                if (self.parent.isVisible()) {\r\n                    // Movemos el mapa\r\n                    var view = olMap.getView();\r\n                    var ct = view.getCenter().slice();\r\n\r\n                    if (overflows.top) ct[1] += overflows.top;\r\n                    else if (overflows.bottom) ct[1] -= overflows.bottom;\r\n                    if (overflows.right) ct[0] += overflows.right;\r\n                    else if (overflows.left) ct[0] -= overflows.left;\r\n\r\n                    view.animate({\r\n                        center: ct, easing: function (percent) {\r\n                            if (percent === 0) self.parent.map.trigger(TC.Consts.event.PANANIMATIONSTART);\r\n                            if (percent === 1) self.parent.map.trigger(TC.Consts.event.PANANIMATIONEND);\r\n                            return percent;\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Popup.prototype.setDragged = function (dragged) {\r\n        var popup = this.popup;\r\n        //var view = popup.getMap().getView();\r\n        //var onViewChange = function () {\r\n        //    console.log(this.getCenter());\r\n        //};\r\n        if (dragged) {\r\n            // Parcheamos funciones para que el popup no se mueva cuando cambiamos el extent del mapa\r\n            if (!popup._oldUpdatePixelPosition) {\r\n                popup._oldUpdatePixelPosition = popup.updatePixelPosition;\r\n                popup.updatePixelPosition = function () {\r\n                };\r\n            }\r\n            if (!popup._newHandleOffsetChanged) {\r\n                popup._newHandleOffsetChanged = function () {\r\n                    this._oldUpdatePixelPosition();\r\n                };\r\n                ol.events.unlisten(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup.handleOffsetChanged, popup);\r\n                ol.events.listen(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup._newHandleOffsetChanged, popup);\r\n            }\r\n            //view.on(['change:center','change:resolution'], onViewChange);\r\n        }\r\n        else {\r\n            // Redefinimos las propiedades de posicionamiento porque al arrastrarlo, las hemos modificado.\r\n            const containerStyle = popup.getElement().parentElement.style;\r\n            containerStyle.setProperty('top', popup.rendered.top_);\r\n            containerStyle.setProperty('bottom', popup.rendered.bottom_);\r\n            containerStyle.setProperty('left', popup.rendered.left_);\r\n            containerStyle.setProperty('right', popup.rendered.right_);\r\n\r\n            delete this.parent._previousContainerPosition;\r\n            // Deshacemos parcheo\r\n            if (popup._oldUpdatePixelPosition) {\r\n                popup.updatePixelPosition = popup._oldUpdatePixelPosition;\r\n                delete popup._oldUpdatePixelPosition;\r\n            }\r\n            if (popup._newHandleOffsetChanged) {\r\n                ol.events.unlisten(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup._newHandleOffsetChanged, popup);\r\n                ol.events.listen(\r\n                    popup, ol.Object.getChangeEventType('offset'),\r\n                    popup.handleOffsetChanged, popup);\r\n                delete popup._newHandleOffsetChanged;\r\n            }\r\n            //view.un(['change:center', 'change:resolution'], onViewChange);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getLegend = function () {\r\n        var self = this;\r\n        var result = {\r\n        };\r\n        var style = getNativeFeatureStyle(self.feature, true);\r\n        if (style) {\r\n            var image = style.getImage();\r\n            if (image) {\r\n                if (image instanceof ol.style.Icon) {\r\n                    result.src = image.getSrc();\r\n                    var scale = image.getScale();\r\n                    if (scale) {\r\n                        result.scale = scale;\r\n                        var img = image.getImage();\r\n                        if (img.width) {\r\n                            result.width = img.width * scale;\r\n                            result.height = img.height * scale;\r\n                        }\r\n                    }\r\n                }\r\n                else if (image instanceof ol.style.Circle) {\r\n                    result.src = image.canvas_.toDataURL();\r\n                }\r\n                if (self.parent.options.radius) {\r\n                    result.height = result.width = self.parent.options.radius * 2;\r\n                }\r\n                else {\r\n                    result.width = result.width || self.parent.options.width;\r\n                    result.height = result.height || self.parent.options.height;\r\n                }\r\n            }\r\n            else {\r\n                // No image, find stroke and fill\r\n                var stroke = style.getStroke();\r\n                var fill = style.getFill();\r\n                if (stroke) {\r\n                    var strokeColor = stroke.getColor();\r\n                    if (strokeColor) {\r\n                        result.strokeColor = ol.color.asString(strokeColor);\r\n                    }\r\n                    var strokeWidth = stroke.getWidth();\r\n                    if (strokeWidth) {\r\n                        result.strokeWidth = strokeWidth;\r\n                    }\r\n                }\r\n                if (fill) {\r\n                    var fillColor = fill.getColor();\r\n                    if (fillColor) {\r\n                        result.fillColor = ol.color.asString(fillColor);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    const createFeatureBasics = function (coords, options) {\r\n        const self = this;\r\n        self.feature = new ol.Feature();\r\n        if (self.parent.id) {\r\n            self.feature.setId(self.parent.id);\r\n        }\r\n        if (options.geometryName) {\r\n            self.feature.setGeometryName(options.geometryName);\r\n        }\r\n        self.feature._wrap = self;\r\n        self.parent.setCoords(coords);\r\n        self.setData(self.parent.data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPoint = function (coords, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        createFeatureBasics.call(self, coords, options);\r\n        if (TC.Util.hasStyleOptions(options)) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { point: options } }, self.feature));\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createMarker = function (coords, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        var iconUrl = TC.Util.getPointIconUrl(options);\r\n        if (iconUrl) {\r\n            options.url = iconUrl;\r\n            createFeatureBasics.call(self, coords, options);\r\n            if (TC.Util.hasStyleOptions(options)) {\r\n                self.feature.setStyle(createNativeStyle({ styles: { marker: options } }, self.feature));\r\n            }\r\n        }\r\n        else {\r\n            self.createPoint(coords, options);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPolyline = function (coords, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        createFeatureBasics.call(self, coords, options);\r\n        if (TC.Util.hasStyleOptions(options)) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { line: options } }, self.feature));\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createPolygon = function (coords, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        createFeatureBasics.call(self, coords, options);\r\n        if (TC.Util.hasStyleOptions(options)) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { polygon: options } }, self.feature));\r\n        }\r\n    };\r\n\r\n\r\n    TC.wrap.Feature.prototype.createMultiPolyline = function (coords, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        createFeatureBasics.call(self, coords, options);\r\n        if (TC.Util.hasStyleOptions(options)) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { line: options } }, self.feature));\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createMultiPolygon = function (coords, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        createFeatureBasics.call(self, coords, options);\r\n        if (TC.Util.hasStyleOptions(options)) {\r\n            self.feature.setStyle(createNativeStyle({ styles: { polygon: options } }, self.feature));\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.createCircle = function (coords, options) {\r\n        const self = this;\r\n        options = options || {};\r\n        createFeatureBasics.call(self, coords, options);\r\n        if (options) {\r\n            self.feature.setStyle(\r\n                new ol.style.Style({\r\n                    stroke: new ol.style.Stroke({\r\n                        color: options.strokeColor,\r\n                        width: options.strokeWidth,\r\n                        lineDash: options.lineDash\r\n                    }),\r\n                    fill: new ol.style.Fill({\r\n                        color: getRGBA(options.fillColor, options.fillOpacity)\r\n                    })\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.createFeature = function (olFeat, options) {\r\n        if (!olFeat._featurePromise) {\r\n            olFeat._featurePromise = new Promise(function (resolve, reject) {\r\n                var olGeometry = olFeat.getGeometry();\r\n                options = options || {};\r\n                options.id = olFeat.getId();\r\n                let olStyle = olFeat.getStyle();\r\n                if (olStyle) {\r\n                    TC.Util.extend(options, getStyleFromNative(olStyle, olFeat));\r\n                }\r\n                // geometría\r\n                let geomStr;\r\n                switch (true) {\r\n                    case olGeometry instanceof ol.geom.Point:\r\n                        if (TC.Util.isFunction(olStyle)) {\r\n                            olStyle = olStyle(olFeat);\r\n                        }\r\n                        var olStyles = olStyle ? (Array.isArray(olStyle) ? olStyle : [olStyle]) : [];\r\n                        for (var i = 0, len = olStyles.length; i < len; i++) {\r\n                            olStyle = olStyles[i];\r\n                            if (olStyle.getImage() instanceof ol.style.Icon) {\r\n                                geomStr = 'Marker';\r\n                                break;\r\n                            }\r\n                        }\r\n                        geomStr = geomStr || 'Point';\r\n                        break;\r\n                    case olGeometry instanceof ol.geom.LineString:\r\n                        geomStr = 'Polyline';\r\n                        break;\r\n                    case olGeometry instanceof ol.geom.Polygon:\r\n                        geomStr = 'Polygon';\r\n                        break;\r\n                    case olGeometry instanceof ol.geom.MultiLineString:\r\n                        geomStr = 'MultiPolyline';\r\n                        break;\r\n                    case olGeometry instanceof ol.geom.MultiPolygon:\r\n                        geomStr = 'MultiPolygon';\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                if (geomStr) {\r\n                    TC.loadJS(\r\n                        !TC.feature || !TC.feature[geomStr],\r\n                        [TC.apiLocation + 'TC/feature/' + geomStr],\r\n                        function () {\r\n                            const feat = new TC.feature[geomStr](olFeat, options);\r\n                            feat.data = feat.wrap.getData();\r\n                            resolve(feat);\r\n                        }\r\n                    );\r\n                }\r\n                else {\r\n                    TC.loadJS(\r\n                        !TC.Feature,\r\n                        [TC.apiLocation + 'TC/Feature'],\r\n                        function () {\r\n                            var feat = new TC.Feature(olFeat, options);\r\n                            feat.data = feat.wrap.getData();\r\n                            resolve(feat);\r\n                        }\r\n                    );\r\n                }\r\n            });\r\n        }\r\n        return olFeat._featurePromise;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.cloneFeature = function () {\r\n        return this.feature.clone();\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getStyle = function () {\r\n        var self = this;\r\n        var result = {};\r\n        var olStyle = self.feature.getStyle();\r\n        if (TC.Util.isFunction(olStyle)) {\r\n            olStyle = olStyle(self.feature);\r\n        }\r\n        var olStyles = olStyle ? (Array.isArray(olStyle) ? olStyle : [olStyle]) : [];\r\n\r\n        const getFill = function (style, obj) {\r\n            if (style) {\r\n                const fill = style.getFill();\r\n                if (fill) {\r\n                    obj.fillColor = fill.getColor();\r\n                    if (Array.isArray(obj.fillColor)) {\r\n                        obj.fillOpacity = obj.fillColor[3];\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        const getStroke = function (style, obj) {\r\n            if (style) {\r\n                const stroke = style.getStroke();\r\n                if (stroke) {\r\n                    obj.strokeColor = stroke.getColor();\r\n                    obj.strokeWidth = stroke.getWidth();\r\n                }\r\n            }\r\n        };\r\n\r\n        for (var i = 0, len = olStyles.length; i < len; i++) {\r\n            olStyle = olStyles[i];\r\n            getFill(olStyle, result);\r\n            getStroke(olStyle, result);\r\n            const image = olStyle.getImage();\r\n            if (image instanceof ol.style.Icon) {\r\n                result.url = image.getSrc();\r\n                const size = image.getSize();\r\n                const scale = image.getScale() || 1;\r\n                if (size) {\r\n                    result.width = size[0] * scale;\r\n                    result.height = size[1] * scale;\r\n                }\r\n                var anchor = image.getAnchor();\r\n                if (anchor) {\r\n                    result.anchor = [anchor[0] * scale, anchor[1] * scale];\r\n                    if (size) {\r\n                        // getAnchor devuelve los valores en pixels, hay que transformar a fracción\r\n                        result.anchor[0] = result.anchor[0] / result.width;\r\n                        result.anchor[1] = result.anchor[1] / result.height;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                getFill(image, result);\r\n                getStroke(image, result);\r\n            }\r\n            var text = olStyle.getText();\r\n            if (text) {\r\n                result.label = text.getText();\r\n                var font = text.getFont();\r\n                if (font) {\r\n                    // A 96dpi 3pt = 4px\r\n                    result.fontSize = parseInt(font.match(/\\d+pt/)) || parseInt(font.match(/\\d+px/)) * 0.75;\r\n                }\r\n                var rotation = text.getRotation();\r\n                if (rotation) {\r\n                    result.angle = -180 * rotation / Math.PI;\r\n                }\r\n                result.labelOffset = [text.getOffsetX(), text.getOffsetY()];\r\n                fill = text.getFill();\r\n                if (fill) {\r\n                    result.fontColor = fill.getColor();\r\n                }\r\n                stroke = text.getStroke();\r\n                if (stroke) {\r\n                    result.labelOutlineColor = stroke.getColor();\r\n                    result.labelOutlineWidth = stroke.getWidth();\r\n                }\r\n            }\r\n        }\r\n        TC.Util.extend(self.parent.options, result);\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getGeometry = function () {\r\n        var result;\r\n        var self = this;\r\n        if (self.feature && self.feature.getGeometry) {\r\n            var geom = self.feature.getGeometry();\r\n            if (geom) {\r\n                if (geom.getCoordinates) {\r\n                    result = geom.getCoordinates();\r\n                }\r\n                else if (geom instanceof ol.geom.Circle) {\r\n                    result = [geom.getCenter(), geom.getRadius()];\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setGeometry = function (geometry) {\r\n        const self = this;\r\n        if (self.feature && self.feature.getGeometry) {\r\n            var geom = self.feature.getGeometry();\r\n            var ctor;\r\n            var point,\r\n                points,\r\n                ringsOrPolylines,\r\n                polygons,\r\n                isMultiPolygon,\r\n                isPolygonOrMultiLineString,\r\n                isLineString;\r\n            // punto: array de números\r\n            // línea o anillo: array de puntos\r\n            // multilínea o polígono: array de líneas o anillos\r\n            // multipolígono: array de polígonos\r\n            // Por tanto podemos recorrer los tipos en un switch sin breaks\r\n            switch (true) {\r\n                case (TC.feature.MultiPolygon && self.parent instanceof TC.feature.MultiPolygon):\r\n                    isMultiPolygon = true;\r\n                    ctor = ol.geom.MultiPolygon;\r\n                    polygons = geometry;\r\n                    if (Array.isArray(polygons)) {\r\n                        ringsOrPolylines = geometry[0];\r\n                    }\r\n                case (TC.feature.Polygon && self.parent instanceof TC.feature.Polygon || TC.feature.MultiPolyline && self.parent instanceof TC.feature.MultiPolyline):\r\n                    isPolygonOrMultiLineString = true;\r\n                    ctor = ctor || ((TC.feature.Polygon && self.parent instanceof TC.feature.Polygon) ? ol.geom.Polygon : ol.geom.MultiLineString);\r\n                    ringsOrPolylines = isMultiPolygon ? ringsOrPolylines : geometry;\r\n                    if (Array.isArray(ringsOrPolylines)) {\r\n                        points = ringsOrPolylines[0];\r\n                    }\r\n                case (TC.feature.Polyline && self.parent instanceof TC.feature.Polyline):\r\n                    isLineString = true;\r\n                    ctor = ctor || ol.geom.LineString;\r\n                    points = isPolygonOrMultiLineString ? points : geometry;\r\n                    if (Array.isArray(points)) {\r\n                        point = points[0];\r\n                    }\r\n                case (TC.feature.Point && self.parent instanceof TC.feature.Point):\r\n                    ctor = ctor || ol.geom.Point;\r\n                    point = isLineString ? point : geometry;\r\n                    if (Array.isArray(point) && typeof point[0] === 'number' && typeof point[1] === 'number') {\r\n                        var layout;\r\n                        switch (point.length) {\r\n                            case 3:\r\n                                layout = ol.geom.GeometryLayout.XYZ;\r\n                                break;\r\n                            case 4:\r\n                                layout = ol.geom.GeometryLayout.XYZM;\r\n                                break;\r\n                            default:\r\n                                layout = ol.geom.GeometryLayout.XY;\r\n                                break;\r\n                        }\r\n                        if (geom) {\r\n                            geom.setCoordinates(geometry, layout);\r\n                        }\r\n                        else {\r\n                            geom = new ctor(geometry, layout);\r\n                            self.feature.setGeometry(geom);\r\n                        }\r\n                    }\r\n                    break;\r\n                case (TC.feature.Circle && self.parent instanceof TC.feature.Circle):\r\n                    if (Array.isArray(geometry) &&\r\n                        Array.isArray(geometry[0])\r\n                        && typeof geometry[0][0] === 'number' && typeof geometry[0][1] === 'number'\r\n                        && typeof geometry[1] === 'number') {\r\n                        var layout;\r\n                        switch (geometry[0].length) {\r\n                            case 3:\r\n                                layout = ol.geom.GeometryLayout.XYZ;\r\n                                break;\r\n                            case 4:\r\n                                layout = ol.geom.GeometryLayout.XYZM;\r\n                                break;\r\n                            default:\r\n                                layout = ol.geom.GeometryLayout.XY;\r\n                                break;\r\n                        }\r\n                        if (geom) {\r\n                            geom.setCenterAndRadius(geometry[0], geometry[1], layout);\r\n                        }\r\n                        else {\r\n                            geom = new ol.geom.Circle(geometry[0], geometry[1], layout);\r\n                            self.feature.setGeometry(geom);\r\n                        }\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getId = function () {\r\n        var result;\r\n        var self = this;\r\n        if (self.feature) {\r\n            result = self.feature.getId();\r\n        };\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setId = function (id) {\r\n        var self = this;\r\n        if (self.feature) {\r\n            self.feature.setId(id);\r\n        };\r\n    };\r\n\r\n    const getPolygonLength = function (polygon, options) {\r\n        const self = this;\r\n        var result = 0;\r\n        polygon.getLinearRings().forEach(function (ring) {\r\n            coordinates = ring.getCoordinates();\r\n            if (options.crs) {\r\n                coordinates = TC.Util.reproject(coordinates, self.parent.layer.map.crs, options.crs);\r\n            }\r\n            const polygon = new ol.geom.Polygon([coordinates]);\r\n            const newRing = polygon.getLinearRing(0);\r\n            result = result + ol.geom.flat.linearRingLength(newRing.flatCoordinates, 0, newRing.flatCoordinates.length, newRing.stride);\r\n        });\r\n        return result;\r\n    };\r\n\r\n    const getLineStringLength = function (lineString, options) {\r\n        const self = this;\r\n        coordinates = lineString.getCoordinates();\r\n        if (options.crs) {\r\n            coordinates = TC.Util.reproject(coordinates, self.parent.layer.map.crs, options.crs);\r\n        }\r\n        const line = new ol.geom.LineString(coordinates);\r\n        return line.getLength();\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getLength = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        var result = 0;\r\n\r\n        const geom = self.feature.getGeometry();\r\n        var coordinates;\r\n        switch (true) {\r\n            case geom instanceof ol.geom.Polygon:\r\n                result = getPolygonLength.call(self, geom, options);\r\n                break;\r\n            case geom instanceof ol.geom.LineString:\r\n                result = getLineStringLength.call(self, geom, options);\r\n                break;\r\n            case geom instanceof ol.geom.MultiPolygon:\r\n                geom.getPolygons().forEach(function (polygon) {\r\n                    result = result + getPolygonLength.call(self, polygon, options);\r\n                });\r\n                break;\r\n            case geom instanceof ol.geom.MultiPolygon:\r\n                geom.getLineStrings().forEach(function (lineString) {\r\n                    result = result + getLineStringLength.call(self, lineString, options);\r\n                });\r\n                break;\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getArea = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n\r\n        const geom = self.feature.getGeometry();\r\n        var coordinates;\r\n        if (geom instanceof ol.geom.Polygon) {\r\n            coordinates = geom.getLinearRing(0).getCoordinates();\r\n            if (options.crs) {\r\n                coordinates = TC.Util.reproject(coordinates, self.parent.layer.map.crs, options.crs);\r\n            }\r\n            const polygon = new ol.geom.Polygon([coordinates]);\r\n            return polygon.getArea();\r\n        }\r\n    };\r\n\r\n    const getNativeFeatureStyle = function (feature, readonly) {\r\n        var style = feature.getStyle();\r\n        if (TC.Util.isFunction(style)) {\r\n            style = style(feature);\r\n        }\r\n        if (Array.isArray(style)) {\r\n            style = style.reduce(function (extendedStyle, currentStyle) {\r\n                extendedStyle.fill_ = currentStyle.fill_ || extendedStyle.fill_;\r\n                extendedStyle.image_ = currentStyle.image_ || extendedStyle.image_;\r\n                extendedStyle.stroke_ = currentStyle.stroke_ || extendedStyle.stroke_;\r\n                extendedStyle.text_ = currentStyle.text_ || extendedStyle.text_;\r\n                return extendedStyle;\r\n            }, new ol.style.Style());\r\n        }\r\n        if (!style && !readonly) {\r\n            style = new ol.style.Style();\r\n            feature.setStyle(style);\r\n        }\r\n        return style;\r\n    };\r\n\r\n    const getNativeLayerStyle = function (feature) {\r\n        var style = this.getStyle();\r\n        if (TC.Util.isFunction(style)) {\r\n            style = style(feature);\r\n        }\r\n        if (Array.isArray(style)) {\r\n            style = style[style.length - 1];\r\n        }\r\n        if (!style) {\r\n            style = new ol.style.Style();\r\n        }\r\n        return style;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setStyle = function (options) {\r\n        const self = this;\r\n        const olFeat = self.feature;\r\n        if (options === null) {\r\n            olFeat.setStyle(null);\r\n            return;\r\n        }\r\n        const feature = self.parent;\r\n        const geom = olFeat.getGeometry();\r\n        let newStyle = olFeat.getStyle();\r\n        let layerStyle;\r\n        if (feature.layer) {\r\n            layerStyle = getNativeLayerStyle.call(feature.layer.wrap.layer, feature.wrap.feature);\r\n        }\r\n        if (!newStyle) {\r\n            if (layerStyle) {\r\n                newStyle = layerStyle.clone();\r\n            }\r\n            else {\r\n                newStyle = new ol.style.Style();\r\n            }\r\n        }\r\n        if (TC.Util.isFunction(newStyle)) {\r\n            newStyle = newStyle(olFeat);\r\n        }\r\n        if (!Array.isArray(newStyle)) {\r\n            newStyle = [newStyle];\r\n        }\r\n        let style = newStyle[newStyle.length - 1];\r\n        if (geom instanceof ol.geom.Point || geom instanceof ol.geom.MultiPoint) {\r\n\r\n            var imageStyle;\r\n            if (options.anchor || options.url || options.cssClass) { // Marcador\r\n                imageStyle = style.getImage();\r\n                const iconOptions = {};\r\n                if (imageStyle instanceof ol.style.Icon) {\r\n                    iconOptions.src = options.url || TC.Util.getBackgroundUrlFromCss(options.cssClass) || imageStyle.getSrc();\r\n\r\n                    if (options.width && options.height) {\r\n                        iconOptions.size = [getStyleValue(options.width, feature), getStyleValue(options.height, feature)];\r\n                    }\r\n                    else {\r\n                        iconOptions.size = imageStyle.getSize();\r\n                    }\r\n                    iconOptions.anchor = getStyleValue(options.anchor, feature);\r\n                    if (!iconOptions.anchor) {\r\n                        const imgAnchor = imageStyle.getAnchor();\r\n                        if (Array.isArray(imgAnchor)) {\r\n                            iconOptions.anchor = imgAnchor.map(function (elm, idx) {\r\n                                return elm / iconOptions.size[idx];\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    iconOptions.src = TC.Util.getPointIconUrl(options);\r\n                    iconOptions.anchor = getStyleValue(options.anchor, feature);\r\n                    iconOptions.size = [getStyleValue(options.width, feature), getStyleValue(options.height, feature)];\r\n                };\r\n                if (options.angle) {\r\n                    iconOptions.angle = options.angle;\r\n                }\r\n\r\n                imageStyle = new ol.style.Icon(iconOptions);\r\n            }\r\n            else if (!(style.getImage()) && style.getText()) { // Etiqueta\r\n\r\n                if (options.label !== undefined) {\r\n                    if (options.label.length) {\r\n                        style.setText(createNativeTextStyle(options, feature));\r\n                    }\r\n                    else {\r\n                        style.setText();\r\n                    }\r\n                } else {\r\n                    style.setText();\r\n                }\r\n            }\r\n            else { // Punto sin icono\r\n                imageStyle = style.getImage();\r\n                if (!imageStyle) {\r\n                    imageStyle = new ol.style.Circle();\r\n                }\r\n                const circleOptions = {\r\n                    radius: getStyleValue(options.radius, feature) ||\r\n                    (getStyleValue(options.height, feature) + getStyleValue(options.width, feature)) / 4\r\n                };\r\n                if (isNaN(circleOptions.radius) && imageStyle.getRadius) {\r\n                    circleOptions.radius = imageStyle.getRadius();\r\n                }\r\n                if (options.fillColor) {\r\n                    circleOptions.fill = new ol.style.Fill({\r\n                        color: getRGBA(getStyleValue(options.fillColor, feature), getStyleValue(options.fillOpacity, feature))\r\n                    });\r\n                }\r\n                else if (imageStyle.getFill) {\r\n                    circleOptions.fill = imageStyle.getFill();\r\n                }\r\n                circleOptions.stroke = imageStyle.getStroke ? imageStyle.getStroke() : new ol.style.Stroke();\r\n                const layerStroke = layerStyle && layerStyle.getStroke();\r\n                if (options.strokeColor || options.strokeWidth) {\r\n                    if (!circleOptions.stroke) {\r\n                        circleOptions.stroke = new ol.style.Stroke();\r\n                    }\r\n                    if (options.strokeColor) {\r\n                        circleOptions.stroke.setColor(getStyleValue(options.strokeColor, feature));\r\n                    }\r\n                    else {\r\n                        const strokeColor = circleOptions.stroke.getColor() || (layerStroke && layerStroke.getColor() || TC.Cfg.styles.point.strokeColor);\r\n                        circleOptions.stroke.setColor(getStyleValue(strokeColor, feature));\r\n                    }\r\n                    if (options.strokeWidth) {\r\n                        circleOptions.stroke.setWidth(getStyleValue(options.strokeWidth, feature));\r\n                    }\r\n                    else {\r\n                        const strokeWidth = circleOptions.stroke.getWidth() || (layerStroke && layerStroke.getWidth() || TC.Cfg.styles.point.strokeWidth);\r\n                        circleOptions.stroke.setWidth(getStyleValue(strokeWidth, feature));\r\n                    }\r\n                }\r\n                imageStyle = new ol.style.Circle(circleOptions);\r\n            }\r\n            style.setImage(imageStyle);\r\n        }\r\n        else {\r\n            var stroke = style.getStroke();\r\n            var strokeChanged = false;\r\n            if (!stroke) {\r\n                stroke = new ol.style.Stroke();\r\n            }\r\n            if (options.strokeColor) {\r\n                stroke.setColor(getStyleValue(options.strokeColor, feature));\r\n                strokeChanged = true;\r\n            }\r\n            if (options.strokeWidth) {\r\n                stroke.setWidth(getStyleValue(options.strokeWidth, feature));\r\n                strokeChanged = true;\r\n            }\r\n            if (options.lineDash) {\r\n                stroke.setLineDash(options.lineDash)\r\n                strokeChanged = true;\r\n            }\r\n            if (strokeChanged) {\r\n                style.setStroke(stroke);\r\n            }\r\n            if (geom instanceof ol.geom.Polygon || geom instanceof ol.geom.MultiPolygon) {\r\n                if (options.fillColor || options.fillOpacity) {\r\n                    var fill = style.getFill() || new ol.style.Fill();\r\n                    fill.setColor(getRGBA(getStyleValue(options.fillColor, feature), getStyleValue(options.fillOpacity, feature)));\r\n                    style.setFill(fill);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (options.label !== undefined) {\r\n            if (options.label.length) {\r\n                style.setText(createNativeTextStyle(options, feature));\r\n            }\r\n            else {\r\n                style.setText();\r\n            }\r\n        }\r\n        olFeat.setStyle(newStyle);\r\n        olFeat.changed();\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.toggleSelectedStyle = function (condition) {\r\n        const self = this;\r\n        const feature = self.feature;\r\n        const setStyle = condition === undefined ? !feature._originalStyle : condition;\r\n        if (setStyle) {\r\n            setSelectedStyle(feature);\r\n        }\r\n        else {\r\n            removeSelectedStyle(feature);\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getInnerPoint = function (options) {\r\n        var result;\r\n        var opts = options || {};\r\n        // Funciones para hacer clipping con el extent actual. Así nos aseguramos de que el popup sale en un punto visible actualmente.\r\n        var feature = this.feature;\r\n        var geometry = feature.getGeometry();\r\n\r\n        if (!TC.Geometry) {\r\n            TC.syncLoadJS(TC.apiLocation + 'TC/Geometry');\r\n        }\r\n        let coords;\r\n        let clipped = false;\r\n        result = geometry.getFirstCoordinate();\r\n        switch (geometry.getType()) {\r\n            case ol.geom.GeometryType.MULTI_POLYGON:\r\n                if (opts.clipBox) {\r\n                    geometry = new ol.geom.MultiPolygon(geometry\r\n                        .getPolygons()\r\n                        .map(pol => TC.Geometry.clipPolygon(pol.getCoordinates(), opts.clipBox))\r\n                        .filter(pol => pol.length));\r\n                    clipped = true;\r\n                }\r\n                var area = 0;\r\n                geometry = geometry.getPolygons().reduce(function (prev, cur) {\r\n                    const curArea = cur.getArea();\r\n                    const result = curArea > area ? cur : prev;\r\n                    area = curArea;\r\n                    return result;\r\n                });\r\n            case ol.geom.GeometryType.POLYGON:\r\n                coords = geometry.getCoordinates();\r\n                if (opts.clipBox && !clipped) {\r\n                    coords = TC.Geometry.clipPolygon(coords, opts.clipBox);\r\n                }\r\n                geometry = new ol.geom.Polygon(coords);\r\n                result = geometry.getInteriorPoint().getCoordinates();\r\n                var rings = geometry.getLinearRings();\r\n                // Miramos si el punto está dentro de un agujero\r\n                for (var i = 1; i < rings.length; i++) {\r\n                    if (TC.Geometry.isInside(result, rings[i].getCoordinates())) {\r\n                        result = geometry.getClosestPoint(result);\r\n                        break;\r\n                    }\r\n                }\r\n                break;\r\n            case ol.geom.GeometryType.MULTI_LINE_STRING:\r\n                if (opts.clipBox) {\r\n                    geometry = new ol.geom.MultiLineString(geometry\r\n                        .getLineStrings()\r\n                        .map(ls => TC.Geometry.clipPolyline(ls.getCoordinates(), opts.clipBox))\r\n                        .filter(ls => ls.length));\r\n                    clipped = true;\r\n                }\r\n                var length = 0;\r\n                geometry = geometry.getLineStrings().reduce(function (prev, cur) {\r\n                    const curLength = cur.getLength();\r\n                    const result = curLength > length ? cur : prev;\r\n                    length = curLength;\r\n                    return result;\r\n                });\r\n            case ol.geom.GeometryType.LINE_STRING:\r\n                var centroid = [0, 0];\r\n                coords = geometry.getCoordinates();\r\n                if (opts.clipBox && !clipped) {\r\n                    coords = TC.Geometry.clipPolyline(coords, opts.clipBox);\r\n                }\r\n                geometry = new ol.geom.LineString(coords);\r\n                for (var i = 0; i < coords.length; i++) {\r\n                    centroid[0] += coords[i][0];\r\n                    centroid[1] += coords[i][1];\r\n                }\r\n                centroid[0] /= coords.length;\r\n                centroid[1] /= coords.length;\r\n                result = geometry.getClosestPoint(centroid);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.showPopup = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        const popupCtl = options && options instanceof TC.Control ? options : options.control;\r\n        var map = popupCtl.map;\r\n        if (map) {\r\n            var feature = self.feature;\r\n            if (feature) {\r\n                map.currentFeature = self.parent;\r\n                var currentExtent = map.getExtent();\r\n\r\n                self._innerCentroid = self.getInnerPoint({ clipBox: currentExtent });\r\n\r\n                popupCtl.contentDiv.innerHTML = self.parent.getInfo({ locale: map.options.locale });\r\n                popupCtl.menuDiv.innerHTML = '';\r\n                if (popupCtl.options.closeButton || popupCtl.options.closeButton === undefined) {\r\n                    const btn = document.createElement('button');\r\n                    btn.classList.add(popupCtl.CLASS + '-close', 'tc-icon-btn');\r\n                    btn.setAttribute('title', popupCtl.getLocaleString('close'));\r\n                    popupCtl.menuDiv.insertAdjacentElement('afterbegin', btn);\r\n                    btn.addEventListener(TC.Consts.event.CLICK, function () {\r\n                        popupCtl.hide();\r\n                    }, { passive: true });\r\n                    popupCtl.contentDiv.classList.add(popupCtl.CLASS + '-has-btn');\r\n                    // En OL2 los featureInfo en versión \"baraja de cartas\" salen sin tamaño.\r\n                    // Para evitar esto, la clase tc-ctl-finfo tiene ancho y alto establecidos.\r\n                    // Pero eso hace que en el popup salgan barras de scroll, porque contentDiv se crea demasiado pequeño.\r\n                    // Rehacemos el tamaño de tc-ctl-finfo para eliminarlas.\r\n                    const finfo = popupCtl.contentDiv.querySelector('.tc-ctl-finfo');\r\n                    if (finfo) {\r\n                        finfo.width = 'auto';\r\n                        finfo.height = 'auto';\r\n                    }\r\n                }\r\n\r\n                var parentOptions = self.parent.options;\r\n                if (TC.Util.isEmptyObject(parentOptions) && self.parent.layer &&\r\n                    self.parent.layer.options && self.parent.layer.options.styles) {\r\n\r\n                    switch (self.parent.CLASSNAME) {\r\n                        case \"TC.feature.Point\":\r\n                            parentOptions = self.parent.layer.options.styles.point;\r\n\r\n                            // 11/03/2019 Al crear las features del API desde las features nativas, \r\n                            // se valida si la feature tiene icono para definir si es punto o marcador\r\n                            // el problema viene cuando la feature no tiene estilo propio sino que lo obtiene de la capa,\r\n                            // en esos casos se define como punto lo que es un marcador y cuando llegamos aquí no se accede a las\r\n                            // opciones de marcador sino de punto.\r\n                            if (!parentOptions || TC.Util.isEmptyObject(parentOptions)) {\r\n                                parentOptions = self.parent.layer.options.styles.marker;\r\n                            }\r\n                            break;\r\n                        case \"TC.feature.Marker\":\r\n                            parentOptions = self.parent.layer.options.styles.marker;\r\n                            break;\r\n                        case \"TC.feature.Circle\":\r\n                            parentOptions = self.parent.layer.options.styles.circle;\r\n                            break;\r\n                        case \"TC.feature.MultiPolygon\":\r\n                        case \"TC.feature.Polygon\":\r\n                            parentOptions = self.parent.layer.options.styles.polygon;\r\n                            break;\r\n                        case \"TC.feature.MultiPolyline\":\r\n                        case \"TC.feature.Polyline\":\r\n                            parentOptions = self.parent.layer.options.styles.line;\r\n                            break;\r\n                    }\r\n                }\r\n\r\n                // Calcular anchor\r\n                var anchor;\r\n                if (parentOptions.anchor) {\r\n                    anchor = getStyleValue(parentOptions.anchor, self.parent);\r\n                }\r\n                else {\r\n                    var style;\r\n                    var f = feature._wrap.parent;\r\n                    for (var i = 0; i < map.workLayers.length; i++) {\r\n                        var layer = map.workLayers[i];\r\n                        if (!layer.isRaster()) {\r\n                            if (layer.features.indexOf(f) >= 0) {\r\n                                style = layer.wrap.styleFunction(feature);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (Array.isArray(style)) {\r\n                        const image = style[0].getImage();\r\n                        anchor = !image || image instanceof ol.style.Icon ? [0.5, 0] : [0.5, 0.5];\r\n                    }\r\n                }\r\n                const offset = [0, 0];\r\n                if (anchor) {\r\n                    if (parentOptions.height) {\r\n                        offset[1] = -(getStyleValue(parentOptions.height, self.parent) || 0) * anchor[1];\r\n                    }\r\n                    else {\r\n                        var fStyle = getNativeFeatureStyle(feature, true);\r\n                        if (fStyle) {\r\n                            const image = fStyle.getImage();\r\n                            if (image instanceof ol.style.Icon) {\r\n                                const size = image.getImageSize();\r\n                                if (size) {\r\n                                    offset[1] = size[1] * -image.getScale();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                popupCtl.wrap.setDragged(false);\r\n                popupCtl.wrap.popup.setOffset(offset);\r\n                popupCtl.wrap.popup.setPosition(self._innerCentroid);\r\n                popupCtl.popupDiv.classList.add(TC.Consts.classes.VISIBLE);\r\n            } else {\r\n                map.wrap.hidePopup(popupCtl);\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.isNative = function (feature) {\r\n        return feature instanceof ol.Feature;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getPath = function () {\r\n        var result = [];\r\n        var self = this;\r\n        if (self.feature && self.feature._folders) {\r\n            result = self.feature._folders;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getBounds = function () {\r\n        var result = null;\r\n        var self = this;\r\n        if (self.feature) {\r\n            const geometry = self.feature.getGeometry();\r\n            if (!geometry) return null;\r\n            result = geometry.getExtent();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getTemplate = function () {\r\n        var result = null;\r\n        var self = this;\r\n        var style = self.feature.getStyle();\r\n        if (TC.Util.isFunction(style)) {\r\n            style = style(self.feature);\r\n        }\r\n        if (Array.isArray(style)) {\r\n            for (var i = 0; i < style.length; i++) {\r\n                if (style[i]._balloon) {\r\n                    var s = style[i]._balloon.getText();\r\n                    if (s) {\r\n                        style = style[i]._balloon;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (style && !Array.isArray(style) && style.getText) {\r\n            result = style.getText();\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.getData = function () {\r\n        var self = this;\r\n        var result = self.feature.getProperties();\r\n        // En caso de clusters\r\n        if (Array.isArray(result.features)) {\r\n            if (result.features.length === 1) {\r\n                result = result.features[0].getProperties();\r\n            }\r\n            else {\r\n                result = result.features.length + ' elementos';\r\n            }\r\n        }\r\n        var geometryName = self.feature.getGeometryName();\r\n        if (result[geometryName]) {\r\n            delete result[geometryName];\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.setData = function (data) {\r\n        this.feature.setProperties(data);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.unsetData = function (key) {\r\n        const feature = this.feature;\r\n        feature.unset(key);\r\n    };\r\n\r\n    TC.wrap.Feature.prototype.clearData = function () {\r\n        const feature = this.feature;\r\n        const geometryName = feature.getGeometryName();\r\n        feature.getKeys().forEach(function (key) {\r\n            if (key !== geometryName) {\r\n                feature.unset(key);\r\n            }\r\n        });\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.mouseMoveHandler = function (evt) {\r\n        const self = this;\r\n        if (self.sketch) {\r\n            self.parent.trigger(TC.Consts.event.MEASUREPARTIAL, self.getMeasureData());\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.mouseOverHandler = function (evt) {\r\n        const self = this;\r\n        if (self.sketch && self.hoverCoordinate) {\r\n            self.pushCoordinate(self.hoverCoordinate);\r\n            self.hoverCoordinate = null;\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.clickHandler = function (evt) {\r\n        const self = this;\r\n        if (self.parent.map.view === TC.Consts.view.PRINTING) {\r\n            return;\r\n        }\r\n        if (self._mdPx) { // No operamos si el clic es consecuencia es en realidad un drag\r\n            const dx = self._mdPx[0] - evt.clientX;\r\n            const dy = self._mdPx[1] - evt.clientY;\r\n            if (dx * dx + dy * dy > self.interaction.squaredClickTolerance_) {\r\n                return;\r\n            }\r\n        }\r\n        if (self.sketch) {\r\n            var coords = self.sketch.getGeometry().getCoordinates();\r\n            self.parent.trigger(TC.Consts.event.POINT, {\r\n                point: coords[coords.length - 1]\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.pointerdownHandler = function (evt) {\r\n        const self = this;\r\n        self._mdPx = [evt.clientX, evt.clientY];\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.getMeasureData = function () {\r\n        var self = this;\r\n\r\n        var formatLength = function (line, data) {\r\n            line = new ol.geom.LineString(TC.Util.reproject(line.getCoordinates(), self.parent.map.crs, self.parent.map.options.utmCrs));\r\n            data.length = line.getLength();\r\n        };\r\n\r\n        var formatArea = function (polygon, data) {\r\n            polygon = new ol.geom.Polygon([TC.Util.reproject(polygon.getLinearRing(0).getCoordinates(), self.parent.map.crs, self.parent.map.options.utmCrs)]);\r\n            data.area = polygon.getArea();\r\n            var ring = polygon.getLinearRing(0);\r\n            data.perimeter = ol.geom.flat.linearRingLength(ring.flatCoordinates, 0, ring.flatCoordinates.length, ring.stride);\r\n        };\r\n\r\n        var result = {\r\n            units: ol.proj.Units.METERS\r\n        };\r\n        if (this.sketch) {\r\n            var geom = (this.sketch.getGeometry());\r\n            if (geom instanceof ol.geom.Polygon) {\r\n                formatArea(geom, result);\r\n            }\r\n            else if (geom instanceof ol.geom.LineString) {\r\n                formatLength(geom, result);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    };\r\n\r\n    // Función para reproyectar el dibujo actual\r\n    const drawProjectionChangeHandler = function (ctl, e) {\r\n        if (ctl.sketch) {\r\n            const oldProj = e.oldValue.getProjection();\r\n            const newProj = e.target.get(e.key).getProjection();\r\n            if (oldProj.getCode() !== newProj.getCode()) {\r\n                const geom = ctl.sketch.getGeometry();\r\n                geom.transform(oldProj, newProj);\r\n                ctl.interaction.sketchPoint_.getGeometry().transform(oldProj, newProj);\r\n                const flatCoordinates = [];\r\n                var sketchCoords;\r\n                if (ctl.parent.mode === TC.Consts.geom.POLYGON) {\r\n                    sketchCoords = ctl.interaction.sketchCoords_[0];\r\n                }\r\n                else {\r\n                    sketchCoords = ctl.interaction.sketchCoords_;\r\n                }\r\n                ol.geom.flat.deflateCoordinates(flatCoordinates, 0, sketchCoords, geom.stride);\r\n                const transformFn = ol.proj.getTransform(oldProj, newProj);\r\n                transformFn(flatCoordinates, flatCoordinates, geom.stride);\r\n                sketchCoords = ol.geom.flat.inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, geom.stride);\r\n                if (ctl.parent.mode === TC.Consts.geom.POLYGON) {\r\n                    ctl.interaction.sketchCoords_ = [sketchCoords];\r\n                }\r\n                else {\r\n                    ctl.interaction.sketchCoords_ = sketchCoords;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.activate = function (mode) {\r\n        var self = this;\r\n\r\n        var type;\r\n        switch (mode) {\r\n            case TC.Consts.geom.POLYGON:\r\n                type = ol.geom.GeometryType.POLYGON;\r\n                break;\r\n            case TC.Consts.geom.MULTIPOLYGON:\r\n                type = ol.geom.GeometryType.MULTI_POLYGON;\r\n                break;\r\n            case TC.Consts.geom.POINT:\r\n                type = ol.geom.GeometryType.POINT;\r\n                break;\r\n            case TC.Consts.geom.MULTIPOINT:\r\n                type = ol.geom.GeometryType.MULTI_POINT;\r\n                break;\r\n            case TC.Consts.geom.MULTIPOLYLINE:\r\n                type = ol.geom.GeometryType.MULTI_LINE_STRING;\r\n                break;\r\n            default:\r\n                type = ol.geom.GeometryType.LINE_STRING;\r\n                break;\r\n        }\r\n        if (self.parent.map) {\r\n            Promise.all([self.parent.map.wrap.getMap(), self.parent.getLayer()]).then(function (objects) {\r\n                const olMap = objects[0];\r\n                const layer = objects[1];\r\n                if (layer) {\r\n                    layer.wrap.getLayer().then(function (olLayer) {\r\n\r\n                        if (!self.viewport) self.viewport = olMap.getViewport();\r\n\r\n                        if (self.interaction) {\r\n                            olMap.removeInteraction(self.interaction);\r\n                            if (self._pointerdownHandler) {\r\n                                self.viewport.removeEventListener('pointerdown', self._pointerdownHandler);\r\n                                self._pointerdownHandler = null;\r\n                            }\r\n                            if (self._clickHandler) {\r\n                                self.viewport.removeEventListener(TC.Consts.event.CLICK, self._clickHandler);\r\n                                self._clickHandler = null;\r\n                            }\r\n                            if (self._mouseMoveHandler && self._mouseOverHandler) {\r\n                                self.viewport.removeEventListener(MOUSEMOVE, self._mouseMoveHandler);\r\n                                self.viewport.removeEventListener(MOUSEOVER, self._mouseOverHandler);\r\n                            }\r\n                        }\r\n\r\n                        if (self.snapInteraction) {\r\n                            olMap.removeInteraction(self.snapInteraction);\r\n                        }\r\n\r\n                        if (mode) {\r\n                            self._pointerdownHandler = self.pointerdownHandler.bind(self);\r\n                            self._clickHandler = self.clickHandler.bind(self);\r\n                            self.viewport.addEventListener('pointerdown', self._pointerdownHandler);\r\n                            self.viewport.addEventListener(TC.Consts.event.CLICK, self._clickHandler);\r\n                            if (self.parent.measure) {\r\n                                self._mouseMoveHandler = self.mouseMoveHandler.bind(self);\r\n                                self._mouseOverHandler = self.mouseOverHandler.bind(self);\r\n                                self.viewport.addEventListener(MOUSEMOVE, self._mouseMoveHandler);\r\n                                self.viewport.addEventListener(MOUSEOVER, self._mouseOverHandler);\r\n                            }\r\n\r\n                            var drawOptions = {\r\n                                type: type,\r\n                                snapTolerance: 0,\r\n                                condition: function () {\r\n                                    if (ol.events.condition.shiftKeyOnly(arguments[0])) {\r\n                                        hole = olMap.forEachFeatureAtPixel(olMap.getPixelFromCoordinate(arguments[0].coordinate), function (feature) {\r\n                                            if (ol.geom.GeometryType.POLYGON == feature.getGeometry().getType() ||\r\n                                                ol.geom.GeometryType.MULTI_POLYGON == feature.getGeometry().getType()) {\r\n                                                return feature;\r\n                                            }\r\n                                            return null;\r\n                                        },\r\n                                            {\r\n                                                hitTolerance: hitTolerance\r\n                                            });\r\n                                    }\r\n\r\n                                    if (self.parent.map.view === TC.Consts.view.PRINTING) {\r\n                                        return null;\r\n                                    }\r\n\r\n                                    return true;\r\n                                }\r\n                            };\r\n                            if (olLayer) {\r\n                                drawOptions.source = olLayer.getSource();\r\n                            }\r\n                            const parentStyles = self.parent.styles || {};\r\n                            switch (mode) {\r\n                                case TC.Consts.geom.RECTANGLE:\r\n                                    drawOptions.style = createNativeStyle({\r\n                                        styles: { line: self.parent.styles.line }\r\n                                    });\r\n                                    drawOptions.type = ol.geom.GeometryType.LINE_STRING;\r\n                                    drawOptions.maxPoints = 2;\r\n                                    drawOptions.geometryFunction = function (coordinates, geometry) {\r\n                                        const start = coordinates[0];\r\n                                        const end = coordinates[1];\r\n                                        const newCoords = [[start, [start[0], end[1]], end, [end[0], start[1]], start]];\r\n                                        if (geometry) {\r\n                                            geometry.setCoordinates(newCoords);\r\n                                        }\r\n                                        else {\r\n                                            geometry = new ol.geom.Polygon(newCoords);\r\n                                        }\r\n                                        return geometry;\r\n                                    };\r\n                                    break;\r\n                                case TC.Consts.geom.POLYGON:\r\n                                case TC.Consts.geom.MULTIPOLYGON:\r\n                                    if (parentStyles.polygon) {\r\n                                        drawOptions.style = createNativeStyle({\r\n                                            styles: { polygon: parentStyles.polygon }\r\n                                        });\r\n                                    }\r\n                                    break;\r\n                                case TC.Consts.geom.POINT:\r\n                                case TC.Consts.geom.MULTIPOINT:\r\n                                    if (parentStyles.point) {\r\n                                        drawOptions.style = createNativeStyle({\r\n                                            styles: { point: parentStyles.point }\r\n                                        });\r\n                                    }\r\n                                    break;\r\n                                case TC.Consts.geom.MULTIPOLYLINE:\r\n                                default:\r\n                                    if (parentStyles.line) {\r\n                                        drawOptions.style = createNativeStyle({\r\n                                            styles: { line: parentStyles.line }\r\n                                        });\r\n                                    }\r\n                                    break;\r\n                            }\r\n\r\n                            self.interaction = new ol.interaction.Draw(drawOptions);\r\n\r\n                            self.interaction.on('drawstart', function (evt) {\r\n                                self.sketch = evt.feature;\r\n                                self.parent.trigger(TC.Consts.event.DRAWSTART);\r\n                            }, this);\r\n\r\n                            self.interaction.on('drawend', function (evt) {\r\n                                const overlayStyle = evt.target.overlay_.getStyle();\r\n                                evt.feature.setStyle(Array.isArray(overlayStyle) ? overlayStyle.map(function (style) {\r\n                                    return style.clone();\r\n                                }) : overlayStyle);\r\n                                if (self.parent.measure) {\r\n                                    self.parent.trigger(TC.Consts.event.MEASURE, self.getMeasureData());\r\n                                }\r\n                                TC.wrap.Feature.createFeature(self.sketch).then(function (feat) {\r\n                                    const endFn = function () {\r\n                                        self.parent.trigger(TC.Consts.event.DRAWEND, { feature: feat });\r\n                                        self.sketch = null;\r\n                                        self.interaction.setActive(true);\r\n                                    };\r\n                                    if (self.parent.mode === TC.Consts.geom.RECTANGLE) {\r\n                                        const delay = 400;\r\n                                        const dblClickInteraction = self.interaction\r\n                                            .getMap()\r\n                                            .getInteractions()\r\n                                            .getArray()\r\n                                            .filter(i => i instanceof ol.interaction.DoubleClickZoom)[0];\r\n                                        // Desactivamos temporalmente el zoom por doble clic para evitar que se lance accidentalmente\r\n                                        if (dblClickInteraction && dblClickInteraction.getActive()) {\r\n                                            dblClickInteraction.setActive(false);\r\n                                            setTimeout(function () {\r\n                                                dblClickInteraction.setActive(true);\r\n                                            }, delay);\r\n                                        }\r\n                                        self.interaction.setActive(false);\r\n                                        setTimeout(endFn, delay); // Retardo para evitar pulsaciones accidentales en dobles clics del usuario\r\n                                    }\r\n                                    else {\r\n                                        endFn();\r\n                                    }\r\n                                });\r\n                            }, this);\r\n\r\n                            self._projectionChangeHandler = function (e) {\r\n                                drawProjectionChangeHandler(self, e);\r\n                            };\r\n                            olMap.on('change:view', self._projectionChangeHandler);\r\n\r\n                            olMap.addInteraction(self.interaction);\r\n\r\n                            if (self.parent.snapping) {\r\n                                var snapOptions = {};\r\n                                if (olLayer) {\r\n                                    snapOptions.source = olLayer.getSource();\r\n                                }\r\n                                else if (self.parent.snapping instanceof TC.Layer) {\r\n                                    snapOptions.source = self.parent.snapping.wrap.layer.getSource();\r\n                                }\r\n                                self.snapInteraction = new ol.interaction.Snap(snapOptions);\r\n                                olMap.addInteraction(self.snapInteraction);\r\n                            }\r\n                        }\r\n\r\n                        self.redoStack = [];\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.deactivate = function () {\r\n        var self = this;\r\n        if (self.parent.map) {\r\n            Promise.all([self.parent.map.wrap.getMap(), self.parent.getLayer()]).then(function (objects) {\r\n                const olMap = objects[0];\r\n                const layer = objects[1];\r\n                if (self.viewport) {\r\n                    if (self._pointerdownHandler) {\r\n                        self.viewport.removeEventListener('pointerdown', self._pointerdownHandler);\r\n                        self._pointerdownHandler = null;\r\n                    }\r\n                    if (self._clickHandler) {\r\n                        self.viewport.removeEventListener(TC.Consts.event.CLICK, self._clickHandler);\r\n                        self._clickHandler = null;\r\n                    }\r\n                }\r\n                if (layer && !self.parent.persistent) {\r\n                    layer.clearFeatures();\r\n                }\r\n                if (self.interaction) {\r\n                    olMap.removeInteraction(self.interaction);\r\n                    self.interaction = null;\r\n                }\r\n                olMap.un('change:view', self._projectionChangeHandler);\r\n            });\r\n        }\r\n    };\r\n\r\n    //El valor devuelto es lo que va al stack de redo\r\n    TC.wrap.control.Draw.prototype.popCoordinate = function () {\r\n        var self = this;\r\n        var result = null;\r\n        if (self.interaction) {\r\n            var feature = self.interaction.sketchFeature_;\r\n            if (feature) {\r\n                var coords;\r\n                var geom = feature.getGeometry();\r\n\r\n                if (geom instanceof ol.geom.Polygon) {\r\n                    coords = geom.getCoordinates()[0];\r\n                }\r\n                else if (geom instanceof ol.geom.LineString) {\r\n                    coords = geom.getCoordinates();\r\n                }\r\n                var fullCoords = coords;\r\n                if (coords.length > 1) {\r\n\r\n                    var puntos;\r\n                    if (geom instanceof ol.geom.Polygon)\r\n                        puntos = self.interaction.sketchCoords_[0];\r\n                    else if (geom instanceof ol.geom.LineString)\r\n                        puntos = self.interaction.sketchCoords_;\r\n\r\n                    /*\r\n                    Al menos con linestring, no necesariamente hay que quitar el último\r\n                    Porque OL mete en coordinates del sketchFeature_ tanto el último marcado como el que flota detrás del cursor\r\n                    Para comprobar que realmente es ése, podemos contrastarlo con self.interaction.sketchPoint_.getGeometry().getCoordinates()\r\n                    */\r\n                    var flyingPointContained = false;\r\n                    if (self.interaction.sketchPoint_) {\r\n                        var flyingPoint = self.interaction.sketchPoint_.getGeometry().getCoordinates();\r\n                        for (var i = 0; i < coords.length; i++) {\r\n                            if (coords[i][0] == flyingPoint[0] && coords[i][1] == flyingPoint[1]) {\r\n                                flyingPointContained = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    var index;\r\n                    if (flyingPointContained) index = puntos.length - 2;\r\n                    else index = puntos.length - 1;\r\n\r\n                    result = puntos[index];\r\n                    puntos.splice(index, 1);\r\n\r\n                    if (geom instanceof ol.geom.Polygon) {\r\n                        geom.setCoordinates([puntos]);\r\n                        self.interaction.sketchLine_.getGeometry().setCoordinates(puntos);\r\n                    }\r\n                    else {\r\n                        geom.setCoordinates(puntos);\r\n                    }\r\n\r\n\r\n                    feature.setGeometry(geom);\r\n                }\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.pushCoordinate = function (coord) {\r\n        var self = this;\r\n        var result = false;\r\n        if (self.interaction) {\r\n            var feature = self.interaction.sketchFeature_;\r\n            if (feature) {\r\n                var coords;\r\n                var geom = feature.getGeometry();\r\n\r\n                if (geom instanceof ol.geom.Polygon) {\r\n                    coords = geom.getCoordinates()[0];\r\n                } else if (geom instanceof ol.geom.LineString) {\r\n                    coords = geom.getCoordinates();\r\n                }\r\n                var fullCoords = coords;\r\n                //coords.push(coord);\r\n\r\n                var puntos;\r\n                if (geom instanceof ol.geom.Polygon) {\r\n                    puntos = self.interaction.sketchCoords_[0];\r\n                    //self.interaction.sketchCoords_[0].push(coord);\r\n                    //geom.setCoordinates([fullCoords], ol.geom.GeometryLayout.XY);\r\n                } else if (geom instanceof ol.geom.LineString) {\r\n\r\n                    puntos = self.interaction.sketchCoords_;\r\n                }\r\n\r\n                //Si hay punto volador, hay que meter la coordenada justo antes\r\n                var flyingPointContained = false;\r\n                if (self.interaction.sketchPoint_) {\r\n                    var flyingPoint = self.interaction.sketchPoint_.getGeometry().getCoordinates();\r\n                    for (var i = 0; i < coords.length; i++) {\r\n                        if (coords[i][0] == flyingPoint[0] && coords[i][1] == flyingPoint[1]) {\r\n                            flyingPointContained = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                if (flyingPointContained) index = puntos.length - 1;\r\n                else index = puntos.length;\r\n                puntos.splice(index, 0, coord);\r\n\r\n                if (geom instanceof ol.geom.LineString)\r\n                    geom.setCoordinates(puntos, ol.geom.GeometryLayout.XY);\r\n                else {\r\n                    geom.setCoordinates([puntos], ol.geom.GeometryLayout.XY);\r\n                    self.interaction.sketchLine_.getGeometry().setCoordinates(puntos);\r\n                    //feature.setGeometry(geom);\r\n                }\r\n\r\n\r\n                result = true;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.undo = function () {\r\n        var self = this;\r\n        var result = false;\r\n\r\n        var coord = self.popCoordinate();\r\n        if (coord) {\r\n            self.redoStack.push(coord);\r\n            result = true;\r\n        }\r\n\r\n        self.parent.trigger(TC.Consts.event.MEASUREPARTIAL, self.getMeasureData());\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.redo = function () {\r\n        var self = this;\r\n        var result = false;\r\n\r\n        if (self.redoStack.length > 0) {\r\n            self.pushCoordinate(self.redoStack.pop());\r\n            result = true;\r\n        }\r\n\r\n        self.parent.trigger(TC.Consts.event.MEASUREPARTIAL, self.getMeasureData());\r\n\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.end = function () {\r\n        var self = this;\r\n        if (self.interaction && self.interaction.sketchFeature_)\r\n            self.interaction.finishDrawing();\r\n    };\r\n\r\n    TC.wrap.control.Draw.prototype.setStyle = function (style) {\r\n        const self = this;\r\n        if (self.interaction) {\r\n            self.interaction.overlay_.setStyle(createNativeStyle({\r\n                styles: style\r\n            }));\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.CacheBuilder.prototype.getRequestSchemas = function (options) {\r\n        var extent = options.extent;\r\n        var layers = options.layers;\r\n        var result = new Array(layers.length);\r\n        for (var i = 0, len = result.length; i < len; i++) {\r\n            var layer = layers[i];\r\n            var schema = {\r\n                layerId: layer.id\r\n            };\r\n            var olSource = layer.wrap.layer.getSource();\r\n            if (olSource.getUrls) {\r\n                schema.url = olSource.getUrls()[0];\r\n            }\r\n            if (olSource.getTileGrid) {\r\n                var tileGrid = olSource.getTileGrid();\r\n                var resolutions = tileGrid.getResolutions();\r\n                var matrixIds = tileGrid.getMatrixIds();\r\n                var node = layer.getLayerNodeByName(layer.layerNames);\r\n                var tmsLimits = null;\r\n                for (var j = 0, llen = node.TileMatrixSetLink.length; j < llen; j++) {\r\n                    var tmsl = node.TileMatrixSetLink[j];\r\n                    if (tmsl.TileMatrixSet === layer.matrixSet) {\r\n                        tmsLimits = tmsl.TileMatrixSetLimits;\r\n                        break;\r\n                    }\r\n                }\r\n                schema.tileMatrixLimits = [];\r\n                for (var j = 0, rlen = resolutions.length; j < rlen; j++) {\r\n                    var origin = tileGrid.getOrigin(j);\r\n                    var tileSize = tileGrid.getTileSize(j);\r\n                    var resolution = resolutions[j];\r\n                    var unitsPerTile = tileSize * resolution;\r\n                    var tml = {\r\n                        mId: matrixIds[j],\r\n                        res: resolution,\r\n                        origin: origin,\r\n                        tSize: tileSize,\r\n                        cl: Math.floor((extent[0] - origin[0]) / unitsPerTile),\r\n                        cr: Math.floor((extent[2] - origin[0]) / unitsPerTile),\r\n                        rt: Math.floor((origin[1] - extent[3]) / unitsPerTile),\r\n                        rb: Math.floor((origin[1] - extent[1]) / unitsPerTile)\r\n                    }\r\n                    if (tmsLimits) {\r\n                        var tmsLimit = tmsLimits[j];\r\n                        if (tmsLimit) {\r\n                            tml.cl = Math.max(tml.cl, tmsLimit.MinTileCol);\r\n                            tml.cr = Math.min(tml.cr, tmsLimit.MaxTileCol);\r\n                            tml.rt = Math.max(tml.rt, tmsLimit.MinTileRow);\r\n                            tml.rb = Math.min(tml.rb, tmsLimit.MaxTileRow);\r\n                        }\r\n                    }\r\n                    if (tml.cl <= tml.cr && tml.rt <= tml.rb) {\r\n                        schema.tileMatrixLimits.push(tml);\r\n                    }\r\n                }\r\n            }\r\n            result[i] = schema;\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.CacheBuilder.prototype.getGetTilePattern = function (layer) {\r\n        var result = \"\";\r\n        var olSource = layer.wrap.layer.getSource();\r\n        if (olSource.getUrls) {\r\n            result = olSource.getUrls()[0];\r\n        }\r\n        if (layer.options.encoding !== TC.Consts.WMTSEncoding.RESTFUL) {\r\n            if (result.indexOf('?') < 0) {\r\n                result = result + '?';\r\n            }\r\n            if (result.indexOf('?') === result.length - 1) {\r\n                result = result + 'layer=' + layer.layerNames + '&style=default&tilematrixset=' + encodeURIComponent(layer.matrixSet) +\r\n                    '&Service=WMTS&Request=GetTile&Version=1.0.0&Format=' + encodeURIComponent(layer.format) +\r\n                    '&TileMatrix={TileMatrix}&TileCol={TileCol}&TileRow={TileRow}';\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n\r\n    const createHaloStroke1 = function (width) {\r\n        return new ol.style.Stroke({\r\n            color: '#ffffff',\r\n            width: width + 4,\r\n        });\r\n    };\r\n\r\n    const createHaloStroke2 = function (width) {\r\n        return new ol.style.Stroke({\r\n            color: '#000000',\r\n            width: width + 6,\r\n        });\r\n    };\r\n\r\n    const addHaloToStyle = function (style) {\r\n        if (!style) {\r\n            style = [];\r\n        }\r\n        if (style instanceof ol.style.Style) {\r\n            style = [style];\r\n        }\r\n        style = style.slice();\r\n        const mainStyle = style[0];\r\n        if (mainStyle) {\r\n            const image = mainStyle.getImage();\r\n            var strokeWidth;\r\n            if (image instanceof ol.style.RegularShape) {\r\n                strokeWidth = image.getStroke().getWidth();\r\n                const radius = image.getRadius();\r\n                const haloPart1 = mainStyle.clone();\r\n                haloPart1.setImage(new ol.style.Circle({\r\n                    radius: radius,\r\n                    stroke: createHaloStroke1(strokeWidth)\r\n                }));\r\n                style.unshift(haloPart1);\r\n                const haloPart2 = mainStyle.clone();\r\n                haloPart2.setImage(new ol.style.Circle({\r\n                    radius: radius,\r\n                    stroke: createHaloStroke2(strokeWidth)\r\n                }));\r\n                style.unshift(haloPart2);\r\n            }\r\n            const stroke = mainStyle.getStroke();\r\n            if (stroke) {\r\n                strokeWidth = stroke.getWidth();\r\n                style.unshift(new ol.style.Style({\r\n                    stroke: createHaloStroke1(strokeWidth)\r\n                }));\r\n                style.unshift(new ol.style.Style({\r\n                    stroke: createHaloStroke2(strokeWidth)\r\n                }));\r\n            }\r\n            return style;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    const createSelectedStyle = function (feat) {\r\n        let originalStyle = feat._originalStyle = feat._originalStyle || feat.getStyle();\r\n        if (!feat._originalStyle && feat._wrap.parent.layer) {\r\n            originalStyle = feat._wrap.parent.layer.wrap.layer.getStyle();\r\n        }\r\n        if (!originalStyle) {\r\n            originalStyle = createNativeStyle({}, feat);\r\n        }\r\n        if (TC.Util.isFunction(originalStyle)) {\r\n            return function (f, r) {\r\n                return addHaloToStyle(originalStyle(f, r));\r\n            };\r\n        }\r\n        return addHaloToStyle(originalStyle);\r\n    };\r\n\r\n    const setSelectedStyle = function (feat) {\r\n        updateSelectedStyle.call(feat);\r\n        feat.changed();\r\n        //ol.events.listen(feat, CHANGE, updateSelectedStyle, feat);\r\n    };\r\n\r\n    const removeSelectedStyle = function (feat) {\r\n        //ol.events.unlisten(feat, CHANGE, updateSelectedStyle, feat);\r\n        if (feat.hasOwnProperty('_originalStyle')) {\r\n            feat.setStyle(feat._originalStyle);\r\n        }\r\n        delete feat._originalStyle;\r\n    };\r\n\r\n    const updateSelectedStyle = function () {\r\n        this.style_ = createSelectedStyle(this);\r\n        this.styleFunction_ = !this.style_ ? undefined : ol.Feature.createStyleFunction(this.style_);\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.activate = function () {\r\n        const self = this;\r\n        if (self.parent.map) {\r\n            Promise.all([self.parent.map.wrap.getMap(), self.parent.layer.wrap.getLayer()]).then(function (olObjects) {\r\n                const olMap = olObjects[0];\r\n                const olLayer = olObjects[1];\r\n                if (self.selectInteraction) {\r\n                    olMap.removeInteraction(self.selectInteraction);\r\n                }\r\n                var select = new ol.interaction.Select({\r\n                    layers: [olLayer],\r\n                    hitTolerance: hitTolerance\r\n                });\r\n                self.selectInteraction = select;\r\n                olMap.addInteraction(select);\r\n                var getWrapperFeature = function (elm) {\r\n                    return elm._wrap.parent;\r\n                };\r\n                select.on('select', function (event) {\r\n                    if (event.selected.length > 0) {\r\n                        self.parent.trigger(TC.Consts.event.FEATURESSELECT, { ctrl: self, features: event.selected.map(getWrapperFeature) });\r\n                    }\r\n                    if (event.deselected.length > 0) {\r\n                        if (event.selected.length == 0) {\r\n                            self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { ctrl: self.parent, features: event.deselected.map(getWrapperFeature) });\r\n                        }\r\n                    }\r\n                });\r\n                if (self.modifyInteraction) {\r\n                    olMap.removeInteraction(self.modifyInteraction);\r\n                }\r\n                var modify = new ol.interaction.Modify({\r\n                    features: select.getFeatures()\r\n                });\r\n                modify.on('modifyend', function (e) {\r\n                    e.features.forEach(function (feature) {\r\n                        feature._wrap.parent.geometry = feature._wrap.getGeometry();\r\n                        self.parent.trigger(TC.Consts.event.FEATUREMODIFY, { feature: feature._wrap.parent, layer: self.parent.layer });\r\n                    });\r\n                });\r\n                self.modifyInteraction = modify;\r\n                olMap.addInteraction(modify);\r\n\r\n                if (self.snapInteraction) {\r\n                    olMap.removeInteraction(self.snapInteraction);\r\n                }\r\n                if (self.parent.snapping) {\r\n                    self.snapInteraction = new ol.interaction.Snap({\r\n                        source: olLayer.getSource()\r\n                    });\r\n                    olMap.addInteraction(self.snapInteraction);\r\n                }\r\n\r\n                if (!self._onMouseMove) {\r\n                    self._onMouseMove = function (e) {\r\n                        const viewport = olMap.getViewport();\r\n                        var hit = false;\r\n                        var feature;\r\n\r\n                        var pixel = olMap.getEventPixel(e);\r\n                        hit = olMap.forEachFeatureAtPixel(pixel, function (feature, layer) {\r\n                            if (self.parent.layer && layer === self.parent.layer.wrap.layer) {\r\n                                return true;\r\n                            }\r\n                            return false;\r\n                        },\r\n                            {\r\n                                hitTolerance: hitTolerance\r\n                            });\r\n\r\n                        if (hit) {\r\n                            viewport.style.cursor = 'pointer';\r\n                        } else {\r\n                            viewport.style.cursor = '';\r\n                            //self.parent.trigger(TC.Consts.event.FEATUREOUT);\r\n                        }\r\n                    };\r\n                }\r\n\r\n                olMap.getViewport().addEventListener(MOUSEMOVE, self._onMouseMove);\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.deactivate = function () {\r\n        const self = this;\r\n        if (self.modifyInteraction) {\r\n            self.modifyInteraction.setActive(false);\r\n            self.selectInteraction.setActive(false);\r\n            self.parent.map.wrap.getMap().then(function (olMap) {\r\n                olMap.getViewport().removeEventListener(MOUSEMOVE, self._onMouseMove);\r\n                olMap.removeInteraction(self.modifyInteraction);\r\n                olMap.removeInteraction(self.selectInteraction);\r\n                self.modifyInteraction = null;\r\n                self.selectInteraction = null;\r\n            });\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.getSelectedFeatures = function () {\r\n        var self = this;\r\n        var result = [];\r\n        if (self.selectInteraction) {\r\n            self.selectInteraction.getFeatures().forEach(function (elm) {\r\n                result.push(elm._wrap.parent);\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.setSelectedFeatures = function (features) {\r\n        var self = this;\r\n        if (self.selectInteraction) {\r\n            var source = self.selectInteraction.featureOverlay_.getSource();\r\n            source.clear();\r\n            source.addFeatures(features.map(function (elm) {\r\n                return elm.wrap.feature;\r\n            }));\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Modify.prototype.unselectFeatures = function (features) {\r\n        features = features || [];\r\n        const self = this;\r\n        const selectedFeatures = self.selectInteraction ? self.selectInteraction.getFeatures() : null;\r\n        if (selectedFeatures) {\r\n            const unselectedFeatures = [];\r\n            selectedFeatures.getArray().slice().forEach(function (olFeature) {\r\n                if (!features.length || features.indexOf(olFeature) >= 0) {\r\n                    selectedFeatures.remove(olFeature);\r\n                    unselectedFeatures.push(olFeature._wrap.parent);\r\n                }\r\n            });\r\n            if (unselectedFeatures.length) {\r\n                self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { features: unselectedFeatures });\r\n            }\r\n        }\r\n    };\r\n\r\n    TC.wrap.control.Edit.prototype.cancel = function (deactivate, cancelTxt) {\r\n        var self = this;\r\n        self.points = [];\r\n        self.histPoints = [];\r\n        var layer = (self.control && self.control.layer) || (self.modifyInteraction && self.modifyInteraction.layer);\r\n        //if (!self.session || ((self.modifyInteraction && self.modifyInteraction.modified) || (self.session.featuresAdded && self.session.featuresAdded.length)) && cancelTxt && !confirm(cancelTxt))\r\n        //    return;\r\n        if (self.selectInteraction) {\r\n            var features = self.selectInteraction.getFeatures();\r\n            self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { ctrl: self.parent, feature: features.get(0) });\r\n            features.clear();\r\n            self.selectInteraction.setActive(false);\r\n        }\r\n        //if (self.drawInteraction) {\r\n        //    self.drawInteraction.abortDrawing_();\r\n        //    if (deactivate) {\r\n        //        self.drawInteraction.setActive(false);\r\n        //    }\r\n        //}\r\n        //if(self.modifyInteraction)\r\n        //{\r\n        //    if (self.modifyInteraction.feature)\r\n        //        self.modifyInteraction.unselectFeature(self.modifyInteraction.feature);\r\n        //    if (deactivate)\r\n        //    {\r\n        //        self.modifyInteraction.deactivate();\r\n        //    }   \r\n        //}\r\n        ////if (self.session.featuresAdded && self.session.featuresAdded.length > 0) {\r\n        ////    layer.removeFeatures(self.session.featuresAdded);\r\n        ////    self.session.featuresAdded = [];\r\n        ////}\r\n        //self.parent.trigger(TC.Consts.event.EDITIONCANCEL, { ctrl: self });\r\n        ////no se por que hostias se cambia el renderIntent a las features\r\n        //layer.features.forEach(function (feat) {\r\n        //    feat.renderIntent = \"\";\r\n        //});    \r\n        //layer.removeAllFeatures();\r\n        //layer.addFeatures(self.session.features);        \r\n        //self.clearSession();\r\n    };\r\n\r\n    TC.wrap.control.Edit.prototype.deleteFeatures = function (features) {\r\n        var self = this;\r\n        if (Array.isArray(features)) {\r\n            var olFeatures = features.map(function (elm) {\r\n                return elm.wrap.feature;\r\n            });\r\n            self.parent.layer.wrap.getLayer().then(function (olLayer) {\r\n                var selectedFeatures = self.selectInteraction ? self.selectInteraction.getFeatures() : null;\r\n                for (var i = 0, len = olFeatures.length; i < len; i++) {\r\n                    var olFeature = olFeatures[i];\r\n                    if (selectedFeatures) {\r\n                        selectedFeatures.remove(olFeature);\r\n                        self.parent.trigger(TC.Consts.event.FEATURESUNSELECT, { feature: olFeature._wrap.parent });\r\n                    }\r\n                    olLayer.getSource().removeFeature(olFeature);\r\n                    self.parent.trigger(TC.Consts.event.FEATUREREMOVE, { feature: olFeature._wrap.parent });\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    //TC.wrap.control.Edit.prototype.clearSession = function () {\r\n    //    var self = this;\r\n    //    delete self.session;\r\n    //};\r\n\r\n    TC.wrap.Feature.prototype.toGML = function (version, srsName) {\r\n        var parser = new ol.format.GML({\r\n            srsName: srsName\r\n        });\r\n        var xml = parser.writeGeometryNode(this.feature.getGeometry());\r\n        //elimino los aributos srsName de los hijos en geometrias compuestas Polygon->LinearRing etc;\r\n        var poligons = xml.querySelector(\"MultiSurface,MultiPolygon,Polygon\")\r\n        if (poligons) poligons.querySelectorAll(\"Polygon,LinearRing\").forEach((item) => { item.removeAttribute(\"srsName\") });\r\n        //id para INSPIRE\r\n        xml.firstChild.setAttribute(\"gml:id\", xml.firstChild.tagName + \".\" + TC.getUID());\r\n        //reemplazo todos los <loquesea por <gml:loquesea y </loquesea por </gml:loquesea\r\n        return new XMLSerializer().serializeToString(xml.firstChild).replace(/\\<\\/?\\w/gm, function (str) { var pos = str.indexOf(\"/\") > 0 ? str.indexOf(\"/\") + 1 : 1; return str.substring(0, pos) + \"gml:\" + str.substring(pos) })\r\n        //return new XMLSerializer().serializeToString(xml.firstChild).replace(/\\</gm, \"<gml:\");\r\n    };\r\n\r\n\r\n    TC.wrap.Feature.prototype.toGeoJSON = function () {\r\n        var parser = new ol.format.GeoJSON();\r\n        return parser.writeGeometry(this.feature.getGeometry());\r\n    };\r\n\r\n    TC.wrap.Geometry.write = function (options) {\r\n        options = options || {};\r\n        var geometry;\r\n        switch (options.format) {\r\n            default:\r\n                options.parser = new ol.format.GeoJSON();\r\n        };\r\n        switch (options.type) {\r\n            case TC.Consts.geom.POLYLINE:\r\n                geometry = new ol.geom.LineString(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.POLYGON:\r\n                geometry = new ol.geom.Polygon(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.MULTIPOINT:\r\n                geometry = new ol.geom.MultiPoint(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.MULTIPOLYLINE:\r\n                geometry = new ol.geom.MultiLineString(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.MULTIPOLYGON:\r\n                geometry = new ol.geom.MultiPolygon(options.coordinates);\r\n                break;\r\n            case TC.Consts.geom.POINT:\r\n            default:\r\n                geometry = new ol.geom.Point(options.coordinates);\r\n                break;\r\n        };\r\n        return options.parser.writeGeometry(geometry);\r\n    };\r\n\r\n    TC.wrap.Geometry.toGeoJSON = function (options) {\r\n        return TC.wrap.Geometry.write(options);\r\n    };\r\n\r\n    return ol;\r\n});\r\n"]}