{"version":3,"sources":["workers/tc-caps-web-worker.js"],"names":["tXml","S","options","pos","openBracket","openBracketCC","charCodeAt","closeBracket","closeBracketCC","minusCC","slashCC","exclamationCC","singleQuoteCC","doubleQuoteCC","openSquareBracketCC","closeSquareBracketCC","parseChildren","children","indexOf","char2","length","node","parseNode","push","text","parseText","trim","start","slice","nameSpacer","parseName","c","NoChildNodes","tagName","attrFound","name","code","attributes","value","parseString","startChar","startpos","r","out","undefined","attrValue","attrName","RegExp","exec","index","lastIndexOf","substr","filter","simplify","forEach","child","kids","_attributes","i","f","concat","stringify","O","writeChildren","writeNode","N","toContentString","tDom","Array","isArray","e","getElementById","id","simplified","getElementsByClassName","classname","module","exports","keys","parameters","a2o","pp","t","a","s","flattenOnlineResource","olr","flattenLayerUrls","layer","tag","hasOwnProperty","tagObj","urls","len","url","OnlineResource","booleanValues","parseCorner","cornerString","split","map","elm","parseFloat","processDCPVerb","dcpVerb","verbs","result","verb","Constraint","j","lenj","allowedValues","AllowedValues","Value","href","wfsParser","reduce","item","some","k","key","find","objName","substring","p","o","Capability","Request","GetFeature","ResultFormat","toLowerCase","outputFormat","Operations","FeatureTypeList","n","OperationsMetadata","u","Object","assign","FeatureType","Name","Filter_Capabilities","Promises","TC","capabilities","Promise","resolve","SERVICE","VERSION","REQUEST","x","y","ajax","proxify","Util","getParamString","method","then","response","WFSCapabilities","Parse","data","GetCapabilities","DCP","HTTP","Get","DCPType","onlineResource","capabilites","arguments","version","l","FeatureTypes","Filters","postprocessWMS","xml","processWMSLayer","crsList","queryable","bbox","EX_GeographicBoundingBox","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","crs","CRS","SRS","extent","minx","miny","maxx","maxy","res","Attribution","Style","newCrsList","Layer","request","dcpts","dcpt","protocol","dcptp","dcptpv","processDCPType","GetMap","GetFeatureInfo","Format","postprocessWMTS","contents","layers","ResourceURL","TileMatrixSetLink","tmsl","TileMatrixSetLimits","TileMatrixLimits","lenk","tmslm","MaxTileCol","parseInt","MaxTileRow","MinTileCol","MinTileRow","WGS84BoundingBox","lowerCorner","LowerCorner","upperCorner","UpperCorner","processWMTSLayers","Contents","TileMatrixSet","tileMatrixSets","tms","SupportedCRS","TileMatrix","tm","MatrixHeight","MatrixWidth","TileHeight","TileWidth","ScaleDenominator","TopLeftCorner","processTMS","om","operations","Operation","operation","protocolProp","processOM","onmessage","prefixIdx","type","attr","updateSequence","postprocessWFS","postMessage","state"],"mappings":"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","sourcesContent":["\r\n/**\r\n * @author: Tobias Nickel\r\n * @created: 06.04.2015\r\n * I needed a small xmlparser chat can be used in a worker.\r\n */\r\n\r\n/**\r\n * parseXML / html into a DOM Object. with no validation and some failur tolerance\r\n * @params S {string} your XML to parse\r\n * @param options {object} all other options:\r\n * searchId {string} the id of a single element, that should be returned. using this will increase the speed rapidly\r\n * filter {function} filter method, as you know it from Array.filter. but is goes throw the DOM.\r\n * simplify {bool} to use tXml.simplify.\r\n */\r\n\r\n\r\nfunction tXml(S, options) {\r\n    \"use strict\";\r\n    options = options || {};\r\n\r\n    var pos = 0;\r\n\r\n    var openBracket = \"<\";\r\n    var openBracketCC = \"<\".charCodeAt(0);\r\n    var closeBracket = \">\";\r\n    var closeBracketCC = \">\".charCodeAt(0);\r\n    var minus = \"-\";\r\n    var minusCC = \"-\".charCodeAt(0);\r\n    var slash = \"/\";\r\n    var slashCC = \"/\".charCodeAt(0);\r\n    var exclamation = '!';\r\n    var exclamationCC = '!'.charCodeAt(0);\r\n    var singleQuote = \"'\";\r\n    var singleQuoteCC = \"'\".charCodeAt(0);\r\n    var doubleQuote = '\"';\r\n    var doubleQuoteCC = '\"'.charCodeAt(0);\r\n    var openSquareBracket = \"[\";\r\n    var openSquareBracketCC = \"[\".charCodeAt(0);\r\n    var closeSquareBracket = \"]\";\r\n    var closeSquareBracketCC = \"]\".charCodeAt(0);\r\n\r\n    /**\r\n     * parsing a list of entries\r\n     */\r\n\r\n    function parseChildren() {\r\n        var children = [];\r\n        while (S[pos]) {\r\n            if (S.charCodeAt(pos) == openBracketCC) {\r\n                if (S.charCodeAt(pos + 1) === slashCC) {\r\n                    pos = S.indexOf(closeBracket, pos);\r\n                    return children;\r\n                } else if (S.charCodeAt(pos + 1) === exclamationCC) {\r\n                    var char2 = S.charCodeAt(pos + 2);\r\n                    if (char2 == openSquareBracketCC) {\r\n                        // cdata support\r\n                    }\r\n                    else {\r\n                        if (char2 == minusCC) {\r\n                            //comment support\r\n                            while (pos !== -1 && !(S.charCodeAt(pos) === closeBracketCC && S.charCodeAt(pos - 1) == minusCC && S.charCodeAt(pos - 2) == minusCC && pos != -1)) {\r\n                                pos = S.indexOf(closeBracket, pos + 1);\r\n                            }\r\n                            if (pos === -1)\r\n                                pos = S.length\r\n                        } else {\r\n                            // doctypesupport\r\n                            pos += 2;\r\n                            while (S.charCodeAt(pos) !== closeBracketCC) {\r\n                                pos++;\r\n                            }\r\n                        }\r\n                        pos++;\r\n                        continue;\r\n                    }\r\n                }\r\n                var node = parseNode();\r\n                children.push(node);\r\n            } else {\r\n                var text = parseText()\r\n                if (text.trim().length > 0)\r\n                    children.push(text);\r\n            }\r\n            pos++;\r\n        }\r\n        return children;\r\n    }\r\n\r\n    /**\r\n     *    returns the text outside of texts until the first '<'\r\n     */\r\n\r\n    function parseText() {\r\n        var start = pos;\r\n        pos = S.indexOf(openBracket, pos) - 1;\r\n        if (pos === -2)\r\n            pos = S.length;\r\n        return S.slice(start, pos + 1);\r\n    }\r\n    /**\r\n     *    returns text until the first nonAlphebetic letter\r\n     */\r\n    var nameSpacer = '\\n\\t>/= ';\r\n\r\n    function parseName() {\r\n        var start = pos;\r\n        var c = S[pos];\r\n        while (nameSpacer.indexOf(c) === -1) {\r\n            c = S[++pos];\r\n            // flacunza: Ignoramos los prefijos\r\n            if (c === ':') {\r\n                pos++;\r\n                start = pos;\r\n            }\r\n        }\r\n        return S.slice(start, pos);\r\n    }\r\n    /**\r\n     *    is parsing a node, including tagName, Attributes and its children,\r\n     * to parse children it uses the parseChildren again, that makes the parsing recursive\r\n     */\r\n    var NoChildNodes = ['img', 'br', 'input', 'meta', 'link'];\r\n\r\n    function parseNode() {\r\n        var node = {};\r\n        pos++;\r\n        if (S.charCodeAt(pos) === exclamationCC && S.charCodeAt(pos + 1) === openSquareBracketCC) {\r\n            // parse cdata\r\n            var start = pos + 8;\r\n            while (!(S.charCodeAt(pos) === closeBracketCC && S.charCodeAt(pos - 1) === closeSquareBracketCC && S.charCodeAt(pos - 2) === closeSquareBracketCC)) {\r\n                pos++;\r\n            }\r\n            return S.slice(start, pos - 2);\r\n        }\r\n\r\n        node.tagName = parseName();\r\n\r\n        // parsing attributes\r\n        var attrFound = false;\r\n        while (S.charCodeAt(pos) !== closeBracketCC) {\r\n            var c = S.charCodeAt(pos);\r\n            if ((c > 64 && c < 91) || (c > 96 && c < 123)) {\r\n                //if('abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.indexOf(S[pos])!==-1 ){\r\n                var name = parseName();\r\n                // search beginning of the string\r\n                var code = S.charCodeAt(pos);\r\n                while (code !== singleQuoteCC && code !== doubleQuoteCC && !((code > 64 && code < 91) || (code > 96 && code < 123)) && code !== closeBracketCC) {\r\n                    pos++;\r\n                    code = S.charCodeAt(pos);\r\n                }\r\n                if (!attrFound) {\r\n                    node.attributes = {};\r\n                    attrFound = true;\r\n                }\r\n                if (code === singleQuoteCC || code === doubleQuoteCC) {\r\n                    var value = parseString();\r\n                } else {\r\n                    value = null;\r\n                    pos--;\r\n                }\r\n                node.attributes[name] = value;\r\n            }\r\n            pos++;\r\n\r\n        }\r\n        // optional parsing of children\r\n        if (S.charCodeAt(pos - 1) !== slashCC) {\r\n            if (node.tagName == \"script\") {\r\n                var start = pos + 1;\r\n                pos = S.indexOf('</script>', pos);\r\n                node.children = [S.slice(start, pos - 1)];\r\n                pos += 8;\r\n            } else if (node.tagName == \"style\") {\r\n                var start = pos + 1;\r\n                pos = S.indexOf('</style>', pos);\r\n                node.children = [S.slice(start, pos - 1)];\r\n                pos += 7;\r\n            } else if (NoChildNodes.indexOf(node.tagName) == -1) {\r\n                pos++;\r\n                node.children = parseChildren(name);\r\n            }\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /**\r\n     *    is parsing a string, that starts with a char and with the same usually  ' or \"\r\n     */\r\n\r\n    function parseString() {\r\n        var startChar = S[pos];\r\n        var startpos = ++pos;\r\n        pos = S.indexOf(startChar, startpos)\r\n        return S.slice(startpos, pos);\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n\r\n    function findElements() {\r\n        var r = new RegExp('\\\\s' + options.attrName + '\\\\s*=[\\'\"]' + options.attrValue + '[\\'\"]').exec(S)\r\n        if (r) {\r\n            return r.index;\r\n        } else {\r\n            return -1;\r\n        }\r\n    }\r\n\r\n    var out = null;\r\n    if (options.attrValue !== undefined) {\r\n        options.attrName = options.attrName || 'id';\r\n        var out = [];\r\n\r\n        while ((pos = findElements()) !== -1) {\r\n            pos = S.lastIndexOf('<', pos);\r\n            if (pos !== -1) {\r\n                out.push(parseNode());\r\n            }\r\n            S = S.substr(pos);\r\n            pos = 0;\r\n        }\r\n    } else {\r\n        out = parseChildren();\r\n    }\r\n\r\n    if (options.filter) {\r\n        out = tXml.filter(out, options.filter);\r\n    }\r\n\r\n    if (options.simplify) {\r\n        out = tXml.simplify(out);\r\n    }\r\n    return out;\r\n}\r\n/**\r\n * transform the DomObject to an object that is like the object of PHPs simplexmp_load_*() methods.\r\n * this format helps you to write that is more likely to keep your programm working, even if there a small changes in the XML schema.\r\n * be aware, that it is not possible to reproduce the original xml from a simplified version, because the order of elements is not saved.\r\n * therefore your programm will be more flexible and easyer to read.\r\n *\r\n * @param {array} the childrenList\r\n */\r\ntXml.simplify = function simplify(children) {\r\n    var out = {};\r\n    if (!children || !children.length) {\r\n        return '';\r\n    }\r\n\r\n    if (children.length === 1 && typeof children[0] == 'string') {\r\n        return children[0];\r\n    }\r\n    // map each object\r\n    children.forEach(function (child) {\r\n        if (typeof child !== 'object') {\r\n            return;\r\n        }\r\n        if (!out[child.tagName])\r\n            out[child.tagName] = [];\r\n        var kids = tXml.simplify(child.children);\r\n        out[child.tagName].push(kids);\r\n        if (child.attributes) {\r\n            kids._attributes = child.attributes;\r\n        }\r\n    });\r\n\r\n    for (var i in out) {\r\n        if (out[i].length == 1) {\r\n            out[i] = out[i][0];\r\n        }\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\n/**\r\n * behaves the same way as Array.filter, if the filter method return true, the element is in the resultList\r\n * @params children{Array} the children of a node\r\n * @param f{function} the filter method\r\n */\r\ntXml.filter = function (children, f) {\r\n    var out = [];\r\n    children.forEach(function (child) {\r\n        if (typeof (child) === 'object' && f(child)) out.push(child);\r\n        if (child.children) {\r\n            var kids = tXml.filter(child.children, f);\r\n            out = out.concat(kids);\r\n        }\r\n    });\r\n    return out;\r\n};\r\n\r\n/**\r\n * stringify a previously parsed string object.\r\n * this is useful,\r\n *  1. to remove whitespaces\r\n * 2. to recreate xml data, with some changed data.\r\n * @param O{tXMLDomObject} the object to Stringify\r\n */\r\ntXml.stringify = function TOMObjToXML(O) {\r\n    var out = '';\r\n\r\n    function writeChildren(O) {\r\n        if (O)\r\n            for (var i = 0; i < O.length; i++) {\r\n                if (typeof O[i] == 'string') {\r\n                    out += O[i].trim();\r\n                } else {\r\n                    writeNode(O[i]);\r\n                }\r\n            }\r\n    }\r\n\r\n    function writeNode(N) {\r\n        out += \"<\" + N.tagName;\r\n        for (var i in N.attributes) {\r\n            if (N.attributes[i] === null) {\r\n                out += ' ' + i;\r\n            } else if (N.attributes[i].indexOf('\"') === -1) {\r\n                out += ' ' + i + '=\"' + N.attributes[i].trim() + '\"';\r\n            } else {\r\n                out += ' ' + i + \"='\" + N.attributes[i].trim() + \"'\";\r\n            }\r\n        }\r\n        out += '>';\r\n        writeChildren(N.children);\r\n        out += '</' + N.tagName + '>';\r\n    }\r\n    writeChildren(O);\r\n\r\n    return out;\r\n};\r\n\r\n\r\n/**\r\n * use this method to read the textcontent, of some node.\r\n * It is great if you have mixed content like:\r\n * this text has some <b>big</b> text and a <a href=''>link</a>\r\n */\r\ntXml.toContentString = function (tDom) {\r\n    if (Array.isArray(tDom)) {\r\n        var out = '';\r\n        tDom.forEach(function (e) {\r\n            out += ' ' + tXml.toContentString(e);\r\n            out = out.trim();\r\n        });\r\n        return out;\r\n    } else if (typeof tDom === 'object') {\r\n        return tXml.toContentString(tDom.children)\r\n    } else {\r\n        return ' ' + tDom;\r\n    }\r\n};\r\n\r\ntXml.getElementById = function (S, id, simplified) {\r\n    var out = tXml(S, {\r\n        attrValue: id,\r\n        simplify: simplified\r\n    });\r\n    return simplified ? out : out[0];\r\n};\r\n/**\r\n * A fast parsing method, that not realy finds by classname,\r\n * more: the class attribute contains XXX\r\n * @param\r\n */\r\ntXml.getElementsByClassName = function (S, classname, simplified) {\r\n    return tXml(S, {\r\n        attrName: 'class',\r\n        attrValue: '[a-zA-Z0-9\\-\\s ]*' + classname + '[a-zA-Z0-9\\-\\s ]*',\r\n        simplify: simplified\r\n    });\r\n};\r\n\r\nif ('object' === typeof module) {\r\n    module.exports = tXml;\r\n}\r\n\r\n//console.clear();\r\n//console.log('here:',tXml.getElementById('<some><xml id=\"test\">dada</xml><that id=\"test\">value</that></some>','test'));\r\n//console.log('here:',tXml.getElementsByClassName('<some><xml id=\"test\" class=\"sdf test jsalf\">dada</xml><that id=\"test\">value</that></some>','test'));\r\n\r\n/*\r\nconsole.clear();\r\ntXml(d,'content');\r\n //some testCode\r\nvar s = document.body.innerHTML.toLowerCase();\r\nvar start = new Date().getTime();\r\nvar o = tXml(s,'content');\r\nvar end = new Date().getTime();\r\n//console.log(JSON.stringify(o,undefined,'\\t'));\r\nconsole.log(\"MILLISECONDS\",end-start);\r\nvar nodeCount=document.querySelectorAll('*').length;\r\nconsole.log('node count',nodeCount);\r\nconsole.log(\"speed:\",(1000/(end-start))*nodeCount,'Nodes / second')\r\n//console.log(JSON.stringify(tXml('<html><head><title>testPage</title></head><body><h1>TestPage</h1><p>this is a <b>test</b>page</p></body></html>'),undefined,'\\t'));\r\nvar p = new DOMParser();\r\nvar s2='<body>'+s+'</body>'\r\nvar start2= new Date().getTime();\r\nvar o2 = p.parseFromString(s2,'text/html').querySelector('#content')\r\nvar end2=new Date().getTime();\r\nconsole.log(\"MILLISECONDS\",end2-start2);\r\n// */\r\n\r\n\r\n(function () {\r\n\r\n    var simplify = function simplify(children, attributes) {\r\n        var out = {};\r\n        if ((!children || !children.length) && !attributes) {\r\n            return '';\r\n        }\r\n        children = children || [];\r\n\r\n        if (children.length === 1 && typeof children[0] == 'string') {\r\n            return children[0];\r\n        }\r\n        // map each object\r\n        children.forEach(function (child) {\r\n            if (typeof child !== 'object') {\r\n                return;\r\n            }\r\n            var prefixIdx = child.tagName.indexOf('ows:');\r\n            var tagName = prefixIdx < 0 ? child.tagName : child.tagName.substr(prefixIdx + 4);\r\n            if (!out[tagName])\r\n                out[tagName] = [];\r\n            var kids = simplify(child.children, child.attributes);\r\n            out[tagName].push(kids);\r\n            if (child.attributes) {\r\n                for (var key in child.attributes) {\r\n                    kids[key] = child.attributes[key];\r\n                }\r\n            }\r\n        });\r\n\r\n        for (var i in out) {\r\n            if (out[i].length == 1) {\r\n                out[i] = out[i][0];\r\n            }\r\n        }\r\n\r\n        return out;\r\n    };\r\n\r\n    var flattenOnlineResource = function (olr) {\r\n        return olr['href'];\r\n    };\r\n\r\n    var flattenLayerUrls = function (layer, tag) {\r\n        if (layer.hasOwnProperty(tag)) {\r\n            var tagObj = layer[tag];\r\n            var urls = tagObj.length ? tagObj : [tagObj];\r\n            for (var i = 0, len = urls.length; i < len; i++) {\r\n                var url = urls[i];\r\n                url.OnlineResource = flattenOnlineResource(url.OnlineResource);\r\n            }\r\n            layer[tag] = urls;\r\n        }\r\n    };\r\n\r\n    var processDCPType = function (node) {\r\n        if (node) {\r\n            var dcpts = node.DCPType.length ? node.DCPType : [node.DCPType];\r\n            for (var i = 0, len = dcpts.length; i < len; i++) {\r\n                var dcpt = dcpts[i];\r\n                for (var protocol in dcpt) {\r\n                    var dcptp = dcpt[protocol];\r\n                    for (var verb in dcptp) {\r\n                        var dcptpv = dcptp[verb];\r\n                        dcptpv.OnlineResource = flattenOnlineResource(dcptpv.OnlineResource);\r\n                    }\r\n                }\r\n            }\r\n            node.DCPType = dcpts;\r\n        }\r\n    };\r\n\r\n    var booleanValues = [false, true];\r\n    var processWMSLayer = function processWMSLayer(layer, crsList) {\r\n        // Transformamos booleanos\r\n        if (layer.hasOwnProperty('queryable')) {\r\n            layer.queryable = booleanValues[layer.queryable];\r\n        }\r\n        var bbox;\r\n        // Convertimos EX_GeographicBoundingBox a array\r\n        if (layer.hasOwnProperty('EX_GeographicBoundingBox')) {\r\n            bbox = layer.EX_GeographicBoundingBox;\r\n            layer.EX_GeographicBoundingBox = [\r\n                parseFloat(bbox.westBoundLongitude),\r\n                parseFloat(bbox.southBoundLatitude),\r\n                parseFloat(bbox.eastBoundLongitude),\r\n                parseFloat(bbox.northBoundLatitude)\r\n            ]\r\n        }\r\n        // Convertimos BoundingBox a array\r\n        if (layer.hasOwnProperty('BoundingBox')) {\r\n            bbox = layer.BoundingBox;\r\n            bbox = layer.BoundingBox.length ? layer.BoundingBox : [layer.BoundingBox];\r\n            layer.BoundingBox = bbox.map(function (elm) {\r\n                return {\r\n                    crs: elm.CRS || elm.SRS,\r\n                    extent: [\r\n                        parseFloat(elm.minx),\r\n                        parseFloat(elm.miny),\r\n                        parseFloat(elm.maxx),\r\n                        parseFloat(elm.maxy)\r\n                    ],\r\n                    res: new Array(2)\r\n                }\r\n            });\r\n        }\r\n        // Convertimos OnlineResource a string\r\n        if (layer.hasOwnProperty('Attribution') && layer.Attribution.OnlineResource) {\r\n            layer.Attribution.OnlineResource = flattenOnlineResource(layer.Attribution.OnlineResource);\r\n        }\r\n        flattenLayerUrls(layer, 'AuthorityURL');\r\n        flattenLayerUrls(layer, 'MetadataURL');\r\n        // Convertimos Style a array\r\n        if (layer.Style) {\r\n            if (!layer.Style.length) {\r\n                layer.Style = [layer.Style];\r\n            }\r\n            // Convertimos OnlineResource a string\r\n            for (var i = 0, len = layer.Style.length; i < len; i++) {\r\n                flattenLayerUrls(layer.Style[i], 'LegendURL');\r\n            }\r\n        }\r\n        // Hacemos heredar la lista de CRS\r\n        var newCrsList = typeof layer.CRS === 'string' ? [layer.CRS] : layer.CRS;\r\n        if (crsList) {\r\n            if (layer.CRS) {\r\n                layer.CRS = newCrsList.concat(crsList);\r\n            }\r\n        }\r\n        if (layer.Layer) {\r\n            var children = layer.Layer[1] ? layer.Layer : [layer.Layer];\r\n            layer.Layer = children;\r\n            for (var i = 0, len = children.length; i < len; i++) {\r\n                processWMSLayer(children[i], newCrsList);\r\n            }\r\n        }\r\n    };\r\n\r\n    var cornerSeparator = ' ';\r\n    var parseCorner = function (cornerString) {\r\n        return cornerString.split(cornerSeparator).map(function (elm) {\r\n            return parseFloat(elm);\r\n        });\r\n    };\r\n\r\n    var processWMTSLayers = function (contents) {\r\n        if (!contents.Layer.length) {\r\n            contents.Layer = [contents.Layer];\r\n        }\r\n        var layers = contents.Layer;\r\n        for (var i = 0, len = layers.length; i < len; i++) {\r\n            var layer = layers[i];\r\n            if (typeof layer.Format === 'string') {\r\n                layer.Format = [layer.Format];\r\n            }\r\n            if (layer.ResourceURL && !layer.ResourceURL.length) {\r\n                layer.ResourceURL = [layer.ResourceURL];\r\n            }\r\n            if (layer.Style && !Array.isArray(layer.Style)) {\r\n                layer.Style = [layer.Style];\r\n            }\r\n            if (!layer.TileMatrixSetLink.length) {\r\n                layer.TileMatrixSetLink = [layer.TileMatrixSetLink];\r\n            }\r\n            for (var j = 0, lenj = layer.TileMatrixSetLink.length; j < lenj; j++) {\r\n                var tmsl = layer.TileMatrixSetLink[j];\r\n                if (tmsl.TileMatrixSetLimits) {\r\n                    tmsl.TileMatrixSetLimits = tmsl.TileMatrixSetLimits.TileMatrixLimits;\r\n                    for (var k = 0, lenk = tmsl.TileMatrixSetLimits.length; k < lenk; k++) {\r\n                        var tmslm = tmsl.TileMatrixSetLimits[k];\r\n                        tmslm.MaxTileCol = parseInt(tmslm.MaxTileCol);\r\n                        tmslm.MaxTileRow = parseInt(tmslm.MaxTileRow);\r\n                        tmslm.MinTileCol = parseInt(tmslm.MinTileCol);\r\n                        tmslm.MinTileRow = parseInt(tmslm.MinTileRow);\r\n                    }\r\n                }\r\n                else {\r\n                    tmsl.TileMatrixSetLimits = [];\r\n                }\r\n            }\r\n            if (layer.WGS84BoundingBox) {\r\n                var lowerCorner = parseCorner(layer.WGS84BoundingBox.LowerCorner);\r\n                var upperCorner = parseCorner(layer.WGS84BoundingBox.UpperCorner);\r\n                layer.WGS84BoundingBox = [\r\n                    lowerCorner[0],\r\n                    lowerCorner[1],\r\n                    upperCorner[0],\r\n                    upperCorner[1]\r\n                ];\r\n            }\r\n        }\r\n    };\r\n\r\n    var processTMS = function (contents) {\r\n        if (!contents.TileMatrixSet.length) {\r\n            contents.TileMatrixSet = [contents.TileMatrixSet];\r\n        }\r\n        var tileMatrixSets = contents.TileMatrixSet;\r\n        for (var i = 0, len = tileMatrixSets.length; i < len; i++) {\r\n            var tms = tileMatrixSets[i];\r\n            tms.SupportedCRS = tms.SupportedCRS.trim();\r\n            for (var j = 0, lenj = tms.TileMatrix.length; j < lenj; j++) {\r\n                var tm = tms.TileMatrix[j];\r\n                tm.MatrixHeight = parseInt(tm.MatrixHeight);\r\n                tm.MatrixWidth = parseInt(tm.MatrixWidth);\r\n                tm.TileHeight = parseInt(tm.TileHeight);\r\n                tm.TileWidth = parseInt(tm.TileWidth);\r\n                tm.ScaleDenominator = parseFloat(tm.ScaleDenominator);\r\n                tm.TopLeftCorner = parseCorner(tm.TopLeftCorner);\r\n            }\r\n        }\r\n    };\r\n\r\n    var processDCPVerb = function (dcpVerb) {\r\n        var verbs = dcpVerb.length ? dcpVerb : [dcpVerb];\r\n        var result = new Array(verbs.length);\r\n        for (var i = 0, len = verbs.length; i < len; i++) {\r\n            var verb = verbs[i];\r\n            if (!verb.Constraint.length) {\r\n                verb.Constraint = [verb.Constraint];\r\n                for (var j = 0, lenj = verb.Constraint.length; j < lenj; j++) {\r\n                    var allowedValues = verb.Constraint[j].AllowedValues;\r\n                    if (typeof allowedValues.Value === 'string') {\r\n                        allowedValues.Value = [allowedValues.Value];\r\n                    }\r\n                }\r\n            }\r\n            result[i] = {\r\n                Constraint: verb.Constraint,\r\n                href: verb['href']\r\n            };\r\n        }\r\n        return result;\r\n    };\r\n\r\n    var processOM = function (om) {\r\n        var operations = om.Operation.length ? om.Operation : [om.Operation];\r\n        for (var i = 0, len = operations.length; i < len; i++) {\r\n            var operation = operations[i];\r\n            for (var protocol in operation.DCP) {\r\n                var protocolProp = operation.DCP[protocol];\r\n                for (var verb in protocolProp) {\r\n                    protocolProp[verb] = processDCPVerb(protocolProp[verb]);\r\n                }\r\n            }\r\n            om[operation.name] = {\r\n                DCP: operation.DCP\r\n            }\r\n        }\r\n        delete om.Operation;\r\n    };\r\n\r\n    var wfsParser = function () {\r\n        var keys = [\"name\", \"Name\"],\r\n            parameters = [\"Parameter\", \"Constraint\"],\r\n            a2o = function (a) {\r\n                return a.reduce(function (result, item, index) {\r\n                    if (keys.some((k) => { return item.hasOwnProperty(k); })) {\r\n                        var key = keys.find((k) => { return item.hasOwnProperty(k); });\r\n                        var objName = (item[key].substring(item[key].indexOf(\":\") + 1));\r\n                        delete item[key];\r\n                        result[objName] = item.hasOwnProperty(\"AllowedValues\") && item.AllowedValues.Value || item\r\n                        return result;\r\n                    }\r\n                    else {\r\n                        return (index === 0 ? [] : result).concat(item);\r\n                    }\r\n                }, {});\r\n            },\r\n            pp = function (p) {\r\n                var o = {};\r\n                if (p instanceof Array) {\r\n                    o = a2o(p);\r\n                }\r\n                else\r\n                    o = p.hasOwnProperty(\"AllowedValues\") && p.AllowedValues.Value && keys.find((k) => { return p.hasOwnProperty(k) }) && (o[p[keys.find((k) => { return p.hasOwnProperty(k) })]] = p.AllowedValues.Value) && o || p\r\n                return o;\r\n\r\n            },\r\n            e = {\r\n                V1_0_0: \"1.0.0\",\r\n                V1_1_0: \"1.1.0\",\r\n                V2_0_0: \"2.0.0\"\r\n            },\r\n            r = function () {\r\n                var r, n = [],\r\n                    u = [],\r\n                    p = [],\r\n                    capabilites = arguments[0];\r\n                switch (capabilites.version) {\r\n                    case e.V1_0_0:\r\n                        r = e.V1_0_0;\r\n                        break;\r\n                    case e.V1_1_0:\r\n                        r = e.V1_1_0;\r\n                        break;\r\n                    case e.V2_0_0:\r\n                        r = e.V2_0_0\r\n                }\r\n                n = t(capabilites, r), u = a(capabilites, r), p = i(capabilites, r);\r\n                var o = s(capabilites, r),\r\n                    l = {\r\n                        Operations: n,\r\n                        FeatureTypes: u,\r\n                        Filters: p\r\n                    };\r\n                return Object.assign(l, o), l\r\n            },\r\n            t = function (r, t) {\r\n                switch (t) {\r\n                    case e.V1_0_0:\r\n                        var a = r.Capability.Request;\r\n                        if (a.GetFeature) {\r\n                            var i = [];\r\n                            for (var s in a.GetFeature.ResultFormat) i.push(s.toLowerCase());\r\n                            a.GetFeature.outputFormat = i, delete a.GetFeature.ResultFormat, a.GetFeature.Operations = r.FeatureTypeList.Operations\r\n                        }\r\n                        return a;\r\n                    case e.V1_1_0:\r\n                        return {};\r\n                    case e.V2_0_0:\r\n                        var n = {};\r\n                        for (var s in r.OperationsMetadata) {\r\n                            var u = {};\r\n                            if (!(r.OperationsMetadata[s] instanceof Array)) continue;\r\n                            u[s] = a2o(r.OperationsMetadata[s]);\r\n                            for (var p in u[s]) {\r\n                                u[s][p] = ((o) => {\r\n                                    var r = {};\r\n                                    if (o instanceof Array)\r\n                                        return a2o(o);\r\n                                    for (k in o) {\r\n                                        if (parameters.find((i) => { return k === i })) {\r\n                                            r = Object.assign(r, pp(o[parameters.find((i) => { return k === i })]));\r\n                                        }\r\n                                        else\r\n                                            r[k] = o[k];\r\n                                    } return r;\r\n                                })(u[s][p]);\r\n                            }\r\n                            n = Object.assign(n, u[s]);\r\n                        }\r\n                        return n\r\n                }\r\n                return null\r\n            },\r\n            a = function (r, t) {\r\n                switch (t) {\r\n                    case e.V1_0_0:\r\n                        r.FeatureTypeList.FeatureType = (r.FeatureTypeList.FeatureType instanceof Array) ? r.FeatureTypeList.FeatureType : [r.FeatureTypeList.FeatureType];\r\n                        for (var a = {}, i = 0; i < r.FeatureTypeList.FeatureType.length; i++) {\r\n                            var s = r.FeatureTypeList.FeatureType[i].Name;\r\n                            a[s.substring(s.indexOf(\":\") + 1)] = r.FeatureTypeList.FeatureType[i]\r\n                        }\r\n                        return a;\r\n                    case e.V1_1_0:\r\n                        return {};\r\n                    case e.V2_0_0:\r\n                        r.FeatureTypeList.FeatureType = (r.FeatureTypeList.FeatureType instanceof Array) ? r.FeatureTypeList.FeatureType : [r.FeatureTypeList.FeatureType];\r\n                        for (var a = {}, i = 0; i < r.FeatureTypeList.FeatureType.length; i++) {\r\n                            var s = r.FeatureTypeList.FeatureType[i].Name;\r\n                            a[s.substring(s.indexOf(\":\") + 1)] = r.FeatureTypeList.FeatureType[i]\r\n                        }\r\n                        return a\r\n                }\r\n                return null\r\n            },\r\n            i = function (r, t) {\r\n                switch (t) {\r\n                    case e.V1_0_0:\r\n                        return r.Filter_Capabilities;\r\n                    case e.V1_1_0:\r\n                        return {};\r\n                    case e.V2_0_0:\r\n                        var a = r.Filter_Capabilities;\r\n                        return a\r\n                }\r\n                return null\r\n            },\r\n            s = function (r, t) {\r\n                switch (t) {\r\n                    case e.V1_0_0:\r\n                        var a = {};\r\n                        for (var i in r) \"string\" == typeof r[i] && (a[i] = r[i]);\r\n                        return a;\r\n                    case e.V1_1_0:\r\n                        return {};\r\n                    case e.V2_0_0:\r\n                        var a = {};\r\n                        for (var i in r) \"string\" == typeof r[i] && (a[i] = r[i]);\r\n                        return a\r\n                }\r\n                return {}\r\n            },\r\n            n = function (e) {\r\n                var e = e,\r\n                    t = e.substring(e.indexOf(\"://\") < 0 ? 0 : e.indexOf(\"://\") + 3);\r\n                if (TC.capabilities[t]) return Promise.resolve(TC.capabilities[t]);\r\n                var a = {};\r\n                return a.SERVICE = \"WFS\", a.VERSION = \"2.0.0\", a.REQUEST = \"GetCapabilities\", new Promise(function (x, y) {\r\n                    TC.ajax({\r\n                        url: TC.proxify(e) + \"?\" + TC.Util.getParamString(a),\r\n                        method: \"GET\"\r\n                    }).then(function (response) {\r\n                        var e = WFSCapabilities.Parse(response.data),\r\n                            a = e.Operations.GetCapabilities.DCP && e.Operations.GetCapabilities.DCP.HTTP.Get[\"xlink:href\"] || e.Operations.GetCapabilities.DCPType[0].HTTP.Get.onlineResource;\r\n                        TC.capabilities[a] = e, TC.capabilities[t] = e, x(WFSCapabilities.Parse(response.data))\r\n                    })\r\n                })\r\n            };\r\n        return {\r\n            Promises: n,\r\n            Parse: r\r\n        }\r\n    }();\r\n\r\n\r\n    var processFeatureTypesWFS = function (capabilities) {\r\n        capabilities[\"FeatureTypes\"] = arrayToObject(capabilities.FeatureTypeList.FeatureType, \"Name\");\r\n        delete capabilities.FeatureTypeList;\r\n    };\r\n\r\n    var processOperationsWFS = function (capabilities) {\r\n        capabilities[\"Operations\"] = arrayToObject(capabilities.OperationsMetadata.Operation, \"name\");\r\n        delete capabilities.OperationsMetadata;\r\n    };\r\n\r\n    var processFiltersWFS = function (capabilities) {\r\n        const _keyName = \"name\";\r\n        const fncRecursiva = function (obj, objDestino) {\r\n            if (!isPlainObject(obj)) {\r\n                for (var key in obj) {\r\n                    var chdObj = obj[key];\r\n                    if (chdObj instanceof Array) {\r\n                        objDestino[key] = Object.assign(objDestino[key] || {}, arrayToObject(chdObj, _keyName));\r\n                    }\r\n                    else\r\n                        fncRecursiva(chdObj, objDestino);\r\n                }\r\n            }\r\n            else {\r\n                if (obj.hasOwnProperty(_keyName)) {\r\n                    delete obj[_keyName];\r\n                    objDestino[_keyName] = obj;\r\n                }\r\n                else\r\n                    objDestino = obj;\r\n            }\r\n\r\n        }\r\n        capabilities[\"Filters\"] = {};\r\n        for (var key in capabilities.Filter_Capabilities) {\r\n            capabilities[\"Filters\"][key] = {};\r\n            fncRecursiva(capabilities.Filter_Capabilities[key], capabilities[\"Filters\"][key]);\r\n        }\r\n        delete capabilities.Filter_Capabilities;\r\n    };\r\n\r\n    var postprocessWMS = function (xml) {\r\n        var capabilities = xml['WMS_Capabilities'] || (xml['?xml'] && (xml['?xml']['WMS_Capabilities'] || xml['?xml']['WMT_MS_Capabilities']));\r\n        if (capabilities) {\r\n            processWMSLayer(capabilities.Capability.Layer);\r\n            var request = capabilities.Capability.Request;\r\n            processDCPType(request.GetMap);\r\n            if (request.GetFeatureInfo) {\r\n                request.GetFeatureInfo.Format = typeof request.GetFeatureInfo.Format === 'string' ? [request.GetFeatureInfo.Format] : request.GetFeatureInfo.Format;\r\n            }\r\n        }\r\n        return capabilities;\r\n    };\r\n\r\n    var postprocessWMTS = function (xml) {\r\n        var capabilities = xml['?xml'] && xml['?xml']['Capabilities'];\r\n        if (capabilities) {\r\n            processWMTSLayers(capabilities.Contents);\r\n            processTMS(capabilities.Contents);\r\n            processOM(capabilities.OperationsMetadata);\r\n        }\r\n        return capabilities;\r\n    };\r\n    var postprocessWFS = function (xml) {\r\n        var capabilities = xml['WFS_Capabilities'] || (xml['?xml'] && (xml['?xml']['WFS_Capabilities']));\r\n        if (capabilities) {\r\n            capabilities = wfsParser.Parse(capabilities);\r\n            //añadir prefijo a los atributos simples y pue empiecen por http\r\n            for (var attr in capabilities) {\r\n                if (typeof (capabilities[attr]) === \"string\" && capabilities[attr].indexOf(\"http\") === 0) {\r\n                    capabilities[\"xmlns:\" + attr] = capabilities[attr];\r\n                    delete capabilities[attr];\r\n                }\r\n            }\r\n            delete capabilities.updateSequence;\r\n        }\r\n        return capabilities;\r\n    };\r\n\r\n    onmessage = function (e) {\r\n\r\n        //if (e.data.url)\r\n        //    this.importScripts(e.data.url + 'TC/workers/tXml.js');\r\n        //else\r\n        //    this.importScripts('tXml.js');\r\n        var xml = simplify(tXml(e.data.text));\r\n        var capabilities;\r\n        switch (e.data.type) {\r\n            case \"WMS\":\r\n                capabilities = postprocessWMS(xml);\r\n                break;\r\n            case \"WMTS\":\r\n                capabilities = postprocessWMTS(xml);\r\n                break;\r\n            case \"WFS\":\r\n                capabilities = postprocessWFS(xml);\r\n                break;\r\n        }\r\n        postMessage({\r\n            state: capabilities ? 'success' : 'error',\r\n            capabilities: capabilities\r\n        });\r\n    };\r\n\r\n})();\r\n"]}