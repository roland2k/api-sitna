{"version":3,"sources":["Util.ExcelExport.js"],"names":["TC","Util","ExcelExport","this","stringifyField","data","delimier","quoteText","replace","indexOf","stringify","responseData","options","characters","fromCharCode","String","INVALID_CHARACTER_ERR","document","createElement","error","window","btoa","string","a","b","b2","b3","b4","c","i","len","length","max","Math","result","charCodeAt","charAt","atob","chars","push","join","arrData","Array","isArray","isFunction","object2Table","obj","str","_str","Object","cls","cellFormat","value","class","startsWith","unescape","encodeURIComponent","item","ds","num","Number","trim","isNaN","test","toString","dataString","j","hasOwnProperty","language","navigator","substring","toLocaleString","ex","rowspan","colspan","template","ctx","worksheet","workSheet","table","caption","title","m","p","prototype","Save","filename","rows","csvFile","txtDelim","fieldSep","blob","Blob","type","msSaveBlob","link","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild"],"mappings":"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","sourcesContent":["TC.Util.ExcelExport = function () {\r\n\r\n    var EOL = '\\r\\n';\r\n    var BOM = \"\\ufeff\";\r\n\r\n    /**\r\n     * Stringify one field\r\n     * @param data\r\n     * @param delimier\r\n     * @returns {*}\r\n     */\r\n    this.stringifyField = function (data, delimier, quoteText) {\r\n        if (typeof data === 'string') {\r\n            data = data.replace(/\"/g, '\"\"'); // Escape double qoutes\r\n            if (quoteText || data.indexOf(',') > -1 || data.indexOf('\\n') > -1 || data.indexOf('\\r') > -1) data = delimier + data + delimier;\r\n            return data;\r\n        }\r\n\r\n        if (typeof data === 'boolean') {\r\n            return data ? 'TRUE' : 'FALSE';\r\n        }\r\n\r\n        return data;\r\n    };\r\n\r\n    /**\r\n     * Creates a csv from a data array\r\n     * @param data\r\n     * @param options\r\n     *  * header - Provide the first row (optional)\r\n     *  * fieldSep - Field separator, default: ',',\r\n     *  * addByteOrderMarker - Add Byte order mark, default(false)\r\n     * @param callback\r\n     */\r\n    this.stringify = function (responseData, options) {\r\n\r\n        var that = this;\r\n        var csv = \"\";\r\n        var csvContent = \"\";\r\n\r\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n        var fromCharCode = String.fromCharCode;\r\n        var INVALID_CHARACTER_ERR = (function () {\r\n            // fabricate a suitable error object\r\n            try {\r\n                document.createElement('$');\r\n            } catch (error) {\r\n                return error;\r\n            }\r\n        }());\r\n\r\n        // encoder\r\n        window.btoa || (window.btoa = function (string) {\r\n            var a, b, b1, b2, b3, b4, c, i = 0, len = string.length, max = Math.max, result = '';\r\n\r\n            while (i < len) {\r\n                a = string.charCodeAt(i++) || 0;\r\n                b = string.charCodeAt(i++) || 0;\r\n                c = string.charCodeAt(i++) || 0;\r\n\r\n                if (max(a, b, c) > 0xFF) {\r\n                    throw INVALID_CHARACTER_ERR;\r\n                }\r\n\r\n                b1 = (a >> 2) & 0x3F;\r\n                b2 = ((a & 0x3) << 4) | ((b >> 4) & 0xF);\r\n                b3 = ((b & 0xF) << 2) | ((c >> 6) & 0x3);\r\n                b4 = c & 0x3F;\r\n\r\n                if (!b) {\r\n                    b3 = b4 = 64;\r\n                } else if (!c) {\r\n                    b4 = 64;\r\n                }\r\n                result += characters.charAt(b1) + characters.charAt(b2) + characters.charAt(b3) + characters.charAt(b4);\r\n            }\r\n            return result;\r\n        });\r\n\r\n        // decoder\r\n        window.atob || (window.atob = function (string) {\r\n            string = string.replace(/=+$/, '');\r\n            var a, b, b1, b2, b3, b4, c, i = 0, len = string.length, chars = [];\r\n\r\n            if (len % 4 === 1)\r\n                throw INVALID_CHARACTER_ERR;\r\n\r\n            while (i < len) {\r\n                b1 = characters.indexOf(string.charAt(i++));\r\n                b2 = characters.indexOf(string.charAt(i++));\r\n                b3 = characters.indexOf(string.charAt(i++));\r\n                b4 = characters.indexOf(string.charAt(i++));\r\n\r\n                a = ((b1 & 0x3F) << 2) | ((b2 >> 4) & 0x3);\r\n                b = ((b2 & 0xF) << 4) | ((b3 >> 2) & 0xF);\r\n                c = ((b3 & 0x3) << 6) | (b4 & 0x3F);\r\n\r\n                chars.push(fromCharCode(a));\r\n                b && chars.push(fromCharCode(b));\r\n                c && chars.push(fromCharCode(c));\r\n            }\r\n            return chars.join('');\r\n        });\r\n\r\n        var arrData = [];\r\n\r\n        if (Array.isArray(responseData)) {\r\n            arrData = responseData;\r\n        }\r\n        else if (TC.Util.isFunction(responseData)) {\r\n            arrData = responseData();\r\n        }\r\n        const object2Table = function (obj, str) {\r\n            var _str = str || '';\r\n            if (obj instanceof Array) {\r\n                _str += \"<table><tbody>\";\r\n                for (var i = 0; i < obj.length; i++)\r\n                    _str += (\"<tr><td>\" + object2Table(obj[i], str) + \"</td></tr>\");\r\n                _str += \"</tbody></table>\";\r\n            }\r\n            else if (obj instanceof Object) {\r\n                _str += \"<table><tbody>\";\r\n                for (var i in obj) {\r\n                    _str += (\"<tr><th>\" + i + \"</th>\");\r\n                    if (obj[i] instanceof Object)\r\n                        _str += (\"<td>\" + object2Table(obj[i], str) + \"</td></tr>\");\r\n                    else {\r\n                        var cls = cellFormat(obj[i]);\r\n                        obj[i] = cls.value;\r\n                        _str += ('<td class=\"' + cls.class + '\">');\r\n                        switch (true) {\r\n                            case typeof (obj[i]) === \"string\" && obj[i].startsWith(\"http\"):\r\n                                _str += '<a href=\"' + unescape(encodeURIComponent(obj[i])) + '\">' + \"Abrir\" + '</a>';\r\n                                break;\r\n                            default:\r\n                                _str += obj[i];\r\n                                break\r\n                        }\r\n                        _str += (\"</td></tr>\");\r\n                    }\r\n                }\r\n                _str += \"</tbody></table>\";\r\n            } else {\r\n                _str += obj;\r\n            }\r\n            return _str;\r\n        }\r\n\r\n        const cellFormat = function (item) {\r\n            var cls;\r\n            if (item !== null && (typeof item === \"string\" || typeof item === \"number\")) {\r\n                if (item.value) {\r\n                    item = item.value;\r\n                }\r\n                if ((\"\" + item).indexOf(\"%\") != -1) {\r\n                    item = item.replace(\" %\", \"%\").replace(/\\.|,/g, ds);\r\n                    cls = \"percent\";\r\n                } else {\r\n                    var num = 0;\r\n                    if (item) {\r\n                        num = typeof item === \"number\" ? item : (new Number(item.replace ? (item.replace(/\\,/g, \"\").replace(/./g, \".\")).trim() : item.trim()));\r\n                    }\r\n                    if (!isNaN(num)) {\r\n                        item = num.toString().replace(\".\", ds);\r\n                        if (num % 1 > 0) {\r\n                            cls = \"number2d\";\r\n                        } else {\r\n                            cls = \"number\";\r\n                        }\r\n                    } else {\r\n                        if (/^\\d{1,2}([.\\/-])\\d{1,2}\\1(\\d{4}|\\d{2})$/.test(item) || /^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])[ ,T]{1}(2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9][Z]{0,1}$/.test(item)) {\r\n                            cls = \"date\";\r\n                        } else {\r\n                            cls = \"string\";\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (cls instanceof Object) {\r\n                cls = \"\";\r\n            }\r\n            else {\r\n                cls = \"string\";\r\n            }\r\n            return { \"class\": cls, \"value\": item };\r\n        }\r\n\r\n        var dataString = '<thead valign=\"top\">';\r\n        for (var i = 0; i < 1; i++) {\r\n            dataString += '<tr>';\r\n            for (var j in arrData[i]) {\r\n                if (arrData[i].hasOwnProperty(j)) {\r\n                    dataString += '<th>' + arrData[i][j] + '</th>';\r\n                }\r\n            }\r\n\r\n            dataString += '</tr>';\r\n        }\r\n        dataString += '</thead>';\r\n\r\n        dataString += '<tbody>';\r\n\r\n        //detectamos separador de miles y de coma en función de la confugración regional de la máquina\r\n        let language = navigator.language.substring(0, 5);\r\n        var ds, ms;\r\n        try {\r\n            ds = (1.1).toLocaleString(language).substring(1, 2);\r\n            ms = (1000).toLocaleString(language).substring(1, 2);\r\n        }\r\n        catch (ex) {\r\n            ds = (1.1).toLocaleString(\"es-ES\").substring(1, 2);\r\n            ms = (1000).toLocaleString(\"es-ES\").substring(1, 2);\r\n        }\r\n\r\n        for (var i = 1; i < arrData.length; i++) {\r\n            dataString += '<tr>';\r\n            for (var j = 0; j < arrData[i].length; j++) {\r\n                if (arrData[i].hasOwnProperty(j)) {\r\n                    var item = arrData[i][j];\r\n                    // Calculo de formato para Excel\r\n                    const cls = cellFormat(item);\r\n                    item = cls.value;\r\n                    if (item instanceof Object) {\r\n                        dataString += ('<td>' + object2Table(item) + '</td>');\r\n                    }\r\n                    else {\r\n                        dataString += '<td class=\"' + cls.class + '\"';\r\n                        if (item && (item.hasOwnProperty('rowspan') || item.hasOwnProperty('colspan'))) {\r\n                            if (item.hasOwnProperty('rowspan')) {\r\n                                dataString += ' valign=\"top\" rowspan=\"' + item.rowspan + '\">' + item.value + '</td>';\r\n                            } if (item.hasOwnProperty('colspan')) {\r\n                                dataString += ' colspan=\"' + item.colspan + '\">' + item.value + '</td>';\r\n                            }\r\n                            j++;\r\n                        }\r\n                        else {\r\n                            dataString += '>' + (item == null ? '' : item) + '</td>';\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            dataString += '</tr>';\r\n        }\r\n        dataString += '</tbody>';\r\n\r\n        var template = '<html xmlns:o=\"urn:schemas-microsoft-com:office:office\" xmlns:x=\"urn:schemas-microsoft-com:office:excel\" xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"><meta name=ProgId content=Excel.Sheet><meta name=Generator content=\"Microsoft Excel 9\"><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>{worksheet}</x:Name><x:WorksheetOptions><x:DisplayGridlines/></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--><style>';\r\n        if (ds === ',')\r\n            template += '<!--table{mso-displayed-decimal-separator:\"\\,\"; mso-displayed-thousand-separator:\"\\.\";}'\r\n        else\r\n            template += '<!--table{mso-displayed-decimal-separator:\"\\.\"; mso-displayed-thousand-separator:\"\\,\";}'\r\n        template += 'body {visibility:hidden;}';\r\n        template += '.number{mso-number-format:\"\\#\\,\\#\\#0\";} .number2d{mso-number-format:\"\\#\\,\\#\\#0\\.00\";} .percent{mso-number-format:0.00%;} ';\r\n        template += '.date{mso-number-format:\"dd\\/mm\\/yyyy\";} .string{mso-number-format:\"\\@\";} caption{text-align:left;}--></style></head><body><table><caption>{caption}</caption>{table}</table></body></html>';\r\n        var format = function (s, c) { return s.replace(/{(\\w+)}/g, function (m, p) { return c[p]; }) };\r\n        var ctx = { worksheet: options.workSheet || 'Hoja1', table: dataString, caption: options.title || \"\" };\r\n        csv = format(template, ctx);\r\n        return csv;\r\n    };\r\n\r\n};\r\nTC.Util.ExcelExport.prototype.Save = function (filename, rows, title) {\r\n    \r\n    var exporter = this;\r\n    csvFile = exporter.stringify(rows, { txtDelim: \"\\\"\", fieldSep: \";\", title: title || \"\" });\r\n\r\n    var blob = new Blob([csvFile], { type: 'text/csv;charset=utf-8;' });\r\n    if (navigator.msSaveBlob) { // IE 10+\r\n        navigator.msSaveBlob(blob, filename);\r\n    } else {\r\n        var link = document.createElement(\"a\");\r\n        if (link.download !== undefined) { // feature detection\r\n            // Browsers that support HTML5 download attribute\r\n            var url = URL.createObjectURL(blob);\r\n            link.setAttribute(\"href\", url);\r\n            link.setAttribute(\"download\", filename);\r\n            link.style.visibility = 'hidden';\r\n            document.body.appendChild(link);\r\n            link.click();\r\n            document.body.removeChild(link);\r\n        }\r\n    }\r\n\r\n};\r\n"]}