{"version":3,"sources":["Control.js"],"names":["TC","control","parent","this","value","Object","defineProperty","get","_dustLoaded","syncLoadJS","apiLocation","dust","set","newValue","Control","self","EventTarget","call","map","isActive","isDisabled","len","arguments","length","options","Util","extend","id","getUID","CLASS","substr","prototype","div","getDiv","_jQueryIsLoaded","_$div","$","classList","add","template","exportsState","inherit","ctlProto","show","style","display","hide","render","callback","_set1stRenderPromise","renderData","addUIEventListeners","promise","_firstRender","processTemplates","ctl","Promise","resolve","reject","templates","mustCompile","hbsTemplates","dustTemplates","hbsTemplateKeys","key","endsWith","push","_isHbs","forEach","i18n","_done","locale","setLanguages","templatePromises","templateName","res","rej","ajax","url","method","responseType","then","response","loadSource","compile","data","cache","_hbs","catch","err","console","log","isFunction","all","t","registerPartial","loadJSInOrder","templatingFull","templatingRuntime","trigger","Consts","event","BEFORECONTROLRENDER","dataObject","toggle","classes","DISABLED","compiler","getRenderedHtml","html","innerHTML","CONTROLRENDER","templateId","endFn","out","error","Error","register","active","activate","activeControl","previousActiveControl","deactivate","CONTROLACTIVATE","stopChain","nextControl","getDefaultControl","CONTROLDEACTIVATE","enable","remove","disable","renderPromise","one","addUIEventListener","selector","listener","querySelectorAll","elm","addEventListener","isExclusive","getLocaleString","texts","Cfg","exportState","importState","state","getDownloadDialog","_downloadDialog","getControlsByClass","caller","addControl","getElevationTool","displayElevation","elevation","loadJS","tool","Elevation","mapElevation"],"mappings":"AAAAA,GAAGC,QAAUD,GAAGC,SAAW,IAG3B,WACI,MAAMC,EAASC,KACf,IAAIC,EACJC,OAAOC,eAAeJ,EAAQ,OAAQ,CAClCK,IAAK,WACD,IAAKP,GAAGQ,YAAa,CACjBR,GAAGQ,aAAc,EACjBR,GAAGS,WAAWT,GAAGU,YAAc,6BAC/BV,GAAGS,WAAWT,GAAGU,YAAc,gCAC/BV,GAAGS,WAAWT,GAAGU,YAAc,6BAC/BV,GAAGS,WAAWT,GAAGU,YAAc,8BAC/BN,EAAQF,EAAOS,KAEnB,OAAOP,GAEXQ,IAAK,SAAUC,GAAYT,EAAQS,KAf3C,GAoBAb,GAAGc,QAAU,WACT,MAAMC,EAAOZ,KACbH,GAAGgB,YAAYC,KAAKF,GAEpBA,EAAKG,IAAM,KACXH,EAAKI,UAAW,EAChBJ,EAAKK,YAAa,EAElB,IAAIC,EAAMC,UAAUC,OAEpBR,EAAKS,QAAUxB,GAAGyB,KAAKC,OAAO,GAAIL,EAAM,EAAIC,UAAU,GAAKA,UAAU,IACrEP,EAAKY,GAAKZ,EAAKS,QAAQG,IAAM3B,GAAG4B,OAAOb,EAAKc,MAAMC,OAAO9B,GAAGc,QAAQiB,UAAUF,MAAMN,OAAS,GAAK,KAClGR,EAAKiB,IAAMhC,GAAGyB,KAAKQ,OAAOlB,EAAKS,QAAQQ,IAAMjB,EAAKS,QAAQQ,IAAMV,UAAU,IACtEtB,GAAGkC,kBACHnB,EAAKoB,MAAQC,EAAErB,EAAKiB,MAGxBjB,EAAKiB,IAAIK,UAAUC,IAAItC,GAAGc,QAAQiB,UAAUF,MAAOd,EAAKc,OAExDd,EAAKwB,SAAWxB,EAAKS,QAAQe,UAAYxB,EAAKwB,SAC9CxB,EAAKyB,cAAe,GAGxBxC,GAAGyC,QAAQzC,GAAGc,QAASd,GAAGgB,cAE1B,WACI,MAAM0B,EAAW1C,GAAGc,QAAQiB,UAE5BW,EAASb,MAAQ,SAEjBa,EAASH,cAAW,EAEpBG,EAASC,KAAO,WACZxC,KAAK6B,IAAIY,MAAMC,QAAU,IAG7BH,EAASI,KAAO,WACZ3C,KAAK6B,IAAIY,MAAMC,QAAU,QAG7BH,EAASK,OAAS,SAAUC,GACxB,MAAMjC,EAAOZ,KACb,OAAOY,EAAKkC,qBAAqBlC,EAAKmC,WAAW,KAAM,WACnDnC,EAAKoC,sBACmB,mBAAbH,GACPA,QAKZN,EAASO,qBAAuB,SAAUG,GACtC,MAAMrC,EAAOZ,KACRY,EAAKsC,eACNtC,EAAKsC,aAAeD,GAExB,OAAOA,GAGX,MAAME,EAAmB,SAAUC,GAC/B,OAAO,IAAIC,QAAQ,SAAUC,EAASC,GAClC,MAAMC,EAAYJ,EAAIhB,SACtB,IAAIqB,GAAc,EAEdC,GAAe,EACfC,GAAgB,EACpB,MAAMC,EAAkB,GACxB,IAAK,IAAIC,KAAOL,EAAW,CACvB,MAAMpB,EAAWoB,EAAUK,GAC3B,GAAwB,iBAAbzB,EAAuB,CAC9BqB,GAAc,EACd,GAAIrB,EAAS0B,SAAS,QAAS,CAC3BJ,GAAe,EACfE,EAAgBG,KAAKF,QAGrBF,GAAgB,OAGnB,GAAwB,iBAAbvB,GAA0BA,GAAYA,EAAS4B,OAAS,CACpEN,GAAe,EACfE,EAAgBG,KAAKF,OAEI,mBAAbzB,IACZuB,GAAgB,GAIxB,GAAID,GAAgBC,EAAe,CAE/BC,EAAgBK,QAAQ,SAAUJ,GAC9BL,EAAUK,GAAOhE,GAAGU,YAAc,gBAAkBsD,EAAM,UAG9DJ,GAAc,EAGlB,GAAIE,IAEKnD,KAAK0D,KAAKC,MAAO,CAClB,MAAMC,EAAShB,EAAIrC,IAAIM,QAAQ+C,OAC/B5D,KAAK0D,KAAKG,aAAa,CAACD,IACxB5D,KAAK0D,KAAK/B,IAAIiC,EAAQvE,GAAGqE,KAAKE,IAC9B5D,KAAK0D,KAAKC,OAAQ,EAI1B,MAAMtB,EAAW,WACb,MAAMyB,EAAmB,GACzB,IAAK,IAAIT,KAAOL,EAAW,CACvB,MAAMe,EAAeV,EACrB,IAAIzB,EAAWoB,EAAUe,GACzB,GAAwB,iBAAbnC,EACPkC,EAAiBP,KAAK,IAAIV,QAAQ,SAAUmB,EAAKC,GAC7C5E,GAAG6E,KAAK,CACJC,IAAKvC,EACLwC,OAAQ,MACRC,aAAc,SAEbC,KAAK,SAAUC,GACZ,GAAI3C,EAAS0B,SAAS,SAAU,CAE5BtD,KAAKwE,WAAWxE,KAAKyE,QAAQF,EAASG,KAAMX,IAC5Cf,EAAUe,GAAgBnC,EAAW5B,KAAK2E,MAAMZ,GAChDC,EAAIpC,OAGH,CAEDoB,EAAUe,GAAgBnC,EAAWvC,GAAGuF,KAAKH,QAAQF,EAASG,MAC9D9C,EAAS4B,QAAS,EAClBQ,EAAIpC,MAGXiD,MAAM,SAAUC,GACbC,QAAQC,IAAI,4BAA8BF,GAC1Cb,EAAIa,YAIf,CACD,GAAwB,iBAAblD,EAAuB,CAC9BoB,EAAUK,GAAOzB,EAAWvC,GAAGuF,KAAKhD,SAASA,GAC7CA,EAAS4B,QAAS,OAGlB,GAAInE,GAAGyB,KAAKmE,WAAWrD,KAAcA,EAAS4B,SAErCxD,KAAK2E,MAAMZ,GAAe,CAC3BnC,IACAoB,EAAUe,GAAgBnC,EAAW5B,KAAK2E,MAAMZ,GAK5DD,EAAiBP,KAAKV,QAAQC,QAAQlB,KAI9CiB,QAAQqC,IAAIpB,GAAkBQ,KAAK,WAC/B,IAAK,IAAIjB,KAAOL,EAAW,CACvB,MAAMmC,EAAInC,EAAUK,GAChB8B,GAAKA,EAAE3B,QAAUH,IAAQjD,KAAKc,OAC9B7B,GAAGuF,KAAKQ,gBAAgB/B,EAAKL,EAAUK,IAG/CP,OAIJG,EACA5D,GAAGgG,eACEhG,GAAGuF,OAASvF,GAAGuF,KAAKH,QACrBpF,GAAG8E,IAAImB,eACPjD,GAIJhD,GAAGgG,eACEhG,GAAGuF,KACJvF,GAAG8E,IAAIoB,kBACPlD,MAMhBN,EAASQ,WAAa,SAAUmC,EAAMrC,GAClC,MAAMjC,EAAOZ,KACb,OAAO,IAAIqD,QAAQ,SAAUC,EAASC,GAC9B3C,EAAKG,KACLH,EAAKoF,QAAQnG,GAAGoG,OAAOC,MAAMC,oBAAqB,CAAEC,WAAYlB,IAEpEtE,EAAKiB,IAAIK,UAAUmE,OAAOxG,GAAGoG,OAAOK,QAAQC,SAAU3F,EAAKK,YAE3D,IAAImB,EACJ,GAA6B,iBAAlBxB,EAAKwB,UAA0BxB,EAAKwB,SAASoE,SAGnD,CACDpE,EAAWxB,EAAKwB,SAChBxB,EAAKwB,SAAW,GAChBxB,EAAKwB,SAASxB,EAAKc,OAASU,OAL5BA,EAAWxB,EAAKwB,SAASxB,EAAKc,OAQlCd,EAAK6F,gBAAgB7F,EAAKc,MAAOwD,GAC5BJ,KAAK,SAAU4B,GACZ9F,EAAKiB,IAAI8E,UAAYD,EACjB9F,EAAKG,KACLH,EAAKoF,QAAQnG,GAAGoG,OAAOC,MAAMU,eAE7B/G,GAAGyB,KAAKmE,WAAW5C,IACnBA,IAEJS,SAKhBf,EAASkE,gBAAkB,SAAUI,EAAY3B,EAAMrC,GACnD,MAAMjC,EAAOZ,KACb,OAAO,IAAIqD,QAAQ,SAAUC,EAASC,GAElC,MAAMuD,EAAQ,SAAU1E,GACpB,QAAwB,IAAbA,EAIX,GAAIA,EAAS4B,OAAQ,CAEjB,MAAM0C,EAAOtE,EAAS8C,GAClBrF,GAAGyB,KAAKmE,WAAW5C,IACnBA,EAAS6D,GAEbpD,EAAQoD,QAIR,GAAIlG,KAAK2E,MAAM0B,GAAa,CACxBjG,EAAKwB,SAASyE,GAAczE,EAAW5B,KAAK2E,MAAM0B,GAClDrG,KAAKoC,OAAOiE,EAAY3B,GAAQ,GAAI,SAAUI,EAAKyB,GAC/C,GAAIzB,EAAK,CACLzF,GAAGmH,MAAM1B,GACT/B,EAAO0D,MAAM3B,QAEZ,CACGzF,GAAGyB,KAAKmE,WAAW5C,IACnBA,EAASkE,GAEbzD,EAAQyD,WAKhB5D,EAAiBvC,GAAMkE,KAAK,WACxBgC,EAAMlG,EAAKwB,SAASyE,WA9B5BvD,EAAQ,KAoCVlB,EAAWxB,EAAKwB,SAASyE,GAEP,mBAAbzE,EACPe,EAAiBvC,GAAMkE,KAAK,WACxBgC,EAAMlG,EAAKwB,SAASyE,MAIxBC,EAAM1E,MAKlBG,EAAS2E,SAAW,SAAUnG,GAC1B,MAAMH,EAAOZ,KACb,OAAO,IAAIqD,QAAQ,SAAUC,EAASC,GAClC3C,EAAKG,IAAMA,EACXsC,QAAQC,QAAQ1C,EAAKgC,UAAUkC,KAAK,WAC5BlE,EAAKS,QAAQ8F,QACbvG,EAAKwG,WAET9D,EAAQ1C,QAKpB2B,EAAS6E,SAAW,WAEhB,GADWpH,KACFe,KADEf,KACUe,IAAIsG,eADdrH,KACoCe,IAAIsG,eADxCrH,KAC+D,CAD/DA,KAEFe,IAAIuG,sBAFFtH,KAE+Be,IAAIsG,cAFnCrH,KAGFe,IAAIsG,cAAcE,aAHhBvH,KAKNgB,UAAW,EAChB,GANWhB,KAMFe,IAAK,CANHf,KAOFe,IAAIsG,cAPFrH,KAAAA,KAQFe,IAAIiF,QAAQnG,GAAGoG,OAAOC,MAAMsB,gBAAiB,CAAE1H,QAR7CE,OAAAA,KASFgG,QAAQnG,GAAGoG,OAAOC,MAAMsB,gBAAiB,CAAE1H,QATzCE,SAafuC,EAASgF,WAAa,SAAUE,GACJ,GAApBtG,UAAUC,SAAaqG,GAAY,GAE5BzH,KACNgB,UAAW,EAChB,GAFWhB,KAEFe,IAAK,CAFHf,KAGFe,IAAIsG,cAAgB,KAEzB,IAAKI,EAAW,CAGZ,IAAIC,EARD1H,KAQoBe,IAAI4G,oBACvBD,GATD1H,KASsB0H,EAAc,KATpC1H,KAUWe,IAAIuG,uBAVftH,KAWC0H,EAAc,KACRA,IACNA,EAbD1H,KAaoBe,IAAIuG,uBAGvBI,GACAA,EAAYN,WAjBbpH,KAmBFe,IAAIiF,QAAQnG,GAAGoG,OAAOC,MAAM0B,kBAAmB,CAAE9H,QAnB/CE,OAAAA,KAoBFgG,QAAQnG,GAAGoG,OAAOC,MAAM0B,kBAAmB,CAAE9H,QApB3CE,SAwBfuC,EAASsF,OAAS,WACH7H,KACNiB,YAAa,EADPjB,KAEF6B,KAFE7B,KAGF6B,IAAIK,UAAU4F,OAAOjI,GAAGoG,OAAOK,QAAQC,WAIpDhE,EAASwF,QAAU,WACJ/H,KACNiB,YAAa,EADPjB,KAEF6B,KAFE7B,KAGF6B,IAAIK,UAAUC,IAAItC,GAAGoG,OAAOK,QAAQC,WAIjDhE,EAASyF,cAAgB,WACrB,MAAMpH,EAAOZ,KACb,OAAOY,EAAKsC,cAAgB,IAAIG,QAAQ,SAAUC,EAASC,GACvD3C,EAAKqH,IAAIpI,GAAGoG,OAAOC,MAAMU,cAAe,WACpCtD,EAAQ1C,QAKpB2B,EAAS2F,mBAAqB,SAAUC,EAAUjC,EAAOkC,IAEpCD,EADJnI,KACoB6B,IAAIwG,iBAAiBF,GAAY,CADrDnI,KAC2D6B,MAC/DoC,QAAQ,SAAUqE,GACvBA,EAAIC,iBAAiBrC,EAAOkC,MAIpC7F,EAASS,oBAAsB,aAG/BT,EAASiG,YAAc,WACnB,OAAO,GAGXjG,EAASkG,gBAAkB,SAAU5E,EAAK6E,GACtC,IACItE,EADOpE,KACOe,IADPf,KACkBe,IAAIM,QAAQ+C,OAASvE,GAAG8I,IAAIvE,OACzD,OAAOvE,GAAGyB,KAAKmH,gBAAgBrE,EAAQP,EAAK6E,IAGhDnG,EAASd,OAAS,WAEd,OAAO5B,GAAG4B,OADGzB,KACSwB,GAAK,MAG/Be,EAASqG,YAAc,WAEnB,OADa5I,KACJqC,aACE,GAEJ,MAGXE,EAASsG,YAAc,SAAUC,KAGjCvG,EAASwG,kBAAoB,WACzB,MAAMnI,EAAOZ,KACbY,EAAKoI,gBAAkBpI,EAAKoI,iBAAmBpI,EAAKG,IAAIkI,mBAAmB,oCAAoC,GAC/G,GAAIrI,EAAKoI,gBAAiB,CACtBpI,EAAKoI,gBAAgBE,OAAStI,EAC9B,OAAOyC,QAAQC,QAAQ1C,EAAKoI,iBAEhC,OAAO,IAAI3F,QAAQ,SAAUC,EAASC,GAClC3C,EAAKG,IAAIoI,WAAW,yBAAyBrE,KAAK1B,IAC9CxC,EAAKoI,gBAAkB5F,EACvBxC,EAAKoI,gBAAgBE,OAAStI,EAC9B0C,EAAQF,QAKpBb,EAAS6G,iBAAmB,WACxB,MAAMxI,EAAOZ,KACb,OAAKY,EAAKyI,kBAAqBzI,EAAKS,QAAQgI,iBAGxCzI,EAAK0I,UACEjG,QAAQC,QAAQ1C,EAAK0I,WAEzB,IAAIjG,QAAQ,SAAUC,EAASC,GAClC1D,GAAG0J,QACE1J,GAAG2J,OAAS3J,GAAG2J,KAAKC,UACrB5J,GAAGU,YAAc,oBACjB,WACI,GAA6C,kBAAlCK,EAAKS,QAAQgI,iBACpB,GAAIzI,EAAKG,IACLH,EAAKG,IAAIqI,mBAAmBtE,KAAK,SAAU4E,GAEnC9I,EAAK0I,UADLI,GAIiB,IAAI7J,GAAG2J,KAAKC,UAEjCnG,EAAQ1C,EAAK0I,iBAGhB,CACD1I,EAAK0I,UAAY,IAAIzJ,GAAG2J,KAAKC,UAC7BnG,EAAQ1C,EAAK0I,gBAIjB,GAAI1I,EAAKG,IACLH,EAAKG,IAAIqI,mBAAmBtE,KAAK,SAAU4E,GAEnC9I,EAAK0I,UADLI,EACiB,IAAI7J,GAAG2J,KAAKC,UAAU5J,GAAGyB,KAAKC,QAAO,EAAM,GAAImI,EAAarI,QAAST,EAAKS,QAAQgI,mBAGlF,IAAIxJ,GAAG2J,KAAKC,UAAU7I,EAAKS,QAAQgI,kBAExD/F,EAAQ1C,EAAK0I,iBAGhB,CACD1I,EAAK0I,UAAY,IAAIzJ,GAAG2J,KAAKC,UAAU7I,EAAKS,QAAQgI,kBACpD/F,EAAQ1C,EAAK0I,gBAzCtBjG,QAAQC,QAAQ,OA/XnC","sourcesContent":["TC.control = TC.control || {};\r\n\r\n// Carga de dust solamente si alguna plantilla lo usa\r\n(function () {\r\n    const parent = this;\r\n    let value;\r\n    Object.defineProperty(parent, 'dust', {\r\n        get: function () {\r\n            if (!TC._dustLoaded) {\r\n                TC._dustLoaded = true;\r\n                TC.syncLoadJS(TC.apiLocation + 'lib/dust/dust-full.min.js');\r\n                TC.syncLoadJS(TC.apiLocation + 'lib/dust/dust-helpers.min.js');\r\n                TC.syncLoadJS(TC.apiLocation + 'lib/dust/dust-i18n.min.js');\r\n                TC.syncLoadJS(TC.apiLocation + 'lib/dust/dust.overrides.js');\r\n                value = parent.dust;\r\n            }\r\n            return value;\r\n        },\r\n        set: function (newValue) { value = newValue; },\r\n    });\r\n})();\r\n/////////////////////////////////////////////////////\r\n\r\nTC.Control = function () {\r\n    const self = this;\r\n    TC.EventTarget.call(self);\r\n\r\n    self.map = null;\r\n    self.isActive = false;\r\n    self.isDisabled = false;\r\n\r\n    var len = arguments.length;\r\n\r\n    self.options = TC.Util.extend({}, len > 1 ? arguments[1] : arguments[0]);\r\n    self.id = self.options.id || TC.getUID(self.CLASS.substr(TC.Control.prototype.CLASS.length + 1) + '-');\r\n    self.div = TC.Util.getDiv(self.options.div ? self.options.div : arguments[0]);\r\n    if (TC._jQueryIsLoaded) {\r\n        self._$div = $(self.div);\r\n    }\r\n\r\n    self.div.classList.add(TC.Control.prototype.CLASS, self.CLASS);\r\n\r\n    self.template = self.options.template || self.template;\r\n    self.exportsState = false;\r\n};\r\n\r\nTC.inherit(TC.Control, TC.EventTarget);\r\n\r\n(function () {\r\n    const ctlProto = TC.Control.prototype;\r\n\r\n    ctlProto.CLASS = 'tc-ctl';\r\n\r\n    ctlProto.template = void(0);\r\n\r\n    ctlProto.show = function () {\r\n        this.div.style.display = '';\r\n    };\r\n\r\n    ctlProto.hide = function () {\r\n        this.div.style.display = 'none';\r\n    };\r\n\r\n    ctlProto.render = function (callback) {\r\n        const self = this;\r\n        return self._set1stRenderPromise(self.renderData(null, function () {\r\n            self.addUIEventListeners();\r\n            if (typeof callback === 'function') {\r\n                callback();\r\n            }\r\n        }));\r\n    };\r\n\r\n    ctlProto._set1stRenderPromise = function (promise) {\r\n        const self = this;\r\n        if (!self._firstRender) {\r\n            self._firstRender = promise;\r\n        }\r\n        return promise;\r\n    };\r\n\r\n    const processTemplates = function (ctl) {\r\n        return new Promise(function (resolve, reject) {\r\n            const templates = ctl.template;\r\n            let mustCompile = false;\r\n            // Verificamos si hay plantillas mezcladas de los dos motores\r\n            let hbsTemplates = false;\r\n            let dustTemplates = false;\r\n            const hbsTemplateKeys = [];\r\n            for (var key in templates) {\r\n                const template = templates[key];\r\n                if (typeof template === 'string') {\r\n                    mustCompile = true;\r\n                    if (template.endsWith('.hbs')) {\r\n                        hbsTemplates = true;\r\n                        hbsTemplateKeys.push(key);\r\n                    }\r\n                    else {\r\n                        dustTemplates = true;\r\n                    }\r\n                }\r\n                else if (typeof template === 'object' || (template && template._isHbs)) {\r\n                    hbsTemplates = true;\r\n                    hbsTemplateKeys.push(key);\r\n                }\r\n                else if (typeof template === 'function') {\r\n                    dustTemplates = true;\r\n                }\r\n            }\r\n\r\n            if (hbsTemplates && dustTemplates) {\r\n                // Plantillas mezcladas, luego estamos en un visor legacy, entonces cambiamos las Handlebars por dust.\r\n                hbsTemplateKeys.forEach(function (key) {\r\n                    templates[key] = TC.apiLocation + \"TC/templates/\" + key + \".html\";\r\n                });\r\n                // No quedan plantillas Handlebars por compilar\r\n                mustCompile = false;\r\n            }\r\n\r\n            if (dustTemplates) {\r\n                // Si es la primera vez que pasamos por aquí, dust.i18n no está inicializado, inicializamos\r\n                if (!dust.i18n._done) {\r\n                    const locale = ctl.map.options.locale;\r\n                    dust.i18n.setLanguages([locale]);\r\n                    dust.i18n.add(locale, TC.i18n[locale]);\r\n                    dust.i18n._done = true;\r\n                }\r\n            }\r\n\r\n            const callback = function () {\r\n                const templatePromises = [];\r\n                for (var key in templates) {\r\n                    const templateName = key;\r\n                    let template = templates[templateName];\r\n                    if (typeof template === 'string') {\r\n                        templatePromises.push(new Promise(function (res, rej) {\r\n                            TC.ajax({\r\n                                url: template,\r\n                                method: 'GET',\r\n                                responseType: 'text'\r\n                            })\r\n                                .then(function (response) {\r\n                                    if (template.endsWith('.html')) {\r\n                                        // Plantilla dust\r\n                                        dust.loadSource(dust.compile(response.data, templateName));\r\n                                        templates[templateName] = template = dust.cache[templateName];\r\n                                        res(template);\r\n                                        /////////////////\r\n                                    }\r\n                                    else {\r\n                                        // Plantilla Handlebars\r\n                                        templates[templateName] = template = TC._hbs.compile(response.data); // TODO: add optimization options\r\n                                        template._isHbs = true;\r\n                                        res(template);\r\n                                    }\r\n                                })\r\n                                .catch(function (err) {\r\n                                    console.log(\"Error fetching template: \" + err);\r\n                                    rej(err);\r\n                                });\r\n                        }));\r\n                    }\r\n                    else {\r\n                        if (typeof template === 'object') {\r\n                            templates[key] = template = TC._hbs.template(template);\r\n                            template._isHbs = true;\r\n                        }\r\n                        else {\r\n                            if (TC.Util.isFunction(template) && !template._isHbs) {\r\n                                // Plantilla dust\r\n                                if (!dust.cache[templateName]) {\r\n                                    template();\r\n                                    templates[templateName] = template = dust.cache[templateName];\r\n                                }\r\n                                /////////////////\r\n                            }\r\n                        }\r\n                        templatePromises.push(Promise.resolve(template));\r\n                    }\r\n                }\r\n\r\n                Promise.all(templatePromises).then(function () {\r\n                    for (var key in templates) {\r\n                        const t = templates[key];\r\n                        if (t && t._isHbs && key !== self.CLASS) {\r\n                            TC._hbs.registerPartial(key, templates[key]);\r\n                        }\r\n                    }\r\n                    resolve();\r\n                });\r\n            };\r\n\r\n            if (mustCompile) {\r\n                TC.loadJSInOrder(\r\n                    !TC._hbs || !TC._hbs.compile,\r\n                    TC.url.templatingFull,\r\n                    callback\r\n                );\r\n            }\r\n            else {\r\n                TC.loadJSInOrder(\r\n                    !TC._hbs,\r\n                    TC.url.templatingRuntime,\r\n                    callback\r\n                );\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.renderData = function (data, callback) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            if (self.map) {\r\n                self.trigger(TC.Consts.event.BEFORECONTROLRENDER, { dataObject: data });\r\n            }\r\n            self.div.classList.toggle(TC.Consts.classes.DISABLED, self.isDisabled);\r\n\r\n            let template;\r\n            if (typeof self.template === 'object' && !self.template.compiler) {\r\n                template = self.template[self.CLASS];\r\n            }\r\n            else {\r\n                template = self.template;\r\n                self.template = {};\r\n                self.template[self.CLASS] = template;\r\n            };\r\n\r\n            self.getRenderedHtml(self.CLASS, data)\r\n                .then(function (html) {\r\n                    self.div.innerHTML = html;\r\n                    if (self.map) {\r\n                        self.trigger(TC.Consts.event.CONTROLRENDER);\r\n                    }\r\n                    if (TC.Util.isFunction(callback)) {\r\n                        callback();\r\n                    }\r\n                    resolve();\r\n                });\r\n        });\r\n    };\r\n\r\n    ctlProto.getRenderedHtml = function (templateId, data, callback) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n\r\n            const endFn = function (template) {\r\n                if (typeof template === 'undefined') {\r\n                    resolve('');\r\n                    return;\r\n                }\r\n                if (template._isHbs) {\r\n                    // Es una plantilla Handlebars\r\n                    const html = template(data);\r\n                    if (TC.Util.isFunction(callback)) {\r\n                        callback(html);\r\n                    }\r\n                    resolve(html);\r\n                }\r\n                else {\r\n                    // Es una plantilla dust\r\n                    if (dust.cache[templateId]) {\r\n                        self.template[templateId] = template = dust.cache[templateId];\r\n                        dust.render(templateId, data || {}, function (err, out) {\r\n                            if (err) {\r\n                                TC.error(err);\r\n                                reject(Error(err));\r\n                            }\r\n                            else {\r\n                                if (TC.Util.isFunction(callback)) {\r\n                                    callback(out);\r\n                                }\r\n                                resolve(out);\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        processTemplates(self).then(function () {\r\n                            endFn(self.template[templateId]);\r\n                        })\r\n                    }\r\n                    ////////////////////////\r\n                }\r\n            };\r\n            const template = self.template[templateId];\r\n\r\n            if (typeof template !== 'function') {\r\n                processTemplates(self).then(function () {\r\n                    endFn(self.template[templateId]);\r\n                })\r\n            }\r\n            else {\r\n                endFn(template);\r\n            }\r\n        });\r\n    };\r\n\r\n    ctlProto.register = function (map) {\r\n        const self = this;\r\n        return new Promise(function (resolve, reject) {\r\n            self.map = map;\r\n            Promise.resolve(self.render()).then(function () {\r\n                if (self.options.active) {\r\n                    self.activate();\r\n                }\r\n                resolve(self);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.activate = function () {\r\n        var self = this;\r\n        if (self.map && self.map.activeControl && self.map.activeControl != self) {\r\n            self.map.previousActiveControl = self.map.activeControl;\r\n            self.map.activeControl.deactivate();\r\n        }\r\n        self.isActive = true;\r\n        if (self.map) {\r\n            self.map.activeControl = self;\r\n            self.map.trigger(TC.Consts.event.CONTROLACTIVATE, { control: self });\r\n            self.trigger(TC.Consts.event.CONTROLACTIVATE, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.deactivate = function (stopChain) {\r\n        if (arguments.length == 0) stopChain = false;\r\n\r\n        var self = this;\r\n        self.isActive = false;\r\n        if (self.map) {\r\n            self.map.activeControl = null;\r\n\r\n            if (!stopChain) {\r\n                //determinar cuál es el control predeterminado para reactivarlo\r\n                //salvo que sea yo mismo, claro\r\n                var nextControl = self.map.getDefaultControl();\r\n                if (nextControl == self) nextControl = null;\r\n                else if (self.map.previousActiveControl == self) // GLS: Validamos antes de activar que el control activo anterior sea distinto al control actual\r\n                    nextControl = null;\r\n                else if (!nextControl) {\r\n                    nextControl = self.map.previousActiveControl;\r\n                }\r\n\r\n                if (nextControl)\r\n                    nextControl.activate();\r\n            }\r\n            self.map.trigger(TC.Consts.event.CONTROLDEACTIVATE, { control: self });\r\n            self.trigger(TC.Consts.event.CONTROLDEACTIVATE, { control: self });\r\n        }\r\n    };\r\n\r\n    ctlProto.enable = function () {\r\n        var self = this;\r\n        self.isDisabled = false;\r\n        if (self.div) {\r\n            self.div.classList.remove(TC.Consts.classes.DISABLED);\r\n        }\r\n    };\r\n\r\n    ctlProto.disable = function () {\r\n        var self = this;\r\n        self.isDisabled = true;\r\n        if (self.div) {\r\n            self.div.classList.add(TC.Consts.classes.DISABLED);\r\n        }\r\n    };\r\n\r\n    ctlProto.renderPromise = function () {\r\n        const self = this;\r\n        return self._firstRender || new Promise(function (resolve, reject) {\r\n            self.one(TC.Consts.event.CONTROLRENDER, function () {\r\n                resolve(self);\r\n            });\r\n        });\r\n    };\r\n\r\n    ctlProto.addUIEventListener = function (selector, event, listener) {\r\n        const self = this;\r\n        const elements = selector ? self.div.querySelectorAll(selector) : [self.div];\r\n        elements.forEach(function (elm) {\r\n            elm.addEventListener(event, listener);\r\n        });\r\n    };\r\n\r\n    ctlProto.addUIEventListeners = function () {\r\n    };\r\n\r\n    ctlProto.isExclusive = function () {\r\n        return false;\r\n    };\r\n\r\n    ctlProto.getLocaleString = function (key, texts) {\r\n        var self = this;\r\n        var locale = self.map ? self.map.options.locale : TC.Cfg.locale;\r\n        return TC.Util.getLocaleString(locale, key, texts);\r\n    };\r\n\r\n    ctlProto.getUID = function () {\r\n        const self = this;\r\n        return TC.getUID(self.id + '-');\r\n    };\r\n\r\n    ctlProto.exportState = function () {\r\n        const self = this;\r\n        if (self.exportsState) {\r\n            return {};\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ctlProto.importState = function (state) {\r\n    };\r\n    \r\n    ctlProto.getDownloadDialog = function () {\r\n        const self = this;\r\n        self._downloadDialog = self._downloadDialog || self.map.getControlsByClass('TC.control.FeatureDownloadDialog')[0];\r\n        if (self._downloadDialog) {\r\n            self._downloadDialog.caller = self;\r\n            return Promise.resolve(self._downloadDialog);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            self.map.addControl('FeatureDownloadDialog').then(ctl => {\r\n                self._downloadDialog = ctl;\r\n                self._downloadDialog.caller = self;\r\n                resolve(ctl);\r\n            })\r\n        });\r\n    };\r\n\r\n    ctlProto.getElevationTool = function () {\r\n        const self = this;\r\n        if (!self.displayElevation && !self.options.displayElevation) {\r\n            return Promise.resolve(null);\r\n        }\r\n        if (self.elevation) {\r\n            return Promise.resolve(self.elevation);\r\n        }\r\n        return new Promise(function (resolve, reject) {\r\n            TC.loadJS(\r\n                !TC.tool || !TC.tool.Elevation,\r\n                TC.apiLocation + 'TC/tool/Elevation',\r\n                function () {\r\n                    if (typeof self.options.displayElevation === 'boolean') {\r\n                        if (self.map) {\r\n                            self.map.getElevationTool().then(function (mapElevation) {\r\n                                if (mapElevation) {\r\n                                    self.elevation = mapElevation;\r\n                                }\r\n                                else {\r\n                                    self.elevation = new TC.tool.Elevation();\r\n                                }\r\n                                resolve(self.elevation);\r\n                            });\r\n                        }\r\n                        else {\r\n                            self.elevation = new TC.tool.Elevation();\r\n                            resolve(self.elevation);\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (self.map) {\r\n                            self.map.getElevationTool().then(function (mapElevation) {\r\n                                if (mapElevation) {\r\n                                    self.elevation = new TC.tool.Elevation(TC.Util.extend(true, {}, mapElevation.options, self.options.displayElevation));\r\n                                }\r\n                                else {\r\n                                    self.elevation = new TC.tool.Elevation(self.options.displayElevation);\r\n                                }\r\n                                resolve(self.elevation);\r\n                            });\r\n                        }\r\n                        else {\r\n                            self.elevation = new TC.tool.Elevation(self.options.displayElevation);\r\n                            resolve(self.elevation);\r\n                        }\r\n                    }\r\n                }\r\n            );\r\n        });\r\n    };\r\n\r\n})();\r\n"]}