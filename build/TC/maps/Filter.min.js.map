{"version":3,"sources":["filter.js"],"names":["TC","filter","Filter","tagName","this","tagName_","_defaultNSURL","_defaultPrefixNS","_wfsPrefixNS","_fieldTitle","_wfsNSURL","_wfs2prefixNS","_wfs2NSURL","_wfs2FieldTitle","_escapeAttrName","_wfs2EscapeAttrName","prototype","getTagName","setTagName","text","writeFilterCondition_","format","prefix","NSURL","tag","inner","writeInnerCondition_","gmlVersion","LogicalNary","write","ComparisonBinary","Comparison","Spatial","Function","writeInnerArrayCondition_","filters","parent","conditions","reduce","vi","va","index","getText","wfsVersion","parseFloat","readText","indexOf","readFilterCondition_","readInnerCondition_","read","and","params","concat","Array","slice","call","arguments","bind","apply","And","or","Or","not","condition","Not","intersects","Object","toString","Intersects","within","Within","equalTo","propertyName","expression","opt_matchCase","EqualTo","notEqualTo","NotEqualTo","lessThan","LessThan","lessThanOrEqualTo","LessThanOrEqualTo","greaterThan","GreaterThan","greaterThanOrEqualTo","GreaterThanOrEqualTo","isNull","IsNull","between","lowerBoundary","upperBoundary","IsBetween","functionName","like","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","IsLike","inherit","values","LowerBoundary","UpperBoundary","Pattern","isArray","a","b","i","fmt","value","matchCase","escape","escapeChar","singleChar","wildCard","name","fieldTitle","undefined","_paramsToText","param","_text","attr","key","geometryName","geometry","opt_srsName","srsName","wrap","getAxisOrientation","match","code","def","ol","proj","get","axisOrientation_","toGML","bbox","Bbox","extent","lowerCorner","upperCorner","BBOX"],"mappings":"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","sourcesContent":["TC.filter = {};\r\n\r\nTC.filter.Filter = function (tagName) {\r\n    this.tagName_ = tagName;\r\n    \r\n    this._defaultNSURL = \"http://www.opengis.net/ogc\";\r\n    this._defaultPrefixNS = this._wfsPrefixNS = \"ogc\";\r\n    this._fieldTitle = \"PropertyName\";\r\n\r\n    this._defaultNSURL = this._wfsNSURL = \"http://www.opengis.net/ogc\";\r\n    this._wfs2prefixNS = \"fes\";\r\n    this._wfs2NSURL = \"http://www.opengis.net/fes/2.0\";\r\n    this._wfs2FieldTitle = \"ValueReference\";\r\n    this._escapeAttrName = \"escape\";\r\n    this._wfs2EscapeAttrName = \"escapeChar\";\r\n};\r\n\r\nTC.filter.Filter.prototype.getTagName = function () {\r\n    return this.tagName_;\r\n};\r\nTC.filter.Filter.prototype.setTagName = function (text) {    \r\n    return this.tagName_;\r\n};\r\n\r\nTC.filter.Filter.prototype.writeFilterCondition_ = function () {\r\n\r\n    //return '<{prefix}:{tag}>{childs}</{prefix}:{tag}>'.format({prefix:\"ogc\",tag:filter.getTagName(),childs:\"\"});\r\n    var filter = this;\r\n    return '<{prefix}:Filter xmlns:{prefix}=\\\"{NSURL}\" xmlns:gml=\\\"http://www.opengis.net/gml{gmlversion}\">{inner}</{prefix}:Filter>'.format({\r\n        prefix: this._defaultPrefixNS,\r\n        NSURL: this._defaultNSURL,\r\n        tag: filter.getTagName(),\r\n        inner: this.writeInnerCondition_(filter),\r\n        gmlVersion: (this._defaultNSURL === this._wfs2NSURL ? '/3.2' : '')\r\n    });\r\n\r\n    /*ol.xml.pushSerializeAndPop(item,\r\n        ol.format.WFS.GETFEATURE_SERIALIZERS_,\r\n        ol.xml.makeSimpleNodeFactory(filter.getTagName()),\r\n        [filter], objectStack);*/\r\n}\r\nTC.filter.Filter.prototype.writeInnerCondition_ = function (filter) {\r\n    if (filter != this) {\r\n        filter._defaultNSURL = this._defaultNSURL;\r\n        filter._defaultPrefixNS = this._defaultPrefixNS;\r\n        filter._fieldTitle = this._fieldTitle;\r\n    }\r\n\r\n    if (filter instanceof TC.filter.LogicalNary) {\r\n        return filter.write()\r\n    }\r\n    else if (filter instanceof TC.filter.ComparisonBinary) {\r\n        return filter.write();\r\n    }\r\n    else if (filter instanceof TC.filter.Comparison) {\r\n        return filter.write();\r\n    }\r\n    else if (filter instanceof TC.filter.Spatial) {\r\n        return filter.write();\r\n    }\r\n    else if (filter instanceof TC.filter.Function) {\r\n        return filter.write();\r\n    }\r\n    else\r\n        return filter.write();\r\n};\r\nTC.filter.Filter.prototype.writeInnerArrayCondition_ = function (filters) {\r\n    const parent = this;\r\n    return parent.conditions.reduce(function (vi, va, index) {\r\n        return (vi instanceof TC.filter.Filter ? parent.writeInnerCondition_(vi) : vi) + parent.writeInnerCondition_(va);\r\n    });\r\n}\r\n\r\nTC.filter.Filter.prototype.getText = function (wfsVersion) {    \r\n    if (wfsVersion && parseFloat(wfsVersion,10) >= 2) {\r\n        this._defaultPrefixNS = this._wfs2prefixNS;\r\n        this._defaultNSURL = this._wfs2NSURL;\r\n        this._fieldTitle = this._wfs2FieldTitle;\r\n        this._escapeAttrName = this._wfs2EscapeAttrName;\r\n    }\r\n    return this.writeFilterCondition_();\r\n};\r\n\r\nTC.filter.Filter.prototype.readText = function (text) {\r\n    if (text.indexOf(this._wfs2prefixNS) > -1 && \r\n        text.indexOf(this._wfs2NSURL) > -1 &&\r\n        text.indexOf(this._wfs2FieldTitle) > -1 &&\r\n        text.indexOf(this._wfs2EscapeAttrName) > -1) {\r\n        this._defaultPrefixNS = this._wfs2prefixNS;\r\n        this._defaultNSURL = this._wfs2NSURL;\r\n        this._fieldTitle = this._wfs2FieldTitle;\r\n        this._escapeAttrName = this._wfs2EscapeAttrName;\r\n    }\r\n\r\n    return this.readFilterCondition_(text);    \r\n};\r\n\r\nTC.filter.Filter.prototype.readFilterCondition_ = function (text) {\r\n    this.setTagName(text);\r\n    return this.readInnerCondition_(text);    \r\n}\r\nTC.filter.Filter.prototype.readInnerCondition_ = function (text) {\r\n    //if (filter != this) {        \r\n    //    filter._fieldTitle = this._fieldTitle;\r\n    //}\r\n\r\n    //if (filter instanceof TC.filter.LogicalNary) {\r\n    //    return filter.write()\r\n    //}\r\n    //else if (filter instanceof TC.filter.ComparisonBinary) {\r\n    //    return filter.write();\r\n    //}\r\n    //else if (filter instanceof TC.filter.Comparison) {\r\n    //    return filter.write();\r\n    //}\r\n    //else if (filter instanceof TC.filter.Spatial) {\r\n    //    return filter.write();\r\n    //}\r\n    //else if (filter instanceof TC.filter.Function) {\r\n    //    return filter.write();\r\n    //}\r\n    //else\r\n        return filter.read(text);\r\n};\r\n\r\nTC.filter.and = function (conditions) {\r\n    var params = [null].concat(Array.prototype.slice.call(arguments));\r\n    return new (Function.prototype.bind.apply(TC.filter.And, params));\r\n};\r\n\r\nTC.filter.or = function (conditions) {\r\n    var params = [null].concat(Array.prototype.slice.call(arguments));\r\n    return new (Function.prototype.bind.apply(TC.filter.Or, params));\r\n};\r\n\r\nTC.filter.not = function (condition) {\r\n    return new TC.filter.Not(condition);\r\n};\r\n\r\n\r\nTC.filter.intersects = function () {\r\n    if (Object.prototype.toString.call(arguments[0]) !== \"[object String]\")\r\n        return new TC.filter.Intersects(null, arguments[0], arguments[1]);\r\n    else\r\n        return new TC.filter.Intersects(arguments[0], arguments[1], arguments[2]);\r\n};\r\n\r\n\r\nTC.filter.within = function () {\r\n    if (Object.prototype.toString.call(arguments[0]) !== \"[object String]\")\r\n        return new TC.filter.Within(null, arguments[0], arguments[1]);\r\n    else\r\n        return new TC.filter.Within(arguments[0], arguments[1], arguments[2]);\r\n};\r\n\r\n\r\nTC.filter.equalTo = function (propertyName, expression, opt_matchCase) {\r\n    return new TC.filter.EqualTo(propertyName, expression, opt_matchCase);\r\n};\r\n\r\nTC.filter.notEqualTo = function (propertyName, expression, opt_matchCase) {\r\n    return new TC.filter.NotEqualTo(propertyName, expression, opt_matchCase);\r\n};\r\n\r\nTC.filter.lessThan = function (propertyName, expression) {\r\n    return new TC.filter.LessThan(propertyName, expression);\r\n};\r\n\r\nTC.filter.lessThanOrEqualTo = function (propertyName, expression) {\r\n    return new TC.filter.LessThanOrEqualTo(propertyName, expression);\r\n};\r\n\r\nTC.filter.greaterThan = function (propertyName, expression) {\r\n    return new TC.filter.GreaterThan(propertyName, expression);\r\n};\r\n\r\nTC.filter.greaterThanOrEqualTo = function (propertyName, expression) {\r\n    return new TC.filter.GreaterThanOrEqualTo(propertyName, expression);\r\n};\r\n\r\nTC.filter.isNull = function (propertyName) {\r\n    return new TC.filter.IsNull(propertyName);\r\n};\r\n\r\nTC.filter.between = function (propertyName, lowerBoundary, upperBoundary) {\r\n    return new TC.filter.IsBetween(propertyName, lowerBoundary, upperBoundary);\r\n};\r\n\r\nTC.filter[\"function\"] = function (functionName, params) {\r\n    return new TC.filter.Function(functionName, params);\r\n};\r\n\r\nTC.filter.like = function (propertyName, pattern,\r\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\r\n    return new TC.filter.IsLike(propertyName, pattern,\r\n        opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\r\n};\r\n\r\nTC.filter.LogicalNary = function (tagName, conditions) {\r\n\r\n    TC.filter.Filter.call(this, tagName);\r\n\r\n    this.conditions = Array.prototype.slice.call(arguments, 1);\r\n};\r\nTC.inherit(TC.filter.LogicalNary, TC.filter.Filter);\r\n\r\nTC.filter.And = function (conditions) {\r\n    var params = ['And'].concat(Array.prototype.slice.call(arguments));\r\n    TC.filter.LogicalNary.apply(this, params);\r\n};\r\nTC.inherit(TC.filter.And, TC.filter.LogicalNary);\r\n\r\nTC.filter.Or = function (conditions) {\r\n    var params = ['Or'].concat(Array.prototype.slice.call(arguments));\r\n    TC.filter.LogicalNary.apply(this, params);\r\n};\r\nTC.inherit(TC.filter.Or, TC.filter.LogicalNary);\r\n\r\nTC.filter.LogicalNary.prototype.write = function () {\r\n    return '<{prefix}:{tag}>{inner}</{prefix}:{tag}>'.format({\r\n        prefix: this._defaultPrefixNS,\r\n        tag: this.getTagName(),\r\n        inner: this.writeInnerArrayCondition_()\r\n    });\r\n}\r\n\r\nTC.filter.Not = function (condition) {\r\n    this.condition = condition;\r\n    TC.filter.Filter.call(this, 'Not');\r\n    \r\n};\r\nTC.inherit(TC.filter.Not, TC.filter.Filter);\r\n\r\nTC.filter.Filter.prototype.write=function () {\r\n    return '<{prefix}:{tag}>{inner}</{prefix}:{tag}>'.format({\r\n        prefix: this._defaultPrefixNS,\r\n        tag: this.getTagName(),\r\n        inner: this.writeInnerCondition_(this.condition)\r\n    });\r\n}\r\n\r\nTC.filter.Comparison = function (tagName, propertyName) {\r\n\r\n    TC.filter.Filter.call(this, tagName);\r\n\r\n    this.propertyName = propertyName;\r\n};\r\nTC.inherit(TC.filter.Comparison, TC.filter.Filter);\r\n\r\nTC.filter.Comparison.prototype.write = function () {\r\n    var values = '';\r\n    //isbetween\r\n    if (this.lowerBoundary && this.upperBoundary)\r\n        values = '<{prefix}:LowerBoundary><{prefix}:Literal>{LowerBoundary}</{prefix}:Literal></{prefix}:LowerBoundary><{prefix}:UpperBoundary><{prefix}:Literal>{UpperBoundary}</{prefix}:Literal></{prefix}:UpperBoundary>'.format({\r\n            prefix:this._defaultPrefixNS,\r\n            LowerBoundary: this.lowerBoundary,\r\n            UpperBoundary: this.upperBoundary\r\n        });\r\n    if (this.pattern)\r\n        values = '<{prefix}:Literal><![CDATA[{Pattern}]]></{prefix}:Literal>'.format({\r\n            prefix: this._defaultPrefixNS,\r\n            Pattern: this.pattern\r\n        });\r\n    if (this.params)\r\n        if (Array.isArray(this.params))\r\n            values = this.params.reduce(function (a, b, i) {\r\n                var fmt = function (text) {\r\n                    return '<{prefix}:Literal><![CDATA[{value}]]></{prefix}:Literal>'.format({ prefix: this._defaultPrefixNS, value: text });\r\n                }\r\n                return (i > 0 ? a : fmt(a)) + fmt(b);\r\n            });\r\n        else\r\n            values = '<{prefix}:Literal><![CDATA[{value}]]></{prefix}:Literal>'.format({ prefix: this._defaultPrefixNS, value: this.params });\r\n\r\n    return '<{prefix}:{tag}{matchCase}{escape}{singleChar}{wildCard}><{prefix}:{fieldTitle}>{name}</{prefix}:{fieldTitle}>{values}</{prefix}:{tag}>'.format({\r\n        prefix: this._defaultPrefixNS,\r\n        tag: this.getTagName(),\r\n        matchCase: (typeof (this.matchCase) !== \"undefined\" ? \" matchCase=\\\"\" + this.matchCase + \"\\\"\" : \"\"),\r\n        escape: (typeof (this.escapeChar) !== \"undefined\" ? (\" \" + this._escapeAttrName +\"=\\\"\" + this.escapeChar + \"\\\"\") : \"\"),\r\n        singleChar: (typeof (this.singleChar) !== \"undefined\" ? \" singleChar=\\\"\" + this.singleChar + \"\\\"\" : \"\"),\r\n        wildCard: (typeof (this.wildCard) !== \"undefined\" ? \" wildCard=\\\"\" + this.wildCard + \"\\\"\" : \"\"),\r\n        name: this.propertyName,\r\n        values: values,\r\n        fieldTitle: this._fieldTitle\r\n    });\r\n}\r\n\r\nTC.filter.ComparisonBinary = function (\r\n    tagName, propertyName, expression, opt_matchCase) {\r\n\r\n    TC.filter.Comparison.call(this, tagName, propertyName);\r\n\r\n    this.expression = expression;\r\n\r\n    this.matchCase = opt_matchCase;\r\n};\r\nTC.inherit(TC.filter.ComparisonBinary, TC.filter.Comparison);\r\n\r\nTC.filter.ComparisonBinary.prototype.write = function () {\r\n    var _str = '<{prefix}:{tag}{matchCase}>' + (this.propertyName instanceof TC.filter.Filter ? '{name}' : '<{prefix}:{fieldTitle}>{name}</{prefix}:{fieldTitle}>') + '<{prefix}:Literal><![CDATA[{value}]]></{prefix}:Literal></{prefix}:{tag}>';\r\n    return _str.format({\r\n        prefix: this._defaultPrefixNS,\r\n        tag: this.getTagName(),\r\n        matchCase: (typeof (this.matchCase) !== \"undefined\" ? \" matchCase=\\\"\" + this.matchCase + \"\\\"\" : \"\"),\r\n        //escape:(typeof(this.escapeChar)!==\"undefined\"? \" escape=\\\"\" + this.escapeChar+ \"\\\"\":\"\"),\r\n        //singleChar:(typeof(this.singleChar)!==\"undefined\"? \" singleChar=\\\"\" + this.singleChar+ \"\\\"\":\"\"),\r\n        //wildCard:(typeof(this.wildCard)!==\"undefined\"? \" wildCard=\\\"\" + this.wildCard+ \"\\\"\":\"\"),\r\n        name: this.propertyName instanceof TC.filter.Filter ? this.propertyName.write() : this.propertyName,\r\n        value: this.expression,\r\n        fieldTitle: this._fieldTitle\r\n    });\r\n}\r\nTC.filter.EqualTo = function (propertyName, expression, opt_matchCase) {\r\n    TC.filter.ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\r\n};\r\nTC.inherit(TC.filter.EqualTo, TC.filter.ComparisonBinary);\r\n\r\nTC.filter.GreaterThan = function (propertyName, expression) {\r\n    TC.filter.ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\r\n};\r\nTC.inherit(TC.filter.GreaterThan, TC.filter.ComparisonBinary);\r\n\r\nTC.filter.GreaterThanOrEqualTo = function (propertyName, expression) {\r\n    TC.filter.ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\r\n};\r\nTC.inherit(TC.filter.GreaterThanOrEqualTo, TC.filter.ComparisonBinary);\r\n\r\nTC.filter.LessThan = function (propertyName, expression) {\r\n    TC.filter.ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\r\n};\r\nTC.inherit(TC.filter.LessThan, TC.filter.ComparisonBinary);\r\n\r\nTC.filter.LessThanOrEqualTo = function (propertyName, expression) {\r\n    TC.filter.ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\r\n};\r\nTC.inherit(TC.filter.LessThanOrEqualTo, TC.filter.ComparisonBinary);\r\n\r\nTC.filter.NotEqualTo = function (propertyName, expression, opt_matchCase) {\r\n    TC.filter.ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\r\n};\r\nTC.inherit(TC.filter.NotEqualTo, TC.filter.ComparisonBinary);\r\n\r\nTC.filter.IsLike = function (propertyName, pattern,\r\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\r\n    TC.filter.Comparison.call(this, 'PropertyIsLike', propertyName);\r\n\r\n    this.pattern = pattern;\r\n\r\n    this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\r\n\r\n    this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\r\n\r\n    this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\r\n\r\n    this.matchCase = opt_matchCase;\r\n};\r\nTC.inherit(TC.filter.IsLike, TC.filter.Comparison);\r\n\r\nTC.filter.IsNull = function (propertyName) {\r\n    TC.filter.Comparison.call(this, 'PropertyIsNull', propertyName);\r\n};\r\nTC.inherit(TC.filter.IsNull, TC.filter.Comparison);\r\n\r\nTC.filter.IsBetween = function (propertyName, lowerBoundary, upperBoundary) {\r\n    TC.filter.Comparison.call(this, 'PropertyIsBetween', propertyName);\r\n    this.lowerBoundary = lowerBoundary;\r\n    this.upperBoundary = upperBoundary;\r\n};\r\nTC.inherit(TC.filter.IsBetween, TC.filter.Comparison);\r\n\r\nTC.filter.Function = function (functionName, params) {\r\n    TC.filter.Filter.call(this, functionName);\r\n    this.params = params\r\n};\r\nTC.inherit(TC.filter.Function, TC.filter.Filter);\r\n\r\nTC.filter.Function.prototype.write = function () {\r\n    var values = '';\r\n    if (this.params) {\r\n        var _paramsToText = function (param, prefix) {\r\n            if (typeof (param) === \"string\") {\r\n                return '<{prefix}:Literal><![CDATA[{value}]]></{prefix}:Literal>'.format({ prefix: prefix, value: param });\r\n            }\r\n            if (typeof (param) === \"object\") {\r\n                var _text = '';\r\n                for (var attr in param) {\r\n                    _text = _text + '<{prefix}:{key}>{value}</{prefix}:{key}>'.format({ prefix: prefix, value: param[attr], key: attr })\r\n                }\r\n                return _text;\r\n            }\r\n        }\r\n        if (Array.isArray(this.params)) {\r\n            var prefix = this._defaultPrefixNS;\r\n            values = this.params.reduce(function (a, b, i) {\r\n                var fmt = function (param) {\r\n                    return _paramsToText(param, prefix);\r\n                }\r\n                return (i > 1 ? a : fmt(a)) + fmt(b);\r\n            });\r\n        }\r\n        else\r\n            values = _paramsToText(this.params, this._defaultPrefixNS);\r\n    }\r\n    return '<{prefix}:Function name=\"{tag}\">{inner}</{prefix}:Function>'.format({\r\n        prefix: this._defaultPrefixNS,\r\n        tag: this.getTagName(),\r\n        inner: values\r\n    });\r\n};\r\n\r\nTC.filter.Spatial = function (tagName, geometryName, geometry, opt_srsName) {\r\n    TC.filter.Filter.call(this, tagName);\r\n    this.geometryName = geometryName;\r\n    this.geometry = geometry;\r\n    this.srsName = opt_srsName;\r\n    this.wrap = new TC.wrap.Filter(this);\r\n};\r\n\r\nTC.wrap.Filter = function (filter) {\r\n    this.parent = filter;\r\n};\r\n\r\nTC.wrap.Filter.prototype.getAxisOrientation = function () {\r\n    // Establecemos el srsName a EPSG:xxxx o urn:x-ogc:def:crs:EPSG:xxxx dependiendo del orden de eje de coordenadas del CRS.\r\n    // Esto se debe a que GeoServer hace asunciones en el orden de los ejes dependiendo del formato de srsName que se use.\r\n    // Más información: https://docs.geoserver.org/latest/en/user/services/wfs/basics.html#wfs-basics-axis\r\n    var srsName = this.parent.srsName;\r\n    if (srsName) {\r\n        const match = srsName.match(/\\d{4,6}$/);\r\n        if (match) {\r\n            const code = match[0];\r\n            const def = ol.proj.get(srsName);\r\n            if (def) {\r\n                return ((def.axisOrientation_ === 'neu' ? 'urn:x-ogc:def:crs:EPSG:' : 'EPSG:') + code);\r\n            }\r\n        }\r\n    }\r\n    return srsName;\r\n};\r\n\r\nTC.inherit(TC.filter.Spatial, TC.filter.Filter);\r\n\r\nTC.filter.Spatial.prototype.write = function () {\r\n    var pattern = null;\r\n    if (this.geometryName) {\r\n        pattern = '<{prefix}:{tag}><{prefix}:{fieldTitle}>{name}</{prefix}:{fieldTitle}>{geometry}</{prefix}:{tag}>';\r\n    }\r\n    else {\r\n        pattern = '<{prefix}:{tag}><{prefix}:{fieldTitle}/>{geometry}</{prefix}:{tag}>';\r\n    }\r\n\r\n    return pattern.format({\r\n        prefix: this._defaultPrefixNS,\r\n        tag: this.getTagName(),\r\n        name: this.geometryName,\r\n        geometry: (this.geometry instanceof TC.filter.Function ? this.writeInnerCondition_(this.geometry) : this.geometry.wrap.toGML(undefined, this.wrap.getAxisOrientation())),\r\n        fieldTitle: this._fieldTitle\r\n    });\r\n};\r\n\r\nTC.filter.bbox = function () {\r\n    if (Object.prototype.toString.call(arguments[0]) !== \"[object String]\")\r\n        return new TC.filter.Bbox(null, arguments[0], arguments[1]);\r\n    else\r\n        return new TC.filter.Bbox(arguments[0], arguments[1], arguments[2]);\r\n};\r\n\r\nTC.filter.Bbox = function (geometryName, extent, opt_srsName) {\r\n    TC.filter.Filter.call(this, 'BBOX');\r\n    this.geometryName = geometryName;\r\n    this.extent = extent;\r\n    this.srsName = opt_srsName;\r\n};\r\nTC.inherit(TC.filter.Bbox, TC.filter.Spatial);\r\n\r\nTC.filter.Bbox.prototype.write = function () {\r\n    var bbox = '<gml:Envelope{srsName}><gml:lowerCorner>{lowerCorner}</gml:lowerCorner><gml:upperCorner>{upperCorner}</gml:upperCorner></gml:Envelope>'\r\n\t.format({\r\n\t    srsName: (typeof (this.srsName) !== \"undefined\" ? \" srsName=\\\"\" + this.srsName + \"\\\"\" : \"\"),\r\n\t    lowerCorner: (this.extent[0] + ' ' + this.extent[1]),\r\n\t    upperCorner: (this.extent[2] + ' ' + this.extent[3])\r\n\t});\r\n    var pattern = null;\r\n    if (this.geometryName)\r\n        pattern='<{prefix}:{tag}><{prefix}:{fieldTitle}>{name}</{prefix}:{fieldTitle}>{BBOX}</{prefix}:{tag}>';\r\n    else\r\n        pattern='<{prefix}:{tag}><{prefix}:{fieldTitle}/>{BBOX}</{prefix}:{tag}>';\r\n    return pattern.format({\r\n        prefix: this._defaultPrefixNS,\r\n        tag: this.getTagName(),\r\n        fieldTitle:  this._fieldTitle,\r\n        name: this.geometryName,\r\n        BBOX: bbox\r\n    });\r\n};\r\n\r\nTC.filter.Intersects = function (geometryName, geometry, opt_srsName) {\r\n    TC.filter.Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\r\n};\r\nTC.inherit(TC.filter.Intersects, TC.filter.Spatial);\r\n\r\nTC.filter.Within = function (geometryName, geometry, opt_srsName) {\r\n    TC.filter.Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\r\n};\r\nTC.inherit(TC.filter.Within, TC.filter.Spatial);"]}