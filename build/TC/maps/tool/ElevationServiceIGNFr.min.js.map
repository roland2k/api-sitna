{"version":3,"sources":["tool/ElevationServiceIGNFr.js"],"names":["TC","tool","ElevationService","syncLoadJS","apiLocation","ElevationServiceIGNFr","options","apply","this","arguments","url","process","profileProcess","minimumElevation","nativeCRS","inherit","toolProto","prototype","request","self","coordinateList","coordinates","crs","Util","reproject","dataInputs","lon","map","coord","join","lat","format","call","parseResponse","response","elevations","elev","z"],"mappings":"AAAAA,GAAGC,KAAOD,GAAGC,MAAQ,GAEhBD,GAAGC,KAAKC,kBACTF,GAAGG,WAAWH,GAAGI,YAAc,4BAGnCJ,GAAGC,KAAKI,sBAAwB,SAAUC,GAEtCN,GAAGC,KAAKC,iBAAiBK,MADZC,KACwBC,WADxBD,KAERE,IAFQF,KAEGF,QAAQI,KAAO,iDAFlBF,KAGRG,QAHQH,KAGOF,QAAQK,SAAW,kBAH1BH,KAIRI,eAJQJ,KAIcF,QAAQM,gBAAkB,sBAJxCJ,KAKRK,iBALQL,KAKgBF,QAAQO,mBAAqB,MAL7CL,KAMRM,UAAY,aAGrBd,GAAGe,QAAQf,GAAGC,KAAKI,sBAAuBL,GAAGC,KAAKC,mBAElD,WACI,MAAMc,EAAYhB,GAAGC,KAAKI,sBAAsBY,UAEhDD,EAAUE,QAAU,SAAUZ,GAC1B,MAAMa,EAAOX,KAEb,IAAIY,GADJd,EAAUA,GAAW,IACQe,YACzBf,EAAQgB,KAAOhB,EAAQgB,MAAQH,EAAKL,YACpCM,EAAiBpB,GAAGuB,KAAKC,UAAUJ,EAAgBd,EAAQgB,IAAKH,EAAKL,YAEzE,MAAMW,EAAa,CACfC,IAAKN,EAAeO,IAAI,SAAUC,GAC9B,OAAOA,EAAM,KACdC,KAAK,KACRC,IAAKV,EAAeO,IAAI,SAAUC,GAC9B,OAAOA,EAAM,KACdC,KAAK,KACRP,IAAK,SACLS,OAAQ,QAEZ,OAAO/B,GAAGC,KAAKC,iBAAiBe,UAAUC,QAAQc,KAAKb,EAAM,CAAEM,WAAYA,EAAYd,QAASQ,EAAKR,WAGzGK,EAAUiB,cAAgB,SAAUC,EAAU5B,GAE1C,GAAI4B,EAASC,WAAY,CACrB,IAAIA,EAAaD,EAASC,WAAWR,IAAI,SAAUS,GAC/C,MAAO,CAACA,EAAKV,IAAKU,EAAKN,IAAKM,EAAKC,KAEjC/B,EAAQgB,KAAOhB,EAAQgB,MALpBd,KAKiCM,YACpCqB,EAAanC,GAAGuB,KAAKC,UAAUW,EAN5B3B,KAM6CM,UAAWR,EAAQgB,MAEvE,OAAOtB,GAAGC,KAAKC,iBAAiBe,UAAUgB,cAAcD,KARjDxB,KAQ4D,CAAEa,YAAac,GAAc7B,GAEpG,MAAO,IAlCf","sourcesContent":["TC.tool = TC.tool || {};\r\n\r\nif (!TC.tool.ElevationService) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/tool/ElevationService');\r\n}\r\n\r\nTC.tool.ElevationServiceIGNFr = function (options) {\r\n    const self = this;\r\n    TC.tool.ElevationService.apply(self, arguments);\r\n    self.url = self.options.url || '//wxs.ign.fr/njfzwf3vgc55gekk8ra4zezx/alti/wps';\r\n    self.process = self.options.process || 'gs:WPSElevation';\r\n    self.profileProcess = self.options.profileProcess || 'gs:WPSLineElevation';\r\n    self.minimumElevation = self.options.minimumElevation || -99998;\r\n    self.nativeCRS = 'EPSG:4326';\r\n};\r\n\r\nTC.inherit(TC.tool.ElevationServiceIGNFr, TC.tool.ElevationService);\r\n\r\n(function () {\r\n    const toolProto = TC.tool.ElevationServiceIGNFr.prototype;\r\n\r\n    toolProto.request = function (options) {\r\n        const self = this;\r\n        options = options || {};\r\n        let coordinateList = options.coordinates;\r\n        if (options.crs && options.crs !== self.nativeCRS) {\r\n            coordinateList = TC.Util.reproject(coordinateList, options.crs, self.nativeCRS);\r\n        }\r\n        const dataInputs = {\r\n            lon: coordinateList.map(function (coord) {\r\n                return coord[0];\r\n            }).join('|'),\r\n            lat: coordinateList.map(function (coord) {\r\n                return coord[1];\r\n            }).join('|'),\r\n            crs: 'crs:84',\r\n            format: 'json'\r\n        };\r\n        return TC.tool.ElevationService.prototype.request.call(self, { dataInputs: dataInputs, process: self.process });\r\n    };\r\n\r\n    toolProto.parseResponse = function (response, options) {\r\n        var self = this;\r\n        if (response.elevations) {\r\n            var elevations = response.elevations.map(function (elev) {\r\n                return [elev.lon, elev.lat, elev.z];\r\n            });\r\n            if (options.crs && options.crs !== self.nativeCRS) {\r\n                elevations = TC.Util.reproject(elevations, self.nativeCRS, options.crs);\r\n            }\r\n            return TC.tool.ElevationService.prototype.parseResponse.call(self, { coordinates: elevations }, options);\r\n        }\r\n        return [];\r\n    };\r\n})();"]}