{"version":3,"sources":["feature/MultiPoint.js"],"names":["TC","feature","Feature","syncLoadJS","apiLocation","MultiPoint","coords","options","apply","this","arguments","wrap","isNative","createMultiPoint","inherit","prototype","STYLETYPE","Consts","geom","POINT","CLASSNAME","setCoords","Array","isArray","Error","call","getCoords"],"mappings":"AAAAA,GAAGC,QAAUD,GAAGC,SAAW,GAEtBD,GAAGE,SACJF,GAAGG,WAAWH,GAAGI,YAAc,cAGnCJ,GAAGC,QAAQI,WAAa,SAAUC,EAAQC,GAGtCP,GAAGE,QAAQM,MAFAC,KAEYC,WAEvB,IAJWD,KAIDE,KAAKC,SAASN,GAAS,CAJtBG,KAKFE,KAAKV,QAAUK,EALbG,KAMFE,KAAKE,iBAAiBP,EAAQC,KAI3CP,GAAGc,QAAQd,GAAGC,QAAQI,WAAYL,GAAGE,SAErCF,GAAGC,QAAQI,WAAWU,UAAUC,UAAYhB,GAAGiB,OAAOC,KAAKC,MAE3DnB,GAAGC,QAAQI,WAAWU,UAAUK,UAAY,wBAE5CpB,GAAGC,QAAQI,WAAWU,UAAUM,UAAY,SAAUf,GAElD,IAAIgB,MAAMC,QAAQjB,GAMd,MAAM,IAAIkB,MAAM,wCALZF,MAAMC,QAAQjB,EAAO,MACrBA,EAAS,CAACA,IAMlB,OAAON,GAAGE,QAAQa,UAAUM,UAAUI,KATzBhB,KASoCH,IAGrDN,GAAGC,QAAQI,WAAWU,UAAUW,UAAY,SAAUnB,GAClDA,EAAUA,GAAW,GAErB,OADeP,GAAGE,QAAQa,UAAUW,UAAUD,KAAKhB,KAAMF","sourcesContent":["TC.feature = TC.feature || {};\r\n\r\nif (!TC.Feature) {\r\n    TC.syncLoadJS(TC.apiLocation + 'TC/Feature');\r\n}\r\n\r\nTC.feature.MultiPoint = function (coords, options) {\r\n    var self = this;\r\n\r\n    TC.Feature.apply(self, arguments);\r\n\r\n    if (!self.wrap.isNative(coords)) {\r\n        self.wrap.feature = coords;\r\n        self.wrap.createMultiPoint(coords, options);\r\n    }\r\n};\r\n\r\nTC.inherit(TC.feature.MultiPoint, TC.Feature);\r\n\r\nTC.feature.MultiPoint.prototype.STYLETYPE = TC.Consts.geom.POINT;\r\n\r\nTC.feature.MultiPoint.prototype.CLASSNAME = 'TC.feature.MultiPoint';\r\n\r\nTC.feature.MultiPoint.prototype.setCoords = function (coords) {\r\n    const self = this;\r\n    if (Array.isArray(coords)) {\r\n        if(!Array.isArray(coords[0])) {\r\n            coords = [coords];\r\n        }\r\n    }\r\n    else {\r\n        throw new Error('Coordinates not valid for multipoint');\r\n    }\r\n    return TC.Feature.prototype.setCoords.call(self, coords);\r\n};\r\n\r\nTC.feature.MultiPoint.prototype.getCoords = function (options) {\r\n    options = options || {};\r\n    const coords = TC.Feature.prototype.getCoords.call(this, options);\r\n    return coords;\r\n};"]}