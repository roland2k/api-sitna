TC.control=TC.control||{};TC.control.FeatureInfoCommons||TC.syncLoadJS(TC.apiLocation+"TC/control/FeatureInfoCommons");!function(){TC.control.FeatureInfo=function(){TC.control.FeatureInfoCommons.apply(this,arguments);this.wrap=new TC.wrap.control.FeatureInfo(this);TC.Consts.classes.FROMLEFT="tc-fromleft";TC.Consts.classes.FROMRIGHT="tc-fromright"};TC.inherit(TC.control.FeatureInfo,TC.control.FeatureInfoCommons);var e=TC.control.FeatureInfo.prototype,t=function e(t,r){var o;if(Array.isArray(t))for(var n=0,a=(o=t.slice()).length;n<a;n++)o[n]=e(o[n]);else o="number"==typeof t?Math.round(t.toFixed(r)):t;return o};e.register=function(e){const t=this;return new Promise(function(r,o){TC.control.FeatureInfoCommons.prototype.register.call(t,e).then(function(e){document.createElement("div").appendChild(t.div);r(e)},e=>o(e))})};e.callback=function(e,t){const r=this;r.querying=!0;return new Promise(function(t,o){const n=r.getElevationTool();n.then(function(t){t&&(r.elevationRequest=t.getElevation({crs:r.map.crs,coordinates:[e]}))});if(r.map&&r.filterLayer){var a=r.getLocaleString("featureInfo"),s=TC.Util.extend({},r.map.options.styles.marker,r.markerStyle,{title:a,set:a,showsPopup:!1});r.filterLayer.clearFeatures();r.highlightedFeature=null;r.filterFeature=null;r.filterLayer.addMarker(e,s).then(function(o){r.map.putLayerOnTop(r.filterLayer);r.filterFeature=o;n.then(function(e){r.renderResults({coords:o.geometry,displayElevation:e,loading:!0},function(){r.displayResults()})});for(var a=!1,s=0;s<r.map.workLayers.length;s++){var l=r.map.workLayers[s];if(l.type===TC.Consts.layerType.WMS&&l.getVisibility()&&l.names.length>0){a=!0;break}}r.queryResolution=r.map.getResolution();a?r.wrap.getFeatureInfo(e,r.queryResolution).then(()=>t()):setTimeout(function(){r.responseCallback({coords:e});t()})})}else t()})};e.sendRequest=function(e){return this.callback(e.getCoords())};e.responseCallback=function(e){const r=this;TC.control.FeatureInfoCommons.prototype.responseCallback.call(r,e);if(r.filterFeature){var o=e.services;if(o)for(var n=0;n<o.length;n++){for(var a=o[n],s=0;s<a.layers.length;s++)if(!a.layers[s].features.length){a.layers.splice(s,1);s-=1}if(!a.layers.length){o.splice(n,1);n-=1}}r.info.defaultFeature=e.defaultFeature;r.elevationRequest&&(e.displayElevation=!0);r.renderResults(e,function(){r.insertLinks();if(r.sharedFeatureInfo){r.div.querySelectorAll("ul."+r.CLASS+"-services li").forEach(function(e){e.classList.add(TC.Consts.classes.CHECKED)});for(var e,o=r.sharedFeatureInfo,n=0,a=r.info.services.length;n<a;n++){var s=r.info.services[n];if(s.mapLayers.some(function(e){return e.url===o.s})){for(var l=0,i=s.layers.length;l<i;l++){var u=s.layers[l];if(u.name===o.l){for(var c=0,f=u.features.length;c<f;c++){var C=u.features[c];if(C.id===o.f){e=C;var y=hex_md5(JSON.stringify({data:C.getData(),geometry:t(C.geometry,TC.Consts.DEGREE_PRECISION)}));o.h!==y&&TC.alert(r.getLocaleString("finfo.featureChanged.warning"));break}}break}}break}}if(e){r.highlightedFeature=e;r.map.addLayer({id:r.getUID(),type:TC.Consts.layerType.VECTOR,title:r.getLocaleString("foi"),owner:r,stealth:!0}).then(function(t){r.sharedFeatureLayer=t;r.filterLayer.clearFeatures();r.filterFeature=null;t.addFeature(e);r.map.zoomToFeatures([e])})}delete r.sharedFeatureInfo}else r.displayResults();r.div.querySelectorAll("ul."+r.CLASS+"-services label, ul."+r.CLASS+"-services a").forEach(function(e){e.addEventListener(TC.Consts.event.CLICK,function(e){e.stopPropagation()},{passive:!0})})})}};e.displayResultsCallback=function(){const e=this;TC.control.FeatureInfoCommons.prototype.displayResultsCallback.call(e);if(e.elevationRequest){const t=e.getDisplayControl();e.getDisplayTarget().querySelectorAll(`.${e.CLASS}-elev,.${e.CLASS}-height`).forEach(e=>e.classList.add(TC.Consts.classes.HIDDEN));e.elevationRequest.then(function(r){if(t.currentFeature&&r.length){const o=t.currentFeature.geometry,n=r[0];if(o[0]===n[0]&&o[1]===n[1]){const t=r.length?r[0].slice(2):null;e.displayElevationValues(t)}}})}};e.renderResults=function(e,t){const r=this;if(r.filterFeature){const o=r.filterFeature.geometry;if(e.coords&&o[0]===e.coords[0]&&o[1]===e.coords[1]){e.isGeo=r.map.wrap.isGeo();if(e.coords){e.crs=r.map.crs;e.coords=e.coords.map(function(t){const r=e.isGeo?TC.Consts.DEGREE_PRECISION:TC.Consts.METER_PRECISION;return TC.Util.formatCoord(t,r)})}r.renderData(e,t)}}};e.displayElevationValues=function(e){const t=this;let r,o;if(Array.isArray(e)){r=e[0];o=e.length>1?e[1]:null}else{r=e;o=null}const n=t.map.options.locale||TC.Cfg.locale;let a=null===r?"-":TC.Util.formatNumber(Math.round(r),n)+" m",s=o?o.toLocaleString(n,{maximumFractionDigits:1})+" m":"-";const l=t.getDisplayTarget().querySelector(`.${t.CLASS}-elev`),i=t.getDisplayTarget().querySelector(`.${t.CLASS}-height`);if(l&&i){l.classList.toggle(TC.Consts.classes.HIDDEN,null===r);i.classList.toggle(TC.Consts.classes.HIDDEN,!o);l.querySelector(`.${t.CLASS}-coords-val`).innerHTML=a;i.querySelector(`.${t.CLASS}-coords-val`).innerHTML=s}};e.loadSharedFeature=function(e){const t=this;if(e){if(0===t.map.workLayers.filter(function(t,r){return t.type===TC.Consts.layerType.WMS&&t.url===e.s&&t.getDisgregatedLayerNames().indexOf(e.l)>=0}).length){TC.error(t.getLocaleString("sharedFeatureNotValid"),TC.Consts.msgErrorMode.TOAST);return}t.sharedFeatureInfo=e;TC.loadJS(!window.hex_md5,[TC.apiLocation+TC.Consts.url.HASH],function(){const r=[-100,-100];t.beforeRequest({xy:r});t.filterLayer.clearFeatures();t.filterFeature=null;t.filterLayer.addMarker(r).then(function(r){t.filterFeature=r;t.wrap.getFeatureInfo(e.xy,e.r,{serviceUrl:e.s,layerName:e.l,featureId:e.f})})})}};e.exportQuery=function(){const e=TC.control.FeatureInfoCommons.prototype.exportQuery.call(this);e.res=this.queryResolution;return e};e.importQuery=function(e){const t=this;e.filter&&t.map.setResolution(e.res).then(()=>TC.control.FeatureInfoCommons.prototype.importQuery.call(t,e))}}();
//# sourceMappingURL=../maps/control/FeatureInfo.min.js.map