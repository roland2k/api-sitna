TC.control=TC.control||{};TC.Control||TC.syncLoadJS(TC.apiLocation+"TC/Control");TC.control.Elevation=function(){TC.Control.apply(this,arguments);this.displayElevation=!0;this.resultsPanel=null};TC.inherit(TC.control.Elevation,TC.Control);!function(){const t=TC.control.Elevation.prototype;t.CLASS="tc-ctl-elev";const e=new WeakMap;t.register=function(t){const n=this;return new Promise(function(o,i){TC.Control.prototype.register.call(n,t).then(function(){t.on(TC.Consts.event.FEATUREMODIFY+" "+TC.Consts.event.FEATUREREMOVE+" "+TC.Consts.event.FEATURESCLEAR,function(t){n=t.feature,e.delete(n);var n});o(n)}).catch(function(t){i(t)})})};t.getElevationTool=function(){const t=this;return new Promise(function(e,n){const o={options:{displayElevation:t.options||!0},elevation:t.elevation,map:t.map};TC.Control.prototype.getElevationTool.call(o).then(n=>{t.elevation=n;e(n)})})};t.displayElevationProfile=function(t){const n=this;let o;switch(!0){case TC.feature.Polyline&&t instanceof TC.feature.Polyline:o=t.geometry;break;case TC.feature.MultiPolyline&&t instanceof TC.feature.MultiPolyline:o=t.geometry[0];break;case t instanceof TC.Feature:return;default:o=t}n.getProfilePanel().then(function(t){t.open()});const i=function(t){n.getProfilePanel().then(function(e){e.renderPromise().then(function(){n.renderElevationProfile(t)})})};if(t instanceof TC.Feature){n.getProfilePanel().then(function(e){e.setCurrentFeature(t)});const o=(a=t,e.get(a));if(o){i(o);return}}var a;const l=n.map.getLoadingIndicator(),r=l&&l.addWait();n.getElevationTool().then(function(a){const s=Date.now();n._depTimestamp=s;const c={crs:n.map.crs,coordinates:o,partialCallback:function(o){l&&l.removeWait(r);if(s===n._depTimestamp){let l=0,r=Number.NEGATIVE_INFINITY,s=Number.POSITIVE_INFINITY;n.map.crs!==n.map.options.utmCrs&&(o=TC.Util.reproject(o,n.map.crs,n.map.options.utmCrs));const u=o.map(function(t,e,n){let o=0===e?t:n[e-1];const i=t[0]-o[0],a=t[1]-o[1];l+=Math.sqrt(i*i+a*a);var c=t[2];if("number"==typeof c){r=Math.max(c,r);s=Math.min(c,s)}return[l,c]});1===u.length&&u.push(u[0]);const p={x:u.map(function(t){return t[0]}),ele:u.map(function(t){return t[1]}),coords:o},f={coords:o};"object"==typeof n.options.displayElevation&&(f.hillDeltaThreshold=n.map.options.elevation.hillDeltaThreshold||n.options.displayElevation.hillDeltaThreshold);TC.Util.extend(p,TC.tool.Elevation.getElevationGain(f));t instanceof TC.Feature&&(a=t,c=p,e.set(a,c));i(p)}var a,c}};a.options.sampleNumber&&(c.resolution=0);a.getElevation(c).catch(function(t){n.resetElevationProfile();l&&l.removeWait(r)})})};t.createProfilePanel=function(){const e=this,n={id:e.getUID(),content:"chart",titles:{main:e.getLocaleString("geo.trk.chart.chpe"),max:e.getLocaleString("geo.trk.chart.chpe")},chart:{ctx:e,onmouseout:t.removeElevationTooltip,tooltip:t.getElevationTooltip}};return new Promise(function(t,o){var i;const a=function(t){n.position=t.POSITION.RIGHT;i=t.addControl("resultsPanel",n)};if(e.options.displayOn){var l=e.map.getControlsByClass("TC.control."+e.options.displayOn[0].toUpperCase()+e.options.displayOn.substring(1))[0];l?a(l):e.map.addControl(e.options.displayOn).then(a)}else{n.div=document.createElement("div");e.map.div.appendChild(n.div);i=e.map.addControl("resultsPanel",n)}i.then(function(n){n.caller=e;e.resultsPanel=n;e._decorateChartPanel();t(n)})})};t.getProfilePanel=async function(){const t=this;t._resultsPanelPromise||(t._resultsPanelPromise=t.createProfilePanel());return await t._resultsPanelPromise};t.resetElevationProfile=function(){const t=this;if(t.options.displayElevation&&t.resultsPanel){t.elevationProfileChartData={x:[0],ele:[0],coords:[0,0,0],upHill:0,downHill:0};t.resultsPanel.openChart(t.elevationProfileChartData)}};t.renderElevationProfile=function(t){const e=this;e.elevationProfileChartData=t||e.elevationProfileChartData;e.getProfilePanel().then(function(t){if(!t.div.classList.contains(TC.Consts.classes.HIDDEN)){t.openChart(e.elevationProfileChartData);t.isMinimized()||t.show()}})};t.closeElevationProfile=function(){this.getProfilePanel().then(function(t){t.close()})};t._decorateChartPanel=function(){this.resultsPanel.setCurrentFeature=function(t){const e=this;e.currentFeature&&e.currentFeature.toggleSelectedStyle(!1);e.currentFeature=t;t&&t.toggleSelectedStyle(!0)}};t.getElevationTooltip=function(t){this.resultsPanel.wrap.showElevationMarker({data:t,layer:this.resultsPanel.currentFeature&&this.resultsPanel.currentFeature.layer,coords:this.elevationProfileChartData.coords});return this.resultsPanel.getElevationChartTooltip(t)};t.removeElevationTooltip=function(){this.resultsPanel.wrap.hideElevationMarker()}}();
//# sourceMappingURL=../maps/control/Elevation.min.js.map