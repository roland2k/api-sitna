TC.control=TC.control||{};TC.control.FeatureInfoCommons||TC.syncLoadJS(TC.apiLocation+"TC/control/FeatureInfoCommons");TC.filter||TC.syncLoadJS(TC.apiLocation+"TC/Filter");!function(){TC.control.GeometryFeatureInfo=function(){TC.control.FeatureInfoCommons.apply(this,arguments);this.wrap=new TC.wrap.control.GeometryFeatureInfo(this);this._isDrawing=!1;this._isSearching=!1;this._drawToken=!1};TC.inherit(TC.control.GeometryFeatureInfo,TC.control.FeatureInfoCommons);var e=TC.control.GeometryFeatureInfo.prototype;e.register=function(e){const t=this,r=TC.control.FeatureInfoCommons.prototype.register.call(t,e);t.on(TC.Consts.event.CONTROLDEACTIVATE,function(e){t.wrap.cancelDraw()});return r};e.callback=function(e,t){var r=this;return new Promise(function(t,o){if(r._drawToken)t();else{r.closeResults();r.highlightedFeature=null;for(var n=!1,s=0;s<r.map.workLayers.length;s++){var a=r.map.workLayers[s];if(a.type===TC.Consts.layerType.WMS&&a.getVisibility()&&a.names.length>0){n=!0;break}}if(n){r.closeResults();r.wrap.beginDraw({geometryType:r.geometryType,xy:e,layer:r.filterLayer,callback:function(e){r.wrap.getFeaturesByGeometry(e).then(()=>t())}})}else t()}})};e.sendRequest=function(e){return this.wrap.getFeaturesByGeometry(e)};e.responseCallback=function(e){var t=this;TC.control.FeatureInfoCommons.prototype.responseCallback.call(t,e);if(t.filterFeature){for(var r=e.services,o=0;o<r.length;o++){var n=r[o];if(n.hasLimits){delete n.layers;n.hasLimits=n.hasLimits}else{for(var s=0;s<n.layers.length;s++)if(!n.layers[s].features.length){n.layers.splice(s,1);s-=1}if(!n.layers.length){r.splice(o,1);o-=1}}}t.renderData(e,function(){r.length&&t.insertLinks();t.div.querySelector(`.${t.CLASS}-coords`).classList.add(TC.Consts.classes.HIDDEN);t.displayResults()})}}}();
//# sourceMappingURL=../maps/control/GeometryFeatureInfo.min.js.map