TC.tool=TC.tool||{};TC.tool.ElevationService||TC.syncLoadJS(TC.apiLocation+"TC/tool/ElevationService");TC.tool.ElevationServiceIGNEs=function(e){TC.tool.ElevationService.apply(this,arguments);this.url=this.options.url||"//servicios.idee.es/wcs-inspire/mdt";this.minimumElevation=this.options.minimumElevation||-9998;this.nativeCRS="EPSG:25830"};TC.inherit(TC.tool.ElevationServiceIGNEs,TC.tool.ElevationService);!function(){const e=TC.tool.ElevationServiceIGNEs.prototype;let t;e.request=function(e){const o=this;if(1===(e=e||{}).coordinates.length){let n=e.coordinates[0];e.crs&&e.crs!==o.nativeCRS&&(n=TC.Util.reproject(n,e.crs,o.nativeCRS));let i="Elevacion25830_5",r=3;const s=r/2,l=r-s,c=[n[0]-s,n[1]-s,n[0]+l,n[1]+l],a=o.url+"?SERVICE=WCS&REQUEST=GetCoverage&VERSION=2.0.1&SUBSET="+encodeURIComponent("x,"+o.nativeCRS+"("+c[0]+","+c[2]+")")+"&SUBSET="+encodeURIComponent("y,"+o.nativeCRS+"("+c[1]+","+c[3]+")")+"&COVERAGEID="+encodeURIComponent(i)+"&RESOLUTION=x(1)&RESOLUTION=y(1)&FORMAT="+encodeURIComponent("application/asc")+"&EXCEPTIONS=XML";return new Promise(function(e,o){const n=function(){t.fetch(a).then(t=>e(t.responseText)).catch(e=>o(Error(e)))};t?n():TC.loadJS(!TC.tool||!TC.tool.Proxification,[TC.apiLocation+"TC/tool/Proxification"],function(){t=new TC.tool.Proxification(TC.proxify);n()})})}return Promise.reject(new Error("ign.es elevation service supports only points"))};e.parseResponse=function(e,t){const o=this,n=e.split("\n"),i=n.filter(e=>0===e.indexOf("ncols"))[0],r=parseInt(i&&i.substr(i.lastIndexOf(" "))),s=n.filter(e=>0===e.indexOf("nrows"))[0],l=parseInt(i&&s.substr(s.lastIndexOf(" ")));if(r&&l){const e=n.filter(e=>0===e.indexOf("xllcorner"))[0],i=parseFloat(e&&e.substr(e.lastIndexOf(" "))),s=n.filter(e=>0===e.indexOf("yllcorner"))[0],c=parseFloat(s&&s.substr(s.lastIndexOf(" ")));if(!isNaN(i)&&!isNaN(c)){const e=n.findIndex(e=>0===e.indexOf("cellsize"));let i=parseFloat(n[e+Math.round(l/2)].trim().split(" ")[Math.round(r/2)-1]);isNaN(i)&&(i=null);let s=t.coordinates[0].slice();s[2]=i;t.crs&&t.crs!==o.nativeCRS&&(s=TC.Util.reproject(s,o.nativeCRS,t.crs));return TC.tool.ElevationService.prototype.parseResponse.call(o,{coordinates:[s]},t)}}return[]}}();
//# sourceMappingURL=../maps/tool/ElevationServiceIGNEs.min.js.map