("undefined"!=typeof define&&define.amd?define:function(e,r){var t,n=r();if("undefined"!=typeof exports)for(t in n)exports[t]=n[t];else self.jsonpack=n})([],function(){var e=-4,r=function(e){return"string"!=typeof e?e:e.replace(/[\+ \|\^\%]/g,function(e){return{" ":"+","+":"%2B","|":"%7C","^":"%5E","%":"%25"}[e]})},t=function(e){return"string"!=typeof e?e:e.replace(/\+|%2B|%7C|%5E|%25/g,function(e){return{"+":" ","%2B":"+","%7C":"|","%5E":"^","%25":"%"}[e]})},n=function(e){return Number.prototype.toString.call(e,36).toUpperCase()},o=function(e){return parseInt(e,36)},i=Array.prototype.indexOf||function(e,r){for(var t=r||0,n=this.length;t<n;t++)if(this[t]===e)return t;return-1};return{JSON:JSON,pack:function(t,o){var s,a,l;(s=(o=o||{}).verbose||!1)&&console.log("Normalize the JSON Object");t="string"==typeof t?this.JSON.parse(t):t;s&&console.log("Creating a empty dictionary");a={strings:[],integers:[],floats:[]};s&&console.log("Creating the AST");var u=function t(o){var l,u,f,c,g;if(s&&console.log("Calling recursiveAstBuilder with "+this.JSON.stringify(o)),l=typeof o,null===o)return{type:"null",index:-3};if(void 0===o)return{type:"undefined",index:-5};if(o instanceof Array){f=["@"];for(u in o)o.hasOwnProperty(u)&&f.push(t(o[u]));return f}if("object"===l){f=["$"];for(c in o)o.hasOwnProperty(c)&&(f.push(t(c)),f.push(t(o[c])));return f}if(""===o)return{type:"empty",index:e};if("string"===l)return-1==(g=i.call(a.strings,o))&&(a.strings.push(r(o)),g=a.strings.length-1),{type:"strings",index:g};if("number"===l&&o%1==0)return-1==(g=i.call(a.integers,o))&&(a.integers.push(n(o)),g=a.integers.length-1),{type:"integers",index:g};if("number"===l)return-1==(g=i.call(a.floats,o))&&(a.floats.push(o),g=a.floats.length-1),{type:"floats",index:g};if("boolean"===l)return{type:"boolean",index:o?-1:-2};throw new Error("Unexpected argument of type "+typeof o)}(t),f=a.strings.length,c=a.integers.length;a.floats.length;return s&&console.log("Parsing the dictionary"),l=a.strings.join("|"),l+="^"+a.integers.join("|"),l+="^"+a.floats.join("|"),s&&console.log("Parsing the structure"),l+="^"+function r(t){var o,i,a,l;if(s&&console.log("Calling a recursiveParser with "+this.JSON.stringify(t)),t instanceof Array){o=t.shift();for(i in t)t.hasOwnProperty(i)&&(o+=r(t[i])+"|");return("|"===o[o.length-1]?o.slice(0,-1):o)+"]"}if(a=t.type,l=t.index,"strings"===a)return n(l);if("integers"===a)return n(f+l);if("floats"===a)return n(f+c+l);if("boolean"===a)return t.index;if("null"===a)return-3;if("undefined"===a)return-5;if("empty"===a)return e;throw new TypeError("The item is alien!")}(u),s&&console.log("Ending parser"),o.debug?{dictionary:a,ast:u,packed:l}:l},unpack:function(r,n){var i,s,a,l,u,f,c,g;if(n=n||{},i=r.split("^"),n.verbose&&console.log("Building dictionary"),s=[],""!==(a=i[0]))for(a=a.split("|"),n.verbose&&console.log("Parse the strings dictionary"),u=0,l=a.length;u<l;u++)s.push(t(a[u]));if(""!==(a=i[1]))for(a=a.split("|"),n.verbose&&console.log("Parse the integers dictionary"),u=0,l=a.length;u<l;u++)s.push(o(a[u]));if(""!==(a=i[2]))for(a=a.split("|"),n.verbose&&console.log("Parse the floats dictionary"),u=0,l=a.length;u<l;u++)s.push(parseFloat(a[u]));a=null;n.verbose&&console.log("Tokenizing the structure");var p="",h=[],d=i[3].length;for(u=0;u<d;u++)"|"===(f=i[3].charAt(u))||"$"===f||"@"===f||"]"===f?(p&&(h.push(o(p)),p=""),"|"!==f&&h.push(f)):p+=f;return c=h.length,g=0,n.verbose&&console.log("Starting recursive parser"),function r(){var t,o,i,a=h[g++];if(n.verbose&&console.log("Reading collection type "+("$"===a?"object":"Array")),"@"===a){for(t=[];g<c;g++){if(i=h[g],n.verbose&&console.log("Read "+i+" symbol"),"]"===i)return t;if("@"===i||"$"===i)t.push(r());else switch(i){case-1:t.push(!0);break;case-2:t.push(!1);break;case-3:t.push(null);break;case-5:t.push(void 0);break;case e:t.push("");break;default:t.push(s[i])}}return n.verbose&&console.log("Parsed "+this.JSON.stringify(t)),t}if("$"===a){for(t={};g<c;g++){if("]"===(o=h[g]))return t;if(o=o===e?"":s[o],"@"===(i=h[++g])||"$"===i)t[o]=r();else switch(i){case-1:t[o]=!0;break;case-2:t[o]=!1;break;case-3:t[o]=null;break;case-5:t[o]=void 0;break;case e:t[o]="";break;default:t[o]=s[i]}}return n.verbose&&console.log("Parsed "+this.JSON.stringify(t)),t}throw new TypeError("Bad token "+a+" isn't a type")}()}}});onmessage=function(e){if(e.data.action)try{const r=jsonpack[e.data.action](e.data.object);postMessage({id:e.data.id,action:e.data.action,result:r})}catch(r){postMessage({id:e.data.id,action:e.data.action,error:r.toString()})}};