!function(){self.addEventListener("install",function(n){const e="TC.offline.map.common";n.waitUntil(caches.has(e).then(function(n){n&&caches.open(e).then(function(n){n.keys().then(function(n){console.log("Revisando cache...");return n.length?fetch(n[0]).then(function(){caches.delete(e).then(function(){console.log("Cache con bug ("+e+") borrada")})},function(n){console.log(n)}):self.skipWaiting()})})}))});self.addEventListener("activate",function(n){n.waitUntil(self.clients.claim())});self.addEventListener("fetch",function(n){n.respondWith(caches.match(n.request).then(function(e){return e||fetch(n.request).catch(function(e){console.log("[fetch] Could not fetch "+n.request.url+": "+e)})}))});const n={},e=function(n){self.clients.matchAll({includeUncontrolled:!0}).then(function(e){e.forEach(function(e){e.postMessage(n)})})};self.addEventListener("message",function(t){const c=t.data.action,o=t.data.name,i=t.data.requestId,a=t.data.silent,l=t.data.list;switch(c){case"create":n[o]=c;caches.delete(o).finally(function(){caches.open(o).then(function(t){const s=function(u){if(!n[o])return;if(u===l.length){a||e({action:c,name:o,requestId:i,event:"cached"});return}const f=u+1,r=l[u];t.add(r).then(function(){a||e({action:c,name:o,requestId:i,event:"progress",count:f,total:l.length})},function(){e({action:c,name:o,requestId:i,event:"error",url:r})}).finally(function(){s(f)})};s(0)})});break;case"delete":delete n[o];caches.delete(o).then(function(){a||e({action:c,name:o,requestId:i,event:"deleted"})},function(){e({action:c,name:o,requestId:i,event:"error"})})}});self.addEventListener("notificationclick",function(n){var e=n.notification;if("back"===n.action){e.close();var t=Promise.resolve();t=t.then(function(){return n=e.data.url,self.clients.matchAll({includeUncontrolled:!0,type:"window"}).then(function(e){return e.length?e.find(function(e){return e.url===n}):null});var n}).then(function(n){return n?n.focus():null});n.waitUntil(t)}})}();